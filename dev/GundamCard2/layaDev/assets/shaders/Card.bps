{"arr":[{"x":580.6,"y":79.80000000000001,"constDataID":"vertex","id":3,"inputList":[{"type":"vec3","defVal":"_remove_"},{"type":"vec3","defVal":"_remove_"},{"type":"vec4","defVal":"_remove_"}],"outputList":[],"select":false,"isHidden":false},{"x":580.6,"y":379.8,"ver":1,"constDataID":"PBR_fragment","id":4,"inputList":[{"type":"float","defVal":"_remove_"},{"type":"vec3","defVal":{"x":0,"y":0,"z":1}},{"type":"vec3","defVal":{"x":1,"y":1,"z":1}},{"type":"float"},{"type":"float","defVal":0.5},{"type":"vec3","defVal":{"x":1,"y":1,"z":1}},{"type":"float"},{"type":"float","defVal":1},{"type":"vec3","defVal":"_remove_"},{"type":"float","defVal":1},{"type":"float","defVal":0},{"type":"float","defVal":0},{"type":"float","defVal":0},{"type":"float","defVal":0},{"type":"vec3","defVal":"_remove_"},{"type":"vec3","defVal":{"x":0,"y":0,"z":0}},{"type":"float","defVal":0},{"type":"float","defVal":"_remove_"},{"type":"float","defVal":0},{"type":"float","defVal":0},{"type":"float","defVal":1.3},{"type":"float","defVal":400}],"outputList":[],"select":false,"isHidden":true},{"x":591.6,"y":401.8,"constDataID":"Unlit_fragment","id":6,"inputList":[{"type":"float","defVal":"_remove_"},{"type":"vec3","defVal":{"x":0,"y":0,"z":1}},{"type":"vec3","defVal":{"x":1,"y":1,"z":1},"info":{"id":11}},{"type":"float","defVal":1}],"outputList":[],"select":false,"isHidden":false},{"x":40,"y":415,"constDataID":"texture/texture2D","id":10,"inputList":[{"type":"sampler2D","defVal":"00000000-0000-0000-0001-000000000000"}],"outputList":[{"type":"sampler2D","infoList":[{"id":11}]}],"select":false,"uniformDataID":9},{"x":327,"y":433,"constDataID":"texture/sampler2D","id":11,"inputList":[{"type":"sampler2D","defVal":"00000000-0000-0000-0001-000000000000","info":{"id":10}},{"type":"vec2","defVal":"v_Texcoord0"}],"outputList":[{"type":"vec4","infoList":[{"id":6,"index":2}]},{"type":"float","name":"x"},{"type":"float","name":"y"},{"type":"float","name":"z"},{"type":"float","name":"w"}],"select":false,"propertyVal":{}}],"x":-74,"y":-65,"scale":1,"bluePrintNum":16,"material":{"twoSided":false,"blendModes":0,"materialType":2,"anisotropy":false,"clear coat":false,"sheen":false,"transmission":false,"iridescence":false,"scene fog":false,"alpha test":false,"supportReflectionProbe":true,"enableInstancing":true},"uniformData":{"uniformArr":[{"id":"texture/texture2D","data":{"constDataID":"texture/texture2D","id":9,"inputList":[{"type":"sampler2D","defVal":"00000000-0000-0000-0001-000000000000"}],"outputList":[{"type":"sampler2D"}],"select":true,"uniformName":"Texture2D"},"index":0}]},"customInclude":null,"materialType":2,"compileShader":"Shader3D Start\r\n{\"type\":\"Shader3D\",\"name\":\"Card\",\"enableInstancing\":true,\"supportReflectionProbe\":true,\"uniformMap\":{\"Texture2D\":{\"type\":\"Texture2D\",\"default\":\"white\",\"alias\":\"Texture2D\",\"index\":0}},\"attributeMap\":null,\"shaderPass\":[{\"pipeline\":\"Forward\",\"VS\":\"VS0\",\"FS\":\"FS0\"},{\"pipeline\":\"_editPos\",\"VS\":\"VS1\",\"FS\":\"FS1\",\"isIDE\":true}]}\r\nShader3D End\r\nGLSL Start\r\n#defineGLSL VS0\r\n#include \"Color.glsl\";\n        #include \"Scene.glsl\";\n        #include \"Camera.glsl\";\n        #include \"Sprite3DVertex.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintVertex.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintPixelVertex.glsl\";\n        void main()\n        {\n            Vertex vertex;\n            getVertexParams(vertex);\n        \tPixelParams pixel;\n            initPixelParams(pixel, vertex);\n        \n            varyingPixelParams(pixel);\n            gl_Position = getPositionCS(pixel.positionWS);\n            gl_Position = remapPositionZ(gl_Position);\n        \n        }\n            \r\n#endGLSL\r\n#defineGLSL FS0\r\n#include \"Color.glsl\";\n        #include \"Scene.glsl\";\n        #include \"Camera.glsl\";\n        #include \"Sprite3DFrag.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintPixelFrag.glsl\";\n        #include \"shaderBlueprint/lightmode/BlueprintUnlit.glsl\";\nvoid main()\n        {\n            PixelParams pixel;\n            getPixelParams(pixel);\n        \tvec4 finalColor = vec4(0.0, 0.0, 0.0, 1.0);\n        Surface surface;\n surface.normalTS = vec3(0.0,0.0,1.0);\nvec4 sam_11 = texture2D(Texture2D,vec2(0.0,0.0)+v_Texcoord0);\n\n            #ifdef Gamma_Texture2D\n            sam_11 = gammaToLinear(sam_11);\n            #endif\n            \n surface.color = sam_11.xyz;\n surface.alpha = 1.0;\n\n        \n                PixelInfo info;\n                getPixelInfo(info, pixel, surface);\n                vec4 surfaceColor = SurfaceShading(surface, info);\nfinalColor = surfaceColor;\n\n        \tgl_FragColor = finalColor;\n        }\r\n#endGLSL\r\n#defineGLSL VS1\r\n#include \"Color.glsl\";\n        #include \"Scene.glsl\";\n        #include \"Camera.glsl\";\n        #include \"Sprite3DVertex.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintVertex.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintPixelVertex.glsl\";\n        void main()\n        {\n            Vertex vertex;\n            getVertexParams(vertex);\n        \tPixelParams pixel;\n            initPixelParams(pixel, vertex);\n        \n            varyingPixelParams(pixel);\n            gl_Position = getPositionCS(pixel.positionWS);\n            gl_Position = remapPositionZ(gl_Position);\n        \n        }\n            \r\n#endGLSL\r\n#defineGLSL FS1\r\n#include \"Color.glsl\";\n        #include \"Scene.glsl\";\n        #include \"Camera.glsl\";\n        #include \"Sprite3DFrag.glsl\";\n        #include \"shaderBlueprint/lib/BlueprintPixelFrag.glsl\";\n        \n        void main()\n        {\n            PixelParams pixel;\n            getPixelParams(pixel);\n        \tvec4 finalColor = vec4(pixel.positionWS, 1.0);\n        \tgl_FragColor = finalColor;\n        }\r\n#endGLSL\r\nGLSL End\r\n","version":1726625576116}
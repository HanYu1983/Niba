{"version":3,"names":["ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","Pool","getPoolBySign","sign","_poolDic","clearBySign","length","recover","item","POOLSIGN","push","recoverByClass","instance","className","constructor","_$gid","_getClassSign","cla","_CLSID","createByClass","cls","getItemByClass","rst","pool","pop","getItemByCreateFun","createFun","caller","call","getItem","Point","x","y","this","create","setTo","reset","distance","Math","sqrt","toString","normalize","d","id","copy","point","TEMP","EMPTY","Event","isMouseEvent","type","MOUSE_EVENTS","has","touchId","delta","button","touchPos","currentTarget","target","stopPropagation","_stopped","touches","_touches","altKey","_a","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","DISPLAY","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","_Add_Script","Set","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","_gid","_pi","PI","_pi2","Utils","toRadian","angle","toAngle","radian","toHexColor","color","isNaN","str","fromStringColor","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","getGID","copyArray","source","array","transPointList","points","radix","result","getBaseName","path","lastIndexOf","getFileExtension","ext","toLowerCase","j","k","ext2","replaceFileExtension","newExt","excludeDot","isUUID","charCodeAt","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","uuid","UUID_to_URL_async","Promise","resolve","URL_to_UUID_async","url","resolveURL","onResolve","startsWith","inst","then","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","URL","__init__","basePath","undefined","protocol","getPath","host","pathname","initMiniGameExtensionOverrides","Object","assign","overrideFileExts","safeFileExtConversionMap","hasExtOverrides","usingSafeFileExts","_url","formatURL","_path","rootPath","basePaths","base","url2","customFormat","ver","join","postFormatURL","extold","parts","index","splice","getResURLByUUID","char1","ofs","getFileName","getURLVerion","overrideExtension","originalExts","targetExt","miniGameOnly","rendertexture","videotexture","controller","mc","mcc","shader","fui","glsl","skel","lavm","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","out","max","min","union","clone","addPoint","equals","_getBoundPoints","_temB","_getBoundPointS","sp","_temA","_getWrapRec","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","cloneTo","destObject","Delegate","_flag","_items","add","callback","args","findIndex","once","remove","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","err","console","error","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","data","ret","Array","isArray","ev","on","listener","arguments","off","offAll","offAllCaller","_idCounter","_disposingCounter","_clearRetry","Resource","cpuMemory","_cpuMemory","gpuMemory","_gpuMemory","_addCPUMemory","size","_addGPUMemory","_addMemory","cpuSize","gpuSize","destroyUnusedResources","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","_idResourcesMap","res","lock","_referenceCount","destroy","DEBUG","debug","_id","destroyed","_destroyed","obsolute","_obsolute","deps","_deps","referenceCount","managed","super","destroyedImmediately","_traceDeps","_setCPUMemory","offsetValue","_setGPUMemory","_setCreateURL","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","addDep","onDepObsolute","addDeps","resArr","_disposeResource","getPrototypeOf","name","clearRes","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","_enableWindowRAFFunction","PlayerConfig","HDREncodeFormat","TextureFormat","FilterMode","RenderCapable","LayaGL","BaseTexture","_width","_height","dimension","_dimension","format","_format","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","_gammaSpace","hdrEncodeFormat","NONE","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","ETC2RGB_Alpha1","ETC2SRGB_Alpha1","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Matrix","a","b","c","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","d1","n","a2","b2","c2","d2","tx2","ty2","transformPoint","transformPointN","getScaleX","getScaleY","invert","concat","matrix","mul","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","mul16","scaleEx","rotateEx","dec","copyTo","Byte","getSystemEndian","_sysEndian","buffer","ArrayBuffer","DataView","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","byteLength","_resizeBuffer","rstBuffer","slice","endian","floor","newByteView","set","subarray","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","roundToFloat16Bits","num","_floatView","_uint32View","convertToNumber","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT4","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","getDDSTextureInfo","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","getLayaFormat","glFormat","glInternalFormat","glType","glTypeSize","sRGB","getKTXTextureInfo","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","formatInfo","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","compress","headerOffset","Texture2D","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","_SimpleAnimatorTextureParse","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","_parseImage","imageSource","canread","srgb","pma","premultiplyAlpha","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","_parseDDS","ddsInfo","setDDSData","_parseKTX","ktxInfo","setKTXData","_parsePVR","load","complete","TEXTURE2D","canRead","_canRead","createTextureInternal","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","RenderTargetFormat","Color","gammaToLinearSpace","pow","linearToGammaSpace","r","g","equal","toFIxed","toLinear","toGamma","destColor","setValue","fromArray","toArray","dest","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","RenderTexture2D","currentActive","_currentActive","depthStencilFormat","_depthStencilFormat","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","None","_mgrKey","_invertY","_colorFormat","_create","_renderTarget","_isCube","samples","_samples","_generateMipmap","_start","_end","createRenderTargetInternal","_textures","_clearColor","_clear","getData","getRenderTextureData","recycle","_clearLinearColor","defuv","flipyuv","_rect1","_rect2","Texture","outTexture","tex","btex","uv","DEF_UV","bitmap","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","scaleRate","createFromTexture","texScaleRate","_uv","uvrect","_w","_h","_bitmap","cb","recoverBitmap","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","rt","render2D","stu","stv","uk","vk","startRender","_drawTextureM","endRender","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","_sizeGrid","NO_UV","INV_UV","AtlasInfoManager","enable","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","addAtlas","atlasUrl","getFileLoadPath","file","WorkerLoader","workerSupported","Worker","_enable","_worker","workerLoaderLib","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","progress","update","np","col","ws","perc","p","w","Handler","method","apply","runWith","unshift","_pool","_window","miniGame","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","isWXMiMi","miniGameContext","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","fun","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","viewport","viewportContent","meta","content","ele","arr2","trim","createElement","appendChild","keys","map","onMobile","onIOS","match","onIPhone","onMac","onIPad","onAndroid","onOpenHarmonyOS","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","getElementById","removeElement","parentNode","removeChild","now","Date","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","getQueryString","search","reg","RegExp","unescape","getSafariToolbarOffset","__innerHeight","loadLib","src","reject","script","onload","onerror","bundles","mainCanvas","hanzi","fontMap","measureText","txt","font","isChinese","test","__getBundle_","bundleId","bun","__setBundle_","globalName","existing","to","from","except","desc","getOwnPropertyNames","hasOwnProperty","defineProperty","enumerable","getOwnPropertyDescriptor","copyProps","ImgUtils","compareVersion","curVersion","needVersion","curVersionArr","needVersionArr","num1","num2","isSupport","wx","getSystemInfoSync","SDKVersion","Blob","arrayBufferToURL","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","_arrayBufferToURL","revokeBufferURL","revokeObjectURL","XMLUtils","decodeString","aSource","sb","pos1","pos2","entity","encodeString","replace","attrs","attrName","defValue","getInt","ceil","getFloat","getBool","XMLTagType","XMLIterator","begin","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","nextTag","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","getTagSource","getRawText","getText","trimEnd","attributes","_attrs","parseAttributes","getAttribute","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","parse","getAttrString","getAttrInt","getAttrFloat","getAttrBool","setAttribute","attrValue","getNode","selector","_children","find","elements","filter","lastOpenNode","nodeStack","childNode","text","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_data","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","_onError","onabort","_onAbort","onprogress","_onProgress","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","flag","responseText","response","encodeURI","Downloader","httpRequestPool","common","owner","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","registerLoader","exts","hotReloadable","typeEntry","typeMap","hotReloadableFlags","extMap","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","arg1","arg2","arg3","priority","cache","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","initiator","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","atlasInfo","ATLAS","baseUrl","getRes","loadTaskPool","LoadTask","obsoluteInst","assetLoader","LoaderStat_LoaderResourceCount","_tempTime","performance","_b","LoaderStat_LoadResourceTime","_cacheRes","postLoad","catch","delete","retryCnt","noRetry","queueToDownload","download","LoaderStat_LoadRequestCount","startTime","preloadedContent","preLoadedMap","completeItem","downloader","LoaderStat_LoadRequestTime","shift","extEntry","initiatorUrl","warn","msg","loadedMap","getTexture2D","getBaseTexture","getAtlas","createNodes","urlInfo","checkObj","_clearRes","obj","clearTextureRes","setGroup","clearResByGroup","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","_loadSubFileConfig","mini","_loadMiniPackage","packName","subPkgNameSeperator","loadTask","loadSubpackage","success","fail","onProgressUpdate","subPkgPathSeperator","fileConfig","files","hash","indice","configs","config","t","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","TEXTURE2DARRAY","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","ClassUtils","regClass","classDef","_classMap","getClass","getInstance","compClass","dummy","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","INDEX_BYTES","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","Component","hideFlags","_hideFlags","_status","_enabled","_singleton","_$singleton","_initialize","_extra","hasHideFlag","enabled","_setActive","activeInHierarchy","awaked","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","interactMap","_parseInteractive","spriteMap","_cloneTo","runInEditor","onAwake","_is3D","_scene","_componentDriver","setupScript","_destroyComponent","_destroy","second","onDestroy","onReset","_toDestroys","RenderParams","GPUEngineStatisticsInfo","RenderPassStatisticsInfo","BufferTargetType","BufferUsage","DrawType","IndexFormat","MeshTopology","BlendEquationSeparate","BlendFactor","BlendType","CompareFunction","CullMode","FrontFace","StencilOperation","VertexElementFormat","_elementInfos","single","getParams","FLOAT","vector2","vector3","vector4","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","ubyte4","getElementInfos","element","info","Single","Vector2","Vector3","Vector4","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","NorUByte4","VertexStateContext","VertexDeclaration","vertexStride","_vertexStride","vertexElementCount","_vertexElements","vertexElements","_uniqueIDCounter","_vertexElementsDic","_VAElements","_shaderValues","vertexElement","_elementUsage","elmentInfo","_elementFormat","elementString","elementCount","elementType","normalized","elementOffset","stride","shaderLocation","getVertexElementByIndex","getVertexElementByUsage","usage","VertexElement","elementFormat","elementUsage","Sprite2DGeometry","vballoc","iballoc","_stride","_vertNum","_indexNum","_VBBuff","_IBBuff","onVBRealloc","onIBRealloc","vbBuffer","ibBuffer","indexNum","vertexNum","clearMesh","expVBSize","curLen","old","expIBSize","curlen","MeshQuadTexture","__int__","_fixib","quadNum","ibbuf","ib","idx","curvert","createQuadIB","_maxIB","VertexDeclarition","const_stride","_curVBPos","buff","_vbFloat32Array","addQuad","useTex","vbdata","cpos","useTexVal","vertexDeclarition","Filter","left","top","rect1","_rectMeshNormY","_rectMeshVBNormY","rectInvY","_rectMeshInvY","_rectMeshVBInvY","useFlipY","onChange","EVENT_CHANGE","_rectMesh","_rectMeshVB","_render2D","COLOR","_filter","sprite","next","_next","filters","save","setColorFilter","_fun","restore","_getCacheStyle","rtOffX","rtOffY","_renderNextToCacheRT","renderTexture","lastRT","render","setRenderTarget","renderTexOffx","renderTexOffy","_drawRenderTexture","anchorX","anchorY","GrahamScan","multiply","p0","dis","_getPoints","tempUse","_mPointList","getFrom","getFromR","pListToPointList","pList","_tempPointList","pointListToPlist","_temPList","scanPList","scan","PointSet","tmp","ch","_tmpDic","_temArr","SpriteConst","ALPHA","TRANSFORM","BLEND","CANVAS","FILTERS","MASK","CLIP","TEXTURE","GRAPHICS","RENDERNODE2D","CUSTOM","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","Stat","show","views","checkUI","hide","_show","_enableStatistics","_currentShowArray","AllShow","_statUI","loop","showToggle","_currentToggleArray","_count","_timer","updateEngineData","delay","_fpsStr","renderSlow","trianglesFaces","getStatisticsInfo","C_TriangleCount","drawCall","C_DrawCallCount","instanceDrawCall","C_Instancing_DrawCallCount","M_GPUMemory","textureMemory","M_ALLTexture","renderTextureMemory","M_ALLRenderTexture","bufferMemory","M_GPUBuffer","mode","clearStatisticsInfo","renderPassStatArray","fill","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","DrawCall","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","ShadowDrawCall","InstanceDrawCall","CMDDrawCall","BlitDrawCall","GPUMemory","TextureMemeory","RenderTextureMemory","BufferMemory","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","loopCount","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","draw2D","renderNode","meshRenderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","shadowMapDrawCall","cmdDrawCall","blitDrawCall","enableRenderPassStatArray","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","RenderState2D","restoreTempArray","TEMPMAT4_ARRAY","worldAlpha","worldMatrix4","worldMatrix","matWVP","worldScissorTest","InvertY","Render2D","_renderTexture","Render2DSimple","rendercontext2D","render2DRenderPassFactory","createRenderContext2D","_renderElement","createRenderElement2D","_createMesh","decl","geo","renderDeviceFactory","createRenderGeometryElement","Triangles","DrawElement","mesh","createBufferState","bufferState","vb","createVertexBuffer","Dynamic","vertexDeclaration","createIndexBuffer","applyState","indexFormat","UInt16","getGeo","_geoMap","renderStart","clearColor","setOffscreenView","drawMesh","mtl","geometry","value2DShaderData","shaderData","subShader","_shader","getSubShaderAt","materialShaderData","drawRenderElementOne","drawElement","draw","mesh2d","vboff","vblen","iboff","iblen","customMaterial","_vertexBuffers","_bindedIndexBuffer","setDataLength","setData","_setIndexDataLength","_setIndexData","clearRenderParams","setDrawElemenParams","mat","_defaultShader","renderEnd","SingletonList","_add","indexof","clean","FastSinglelist","Batch2DInfo","batchFun","batch","indexStart","elementLenth","RenderManager2D","regisBatch","renderElementType","_batchMapManager","list","_list","_lastRenderNodeType","_renderEnd","_renderElementList","_batchInfoList","addRenderObject","object","removeRenderObject","clearList","renderUpdate","lists","_renderUpdateMask","_cull","_batch","drawRenderElementList","preRenderUpdate","_renderElements","_batchStart","_renderType","_lastbatch2DInfo","batchRenderElement","renderNodeType","elementLength","MathUtils3D","isZero","abs","zeroTolerance","nearEqual","n1","n2","fastInvSqrt","MaxValue","MinValue","Deg2Rad","z","writeTo","destVector4","lerp","ax","ay","az","aw","transformByM4x4","m4x4","vx","vy","vz","vw","me","lengthSquared","s","inverse","subtract","Clamp","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","distanceSquared","value1","value2","dot","ZERO","ONE","UnitX","UnitY","UnitZ","UnitW","tempVec4","transformQuat","rotation","qx","qy","qz","qw","ix","iy","iz","iw","scalarLength","scalarLengthSquared","transformV3ToV3","vector","transform","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","TransformNormal","normal","normalX","normalY","normalZ","transformCoordinate","coordinate","coordinateX","coordinateY","coordinateZ","o","cross","bx","by","bz","vsub","vadd","destVector3","toDefault","_tempVector3","NegativeUnitX","ForwardRH","ForwardLH","Up","RenderState","cull","blend","_blend","srcBlend","_srcBlend","dstBlend","_dstBlend","srcBlendRGB","_srcBlendRGB","dstBlendRGB","_dstBlendRGB","srcBlendAlpha","_srcBlendAlpha","dstBlendAlpha","_dstBlendAlpha","blendEquation","_blendEquation","blendEquationRGB","_blendEquationRGB","blendEquationAlpha","_blendEquationAlpha","depthTest","_depthTest","depthWrite","_depthWrite","stencilWrite","_stencilWrite","stencilTest","_stencilTest","stencilRef","_stencilRef","stencilOp","_stencilOp","createObj","CULL_BACK","BLEND_DISABLE","BLENDPARAM_ONE","BLENDPARAM_ZERO","BLENDEQUATION_ADD","DEPTHTEST_LEQUAL","STENCILTEST_OFF","STENCILOP_KEEP","STENCILOP_REPLACE","setNull","CULL_NONE","Off","CULL_FRONT","Front","Back","BLEND_ENABLE_ALL","BLEND_ENABLE_SEPERATE","Zero","One","BLENDPARAM_SRC_COLOR","SourceColor","BLENDPARAM_ONE_MINUS_SRC_COLOR","OneMinusSourceColor","BLENDPARAM_DST_COLOR","DestinationColor","BLENDPARAM_ONE_MINUS_DST_COLOR","OneMinusDestinationColor","BLENDPARAM_SRC_ALPHA","SourceAlpha","BLENDPARAM_ONE_MINUS_SRC_ALPHA","OneMinusSourceAlpha","BLENDPARAM_DST_ALPHA","DestinationAlpha","BLENDPARAM_ONE_MINUS_DST_ALPHA","OneMinusDestinationAlpha","BLENDPARAM_SRC_ALPHA_SATURATE","SourceAlphaSaturate","BLENDPARAM_BLENDCOLOR","BlendColor","BLENDPARAM_BLEND_ONEMINUS_COLOR","OneMinusBlendColor","ADD","BLENDEQUATION_SUBTRACT","SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","REVERSE_SUBTRACT","BLENDEQUATION_MIN","MIN","BLENDEQUATION_MAX","MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","Never","DEPTHTEST_LESS","Less","DEPTHTEST_EQUAL","Equal","LessEqual","DEPTHTEST_GREATER","Greater","DEPTHTEST_NOTEQUAL","NotEqual","DEPTHTEST_GEQUAL","GreaterEqual","DEPTHTEST_ALWAYS","Always","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","Keep","STENCILOP_ZERO","Replace","STENCILOP_INCR","IncrementSaturate","STENCILOP_INCR_WRAP","IncrementWrap","STENCILOP_DECR","DecrementSaturate","STENCILOP_DECR_WRAP","DecrementWrap","STENCILOP_INVERT","Invert","Default","IncludeFile","splitToWords","block","word","substr","ofs2","useFuns","codes","funs","curUseID","funnames","words","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","setParent","parent","setCondition","condition","conditionType","__condition","toscript","def","_toscript","__id","ifdef","__noCompileEnable","noCompile","funsCode","_clearCR","_splitToWordExps3","CullStateMap","BlendStateMap","Disable","All","Seperate","BlendFactorMap","BlendEquationMap","Add","Subtract","Reverse_substract","Min","Max","CompareFunctionMap","StencilOperationMap","ShaderCompile","addInclude","fileName","allowReplace","includes","compile","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","compileAsync","_loadIncludesDeep","toLoad","includesCnt","tc","codeName","preNode","fname","lines","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","getRenderState","renderState","stencilFail","stencilZFail","stencilZPass","IFDEF_NO","IFDEF_PARENT","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","createRotationQuaternion","rotX","rotY","rotZ","rotW","xx","yy","zz","xy","zw","zx","yw","yz","xw","resultE","createFromTranslation","trans","createFromRotation","rad","createFromScaling","createFromMatrix4x4","sou","souE","outE","l","l11","l12","l13","l21","l22","l23","l31","l32","l33","r11","r12","r13","r21","r22","r23","r31","r32","r33","cloneByArray","determinant","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","transpose","lookAt","eye","up","v0","forwardLookAt","DEFAULT","Temp","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","Quaternion","createFromYawPitchRoll","yaw","pitch","roll","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rx","ry","rz","rw","rotationAxisAngle","axis","normalAxis","arcTanAngle","atan","angleTo","asin","createFromAxisAngle","half","slerp","omega","cosom","sinom","scale0","scale1","bw","acos","amount","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","upe","Matrix4x4","createRotationY","TEMPMatrix0","createRotationX","TEMPMatrix1","oe","a0","a3","invDot","rotationLookAt","forward","rotationMatrix","lengthSq","matrix3x3","m11","m12","m13","m21","m22","m23","m31","m32","m33","NAN","NaN","_tempVector0","_tempVector1","_tempVector2","DEFAULTARRAY","createRotationZ","createRotationYawPitchRoll","createRotationAxis","xz","rotationX","rotationY","rotationZ","rotationW","createTranslate","createScaling","l14","l24","l34","l41","l42","l43","l44","r14","r24","r34","r41","r42","r43","r44","createFromQuaternion","x2","y2","z2","yx","zy","wy","wz","createAffineTransformation","rot","sx","sy","createLookAt","oE","xaxis","yaxis","zaxis","createPerspective","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","createOrthoOffCenter","m14","m24","m34","m41","m42","m43","m44","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","position","equalsOtherMatrix","other","decomposeTransRotScale","translation","_tempMatrix4x4","decomposeTransRotMatScale","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","atan2","ae","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","billboard","objectPosition","cameraPosition","cameraUp","cameraForward","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","getInvertFront","isInvert","DEFAULTINVERT","destVector2","ShaderDataType","UniformBufferParamsType","ShaderFeatureType","ShaderDataDefaultValue","Int","Bool","Float","TempVector2","UnifromBufferData","uniformParamsStat","_uniformParamsState","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","Shader3D","propertyIDToName","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","_setData","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","propertyNameToID","vec","setMatrixArray","setNumber","setVector2","setVector3","setVector4","setColor","setColorbyIndex","setMatrix","ubd","ShaderProcessInfo","ShaderCompileDefineBase","compiledObj","_owner","_VS","_PS","_defs","_validDefine","unitRenderModuleDataFactory","createDefineDatas","getDefineByName","withCompile","compileDefine","_defineStrings","ShaderVariant","subShaderIndex","_subShaderIndex","passIndex","_passIndex","defineNames","_defineNames","defines","pass","_passes","validDefine","defname","_name","otherDefines","ShaderVariantCollection","items","shaderPass","_subShaders","nodeCommonMap","_configDefineValues","some","every","compileAll","variants","variant","suc","compileShaderByDefineNames","active","ShaderPass","pipelineMode","_pipelineMode","moduleData","statefirst","_statefirst","createShaderPass","createShaderInstance","shaderpass","IS2d","shaderProcessInfo","is2D","attributeMap","_attributeMap","uniformMap","_uniformMap","_getNamesByDefineData","defineString","debugMode","getCacheShader","setCacheShader","_debugDefineStrings","_debugDefineMasks","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","instanceLightMapScaleOffsetDeclaration","MESH_LIGHTMAPSCALEOFFSET","getVertexDeclaration","vertexFlag","compatible","verDec","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","regIncludeBindUnifrom","defaultValue","IncludeUniformMap","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","createSubShader","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformName","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","TextureCube","Texture3D","textureGammaDefine","uniformIndex","addTexGammaDefine","addShaderPass","_addShaderPass","_addIncludeUniform","includemap","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","a_LightmapScaleOffset","init","SHADERDEFINE_BLITSCREEN_INVERTY","SHADERDEFINE_REMAP_POSITIONZ","SHADERDEFINE_LOD_TEXTURE_SAMPLE","SHADERDEFINE_BREAK_TEXTURE_SAMPLE","_remapZ","_screenInvertY","_lodTextureSample","_breakTextureSample","_compileDefineDatas","defineData","getNamesByDefineData","compileDefineDatas","enableInstancing","supportReflectionProbe","_preCompileShader","_surportVolumetricGI","surportVolumetricGI","subshader","addSubShader","passDataArray","passData","VS","FS","pipeline","_enableInstancing","_supportReflectionProbe","enableInstance","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_propertyNameMap","_propertyNameCounter","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","I","RenderStateContext","setDepthTest","_GLRenderState","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","setStencilFunc","ref","setstencilOp","zfail","zpass","setBlend","setBlendEquation","setBlendEquationSeparate","setBlendFunc","sFactor","dFactor","setBlendFuncSeperate","srcRGB","dstRGB","srcAlpha","dstAlpha","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","_init_","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","BlendSourceAlpha","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","activeBlendFunction","NAMES","TOINT","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","LIGHTER","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","_initDefault","_DEFAULT","_SAVE","_initSaveMap","_SAVE_SIZE","DrawStyle","_Defaultinit","_drawStyle","_color","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","_createArray","_init","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_value","POOL","_newSubmit","stopMerge","dataObj","newSubmit","_saveMark","_saveuse","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","SaveClipRect","_globalClipMatrix","_clipInfoID","_clipRect","SaveMark","_preSaveMark","Create","no","SaveTransform","_matrix","_curMat","_savematrix","SaveTranslate","_mat","RenderSpriteData","Shader2D","textureShader","shaderType","D2","textureAttribute","primitiveShader","primitiveAttribute","a_position","a_attribColor","a_posuv","a_attribFlags","ShaderDefines2D","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","TEXTURESHADER","PRIMITIVESHADER","initSprite2DCommandEncoder","UNIFORM_MMAT","UNIFORM_CLIPMATDIR","UNIFORM_CLIPMATPOS","UNIFORM_MMAT2","UNIFORM_SIZE","UNIFORM_VERTALPHA","UNIFORM_MVPMatrix","UNIFORM_SPRITETEXTURE","UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1","UNIFORM_BLURINFO","UNIFORM_COLORALPHA","UNIFORM_COLORMAT","UNIFORM_COLOR","UNIFORM_BLURINFO1","UNIFORM_BLURINFO2","UNIFORM_COLORADD","UNIFORM_TEXRANGE","commandUniform","createGlobalUniformMap","addShaderUniform","Value2D","mainID","_needRelease","_cacheID","initialize","createShaderData","addDefine","Primitive","textureHost","clipMatDir","clipMatPos","_cache","setBool","DEPTH_WRITE","setInt","DEPTH_TEST","BLEND_EQUATION","BLEND_SRC","BLEND_DST","CULL","reinit","_initone","classT","_compileDefine","_typeClass","globalShaderData","mainType","types","sv","getVector2","vertAlpha","getNumber","mmat","setMatrix4x4","getMatrix4x4","u_MvpMatrix","_textureHost","textrueReadGamma","removeDefine","setTexture","setVector","getVector","colorAdd","upload","material","setFilter","typeDefine","clearDefine","blendNormal","blendPremulAlpha","blendAdd","blendMask","release","minAngle","BasePoly","_checkMinAngle","p1x","p1y","p2x","p2y","p3x","p3y","v1x","v1y","v2x","v2y","cosAngle","createLine2","indices","lineWidth","indexBase","outVertex","tempData","newlen","vec2","getNormal","_setMiddleVertexs","last","tempIndexs","x1","y1","x3","y3","vertexs","edgeIndexArray","perpx","perpy","perp2x","perp2y","denom","px","py","dist","createLineTriangle","outvb","vbstride","outib","ptlen","dx","dy","pointnum","tmpData","realPtNum","ci","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","SubmitKey","submitType","blendShader","SubmitBase","clipInfoID","blendType","_key","_startIdx","_numEle","_colorFiler","shaderValue","ID","_mesh","KEY_DRAWTEXTURE","_nBlendType","_material","KEY_ONCE","KEY_FILLRECT","KEY_VG","KEY_TRIANGLES","RENDERBASE","RenderInfo","loopStTm","CharSubmitCache","_ndata","_clipid","_clipMatrix","_tex","_imgId","imgid","submit","getPos","__nPosPool","__posPool","drawLeftData","fillShaderValue","_meshQuatTex","_curSubmit","_copyClipInfo","CharRenderInfo","isRandomTouch","char","deleted","orix","oriy","touchTick","isSpace","touch","curLoop","touchRect","WrapMode","pixelBBX","MeasureFont","charRender","getFontSizeInfo","fontstr","tmpRI","fontsz","bmpdt","getCharBmp","bmpData32","updateBbx","checkBmpLine","ex","stpos","curbbx","onlyH","h","ey","minx","maxx","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","addRect","pt","_get","_fill","_release","nWidth","nHeight","pCellBox","tm","nHeghit","_check","TextTexture","textureW","TextRender","atlasWidth","textureH","_discardTm","genID","curUsedCovRate","curUsedCovRateAtlas","lastTouchTm","ri","Bilinear","debugUV","fillWhite","addChar","isWan1Wan","addCharCanvas","u0","Uint8ClampedArray","canv","setTextureSubImageData","discard","setGlobalRepaint","getTextTexture","curtm","cleanTm","checkCleanTextureDt","poolLen","destroyUnusedTextureDt","touchTexture","frame","texw2","gridw2","TextAtlas","atlasGridW","bmpWidth","bmpHeight","EVENT_REUSE","texWidth","texHeight","charMaps","atlasgrid","setProtecteDist","getAEmpty","usedRate","printDebugInfo","FontInfo","_lastFont","_lastFontInfo","_family","_size","_italic","_bold","setFont","_font","szpos","fpos","familys","WordText","pagecharsCtx","pageChars","scalex","scaley","setText","_text","cleanCache","chars","splitRender","_splitRender","ICharRender","getWidth","canvasWidth","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","textBaseline","lineJoin","strokeStyle","strokeText","fillStyle","fillText","strokeRect","imgdt","isIOSHighPerformanceModePlus","textAlign","fillAndStrokeText","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","lastFont","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","_fontMeasure","bugIOS","miniadp","systemInfo","system","scaleFontWithCtx","textRenderInst","fontMeasure","_wan1wansz","szinfo","finfo","standardFontSize","offx","offy","fw","fh","fontStr","getNextChar","state","filltext","strokeColor","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","sty","getCharRenderInfo","o1","texgen","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","_charSubmitCache","pri","riSaved","touchRes","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","w1","needCanvW","lineExt","imgdtRect","addBmpData","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","curloop","maxWasteRateID","maxWasteRate","curatlas","waste","showLog","needGC","cleanMem","simClean","printDbgInfo","totalUsedRate","dtstr","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","drawTexture","addChild","useOldCharBook","forceWholeRender","MeshTexture","_ibU16Array","addData","vertices","uvs","rgba","addVert","vertsz","f32pos","m00","m01","m10","uvminx","uvminy","uvu","uvv","vertN","ibstart","indexBuffer","si","MeshVG","addVertAndIBToMesh","startpos","defaultClipMatrix","MAXCLIPRECT","ContextParams","_textRender","textRender","_alpha","_fillStyle","_strokeStyle","_tmpMatrix","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_other","_drawCount","_renderCount","_submitKey","_meshVG","_meshTex","_transedPoints","_temp4Points","_clipID_Gen","_matBuffer","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_shader2D","_lastTex","_fillColor","_flushCnt","defTexture","_incache","_isMain","_shaderValueNeedRelease","_contextcount","defTex2d","_render2DManager","copyState","isMain","lineCap","miterLimit","transformByMatrix","fillColor","lineColor","fillRect","alpha","globalAlpha","_transform","pivotX","pivotY","_rotate","_scale","scaleX","scaleY","_drawLine","fromX","fromY","toX","toY","vid","moveTo","lineTo","stroke","_drawLines","addPath","drawCurves","quadraticCurveTo","_fillAndStroke","isConvexPolygon","_drawCircle","radius","arc","_drawEllipse","_drawRoundRect","lt","lb","rb","tPath","_getPath","startX","startY","_drawPie","startAngle","endAngle","_drawPoly","_drawPath","brush","pen","arcTo","set2DRenderConfig","clearBG","_releaseMem","getFillColor","make","globalCompositeOperation","_drawToRender2D","lastBlend","align","borderColor","drawText","strokeWord","fillBorderText","fontObj","_fillRect","sameKey","_MAXVERTNUM","isStopMerge","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","fillTexture","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","edx","edy","edu","edv","arry","u_TexRange","_mixRGBandAlpha","breakNextMerge","drawTextures","colors","ipos","bmpid","cs","repaint","clipInfo","cm","cmp","_copyClipInfoToShaderData","drawCallOptimize","shaderdata","ft","_drawMesh","vertNum","lastRender","preKey","tv","tuv","drawTriangles","ops","italicDeg","xoff","maxy","ma","mb","md","a4","a5","a6","a7","drawTextureWithTransform","blendMode","oldcomp","curMat","tmpMat","drawGeo","setBuffer","drawGeos","colorNum","webGLImg","clipRect","escape","miny","cmaxx","cmaxy","flush","close","addVGSubmit","curEleNum","xp","yp","_x","_y","cpath","pi","faceNum","idxpos","fi","ii","vertex","maxVertexNum","ptnum","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","minNum","sr","cl","ndivs","stepAng","curAng","cpx","cpy","tArray","parameterLineWidth","hw","drawParticle","_canvas","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_isWidthSet","_isHeightSet","wRate","hRate","_getBit","_style","_needRepaint","_graphics","_render","drawcallOptim","visFlag","_visible","DefferTouchResContextID","DefferTouchResContext","mustTouchRes","randomTouchRes","RenderToCache","renderResult","setVertexDecl","_tex_vert_decl","submesh","RenderObject2D","clipPos","clipDir","clipMat","localClipMatrix","toNativeMesh","renderDevice","renderElement","destroyGPUResource","Cache_Info","page","mergeClipMatrix","amaxx","amaxy","bmaxx","bmaxy","RenderPageContext","curMatrix","render2d","setBlendMode","_applyBlend","CachePage","meshes","defferTouchRes","defferTouchResRand","children","clearGPUObject","isRoot","spriteTrans","worldMat","vec21","wMat4","tmpMat4","renderinfo","curMtl","tmpMat1","oldMat","oldAlpha","parentCacheInfo","_cacheStyle","cacheInfo","offmat","oldBlend","oldClipMatrix","clipMatrix","SpriteCache","curMatSubSpriteMat","outMat","invMat","renderCacheAsNormal","rebuild","isGlobalRepaint","parentPage","contextID","pageRootSprite","curNode","renderer","RenderSprite","initRender","renders","_initRenderFun","_getTypeRender","tType","_spriteRect_TextureSpace","_maskRect_TextureSpace","NORENDER","_no","_mask","_clip","_custom","_hitarea","_renderNode2D","_renderNode","addCMDCall","customRender","scrollRect","hitArea","_hit","_unHit","textLastRender","scaleInfo","_calculateCacheRect","tRec","cacheRect","cacheAs","cacheNormalEnable","RenderToRenderTexture","isDrawRenderRect","RenderToCacheTexture","spRect_TS","maskcache","maskRect_TS","width1","height1","ctx1","maskRT","HTMLCanvas","_source","createCanvas","_ctx","_setContext","getMemSize","getTexture","toBase64","encoderOptions","toDataURL","BoundsStyle","bounds","userBounds","temBM","CacheStyle","onInvisible","userSetCache","staticCache","maskParent","tCacheType","getSelfBounds","_scaleInfo","CANVAS_EXTEND_EDGE","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmd","cmdID","DrawCircleCmd","percent","getBoundPoints","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","DrawEllipseCmd","DrawRoundRectCmd","FillTextCmd","_strokeColor","_loosyBound","_stroke","_align","_wordText","_fontObj","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","getBounds","realSize","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tMatrix","tempMatrix","_switchMatrix","addPointArrToRst","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","CacheManger","regCacheByFunction","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","forceDispose","beginCheck","waitTime","_checkLoop","stopCheck","cacheList","tTime","_index","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","startDispose","bind","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","DrawGeoCmd","creatGEO","vbArray","ibArray","DrawGeosCmd","Graphics","add2DGlobalUniformData","propertyID","propertyKey","uniformtype","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","replaceTextColor","loadImage","drawLine","drawLines","drawRoundRect","drawCircle","drawEllipse","drawPie","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","is3D","_bits","_parent","_updateDisplayedInstage","displayedInStage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","endIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","_displayChild","_onRemoved","_setDisplay","display","timerLoop","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","EVENT_SET_ACTIVESCENE","_onInActiveInScene","EVENT_SET_IN_ACTIVESCENE","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","components","getComponents","onAfterDeserialize","HALF_PI","PI2","Ease","linearNone","linearIn","linearInOut","linearOut","bounceIn","bounceOut","bounceInOut","backIn","backInOut","backOut","elasticIn","elasticInOut","elasticOut","strongIn","strongInOut","strongOut","sineInOut","sineIn","sineOut","quintIn","quintInOut","quintOut","quartIn","quartInOut","quartOut","cubicIn","cubicInOut","cubicOut","quadIn","quadInOut","quadOut","expoIn","expoInOut","expoOut","circIn","circInOut","circOut","Tween","gid","props","duration","ease","autoRecover","isTo","usePool","runNow","_target","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","uTime","runTimer","handler","restart","pause","dTime","setStartTime","clearAll","tweens","tween","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","SpriteUtils","getGlobalRecByPoints","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalPosAndScale","getTransformRelativeToWindow","coordinateSpace","globalTransform","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","fitDOMElementInArea","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","webkitTransform","updateOrder","_boundStyle","_ownGraphics","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","_filterArr","mouseThrough","hitTestPrior","autoSize","_globalDeltaFlages","_cacheGlobal","_globalPosx","_globalPosy","_globalRotate","_globalScalex","_globalScaley","updateZOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","reCache","renderNode2D","getRepaint","_setX","_setY","cacheGlobal","_setGlobalCacheFlag","Sprite_GlobalDeltaFlage_Position_X","Sprite_GlobalDeltaFlage_Matrix","_syncGlobalFlag","parentRepaint","Sprite_GlobalDeltaFlage_Position_Y","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","toParentPoint","rec","chidren","cList","getGraphicBounds","getStyle","setStyle","set_scaleX","set_scaleY","Sprite_GlobalDeltaFlage_Scale_X","_setScaleX","get_scaleX","Sprite_GlobalDeltaFlage_Scale_Y","_setScaleY","get_scaleY","Sprite_GlobalDeltaFlage_Rotation","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","get_anchorX","set_anchorX","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","recArr","speedMode","pivot","drawToCanvas","canvasHeight","drawToRenderTexture2D","imgdata","ImageData","lineLen","srcoff","putImageData","drawToTexture","renderout","_drawingToTexture","outrt","_applyFilters","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","mouseEnabled","_onDisplay","_skinBaseUrl","fromImage","_setMask","startDrag","stopDrag","hitTestPoint","_setTexture","_gcmds","_filters","getGlobalMatrix","_globalMatrix","_getGlobalCacheFlag","globalScaleX","globalScaleY","globalRotation","globalPosX","globalPosY","setGlobalPos","globalx","globaly","_getGlobalCacheLocalToGlobal","_getGlobalCacheGlobalToLocal","globalDeltaFlages","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","MathUtil","subtractVector3","scaleVector3","lerpVector3","lerpVector4","slerpQuaternionArray","Offset1","Offset2","Offset3","getRotation","sortBigFirst","sortSmallFirst","sortNumBigFirst","sortNumSmallFirst","sortByKey","bigFirst","forceNum","_sortFun","FrameAnimation","_sortIndexFun","objpre","objnext","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","propFrames","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","params","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","parseAnimationByData","animationObject","_I","parseAnimationData","Animation","_autoPlay","_atlasCatch","alias","_frames","_setFramesFromCache","showWarn","framesMap","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","_loadAnimationData","defaultO","aniList","clearCache","val","key2","images","BitmapFont","loadFont","dict","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","_initData","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","bold","italic","underline","underlineColor","strikethrough","strikethroughColor","valign","leading","alignItems","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","getFromPool","Text","returnToPool","HtmlImage","_element","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","tag","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","registerBitmapFont","bitmapFont","_bitmapFonts","unregisterBitmapFont","recoverLines","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","_borderColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","ctxFont","_ctxFont","mr","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","startIndex","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouchPos","getTouch","touchTarget","_touchTarget","touchCount","cancelClick","clickCancelled","hasKeyDown","_stage","oncontextmenu","addEventListener","preventDefault","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","_lastTouchTime","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","downButton","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","lastClick","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","_nativeRender_enable","onStageResize","resizeOffScreen","isNativeRender_enable","RunDriver","changeWebGLSize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","onError","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","updateCanvasSize","needUpdateCanvasSize","isFocused","isVisibility","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","Render","_mainCanvas","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","_setStageStyle","mainCanv","canvasStyle","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","screenMode","stageWidth","stageHeight","alignH","alignV","colorArr","_setStyleBgColor","background","_loop","_context","getFrameTm","getTimeFromFrameStart","_setVisibleStyle","visibility","context2D","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","renderSubmit","_render2d","fullScreenEnabled","requestFullscreen","fullScreenChanged","removeEventListener","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","ALIGN_CENTER","ALIGN_MIDDLE","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","autoReleaseSound","disposeSoundLater","readyState","_audioCache","_initMusicAudio","_makeMusicOK","_bgMusic","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_playEmptySound","_miniBuffer","_unlock","_unlocked","initWebAudio","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","createBuffer","supportWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","playSound","soundClass","tSound","_soundCache","musicVolume","soundVolume","playMusic","stopSound","stopAll","stopMusic","setSoundVolume","_setVolume","setMusicVolume","LocalStorage","_baseClass","Storage","support","setItem","setJSON","getJSON","removeItem","localStorage","PrimitiveSV","TextureSV","_blurInfo","_u_blurInfo1","_u_blurInfo2","_u_TexRange","_colorMat","_colorAlpha","_strength_sig2_2sig2_gauss1","blurInfo","u_blurInfo1","u_blurInfo2","colorMat","colorAlpha","strength_sig2_2sig2_gauss1","Mouse","cursor","cursorStr","_preCursor","WeakObject","supportWeakMap","delInterval","_maps","_obj","del","Config3D","setResolution","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","bufferUsage","bytelength","isSingle","_Map","getUBOPointer","bufferBase","ubo","renderOBJCreate","createUniformBufferObject","getBuffer","glPointer","_isSingle","bufferType","UNIFORM_BUFFER","_glPointer","_glBuffer","_bindUniformBufferBase","bindBufferBase","_bindBufferRange","byteCount","bindBufferRange","_reset","bindBuffer","bufferOffset","MAX_SAFE_INTEGER","subData","setDataEx","setDataByUniformBufferData","bufferData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","MaterialRenderMode","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","Material","__initDefine__","SHADERDEFINE_ALPHATEST","SHADERDEFINE_MAINTEXTURE","SHADERDEFINE_ADDTIVEFOG","ALPHATESTVALUE","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","STENCIL_Ref","STENCIL_TEST","STENCIL_WRITE","STENCIL_Op","renderQueue","_renderQueue","_notifyOwnerElements","_setOwnerElement","ownerElements","materialRenderQueue","materialId","_removeOwnerElement","alphaTestValue","alphaTest","hasDefine","define","setDefine","blendSrc","blendDst","blendSrcAlpha","blendSrcRGB","blendDstRGB","blendDstAlpha","getVector3","MaterialProperty","propertyMap","shaderValues","MaterialDefine","shaderDefineArray","getDefineData","materialRenderMode","_matRenderNode","RENDERMODE_OPAQUE","RENDERQUEUE_OPAQUE","RENDERMODE_CUTOUT","RENDERQUEUE_ALPHATEST","RENDERMODE_TRANSPARENT","RENDERQUEUE_TRANSPARENT","RENDERMODE_ADDTIVE","RENDERMODE_ALPHABLENDED","RENDERMODE_CUSTOME","_bindShaderInfo","shaderUBODatas","uboData","setUniformBuffer","_addCheckUBO","_releaseUBOData","effectiveProperty","setShaderName","_uniformBlock","applyUniformDefaultValue","setShaderData","getBoolByIndex","setBoolByIndex","getFloatByIndex","setFloatByIndex","setFloat","getIntByIndex","setIntByIndex","getVector2ByIndex","setVector2ByIndex","getVector3ByIndex","setVector3ByIndex","setVector4ByIndex","getVector4ByIndex","getVector4","getColorByIndex","getColor","setColorByIndex","getMatrix4x4ByIndex","setMatrix4x4ByIndex","getMatrix3x3ByIndex","getMatrix3x3","setMatrix3x3ByIndex","setMatrix3x3","setTextureByIndex","reSetTexture","getTextureByIndex","getBufferByIndex","setBufferByIndex","setShaderDataByIndex","getShaderData","getShaderDataByIndex","destBaseMaterial","_defineDatas","oldparseEndEvent","_inited","RenderPassStatisticCount","stageConfig","laya3D","_changeWebGLSize","is3DMode","_setStyleInfo","supportLocalStorage","steps","beforeInit","_beforeInitCallbacks","createEngine","initRender2D","_initCallbacks","_afterInitCallbacks","afterInit","step","createRender","backgroundColor","isAppUseNewInput","alertGlobalError","erralert","detail","alert","stack","_runScript","_evcode","enableDebugPanel","debugJsPath","addInitCallback","addBeforeInitCallback","addAfterInitCallback","customRequestAnimationFrame","loopFun","_customRequestAnimationFrame","_loopFunction","customRenderEngine","engine","_customEngine","gc","execution","_first","_startTm","_timeId","_Render","fps","ifps","stamp","frm","lastFrm","_onVisibilitychange","clearInterval","setInterval","_enterFrame","vsyncTime","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","decodeObj","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","_$uuid","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","bakeOverrideData","overrideData","dataMap","od","_$override","_$parent","applyOverrideData","nodeData","overrideDataMap","_$id","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","typeOrId","_$prefab","_$index","overrided","_multiline","_editable","_maxChars","_type","IOS_IFRAME","self","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","Prefab","errors","json","LegacyUIParser","createByData","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","renderType","_viewCreated","getBindFun","_funMap","tInitTool","InitTool","createComp","_idMap","tAni","action","_aniList","Scene","finish","createInitTool","view","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","one","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","collectResourceLinks","innerUrls","addInnerUrl","loadList","loadList3D","check","createByJson","customHandler","instanceHandler","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","ox","oy","_addGraphicToGraphics","isChild","dataO","propsName","_getTransformData","propsO","drawConfig","DrawTypeDic","_tM","_adptLineData","_adptTextureData","_adptLinesData","_getPointListByStr","xPos","adptFun","pointArr","Rect","Circle","Pie","FillTexture","FillText","Lines","Curves","Poly","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","setUIMap","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","param","closeAll","_scene3D","onOpened","onClosed","scene3D","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","setLoadingPage","loadPage","_showLoading","_hideLoading","_definiteIntegralMap","BlurFilter","strength","_shaderV1","_strength","sigma","sigma2","exp","srctexture","marginTop","texwidth","texheight","rectVB","stridef32","shadersv","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","setByMatrix","mt","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","_fixMatrix","limit","_brightness","_contrast","_saturation","_hue","GlowFilter","offX","offY","_sv_blurInfo1","_sv_blurInfo2","_flipY","shaderDataBlur","shaderDataCopy","shaderDataCopy1","_fillQuad","flipY","outTexWidth","outTexHeight","textureExtend","svColor","shadercpy","SoundNode","_onParentChange","_channel","isMusic","_isMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","updateFrame","_frameDelty","_updateFrame","_useFrame","videoWidth","videoHeight","_requestVideoFrame","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","HTMLVideoElement","scope","updateVideo","requestVideoFrameCallback","isNeedUpdate","initVideoTextureData","childElementCount","firstChild","appendSource","sourceElement","extension","updateVideoTexture","videoEvent_update","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","onVideoMetaLoaded","_repaintCachAs","_checkCachAs","reload","detroyChildren","AnimatorPlayState2D","animatorState","_currentState","_frontPlay","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_parentPlayTime","_playNum","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","DepthTextureMode","internalResources","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","clip","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","pname","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_eventLoop","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transstartoffset","transduration","_applyUpdateMode","LowFrame","UnScaleTime","gotoAndStopByFrame","curPlayState","calclipduration","_eventStart","NEGATIVE_INFINITY","_checkEnterIndex","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","EVENT_OnStateLoop","onStateLoop","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","READ_DATA","_DATA","_reader","READ_BLOCK","_BLOCK","blockStarts","blockLengths","READ_STRINGS","prePos","_strings","reader","_version","blockName","fn","timeToFrame","READ_ANIMATIONS2D","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","conditionNameToID","_conditionNameMap","conditionIDToName","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","isAndOperEnabled","triggerCatch","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResource","Plain","Buffer","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","tt","spriteSourceSize","sourceSize","_stateNum","stateNum","HierarchyParser","printErrors","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","outNodeData","nodeData2","topNode","compInitList","compData","storeId","decodeOptions","_$var","checkData","_$loadable","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","resArray","HDRTextureInfo","_parseHDRTexture","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","decreaseY","decreaseX","dataLength","byteOffset","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","readScanLine","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","HDRTEXTURE","RenderTexture","createFromPool","colorFormat","depthFormat","multiSamples","depthTexture","generateDepthTexture","_inPool","_poolMemory","recoverToPool","clearPool","bindCanvasRender","_bindCanvasRender","_generateDepthTexture","_depthStencilTexture","createRenderTargetDepthTexture","depthStencilTexture","_isCameraTarget","_multiSamples","_createRenderTarget","_texturesResolve","recreate","readRenderTargetPixelData","getDataAsync","readRenderTargetPixelDataAsync","Texture2DLoader","load2","fileIndex","platforms","fileInfo","readWrite","compressedFormats","img","needBitmap","ImageBitmap","createImageBitmap","bitmapimage","RenderTextureLoader","VideoTextureLoader","propertyParams2d","constructParams2d","TextureLoader","wrapTex2D","tex2D","videoFormats","loadStates","NullLoader","picUrl","testString","fontName","registerFont","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","MaterialParser","parseLegacy","uniName","vectorValue","matrix3","matrix4","collectLinks","tex2DPath","jsonData","classType","vectors","renderStateData","_getRenderStateParams","MaterialLoader","shaderPath","ParseJSON","parseStart","fstr","finCurrObj","cobj","currArr","formatVal","numVal","finCurrStr","currStr","cNext","cstr","pcobj","TextureCubeFace","DEFAULT_PIXELS","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","setCubePixelsData","setCubeImageData","updateSubPixelsData","setCubeSubPixelData","setCubeDDSData","setCubeKTXData","CGBlock","shaderBlock","shaderDataOBJ","ShaderParser","getShaderBlock","cgmap","getCGBlock","bindCG","compileToTree","sliceFlag","sliceIndex","slicedata","splitmap","getMapKey","shaderObj","i1","i2","cgdata","datavalue","passArray","attributemap","indexofAttribute","dataArray","getShaderDataType","defaultmap","newUniformMap","serializable","default","getDefaultData","mat3","texcube","compiledObjs","decodeAudioData","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","getHash","blendOperationGLData","sourceBlendFactor","destinationFactor","getBlendComponent","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","_bufferUsage","targetType","bufferUsageType","_byteLength","_bufferType","VertexAttributeLayout","getVertexLayoutByPool","layout","deepthEqaul","VAElements","attributeByteSize","instanceMode","vaelements","oneAttributeSize","vdec","instanceBuffer","IPoint","vaelemets","_vertexDeclaration","thisVaeEs","nn","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","LEFT","UP","RIGHT","DOWN","SHIFT","SPACE","TAB","INSERT","KeyLocation","STANDARD","NUM_PAD","QuickTestTool","getMCDName","_typeToNameDic","showRenderTypeInfo","showedDic","_rendertypeToStrDic","_addType","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","enableQuickTest","RenderClearFlag","RenderDrawMode","RenderIndexMode","RenderStateType","TextureCompareMode","TextureDecodeFormat","BaseRender2DType","Render2DOrderMode","GLSLCodeGenerator","glslAttributeString","getAttributeType","glslUniformString","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","typeStr","GLShaderLanguageProcess3D","vertexHead","fragmentHead","clusterSlices","defMap","defineStr","attributeglsl","uniformglsl","SHADER_CAPAILITY_LEVEL","_maxAreaLightCountPerClusterAverage","vsVersion","psVersion","fs","ShaderVariable","onID","pointID","textureID","Viewport","minDepth","maxDepth","project","unprojectFromMat","matrixEleme","unprojectFromWVP","projection","world","_tempViewport","BaseRenderNode2D","_getcommonUniformMap","_getRect","_transformChange","sharedMaterial","_materials","lastValue","_changeMaterialReference","_setRenderElement2DMaterial","baseRenderNode","_layer","_renderid","_spriteShaderData","_ordingMode","elementIndex","VertexMesh2D","vertexFlags","verDecs","_defaultTexture","depth","createTexture3DInternal","sources","setTexture3DImageData","setTexture3DPixelsData","zOffset","setTexture3DSubPixelsData","Tex3D","WebGLRTMgr","getRT","releaseRT","Base64Tool","lookup","isBase64String","encode","bytes","base64","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","reghead","arrU8List","newU8List","arg","Log","_logdiv","_btn","onclick","toggle","print","maxCount","autoScrollToBottom","scrollHeight","PerfData","datas","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","addPoolCacheManager","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","WasmAdapter","module","wasmFile","webDir","currentScript","moduleArg","instantiateWasm","imports","receiveInstance","exports","scriptDirectory","locateFile","Memory","WebAssembly","PerfTools","PerformanceDefine","PERF_BEGIN","PERF_END","PERF_FRAMECLEAR","UniformBufferBlock","sn","cluster","alignedSize","user","uploadNum","needUpload","UniformBufferCluster","blockSize","blockNum","manager","blocks","expand","totalSize","createGPUBuffer","statisGPUMemory","usedNum","_expandBuffer","expandNum","clusterMaxBlock","expandSize","newArrayBuffer","notifyGPUBufferChange","renderContext","_moveBlock","dataView","copyWithin","getBlock","roundUp","byteAlign","_getBlockWithExpand","snCounter","freeBlock","writeBuffer","uploadByte","statisUpload","optimize","uploadThreshold","moveNum","removeHole","UniformBufferAlone","getBufferAlone","timeCostSum","timeCostCount","timeCostAvg","UniformBufferUser","strId","itemNum","useBigBuffer","bufferBlock","bufferAlone","tac","_typeArray","clearGPUBufferBind","addUniform","_getUniformItem","setUniformData","arraySize","alignElements","setBoolArray","setIntArray","setFloatArray","setVector2Array","setVector3Array","setMatrix3x3Array","setMatrix4x4Array","getUniform","hasUniform","isMe","Socket","_input","output","_output","connected","_connected","_endian","port","byteClass","protocols","isSecure","disableInput","_byteClass","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","pre","BinHashUtils","magic","isSame","buffer1","start1","buffer2","start2","JsonBinRead","_instance","IsJsonbin","ISJSONBIN","ISJSONBIN2","ISJSONBIN3","int32","read","parsePack","_readArray","keyMap","endPos","_readOne","_getLen","_toLargeNumber","n2str","readInt8Array","NULL","NUM8","NUM16","NUM32","NUM64","BOOLEAN","DOUBLE","NUM16_1000","NUM32_1000","STRING","keyArray","WORDTEXT","ARRAYEMPTY","ARRAYNUM8","ARRAYNUM16","ARRAYNUM32","ARRAYDOUBLE","ARRAYBUFFER","ARRAYBUFFER32","INT8ARRAY","UINT8ARRAY","INT16ARRAY","FLOAT32ARRAY","_readOne_other","ARRAY8","ARRAY16","ARRAY32","ARRAYREFSOURCE8","ARRAYREFSOURCE16","_dataStartOfs","_objectRef","ARRAYREF","ARRAYREF32","objectRef","COMPRESS_NEW","OBJECT","OBJECTTHISCLASS","_createObjWithClass","keyDef","OBJECTEND","createObjWithClass","strMap","binMark","bData","ReadKeyMap","SPLITCHAR","time2","COMPRESS_REF","COMPRESS_REFMODIFY","ARRAYSTRING","keyIndex","JsonBinWrite","deep","_saveKey","valueType","keysv","keyNum","_getValueArrayType","valueabs","_writeStrOrWordText","isWordText","_writeString","_getObjectTypeof","_$_$ISWORDTYEXT","lastGCCnt","_writeLen","_writeBigNumber","numstr","_writeOne","$__$disbaleJsonBinSv","NOSAVETHISOBJ_DELETE","value1000","_saveArray","_classEnable_","__CLASS__","_writeObject","startType","typeArray","posHead","posData","COMPRESS","_useCompress","same","hashCode","NOSAVE_KEY_LEN","NOSAVEKEY","write","SaveKeyMap","NOSAVETHISOBJ","NOSAVETHISOBJ_TRUE","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","startRec","endRec","isTextNeedRestore","textNeedRestore","charRIs","flushsubmit","subm","releaseMem","matI","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","BufferState","_deviceBufferState","vertexBuffers","vertexBufferArray","_deviceBuffer","MatirxArray","ArrayMul","ai0","ai1","ai2","ai3","playstate","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","_idata","getArrayData","getCount","variable","addShaderUniformArray","propertyName","arrayLength","addShaderBlockUniform","blockname","blockProperty","_indexType","_indexBuffer","vertexCount","_vertexCount","indexCount","subMeshCount","_subMeshes","_indexFormat","_instanceBufferStateType","_bufferState","_instanceBufferState","_instanceWorldVertexBuffer","_instanceSimpleAniVertexBuffer","_setSubMeshes","subMeshes","_setBuffer","vertexBuffer","getSubMesh","setVertices","setIndices","UInt32","UInt8","Static","indexType","faceIndex","createRenderTargetCubeInternal","ownerResource","_ownerResource","addDefines","getUniformBuffer","_setInternalTexture","_cloneUBO","uboDatas","_strsToID","_idToStrs","getID","getName","_isInPool","changeDefinition","removeHoleTimer","clustersAll","clustersCur","_addCluster","clusters","_removeHole","setRenderContext","removeCluster","_instanceBuffer","assetId","fileExtensions"],"sources":["../../src/layaAir/ILaya.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/webgl/utils/Sprite2DGeometry.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/renders/Render2D.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/NodeRender2D/RenderManager2D.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/laya/RenderDriver/RenderModuleData/Design/RenderState.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DFrag.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DVertex.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DShaderInfo.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/MeasureFont.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/renders/Context.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/renders/DefferTouchResContext.ts","../../src/layaAir/laya/renders/RenderToCache.ts","../../src/layaAir/laya/renders/SpriteCache.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/cmd/DrawEllipseCmd.ts","../../src/layaAir/laya/display/cmd/DrawRoundRectCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/cmd/DrawGeoCmd.ts","../../src/layaAir/laya/display/cmd/DrawGeosCmd.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/resource/Material.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/loaders/MaterialParser.ts","../../src/layaAir/laya/loaders/MaterialLoader.ts","../../src/layaAir/laya/utils/ParseJSON.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/loaders/ShaderParser.ts","../../src/layaAir/laya/loaders/ShaderLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/VertexAttributeLayout.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/NodeRender2D/BaseRenderNode2D.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/maths/Viewport.ts","../../src/layaAir/laya/resource/Mesh2D.ts","../../src/layaAir/laya/resource/Texture2DArray.ts","../../src/layaAir/laya/resource/Texture3D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/BufferSliceUtils.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/utils/WasmAdapter.ts","../../src/layaAir/laya/tools/PerformanceTool.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferBlock.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferCluster.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferAlone.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferUser.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/net/util/BinHashUtils.ts","../../src/layaAir/laya/net/util/JsonBinRead.ts","../../src/layaAir/laya/net/util/JsonBinWrite.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/CommandUniformMap.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/RenderDriver/RenderModuleData/Design/ShaderDefine.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts"],"sourcesContent":["import { Timer } from \"./laya/utils/Timer\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { Context } from \"./laya/renders/Context\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\n\r\n/**\r\n * @internal\r\n * 使用全局类的时候，避免引用其他模块\r\n */\r\nexport class ILaya {\r\n    static Loader: typeof Loader = null;\r\n    static Context: typeof Context = null;\r\n    static Browser: typeof Browser = null;\r\n\r\n    static Laya: any = null;\r\n    static loader: Loader = null;\r\n    static timer: Timer = null;\r\n    static systemTimer: Timer = null;\r\n    static physicsTimer: Timer = null;\r\n    static stage: Stage = null;\r\n}\r\n","/**\r\n * @en The `Pool` class is an object pooling class used for storing and reusing objects.\r\n * Reasonable use of the object pool can effectively reduce the overhead of object creation, avoid frequent garbage collection, and thus optimize the smoothness of the game.\r\n * @zh `Pool` 是对象池类，用于对象的存储和复用。\r\n * 合理使用对象池可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。\r\n */\r\n\r\nexport class Pool {\r\n    /**@private */\r\n    private static _CLSID: number = 0;\r\n    /**@private */\r\n    private static POOLSIGN: string = \"__InPool\";\r\n    /**@private  对象存放池。*/\r\n    private static _poolDic: any = {};\r\n\r\n    /**\r\n     * @en Get the object pool based on the object type signature.\r\n     * @param sign The object type signature.\r\n     * @returns The object pool.\r\n     * @zh 根据对象类型标识字符获取对象池。\r\n     * @param sign 对象类型标识字符。\r\n     * @returns 对象池。\r\n     */\r\n    static getPoolBySign(sign: string): any[] {\r\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\r\n    }\r\n\r\n    /**\r\n     * @en Clear the objects in the object pool.\r\n     * @param sign The object type signature.\r\n     * @zh 清除对象池中的对象。\r\n     * @param sign 对象类型标识字符。\r\n     */\r\n    static clearBySign(sign: string): void {\r\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Put the object into the object pool of the corresponding type signature.\r\n     * @param sign The object type signature.\r\n     * @param item The object.\r\n     * @zh 将对象放到对应类型标识的对象池中。\r\n     * @param sign 对象类型标识字符。\r\n     * @param item 对象。\r\n     */\r\n    static recover(sign: string, item: any): void {\r\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\r\n            return;\r\n        item[Pool.POOLSIGN] = true;\r\n        Pool.getPoolBySign(sign).push(item);\r\n    }\r\n\r\n    /**\r\n     * @en Recover by class name if the class has one, if not, do not recover.\r\n     * @param instance The instance of the class.\r\n     * @zh 根据类名进行回收，如果类有类名才进行回收，没有则不回收。\r\n     * @param instance 类的具体实例。\r\n     */\r\n    static recoverByClass(instance: any): void {\r\n        if (instance) {\r\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\r\n            if (className) Pool.recover(className, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回类的唯一标识\r\n     */\r\n    private static _getClassSign(cla: any): string {\r\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\r\n        if (!className) {\r\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\r\n            Pool._CLSID++;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    /**\r\n     * @en Create an object by class.\r\n     * @param cls The class for creating the object.\r\n     * @zh 根据类创建对象。\r\n     * @param cls 用于创建对象的类。\r\n     */\r\n    static createByClass<T>(cls: new () => T): T {\r\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\r\n    }\r\n\r\n    /**\r\n     * @en Get an object instance of a certain type from the object pool.\r\n     * If there is no object of this type in the pool, a new object will be created and returned.\r\n     * @param sign The object type signature.\r\n     * @param cls The class used to create the object of this type.\r\n     * @returns An object of the specified type.\r\n     * @zh 根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。\r\n     * 如果对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。\r\n     * @param sign 对象类型标识字符。\r\n     * @param cls 用于创建该类型对象的类。\r\n     * @returns 此类型标识的一个对象。\r\n     */\r\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\r\n        let rst: any;\r\n        let pool = Pool.getPoolBySign(sign);\r\n        if (pool.length)\r\n            rst = pool.pop();\r\n        else\r\n            rst = new cls();\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Get an object instance of a certain type from the object pool using a creation function.\r\n     * If there is no object of this type in the pool, a new object will be created using the function and returned.\r\n     * @param sign The object type signature.\r\n     * @param createFun The function used to create the object of this type.\r\n     * @param caller The `this` context for the creation function.\r\n     * @returns An object of the specified type.\r\n     * @zh 根据传入的对象类型标识字符和创建函数，获取对象池中此类型标识的一个对象实例。\r\n     * 如果对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。\r\n     * @param sign 对象类型标识字符。\r\n     * @param createFun 用于创建该类型对象的方法。\r\n     * @param caller this对象。\r\n     * @returns 此类型标识的一个对象。\r\n     */\r\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Get an object from the object pool by the object type signature. If there is no object of this type in the pool, return null.\r\n     * @param sign The object type signature.\r\n     * @returns An object of the specified type or null if none is available.\r\n     * @zh 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null。\r\n     * @param sign 对象类型标识字符。\r\n     * @returns 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null。\r\n     */\r\n    static getItem(sign: string): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : null;\r\n        if (rst) {\r\n            rst[Pool.POOLSIGN] = false;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * @en The `Point` object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.\r\n * @zh `Point` 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\r\n */\r\nexport class Point {\r\n\r\n    /**\r\n     * @en Temporary public object for reuse.\r\n     * @zh 临时使用的公用对象。\r\n     */\r\n    static TEMP: Point = new Point();\r\n    /**\r\n     * @private\r\n     * @en Global empty point object (x=0, y=0), the content of this object is not allowed to be modified.\r\n     * @zh 全局空的point对象(x=0，y=0)，不允许修改此对象内容。\r\n     */\r\n    static EMPTY: Point = new Point();\r\n\r\n    /**\r\n     * @en The horizontal coordinate of this point.\r\n     * @zh 该点的水平坐标。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The vertical coordinate of this point.\r\n     * @zh 该点的垂直坐标。\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en Creates a new Point object based on the specified coordinates.\r\n     * @param x The horizontal coordinate. Default is 0.\r\n     * @param y The vertical coordinate. Default is 0.\r\n     * @zh 根据指定坐标，创建一个新的 Point 对象。\r\n     * @param x 水平坐标。默认值为0。\r\n     * @param y 垂直坐标。默认值为0。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * @en Create from object pool\r\n     * @returns A Point object from the pool\r\n     * @zh 从对象池创建\r\n     * @returns 从对象池中获取的Point对象\r\n     */\r\n    static create(): Point {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the members of Point to the specified values.\r\n     * @param x The horizontal coordinate.\r\n     * @param y The vertical coordinate.\r\n     * @returns The current Point object.\r\n     * @zh 将 Point 的成员设置为指定值。\r\n     * @param x 水平坐标。\r\n     * @param y 垂直坐标。\r\n     * @returns 当前 Point 对象。\r\n     */\r\n    setTo(x: number, y: number): Point {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Reset the point to (0, 0)\r\n     * @returns The current Point object.\r\n     * @zh 重置点为(0, 0)\r\n     * @returns 当前 Point 对象。\r\n     */\r\n    reset(): Point {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool for reuse\r\n     * @zh 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the distance between the current point and the target point (x, y).\r\n     * @param x The horizontal coordinate of the target point.\r\n     * @param y The vertical coordinate of the target point.\r\n     * @returns The distance between the current point and the target point.\r\n     * @zh 计算当前点和目标点(x，y)的距离。\r\n     * @param x 目标点的水平坐标。\r\n     * @param y 目标点的垂直坐标。\r\n     * @returns 返回当前点和目标点之间的距离。\r\n     */\r\n    distance(x: number, y: number): number {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n\r\n    /**\r\n     * @en Returns a string that contains the values of the x and y coordinates.\r\n     * @zh 返回包含 x 和 y 坐标的值的字符串。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the vector.\r\n     * @zh 标准化向量。\r\n     */\r\n    normalize(): void {\r\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id: number = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Copy coordinates from another point\r\n     * @param point The point to be copied from\r\n     * @returns The current Point object.\r\n     * @zh 复制另一个点的坐标\r\n     * @param point 需要被复制的点\r\n     * @returns 当前 Point 对象。\r\n     */\r\n    copy(point: Point): Point {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\n\r\n","import { Point } from \"../maths/Point\"\r\n\r\nexport interface ITouchInfo {\r\n    touchId: number;\r\n    readonly pos: Point;\r\n}\r\n/**\r\n * @en `Event` is a collection of event types. Generally, when an event occurs, the `Event` object is passed as a parameter to the event listener.\r\n * @zh `Event` 是事件类型的集合。一般当发生事件时,`Event` 对象将作为参数传递给事件侦听器。\r\n */\r\nexport class Event {\r\n\r\n    /** \r\n     * @en An empty Event object. Used for event dispatch transfer.\r\n     * @zh 一个空的 Event 对象。用于事件派发中转使用。\r\n     */\r\n    static readonly EMPTY: Readonly<Event> = new Event();\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mousedown` event object, triggered when pressed on a display object.\r\n     * @zh 定义 `mousedown` 事件对象的 `type` 属性值，用于在显示对象上按下后触发。\r\n     */\r\n    static MOUSE_DOWN = \"mousedown\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mouseup` event object, triggered when released on a display object.\r\n     * @zh 定义 `mouseup` 事件对象的 `type` 属性值，用于在显示对象抬起后触发。\r\n     */\r\n    static MOUSE_UP = \"mouseup\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `rightmousedown` event object.\r\n     * @zh 定义 `rightmousedown` 事件对象的 `type` 属性值。\r\n     */\r\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `rightmouseup` event object.\r\n     * @zh 定义 `rightmouseup` 事件对象的 `type` 属性值。\r\n     */\r\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `click` event object, triggered when a mouse click completes on a display object.\r\n     * @zh 定义 `click` 事件对象的 `type` 属性值，用于鼠标点击对象后触发。\r\n     */\r\n    static CLICK = \"click\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `rightclick` event object.\r\n     * @zh 定义 `rightclick` 事件对象的 `type` 属性值。\r\n     */\r\n    static RIGHT_CLICK = \"rightclick\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mousemove` event object, triggered when mouse moves over a display object.\r\n     * @zh 定义 `mousemove` 事件对象的 `type` 属性值，用于鼠标在对象身上进行移动后触发。\r\n     */\r\n    static MOUSE_MOVE = \"mousemove\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mouseover` event object.\r\n     * @zh 定义 `mouseover` 事件对象的 `type` 属性值。\r\n     */\r\n    static MOUSE_OVER = \"mouseover\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mouseout` event object.\r\n     * @zh 定义 `mouseout` 事件对象的 `type` 属性值。\r\n     */\r\n    static MOUSE_OUT = \"mouseout\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mousewheel` event object.\r\n     * @zh 定义 `mousewheel` 事件对象的 `type` 属性值。\r\n     */\r\n    static MOUSE_WHEEL = \"mousewheel\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mouseover` event object.\r\n     * @zh 定义 `mouseover` 事件对象的 `type` 属性值。\r\n     */\r\n    static ROLL_OVER = \"mouseover\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mouseout` event object, triggered when mouse leaves a display object.\r\n     * @zh 定义 `mouseout` 事件对象的 `type` 属性值，用于鼠标离开对象后触发。\r\n     */\r\n    static ROLL_OUT = \"mouseout\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `doubleclick` event object.\r\n     * @zh 定义 `doubleclick` 事件对象的 `type` 属性值。\r\n     */\r\n    static DOUBLE_CLICK = \"doubleclick\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mousedrag` event object.\r\n     * @zh 定义 `mousedrag` 事件对象的 `type` 属性值。\r\n     */\r\n    static MOUSE_DRAG = \"mousedrag\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `mousedragend` event object.\r\n     * @zh 定义 `mousedragend` 事件对象的 `type` 属性值。\r\n     */\r\n    static MOUSE_DRAG_END = \"mousedragend\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of a `dragstart` event object, triggered when drag start.\r\n     * @zh 定义 `dragstart` 事件对象的 `type` 属性值，用于开始拖动后触发。\r\n     */\r\n    static DRAG_START = \"dragstart\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `dragmove` event object, triggered when dragging.\r\n     * @zh 定义 `dragmove` 事件对象的 `type` 属性值，用于拖动中触发。\r\n     */\r\n    static DRAG_MOVE = \"dragmove\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `dragend` event object, triggered when drag end.\r\n     * @zh 定义 `dragend` 事件对象的 `type` 属性值，用于拖动结束后触发。\r\n     */\r\n    static DRAG_END = \"dragend\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of a `keydown` event object.\r\n     * @zh 定义 `keydown` 事件对象的 `type` 属性值。\r\n     */\r\n    static KEY_DOWN = \"keydown\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `keypress` event object.\r\n     * @zh 定义 `keypress` 事件对象的 `type` 属性值。\r\n     */\r\n    static KEY_PRESS = \"keypress\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `keyup` event object.\r\n     * @zh 定义 `keyup` 事件对象的 `type` 属性值。\r\n     */\r\n    static KEY_UP = \"keyup\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of a `change` event object.\r\n     * @zh 定义 `change` 事件对象的 `type` 属性值。\r\n     */\r\n    static CHANGE = \"change\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `changed` event object.\r\n     * @zh 定义 `changed` 事件对象的 `type` 属性值。\r\n     */\r\n    static CHANGED = \"changed\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `willResize` event object.\r\n     * @zh 定义 `willResize` 事件对象的 `type` 属性值。\r\n     */\r\n    static WILL_RESIZE = \"willResize\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `resize` event object.\r\n     * @zh 定义 `resize` 事件对象的 `type` 属性值。\r\n     */\r\n    static RESIZE = \"resize\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of an `added` event object.\r\n     * @zh 定义 `added` 事件对象的 `type` 属性值。\r\n     */\r\n    static ADDED = \"added\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `removed` event object.\r\n     * @zh 定义 `removed` 事件对象的 `type` 属性值。\r\n     */\r\n    static REMOVED = \"removed\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `display` event object.\r\n     * @zh 定义 `display` 事件对象的 `type` 属性值。\r\n     */\r\n    static DISPLAY = \"display\";\r\n    /**\r\n     * @en Defines the value of the `type` property of an `undisplay` event object.\r\n     * @zh 定义 `undisplay` 事件对象的 `type` 属性值。\r\n     */\r\n    static UNDISPLAY = \"undisplay\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of an `error` event object.\r\n     * @zh 定义 `error` 事件对象的 `type` 属性值。\r\n     */\r\n    static ERROR = \"error\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `complete` event object.\r\n     * @zh 定义 `complete` 事件对象的 `type` 属性值。\r\n     */\r\n    static COMPLETE = \"complete\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `loaded` event object.\r\n     * @zh 定义 `loaded` 事件对象的 `type` 属性值。\r\n     */\r\n    static LOADED = \"loaded\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `ready` event object.\r\n     * @zh 定义 `ready` 事件对象的 `type` 属性值。\r\n     */\r\n    static READY = \"ready\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `progress` event object.\r\n     * @zh 定义 `progress` 事件对象的 `type` 属性值。\r\n     */\r\n    static PROGRESS = \"progress\";\r\n    /**\r\n     * @en Defines the value of the `type` property of an `input` event object.\r\n     * @zh 定义 `input` 事件对象的 `type` 属性值。\r\n     */\r\n    static INPUT = \"input\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `render` event object.\r\n     * @zh 定义 `render` 事件对象的 `type` 属性值。\r\n     */\r\n    static RENDER = \"render\";\r\n    /**\r\n     * @en Defines the value of the `type` property of an `open` event object.\r\n     * @zh 定义 `open` 事件对象的 `type` 属性值。\r\n     */\r\n    static OPEN = \"open\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `message` event object.\r\n     * @zh 定义 `message` 事件对象的 `type` 属性值。\r\n     */\r\n    static MESSAGE = \"message\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `close` event object.\r\n     * @zh 定义 `close` 事件对象的 `type` 属性值。\r\n     */\r\n    static CLOSE = \"close\";\r\n\r\n    /**\r\n     * @en Defines the value of the `type` property of a `enterframe` event object.\r\n     * @zh 定义 `enterframe` 事件对象的 `type` 属性值。\r\n     */\r\n    static FRAME = \"enterframe\";\r\n    /**\r\n     * @en Defines the value of the `type` property of an `enter` event object.\r\n     * @zh 定义 `enter` 事件对象的 `type` 属性值。\r\n     */\r\n    static ENTER = \"enter\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `select` event object.\r\n     * @zh 定义 `select` 事件对象的 `type` 属性值。\r\n     */\r\n    static SELECT = \"select\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `blur` event object.\r\n     * @zh 定义 `blur` 事件对象的 `type` 属性值。\r\n     */\r\n    static BLUR = \"blur\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `focus` event object.\r\n     * @zh 定义 `focus` 事件对象的 `type` 属性值。\r\n     */\r\n    static FOCUS = \"focus\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `visibilitychange` event object.\r\n     * @zh 定义 `visibilitychange` 事件对象的 `type` 属性值。\r\n     */\r\n    static VISIBILITY_CHANGE = \"visibilitychange\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `focuschange` event object.\r\n     * @zh 定义 `focuschange` 事件对象的 `type` 属性值。\r\n     */\r\n    static FOCUS_CHANGE = \"focuschange\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `played` event object.\r\n     * @zh 定义 `played` 事件对象的 `type` 属性值。\r\n     */\r\n    static PLAYED = \"played\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `paused` event object.\r\n     * @zh 定义 `paused` 事件对象的 `type` 属性值。\r\n     */\r\n    static PAUSED = \"paused\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `stopped` event object.\r\n     * @zh 定义 `stopped` 事件对象的 `type` 属性值。\r\n     */\r\n    static STOPPED = \"stopped\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `start` event object.\r\n     * @zh 定义 `start` 事件对象的 `type` 属性值。\r\n     */\r\n    static START = \"start\";\r\n    /**\r\n     * @en Defines the value of the `type` property of an `end` event object.\r\n     * @zh 定义 `end` 事件对象的 `type` 属性值。\r\n     */\r\n    static END = \"end\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `link` event object.\r\n     * @zh 定义 `link` 事件对象的 `type` 属性值。\r\n     */\r\n    static LINK = \"link\";\r\n    /**\r\n     * @en Defines the value of the `type` property of a `label` event object.\r\n     * @zh 定义 `label` 事件对象的 `type` 属性值。\r\n     */\r\n    static LABEL = \"label\";\r\n    /**\r\n     * @en Triggered when the full screen state changes in the browser.\r\n     * @zh 浏览器全屏更改时触发\r\n     */\r\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\r\n    /**\r\n     * @en Triggered when the GPU device is lost.\r\n     * @zh 显卡设备丢失时触发\r\n     */\r\n    static DEVICE_LOST = \"devicelost\";\r\n    /**\r\n     * @en Triggered when the world matrix is updated.\r\n     * @zh 世界矩阵更新时触发。\r\n     */\r\n    static TRANSFORM_CHANGED = \"transformchanged\";\r\n    /**\r\n     * @en Triggered when a 3D layer changes.\r\n     * @zh 3D layer改变时触发。\r\n     */\r\n    static LAYERCHANGE = \"layerChange\";\r\n    /**\r\n    * @en Triggered when 3D Static changes.\r\n    * @zh 3D Static改变时触发。\r\n    */\r\n    static staticMask = \"staticMask\";\r\n\r\n    /**\r\n     * @en For 2D physics collision or 3D physics trigger start.\r\n     * @zh 2D物理碰撞或3D物理触发开始。\r\n     */\r\n    static TRIGGER_ENTER = \"triggerenter\";\r\n    /**\r\n     * @en For 2D physics collision or 3D physics trigger continues.\r\n     * @zh 2D物理碰撞或3D物理触发持续。\r\n     */\r\n    static TRIGGER_STAY = \"triggerstay\";\r\n    /**\r\n     * @en For 2D physics collision or 3D physics trigger end.\r\n     * @zh 2D物理碰撞或3D物理触发结束。\r\n     */\r\n    static TRIGGER_EXIT = \"triggerexit\";\r\n\r\n    /**\r\n     * @en 3DPhysical collision start.\r\n     * @zh 3D物理碰撞开始。\r\n     */\r\n    static COLLISION_ENTER = \"collisionenter\";\r\n    /**\r\n     * @en 3DPhysical collision continues.\r\n     * @zh 3D物理碰撞持续。\r\n     */\r\n    static COLLISION_STAY = \"collisionstay\";\r\n    /**\r\n     * @en 3DPhysical collision end.\r\n     * @zh 3D物理碰撞结束。\r\n     */\r\n    static COLLISION_EXIT = \"collisionexit\";\r\n    /**\r\n     * @en Joint destruction.\r\n     * @zh 关节破坏。\r\n     */\r\n    static JOINT_BREAK = \"jointbreak\";\r\n\r\n    /** @internal */\r\n    static _Add_Script = \"addscript\";\r\n    /**\r\n     * @en Checks whether the specified event type is a mouse event.\r\n     * @param type The type of the event.\r\n     * @returns True if the specified event type is a mouse event; otherwise, false.\r\n     * @zh 检测指定事件类型是否是鼠标事件。\r\n     * @param type 事件的类型。\r\n     * @returns 如果是鼠标事件，则值为 true;否则，值为 false。\r\n     */\r\n    static isMouseEvent(type: string): boolean {\r\n        return MOUSE_EVENTS.has(type);\r\n    }\r\n\r\n    /**\r\n     * @en The event type.\r\n     * @zh 事件类型。\r\n     */\r\n    type: string;\r\n    /**\r\n     * @en The triggering object of the event.\r\n     * @zh 事件目标触发对象。\r\n     */\r\n    target: any;\r\n    /**\r\n     * @en The current propagation object of the event.\r\n     * @zh 事件当前冒泡对象。\r\n     */\r\n    currentTarget: any;\r\n\r\n    /**\r\n     * @en Unique identifier assigned to the touch point (as an int).\r\n     * @zh 分配给触摸点的唯一标识号（作为 int）。\r\n     */\r\n    touchId: number = 0;\r\n    /**\r\n     * @en The clicked position.\r\n     * @zh 点击坐标。\r\n     */\r\n    readonly touchPos: Point;\r\n    /**\r\n     * @en Specifies whether this is a double-click.\r\n     * @zh 是否双击。\r\n     */\r\n    isDblClick: boolean;\r\n    /**\r\n     * @en The scroll wheel increments.\r\n     * @zh 滚轮滑动增量。\r\n     */\r\n    delta: number = 0;\r\n    /** \r\n     * @en The mouse button.\r\n     * - 0: Main button, usually the left button\r\n     * - 1: Auxiliary button, usually the middle button (wheel button)\r\n     * - 2: Secondary button, usually the right button\r\n     * - 3: Fourth button, typically the browser Back button\r\n     * - 4: Fifth button, typically the browser Forward button\r\n     * @zh 鼠标按键，\r\n     * - 0：主按键，通常指鼠标左键\r\n     * - 1：辅助按键，通常指鼠标滚轮中键\r\n     * - 2：次按键，通常指鼠标右键\r\n     * - 3：第四个按钮，通常指浏览器后退按钮\r\n     * - 4：第五个按钮，通常指浏览器的前进按钮\r\n     */\r\n    button: number = 0;\r\n\r\n    /**\r\n     * @en The original browser event.\r\n     * @zh 原生浏览器事件。\r\n     */\r\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\r\n\r\n    /** @internal */\r\n    _stopped: boolean;\r\n    /** @internal */\r\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\r\n\r\n    constructor() {\r\n        this.touchPos = new Point();\r\n    }\r\n\r\n    /**\r\n     * @en Sets the event data.\r\n     * @param type The type of the event.\r\n     * @param currentTarget The triggering object of the event.\r\n     * @param target The current propagation object of the event.\r\n     * @returns The current Event object.\r\n     * @zh 设置事件数据。\r\n     * @param type 事件类型。\r\n     * @param currentTarget 事件目标触发对象。\r\n     * @param target 事件当前冒泡对象。\r\n     * @returns 返回当前 Event 对象。\r\n     */\r\n    setTo(type: string, currentTarget: any, target: any): Event {\r\n        this.type = type;\r\n        this.currentTarget = currentTarget;\r\n        this.target = target;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Prevents processing of all event listeners on the current node in the event flow after the current one.\r\n     * This method does not affect any event listeners on the current node (currentTarget).\r\n     * @zh 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\r\n     */\r\n    stopPropagation(): void {\r\n        this._stopped = true;\r\n    }\r\n\r\n    /**\r\n     * @en The list of touch points.\r\n     * @zh 触摸点列表。\r\n     */\r\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the Alt key is active (true) or inactive (false).\r\n     * @zh 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get altKey(): boolean {\r\n        return this.nativeEvent?.altKey;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the Ctrl key is active (true) or inactive (false).\r\n     * @zh 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get ctrlKey(): boolean {\r\n        return this.nativeEvent?.ctrlKey;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the Shift key is active (true) or inactive (false).\r\n     * @zh 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get shiftKey(): boolean {\r\n        return this.nativeEvent?.shiftKey;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the Shift key is active (true) or inactive (false).\r\n     * @zh 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get metaKey(): boolean {\r\n        return this.nativeEvent?.metaKey;\r\n    }\r\n\r\n    /**\r\n     * @en The event name.\r\n     * @zh 事件名称。\r\n     */\r\n    get key(): string {\r\n        return (<KeyboardEvent>this.nativeEvent).key;\r\n    }\r\n\r\n    /**\r\n     * @en The event name index.\r\n     * @zh 事件名称索引。\r\n     */\r\n    get keyCode(): number {\r\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\r\n    }\r\n\r\n    /**\r\n     * @en Contains the character code value of the key pressed or released. The character code value is for English keyboard.\r\n     * @zh 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\r\n     */\r\n    get charCode(): string {\r\n        return (<KeyboardEvent>this.nativeEvent)?.code;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates the location of the key on the keyboard. This is useful for differentiating keys that appear more than once on the keyboard.\r\n     * For example, you can use this property to distinguish between the left and right Shift keys: the value of KeyLocation.LEFT for the left Shift key and the value of KeyLocation.RIGHT for the right Shift key. Another example is distinguishing between a key pressed on the standard keyboard (KeyLocation.STANDARD) and the same key pressed on the numeric keypad (KeyLocation.NUM_PAD).\r\n     * @zh 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。\r\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\r\n     */\r\n    get keyLocation(): number {\r\n        if (this.nativeEvent)\r\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**\r\n     * @en The X axis coordinate of the mouse on the Stage.\r\n     * @zh 鼠标在 Stage 上的 X 轴坐标。\r\n     */\r\n    get stageX(): number {\r\n        return this.touchPos.x;\r\n    }\r\n\r\n    /**\r\n     * @en The Y axis coordinate of the mouse on the Stage.\r\n     * @zh 鼠标在 Stage 上的 Y 轴坐标。\r\n     */\r\n    get stageY(): number {\r\n        return this.touchPos.y;\r\n    }\r\n}\r\n\r\nconst MOUSE_EVENTS = new Set<string>([\r\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\r\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\r\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL, Event.MOUSE_DRAG, Event.MOUSE_DRAG_END\r\n]);","export class LayaEnv {\r\n    static version: string = \"3.2.0\";\r\n    static isPlaying: boolean = true;\r\n    static isPreview: boolean = false;\r\n    static isConch: boolean = window ? ((<any>window).conch != null) : false;\r\n\r\n    /** @deprecated Uses Laya.addBeforeInitCallback */\r\n    static beforeInit: (stageConfig: IStageConfig) => void;\r\n    /** @deprecated Use Laya.addAfterInitCallback */\r\n    static afterInit: () => void;\r\n}\r\n\r\nexport interface IStageConfig {\r\n    designWidth?: number;\r\n    designHeight?: number;\r\n    scaleMode?: string;\r\n    screenMode?: string;\r\n    alignV?: string;\r\n    alignH?: string;\r\n    backgroundColor?: string;\r\n}","var _gid: number = 1;\r\nconst _pi: number = 180 / Math.PI;\r\nconst _pi2: number = Math.PI / 180;\r\n\r\n/**\r\n * @en Utils is a utility class.\r\n * @zh Utils 是工具类。\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * @en Converts an angle to radians.\r\n     * @param angle The angle value.\r\n     * @returns The radian value.\r\n     * @zh 将角度转换为弧度。\r\n     * @param\tangle 角度值。\r\n     * @return\t返回弧度值。\r\n     */\r\n    static toRadian(angle: number): number {\r\n        return angle * _pi2;\r\n    }\r\n\r\n    /**\r\n     * @en Converts radians to an angle.\r\n     * @param radian The radian value.\r\n     * @returns The angle value in degrees.\r\n     * @zh 将弧度转换为角度。\r\n     * @param\tradian 弧度值。\r\n     * @return\t返回角度值。\r\n     */\r\n    static toAngle(radian: number): number {\r\n        return radian * _pi;\r\n    }\r\n\r\n    /**\r\n     * @en Converts an unsigned integer color value to a string representation.\r\n     * @param color The color value.\r\n     * @returns A string representation of the color value.\r\n     * @zh 将 uint 类型的颜色值转换为字符串型颜色值。\r\n     * @param color 颜色值。\r\n     * @return 字符串型颜色值。\r\n     */\r\n    static toHexColor(color: number): string {\r\n        if (color < 0 || isNaN(color)) return null;\r\n        var str: string = color.toString(16);\r\n        while (str.length < 6) str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n\r\n    /**\r\n     * @en Converts a string color value to a number color.\r\n     * @param value The string color value.\r\n     * @returns The color value as a number.\r\n     * @zh 将字符串型颜色值转换为数字型颜色值。\r\n     * @param value 字符串颜色值\r\n     * @returns 作为数字的颜色值\r\n     */\r\n    static fromStringColor(value: string): number {\r\n        if (!value)\r\n            return 0;\r\n\r\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n            let p1 = value.indexOf(\"(\");\r\n            let p2 = value.indexOf(\")\");\r\n            if (p1 == -1 || p2 == -1)\r\n                return 0;\r\n\r\n            value = value.substring(p1 + 1, p2);\r\n            let arr: any[] = value.split(\",\");\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]);\r\n                if (isNaN(arr[i]))\r\n                    arr[i] = 0;\r\n            }\r\n            if (arr.length == 4)\r\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\r\n            else\r\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\r\n        } else {\r\n            value.charAt(0) === '#' && (value = value.substring(1));\r\n            let len = value.length;\r\n            if (len === 3 || len === 4) {\r\n                let temp: string = \"\";\r\n                for (let i = 0; i < len; i++) {\r\n                    temp += (value[i] + value[i]);\r\n                }\r\n                value = temp;\r\n            }\r\n            return parseInt(value, 16);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets a globally unique ID.\r\n     * @zh 获取一个全局唯一ID。\r\n     */\r\n    static getGID(): number {\r\n        return _gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Clears the source array and copies the values from the array parameter.\r\n     * @param source The array to be assigned values.\r\n     * @param array The new values to be copied into the source array.\r\n     * @returns The copied source array.\r\n     * @zh 清空 source 数组，并复制 array 数组的值。\r\n     * @param\tsource 需要赋值的数组。\r\n     * @param\tarray 新的数组值。\r\n     * @return \t复制后的数据 source 。\r\n     */\r\n    static copyArray(source: any[], array: any[]): any[] {\r\n        source || (source = []);\r\n        if (!array) return source;\r\n        source.length = array.length;\r\n        var len: number = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Batch translates point coordinates by the specified offsets.\r\n     * @param points The list of point coordinates.\r\n     * @param x The offset to translate along the x-axis.\r\n     * @param y The offset to translate along the y-axis.\r\n     * @zh 批量移动点坐标，按照指定的偏移量。\r\n     * @param points 坐标列表。\r\n     * @param x x轴偏移量。\r\n     * @param y y轴偏移量。\r\n     */\r\n    static transPointList(points: any[], x: number, y: number): void {\r\n        var i: number, len: number = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Parses a string and returns an integer. Unlike the native JavaScript parseInt, if the string is empty or not a number, this method returns 0 instead of NaN.\r\n     * @param str The string to be parsed.\r\n     * @param radix The radix for parsing the number (between 2 and 36). Defaults to 0, which means decimal. The other values range from 2 to 36. If it starts with \"0xX\" or \"0X\", it will be based on 16. If the parameter is not within the above range, this method returns 0.\r\n     * @returns The parsed number.\r\n     * @zh 解析字符串并返回一个整数。与 JavaScript 原生的 parseInt 不同，如果字符串为空或非数字，这里返回 0 而不是 NaN。\r\n     * @param\tstr\t\t要被解析的字符串。\r\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\r\n     * @return\t返回解析后的数字。\r\n     */\r\n    static parseInt(str: string, radix: number = 0): number {\r\n        var result: any = parseInt(str, radix);\r\n        if (isNaN(result)) return 0;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the base name of the file from the specified path, including the extension.\r\n     * @zh 从指定路径中获取文件名（包含扩展名）。\r\n     */\r\n    static getBaseName(path: string): string {\r\n        let i = path.lastIndexOf(\"/\");\r\n        if (i != -1)\r\n            path = path.substring(i + 1);\r\n        i = path.indexOf(\"?\");\r\n        if (i != -1)\r\n            path = path.substring(0, i);\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the file extension from the specified path and converts it to lowercase. For example, \"1. abc\" will return abc.\r\n     * @zh 从指定路径获取文件扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\r\n     */\r\n    static getFileExtension(path: string): string {\r\n        let i = path.lastIndexOf(\".\");\r\n\r\n        if (i != -1) {\r\n            let ext = path.substring(i + 1).toLowerCase();\r\n            let j = ext.indexOf(\"?\");\r\n            if (j != -1)\r\n                ext = ext.substring(0, j);\r\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\r\n                let k = path.lastIndexOf(\".\", i - 1);\r\n                if (k != -1) {\r\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\r\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\r\n                        return ext2;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    /**\r\n     * @en Changes the file extension of the specified path.\r\n     * @param path The file path.\r\n     * @param newExt The new file extension.\r\n     * @param excludeDot Whether to exclude the dot prefix in the new extension. Default is false.\r\n     * @returns The path with the new file extension.\r\n     * @zh 更改指定路径的文件扩展名。\r\n     * @param path 文件路径。\r\n     * @param newExt 新的文件扩展名。\r\n     * @param excludeDot 是否在新扩展中排除点前缀。默认值为false。\r\n     * @returns 具有新文件扩展名的路径。\r\n     */\r\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\r\n        if (!path)\r\n            return path;\r\n        let i = path.lastIndexOf(\".\");\r\n        if (newExt.length > 0 && !excludeDot)\r\n            newExt = \".\" + newExt;\r\n        if (i != -1) {\r\n            let j = path.indexOf(\"?\", i);\r\n            if (j != -1)\r\n                return path.substring(0, i) + newExt + path.substring(j);\r\n            else\r\n                return path.substring(0, i) + newExt;\r\n        }\r\n        else\r\n            return path + newExt;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param str 判断一个字符串是否UUID格式\r\n     * @returns \r\n     */\r\n    static isUUID(str: string): boolean {\r\n        //uuid xxxxxxxx-xxxx-...\r\n        return str && str.length >= 36 && str.charCodeAt(8) === 45 && str.charCodeAt(13) === 45\r\n    }\r\n}\r\n\r\n","import { Utils } from \"../utils/Utils\";\r\n/**\r\n * @en This class is used to describe resources.\r\n * @zh 此类用来描述资源\r\n */\r\nexport class AssetDb {\r\n    /**\r\n     * @en Default resource instance.\r\n     * @zh 默认资源实例。\r\n     */\r\n    static inst: AssetDb = new AssetDb();\r\n\r\n    /**\r\n     * @en UUID data.\r\n     * @zh UUID 数据。\r\n     */\r\n    uuidMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * @en Shader name data.\r\n     * @zh 着色器名称数据。\r\n     */\r\n    shaderNameMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * @en Metadata for resources.\r\n     * @zh 资源的元数据。\r\n     */\r\n    metaMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * @en Gets the URL from the UUID.\r\n     * @param uuid The UUID.\r\n     * @returns The URL corresponding to the UUID.\r\n     * @zh 根据 UUID 获取 URL。\r\n     * @param uuid UUID\r\n     * @returns UUID 对应的 URL\r\n     */\r\n    UUID_to_URL(uuid: string): string {\r\n        return this.uuidMap[uuid];\r\n    }\r\n\r\n    /**\r\n     * @en Asynchronously gets the URL from the UUID.\r\n     * @param uuid The UUID.\r\n     * @returns A promise.\r\n     * @zh 异步根据 uuid 获取 URL。\r\n     * @param uuid UUID\r\n     * @returns 一个promise。\r\n     */\r\n    UUID_to_URL_async(uuid: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * @en Asynchronously gets the UUID from the URL.\r\n     * @param url The URL.\r\n     * @returns A promise.\r\n     * @zh 异步根据 URL 获取 UUID。\r\n     * @param url URL\r\n     * @returns 一个 promise。\r\n     */\r\n    URL_to_UUID_async(url: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * @en Resolves the real URL from a given URL.\r\n     * @param url The original URL.\r\n     * @param onResolve Optional callback when the URL is resolved.\r\n     * @returns A promise that resolves to the real URL.\r\n     * @zh 根据给定的 URL 解析真实的 URL。\r\n     * @param url 原始 URL。\r\n     * @param onResolve 可选的回调函数，当 URL 被解析时调用。\r\n     * @returns 一个promise，解析为真实的 URL。\r\n     */\r\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\r\n                if (onResolve)\r\n                    onResolve(url);\r\n                return url;\r\n            });\r\n        }\r\n        else {\r\n            if (onResolve)\r\n                onResolve(url);\r\n            return Promise.resolve(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Finds the URL for a shader name.\r\n     * @param shaderName The shader name.\r\n     * @returns The URL corresponding to the shader name.\r\n     * @zh 根据着色器名称查找 URL。\r\n     * @param shaderName 着色器名称。\r\n     * @returns 着色器名称对应的 URL。\r\n     */\r\n    shaderName_to_URL(shaderName: string): string {\r\n        return this.shaderNameMap[shaderName];\r\n    }\r\n\r\n    /**\r\n     * @en Asynchronously finds the URL for a shader name.\r\n     * @param shaderName The shader name.\r\n     * @returns A promise.\r\n     * @zh 异步根据着色器名称查找 URL。\r\n     * @param shaderName 着色器名称。\r\n     * @returns 一个 promise。\r\n     */\r\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the metadata for a resource.\r\n     * @param url The resource URL.\r\n     * @param uuid The resource UUID.\r\n     * @returns A promise.\r\n     * @zh 获取资源的元数据。\r\n     * @param url 资源的 URL。\r\n     * @param uuid 资源的 UUID。\r\n     * @returns 一个 promise。\r\n     */\r\n    getMeta(url: string, uuid: string): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the URL for a sub-asset.\r\n     * @param url The base resource URL.\r\n     * @param uuid The UUID of the base resource.\r\n     * @param subAssetName The name of the sub-asset.\r\n     * @param subAssetExt The file extension of the sub-asset.\r\n     * @returns The URL for the sub-asset.\r\n     * @zh 获取子资源的 URL。\r\n     * @param url 基础资源的 URL。\r\n     * @param uuid 基础资源的 UUID。\r\n     * @param subAssetName 子资源的名称。\r\n     * @param subAssetExt 子资源的文件扩展名。\r\n     * @returns 子资源的 URL。\r\n     */\r\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\r\n        if (subAssetName)\r\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\r\n        else\r\n            return url;\r\n    }\r\n}","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\r\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\r\n * <p>通过basePath属性可以设置网络基础路径</p>\r\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\r\n */\r\nexport class URL {\r\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\r\n    static version: Record<string, string> = {};\r\n\r\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\r\n    static basePath: string;\r\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\r\n    static basePaths: Record<string, string> = {};\r\n\r\n    /**@private */\r\n    private _url: string;\r\n    /**@private */\r\n    private _path: string;\r\n\r\n    private static overrideFileExts: Record<string, string> = {};\r\n    private static hasExtOverrides: boolean = false;\r\n    private static usingSafeFileExts: boolean = false;\r\n\r\n    private static readonly safeFileExtConversionMap: Record<string, string> = {\r\n        \"rendertexture\": \"rt.json\",\r\n        \"videotexture\": \"rt.json\",\r\n        \"controller\": \"controller.json\",\r\n        \"mc\": \"mc.bin\",\r\n        \"mcc\": \"mcc.json\",\r\n        \"shader\": \"shader.json\",\r\n        \"fui\": \"fui.json\",\r\n        \"glsl\": \"glsl.txt\",\r\n        \"skel\": \"skel.bin\",\r\n        \"lavm\": \"lavm.json\",\r\n    };\r\n\r\n    static __init__() {\r\n        //xiaomi 没有location\r\n        //Vivo location.protocol是\"\"\r\n        //微信真机 location.protocol是undefined\r\n        if (URL.basePath == null)\r\n            URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\r\n    }\r\n\r\n    static initMiniGameExtensionOverrides() {\r\n        if (LayaEnv.isPreview)\r\n            return;\r\n\r\n        Object.assign(this.overrideFileExts, this.safeFileExtConversionMap);\r\n        this.hasExtOverrides = true;\r\n        this.usingSafeFileExts = true;\r\n    }\r\n\r\n    /**创建一个新的 <code>URL</code> 实例。*/\r\n    constructor(url: string) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n\r\n    /**格式化后的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**地址的文件夹路径（不包括文件名）。*/\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\r\n    static customFormat: Function = function (url: string): string {\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 指以'~/'开头的的url路径的映射。\r\n     * 不推荐使用，应该使用basePaths。\r\n    */\r\n    static get rootPath() {\r\n        return URL.basePaths[\"~/\"];\r\n    }\r\n\r\n    static set rootPath(value: string) {\r\n        URL.basePaths[\"~/\"] = value;\r\n    }\r\n\r\n    /**\r\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\r\n     * @param url 地址。\r\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static formatURL(url: string, base?: string): string {\r\n        if (!url)\r\n            return base || URL.basePath || \"\";\r\n\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\r\n            if (!url2)\r\n                return url;\r\n\r\n            url = url2;\r\n        }\r\n\r\n        if (url.indexOf(\":\") == -1 && url.charCodeAt(0) !== 47) { //已经format过\r\n            //自定义路径格式化\r\n            if (URL.customFormat != null)\r\n                url = URL.customFormat(url);\r\n\r\n            let ver = URL.version[url];\r\n            if (ver != null) {\r\n                let i = url.lastIndexOf(\".\");\r\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\r\n            }\r\n\r\n            if (base == null) {\r\n                base = URL.basePath;\r\n                for (let k in URL.basePaths) {\r\n                    if (url.startsWith(k)) {\r\n                        if (k.charCodeAt(0) === 126)\r\n                            url = url.substring(k.length);\r\n                        base = URL.basePaths[k];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            url = URL.join(base, url);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 处理扩展名的自动转换\r\n     * @param url 地址。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static postFormatURL(url: string): string {\r\n        if (URL.hasExtOverrides) {\r\n            let extold = Utils.getFileExtension(url);\r\n            let ext = URL.overrideFileExts[extold];\r\n            if (ext != null)\r\n                url = Utils.replaceFileExtension(url, ext);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 格式化相对路径。主要是处理.和..这些情况。\r\n     */\r\n    static normalize(url: string): string {\r\n        if (url.indexOf(\"./\") == -1)\r\n            return url;\r\n\r\n        let parts = url.split(\"/\");\r\n        let len = parts.length;\r\n        let i = 0;\r\n        while (i < len) {\r\n            if (parts[i] == \".\") {\r\n                parts.splice(i, 1);\r\n                len--;\r\n                continue;\r\n            }\r\n            else if (parts[i] == '..') {\r\n                let index: number = i - 1;\r\n                if (index >= 0 && parts[index] !== '..') {\r\n                    parts.splice(index, 2);\r\n                    len -= 2;\r\n                    i--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n        parts.length = len;\r\n        return parts.join('/');\r\n    }\r\n\r\n    static getResURLByUUID(url: string): string {\r\n        if (Utils.isUUID(url))\r\n            return \"res://\" + url;\r\n        else\r\n            return url;\r\n    }\r\n\r\n    /**\r\n    * 组合相对路径并格式化\r\n    * @param base\r\n    * @param path\r\n    */\r\n    static join(base: string, path: string): string {\r\n        if (!path) return \"\";\r\n\r\n        //如果是全路径，直接返回，提高性能\r\n        if (path.indexOf(\":\") > 0)\r\n            return path;\r\n\r\n        if (base) {\r\n            let char1 = path.charCodeAt(0);\r\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\r\n                if (base.charCodeAt(base.length - 1) !== 47)\r\n                    path = base + \"/\" + path;\r\n                else\r\n                    path = base + path;\r\n            }\r\n        }\r\n\r\n        return URL.normalize(path);\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\r\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\r\n     * @param url url地址。\r\n     * @return 返回文件夹路径。\r\n     */\r\n    static getPath(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件名。\r\n     * @param url 地址。\r\n     * @return 返回文件名。\r\n     */\r\n    static getFileName(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(ofs + 1) : url;\r\n    }\r\n\r\n    /**\r\n     * 获取URL版本字符。\r\n     * @param url\r\n     * @return\r\n     */\r\n    static getURLVerion(url: string): string {\r\n        var index: number = url.indexOf(\"?\");\r\n        return index >= 0 ? url.substring(index) : null;\r\n    }\r\n\r\n    /**\r\n     * 下载时，转换URL的扩展名。\r\n     * @param originalExts 原始扩展名。例如[\"scene\"]。\r\n     * @param targetExt 要转换为的扩展名。例如\"json\"。\r\n     */\r\n    static overrideExtension(originalExts: Array<string>, targetExt: string, miniGameOnly?: boolean) {\r\n        if (miniGameOnly) {\r\n            if (!URL.usingSafeFileExts) {\r\n                for (let ext of originalExts)\r\n                    URL.safeFileExtConversionMap[ext] = targetExt;\r\n                return;\r\n            }\r\n        }\r\n\r\n        for (let ext of originalExts)\r\n            URL.overrideFileExts[ext] = targetExt;\r\n        URL.hasExtOverrides = true;\r\n    }\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { Point } from \"./Point\";\r\n\r\n/**\r\n * @en The `Rectangle` object is an area defined by its position, as indicated by its top-left corner point (x, y), and by its width and height.\r\n * The x, y, width, and height properties of the Rectangle class are independent of each other; changing the value of one property has no effect on the others.\r\n * @zh `Rectangle` 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。\r\n * Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。\r\n */\r\nexport class Rectangle implements IClone {\r\n\r\n    /**\r\n     * @private\r\n     * @en Global empty rectangle area with x=0, y=0, width=0, height=0. The content of this object is not allowed to be modified.\r\n     * @zh 全局空的矩形区域，x=0, y=0, width=0, height=0。不允许修改此对象内容。\r\n     */\r\n    static EMPTY: Rectangle = new Rectangle();\r\n    /**\r\n     * @en Global temporary rectangle area. This object is used for global reuse to reduce object creation.\r\n     * @zh 全局临时的矩形区域，此对象用于全局复用，以减少对象创建。\r\n     */\r\n    static TEMP: Rectangle = new Rectangle();\r\n\r\n    /** @private */\r\n    private static _temB: number[] = [];\r\n    /** @private */\r\n    private static _temA: number[] = [];\r\n\r\n    /**\r\n     * @en The x coordinate of the top-left corner of the rectangle.\r\n     * @zh 矩形左上角的 X 轴坐标。\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * @en The y coordinate of the top-left corner of the rectangle.\r\n     * @zh 矩形左上角的 Y 轴坐标。\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en The width of the rectangle.\r\n     * @zh 矩形的宽度。\r\n     */\r\n    width: number;\r\n\r\n    /**\r\n     * @en The height of the rectangle.\r\n     * @zh 矩形的高度。\r\n     */\r\n    height: number;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @param x The x coordinate of the top-left corner of the rectangle.\r\n     * @param y The y coordinate of the top-left corner of the rectangle.\r\n     * @param width The width of the rectangle.\r\n     * @param height The height of the rectangle.\r\n     * @zh 构造方法\r\n     * @param\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth 矩形的宽度。\r\n     * @param\theight 矩形的高度。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The x-coordinate of the right side of this rectangle. It is equal to the sum of the x and width properties.\r\n     * @zh 此矩形右侧的 X 轴坐标。等于 x 和 width 属性的和。\r\n     */\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /**\r\n     * @en The y-coordinate of the bottom side of this rectangle. It is equal to the sum of the y and height properties.\r\n     * @zh 此矩形底端的 Y 轴坐标。等于 y 和 height 属性的和。\r\n     */\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the properties of the Rectangle to the specified values.\r\n     * @param x The x-coordinate of the top-left corner of the rectangle.\r\n     * @param y The y-coordinate of the top-left corner of the rectangle.\r\n     * @param width The width of the rectangle.\r\n     * @param height The height of the rectangle.\r\n     * @return The rectangle object itself after the property values have been modified.\r\n     * @zh 将 Rectangle 的属性设置为指定值。\r\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth\t矩形的宽度。\r\n     * @param\theight\t矩形的高。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the rectangle to default values (x=0, y=0, width=0, height=0).\r\n     * @zh 重置矩形为默认值（x=0, y=0, width=0, height=0）。\r\n     */\r\n    reset(): Rectangle {\r\n        this.x = this.y = this.width = this.height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Recycles the rectangle object.\r\n     * @zh 回收矩形对象。\r\n     */\r\n    recover(): void {\r\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\r\n            //console.log(\"recover Temp or Empty:\", this);\r\n            return;\r\n        }\r\n        Pool.recover(\"Rectangle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * @en Creates a new Rectangle object from the object pool.\r\n     * @zh 从对象池中创建一个新的 Rectangle 对象。\r\n     */\r\n    static create(): Rectangle {\r\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\r\n    }\r\n\r\n    /**\r\n     * @en Copies the property values from the source Rectangle object to this rectangle object.\r\n     * @param sourceRect The source Rectangle object.\r\n     * @returns The rectangle object itself after the property values have been modified.\r\n     * @zh 复制源 Rectangle 对象的属性值到此矩形对象中。\r\n     * @param sourceRect 源 Rectangle 对象。\r\n     * @return 返回属性值修改后的矩形对象本身。\r\n     */\r\n    copyFrom(source: Rectangle): Rectangle {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.width = source.width;\r\n        this.height = source.height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether the specified point is contained within the rectangular region defined by this Rectangle object.\r\n     * @param x The x-coordinate of the point (horizontal position).\r\n     * @param y The y-coordinate of the point (vertical position).\r\n     * @return True if the Rectangle object contains the specified point; false otherwise.\r\n     * @zh 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\r\n     * @param x\t点的 X 轴坐标值（水平位置）。\r\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return false;\r\n\r\n        if (x >= this.x && x < this.right) {\r\n            if (y >= this.y && y < this.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether the object specified in the rect parameter intersects with this Rectangle object. This method checks the x, y, width, and height properties of the specified Rectangle object to see if it intersects with this Rectangle object.\r\n     * @param rect The Rectangle object to compare.\r\n     * @returns True if the specified rectangle intersects with this one, false otherwise.\r\n     * @zh 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\r\n     * @param\trect Rectangle 对象。\r\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\r\n     */\r\n    intersects(rect: Rectangle): boolean {\r\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\r\n    }\r\n\r\n    /**\r\n     * @en If the Rectangle object specified in the rect parameter intersects with this Rectangle object, returns the area of intersection as a Rectangle object. If the rectangles do not intersect, this method returns null.\r\n     * @param rect The rectangle to compare against.\r\n     * @param out (Optional) The rectangle object for storing the output. If null, a new one will be created. Recommendation: Reuse objects as much as possible to reduce object creation overhead.\r\n     * @returns The intersection area as a Rectangle object, or null if there's no intersection.\r\n     * @zh 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\r\n     * @param rect\t待比较的矩形区域。\r\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\r\n     * @return\t返回相交的矩形区域对象。\r\n     */\r\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\r\n        if (!this.intersects(rect)) return null;\r\n        out || (out = new Rectangle());\r\n        out.x = Math.max(this.x, rect.x);\r\n        out.y = Math.max(this.y, rect.y);\r\n        out.width = Math.min(this.right, rect.right) - out.x;\r\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds two rectangles together to create a new Rectangle object, by filling in the horizontal and vertical space between the two rectangles.\r\n     * Note: The union() method ignores rectangles with a height or width of 0, such as: var rect2:Rectangle = new Rectangle(300,300,50,0);\r\n     * @param source The Rectangle object to add to this Rectangle object.\r\n     * @param out The Rectangle object to store the output. If null, a new one will be created. Recommendation: Reuse objects as much as possible to reduce object creation overhead. The Rectangle.TEMP object can be used for object reuse.\r\n     * @returns A new Rectangle object that is the union of the two rectangles.\r\n     * @zh 矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。\r\n     * 注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);\r\n     * @param\tsource 要添加到此 Rectangle 对象的 Rectangle 对象。\r\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\r\n     */\r\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.clone(out);\r\n        if (source.width <= 0 || source.height <= 0) return out;\r\n        out.addPoint(source.x, source.y);\r\n        out.addPoint(source.right, source.bottom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a string representation of this Rectangle object, with the x, y, width, and height values joined by commas.\r\n     * @zh 返回当前 Rectangle 对象的字符串表示，其中水平位置 x、垂直位置 y、宽度 width 和高度 height 以逗号连接。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the properties of the input Rectangle object are equal to the properties of the current Rectangle object (x, y, width, height).\r\n     * @param rect The Rectangle object to compare.\r\n     * @returns True if all properties are equal, false otherwise.\r\n     * @zh 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\r\n     * @param\trect\t待比较的 Rectangle 对象。\r\n     * @return\t如果判断的属性都相等，则返回 true 值，否则返回 false。\r\n     */\r\n    equals(rect: Rectangle): boolean {\r\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a point to the current rectangle object, expanding it to the smallest rectangle that contains both the current rectangle and the given point.\r\n     * This method modifies the current object.\r\n     * @param x The x-coordinate of the point.\r\n     * @param y The y-coordinate of the point.\r\n     * @return This Rectangle object.\r\n     * @zh 为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。\r\n     * 此方法会修改本对象。\r\n     * @param x\t点的 X 坐标。\r\n     * @param y\t点的 Y 坐标。\r\n     * @return 返回此 Rectangle 对象。\r\n     */\r\n    addPoint(x: number, y: number): Rectangle {\r\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\r\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\r\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\r\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Returns vertex data representing the current rectangle.\r\n     * @return Vertex data.\r\n     * @zh 返回代表当前矩形的顶点数据。\r\n     * @return 顶点数据。\r\n     */\r\n    _getBoundPoints() {\r\n        var rst = Rectangle._temB;\r\n        rst.length = 0;\r\n        if (this.width == 0 || this.height == 0) return rst;\r\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Returns vertex data of a rectangle.\r\n     * @zh 返回矩形的顶点数据。\r\n     */\r\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\r\n        var rst: any[] = Rectangle._temA;\r\n        rst.length = 0;\r\n        if (width == 0 || height == 0) return rst;\r\n        if (sp) {\r\n            x *= sp.width;\r\n            y *= sp.height;\r\n            width *= sp.width;\r\n            height *= sp.height;\r\n        }\r\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Returns the smallest rectangle that contains all the points.\r\n     * @param pointList List of points.\r\n     * @param rst Optional Rectangle object to store the result.\r\n     * @returns The smallest rectangle that contains all the points.\r\n     * @zh 返回包含所有点的最小矩形。\r\n     * @param pointList 点列表。\r\n     * @param rst （可选）用于存储结果的矩形对象。\r\n     * @return 包含所有点的最小矩形矩形对象。\r\n     */\r\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\r\n\r\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        rst = rst ? rst : Rectangle.create();\r\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\r\n        minX = minY = 99999;\r\n        maxX = maxY = -minX;\r\n        for (i = 0; i < len; i += 2) {\r\n            tPoint.x = pointList[i];\r\n            tPoint.y = pointList[i + 1];\r\n            minX = minX < tPoint.x ? minX : tPoint.x;\r\n            minY = minY < tPoint.y ? minY : tPoint.y;\r\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\r\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\r\n        }\r\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether this Rectangle object is empty.\r\n     * @returns True if the width or height of the Rectangle object is less than or equal to 0, false otherwise.\r\n     * @zh 确定此 Rectangle 对象是否为空。\r\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\r\n     */\r\n    isEmpty(): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a new Rectangle object with the same values for the x, y, width, and height properties as the original Rectangle object.\r\n     * @param out (Optional) The rectangle object used to store the result. If null, a new one is created. Recommendation: Reuse objects as much as possible to reduce object creation overhead. The Rectangle.TEMP object can be used for object reuse.\r\n     * @returns A Rectangle object with the same values for x, y, width, and height properties as the current Rectangle object.\r\n     * @zh 返回一个新的 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     * @param out （可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return 一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     */\r\n    clone(out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.cloneTo(out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Copies the properties of this Rectangle to the destination object.\r\n     * @param destObject The destination object to copy to.\r\n     * @zh 将此 Rectangle 的属性复制到目标对象。\r\n     * @param destObject 目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        let out: Rectangle = destObject;\r\n        out.x = this.x;\r\n        out.y = this.y;\r\n        out.width = this.width;\r\n        out.height = this.height;\r\n    }\r\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \r\n/**\r\n * @en Delegate class for managing and invoking callbacks\r\n * This class provides functionality to add, remove, and invoke callback functions.\r\n * It supports one-time callbacks and can manage callbacks with different targets and arguments.\r\n * @zh Delegate类，用于管理和调用回调函数\r\n * 这个类提供了添加、移除和调用回调函数的功能。\r\n * 它支持一次性回调，并且可以管理具有不同目标对象和参数的回调函数。\r\n */\r\nexport class Delegate {\r\n    private _flag: number;\r\n    private _items: Array<any>;\r\n\r\n    public constructor() {\r\n        this._flag = 0;\r\n        this._items = [];\r\n    }\r\n\r\n    /**\r\n     * @en Add a callback function\r\n     * @param callback The callback function\r\n     * @param target The target object of the callback\r\n     * @param args Arguments for the callback\r\n     * @zh 添加回调函数\r\n     * @param callback 回调函数\r\n     * @param target 回调函数的目标对象\r\n     * @param args 回调函数的参数\r\n     */\r\n    public add(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 1;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 1);\r\n    }\r\n\r\n    /**\r\n     * @en Add a callback function that will only be executed once\r\n     * @param callback The callback function\r\n     * @param target The target object of the callback\r\n     * @param args Arguments for the callback\r\n     * @zh 添加只执行一次的回调函数\r\n     * @param callback 回调函数\r\n     * @param target 回调函数的目标对象\r\n     * @param args 回调函数的参数\r\n     */\r\n    public once(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 2;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 2);\r\n    }\r\n\r\n    /**\r\n     * @en Remove a callback function\r\n     * @param callback The callback function to remove\r\n     * @param target The target object of the callback\r\n     * @zh 移除回调函数\r\n     * @param callback 要移除的回调函数\r\n     * @param target 回调函数的目标对象\r\n     */\r\n    public remove(callback: Function, target?: any): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            if (this._flag != 0) {\r\n                arr[index + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n            else\r\n                arr.splice(index, ITEM_LAYOUT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clear all callback functions\r\n     * @zh 清除所有回调函数\r\n     */\r\n    public clear(): void {\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            arr.length = 0;\r\n        }\r\n    }\r\n\r\n   /**\r\n     * @en Clear all callback functions for a specific target\r\n     * @param target The target object\r\n     * @zh 清除指定目标对象的所有回调函数\r\n     * @param target 目标对象\r\n     */\r\n    public clearForTarget(target: any): void {\r\n        if (!target)\r\n            return;\r\n\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            let i: number = arr.length - ITEM_LAYOUT;\r\n            while (i >= 0) {\r\n                if (arr[i + 1] == target)\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                i -= ITEM_LAYOUT;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the number of callback functions\r\n     * @zh 获取回调函数的数量\r\n     */\r\n    public get count(): number {\r\n        return this._items.length / ITEM_LAYOUT;\r\n    }\r\n\r\n    /**\r\n     * @en Invoke all callback functions\r\n     * @param args Arguments for the invocation\r\n     * @zh 调用所有回调函数\r\n     * @param args 调用参数\r\n     */\r\n    public invoke(...args: any[]): void {\r\n        if (this._flag != 0)\r\n            return;\r\n\r\n        this._flag = 1;\r\n        let arr = this._items;\r\n        let cnt = arr.length;\r\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\r\n            if (0 == arr[i + 3]) continue;\r\n            let fixedArgs = arr[i + 2];\r\n            try {\r\n                if (fixedArgs != null)\r\n                    arr[i].call(arr[i + 1], ...fixedArgs, ...args);\r\n                else\r\n                    arr[i].call(arr[i + 1], ...args);\r\n            }\r\n            catch (err: any) {\r\n                console.error(err);\r\n            }\r\n            if (arr[i + 3] == 2) {\r\n                arr[i + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n        }\r\n\r\n        if (this._flag == 2) {\r\n            let cnt = arr.length;\r\n            let i = 0;\r\n            while (i < cnt) {\r\n                if (arr[i + 3] == 0) {\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                    cnt -= ITEM_LAYOUT;\r\n                    continue;\r\n                }\r\n                else\r\n                    i += ITEM_LAYOUT;\r\n            }\r\n        }\r\n        this._flag = 0;\r\n    }\r\n}","import { Delegate } from \"../utils/Delegate\";\r\nimport { Event } from \"./Event\";\r\n\r\nconst eventPool: Array<Event> = [];\r\n\r\n/**\r\n * @en The `EventDispatcher` class is the base class for all classes that dispatch events.\r\n * @zh `EventDispatcher` 类是可调度事件的所有类的基类。\r\n */\r\nexport class EventDispatcher {\r\n    /**@private */\r\n    private _events: Record<string, Delegate>;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Start listening to a specific event type.\r\n     * This method is called when a new event listener is added.\r\n     * @param type The event type to listen to.\r\n     * @zh 开始监听特定事件类型。\r\n     * 添加新的事件侦听器时调用此方法。\r\n     * @param type 要监听的事件类型。\r\n     */\r\n    protected onStartListeningToType(type: string) {\r\n    }\r\n\r\n    /**\r\n     * @en Check if the EventDispatcher object has any listeners registered for a specific type of event.\r\n     * @param type The type of event.\r\n     * @returns True if a listener of the specified type is registered, false otherwise.\r\n     * @zh 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\r\n     * @param type 事件的类型。\r\n     * @returns 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\r\n     */\r\n    hasListener(type: string): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        return !!listeners && listeners.count > 0;\r\n    }\r\n\r\n    /**\r\n     * @en Dispatch an event.\r\n     * @param type The type of event.\r\n     * @param data (Optional) Data to pass to the callback. If multiple parameters p1, p2, p3, ... need to be passed, use an array structure such as [p1, p2, p3, ...]. If a single parameter p needs to be passed and p is an array, use a structure such as [p]. For other single parameters p, you can directly pass parameter p.\r\n     * @returns True if there are listeners for this event type, false otherwise.\r\n     * @zh 派发事件。\r\n     * @param type 事件类型。\r\n     * @param data （可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @returns 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    event(type: string, data?: any): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        if (!listeners) return false;\r\n        let ret = listeners.count > 0;\r\n\r\n        if (Array.isArray(data))\r\n            listeners.invoke(...data);\r\n        else if (data !== undefined)\r\n            listeners.invoke(data);\r\n        else if (data === Event.EMPTY) {\r\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\r\n            listeners.invoke(ev.setTo(type, this, this));\r\n            ev.target = ev.currentTarget = null;\r\n            eventPool.push(ev);\r\n        }\r\n        else\r\n            listeners.invoke();\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en Register an event listener object with the EventDispatcher object so that the listener receives event notifications.\r\n     * @param type The type of event.\r\n     * @param caller The execution scope of the event listener function.\r\n     * @param listener The listener function.\r\n     * @param args (Optional) The callback parameters of the event listener function.\r\n     * @returns This EventDispatcher object.\r\n     * @zh 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type 事件的类型。\r\n     * @param caller 事件侦听函数的执行域。\r\n     * @param listener 事件侦听函数。\r\n     * @param args （可选）事件侦听函数的回调参数。\r\n     * @returns 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, listener: Function): EventDispatcher;\r\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.add(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Register an event listener object with the EventDispatcher object so that the listener receives event notifications. This event listener responds once and is automatically removed after the first call.\r\n     * @param type The type of event.\r\n     * @param caller The execution scope of the event listener function.\r\n     * @param listener The listener function.\r\n     * @param args (Optional) The callback parameters of the event listener function.\r\n     * @returns This EventDispatcher object.\r\n     * @zh 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type 事件的类型。\r\n     * @param caller 事件侦听函数的执行域。\r\n     * @param listener 事件侦听函数。\r\n     * @param args （可选）事件侦听函数的回调参数。\r\n     * @returns 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, listener: Function): EventDispatcher;\r\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.once(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Remove a listener from the EventDispatcher object.\r\n     * @param type The type of event.\r\n     * @param caller The execution scope of the event listener function.\r\n     * @param listener The listener function.\r\n     * @returns This EventDispatcher object.\r\n     * @zh 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type 事件的类型。\r\n     * @param caller 事件侦听函数的执行域。\r\n     * @param listener 事件侦听函数。\r\n     * @returns 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, listener: Function): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        let listeners = this._events && this._events[type];\r\n        if (listeners)\r\n            listeners.remove(listener, caller);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Remove all listeners of the specified event type from the EventDispatcher object.\r\n     * @param type (Optional) The type of event. If the value is null, all types of listeners on this object are removed.\r\n     * @returns This EventDispatcher object.\r\n     * @zh 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type （可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @returns 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type?: string): EventDispatcher {\r\n        if (type == null)\r\n            this._events = null;\r\n        else {\r\n            let listeners = this._events && this._events[type];\r\n            if (listeners)\r\n                listeners.clear();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Remove all event listeners whose caller is the specified target.\r\n     * @param caller The target caller object.\r\n     * @returns This EventDispatcher object.\r\n     * @zh 移除caller为target的所有事件监听。\r\n     * @param caller caller对象\r\n     * @returns 此 EventDispatcher 对象。\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let type in this._events)\r\n                this._events[type].clearForTarget(caller);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\nvar _idCounter: number = 0;\r\nvar _disposingCounter: number = 0;\r\nvar _clearRetry: number = 0;\r\n\r\n/**\r\n * @en The `Resource` class used for resource access.\r\n * @zh `Resource` 类用于资源存取。\r\n */\r\nexport class Resource extends EventDispatcher {\r\n    /**@ignore */\r\n    static _idResourcesMap: any = {};\r\n    /** 以字节为单位。*/\r\n    private static _cpuMemory: number = 0;\r\n    /** 以字节为单位。*/\r\n    private static _gpuMemory: number = 0;\r\n    /**\r\n     * @en Whether the debug mode is enabled.\r\n     * @zh 是否开启调试模式。\r\n     */\r\n    static DEBUG: boolean = false;\r\n\r\n    /**\r\n     * @en The current CPU memory, in bytes.\r\n     * @zh 当前内存，以字节为单位。\r\n     */\r\n    static get cpuMemory(): number {\r\n        return Resource._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @en The current GPU memory, in bytes.\r\n     * @zh 当前显存，以字节为单位。\r\n     */\r\n    static get gpuMemory(): number {\r\n        return Resource._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addCPUMemory(size: number): void {\r\n        Resource._cpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addGPUMemory(size: number): void {\r\n        Resource._gpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addMemory(cpuSize: number, gpuSize: number): void {\r\n        Resource._cpuMemory += cpuSize;\r\n        Resource._gpuMemory += gpuSize;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy unused resources, this function will ignore resources with lock=true.\r\n     * @zh 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static destroyUnusedResources(): void {\r\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\r\n        _clearRetry = 0;\r\n\r\n        if (!ILaya.loader.loading)\r\n            Resource._destroyUnusedResources(true);\r\n        else\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n    }\r\n\r\n    private static _destroyUnusedResources(force: boolean): void {\r\n        if (!force && ILaya.loader.loading)\r\n            return;\r\n\r\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\r\n        let destroyCnt = 0;\r\n\r\n        for (let k in Resource._idResourcesMap) {\r\n            let res: Resource = Resource._idResourcesMap[k];\r\n            if (!res.lock && res._referenceCount === 0) {\r\n                res.destroy();\r\n                destroyCnt++;\r\n            }\r\n        }\r\n\r\n        if (Resource.DEBUG && destroyCnt > 0)\r\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\r\n\r\n        if (destroyCnt > 0 && _clearRetry < 5) {\r\n            _clearRetry++;\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n        }\r\n    }\r\n\r\n    private _cpuMemory: number = 0;\r\n    private _gpuMemory: number = 0;\r\n    _id: number = 0;\r\n    protected _destroyed?: boolean;\r\n    protected _referenceCount: number = 0;\r\n    protected _obsolute: boolean;\r\n    protected _deps: Array<Resource>;\r\n    /** 是否建立引用跟踪链。 */\r\n    protected _traceDeps: boolean;\r\n\r\n    /**\r\n     * @en Whether to lock the resource, if true, the resource cannot be automatically released.\r\n     * @zh 是否加锁，如果true为不能使用自动释放机制。\r\n     */\r\n    lock?: boolean;\r\n    /**\r\n     * @en The name of the resource.\r\n     * @zh 资源名称。\r\n     */\r\n    name?: string;\r\n    /**\r\n     * @en The URL of the resource.\r\n     * @zh 获取资源的URL地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * @en The UUID of the resource.\r\n     * @zh 获取资源的UUID。\r\n     */\r\n    uuid: string;\r\n\r\n    /**\r\n     * @en Whether to delete the resource immediately when the reference count is 0.\r\n     * @zh 是否在引用计数为0的时候立马删除他 \r\n     */\r\n    destroyedImmediately: boolean;\r\n\r\n    /**\r\n     * @en Unique identifier ID, usually used for identification.\r\n     * @zh 唯一标识ID,通常用于识别。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en CPU memory size.\r\n     * @zh 内存大小。\r\n     */\r\n    get cpuMemory(): number {\r\n        return this._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @en GPU memory size.\r\n     * @zh 显存大小。\r\n     */\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the resource has been destroyed.\r\n     * @zh 是否已销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n    /** \r\n     * @en If a cached resource observer is set to true, then:\r\n     * - 1) getRes will still return this resource;\r\n     * - 2) next time loading will ignore this cached resource and reload it.\r\n     * @zh 如果设置一个已缓存的资源obsolute为true，则\r\n     * - 1）getRes仍然可以返回这个资源；\r\n     * - 2）下次加载时会忽略这个缓存而去重新加载。。\r\n     */\r\n    get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    set obsolute(value: boolean) {\r\n        if (this._obsolute != value) {\r\n        this._obsolute = value;\r\n\r\n            if (value && !LayaEnv.isPlaying)\r\n                this.event(\"obsolute\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The list of dependencies for the resource.\r\n     * @zh 资源的依赖列表。\r\n     */\r\n    get deps(): ReadonlyArray<Resource> {\r\n        return this._deps;\r\n    }\r\n\r\n    /**\r\n     * @en The reference count of the resource.\r\n     * @zh 资源的引用计数。\r\n     */\r\n    get referenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @en Creates an instance of Resource.\r\n     * @param managed If set to true, the resource will be automatically released when the reference count is 0. Default is true.\r\n     * @zh 创建一个 Resource 实例。\r\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\r\n     */\r\n    protected constructor(managed?: boolean) {\r\n        super();\r\n\r\n        this._id = ++_idCounter;\r\n        this._destroyed = false;\r\n        this._referenceCount = 0;\r\n        if (managed == null || managed)\r\n            Resource._idResourcesMap[this._id] = this;\r\n        this.lock = false;\r\n        this.destroyedImmediately = true;\r\n        this._deps = [];\r\n        this._traceDeps = false;\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the cpu memory usage by the specified value.\r\n     * @param value The amount by which to adjust the CPU memory usage.\r\n     * @zh 根据指定的值调整内存使用量。\r\n     * @param value 要调整的内存使用量。\r\n     */\r\n    _setCPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._cpuMemory;\r\n        this._cpuMemory = value;\r\n        Resource._addCPUMemory(offsetValue);\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the GPU memory usage by the specified value.\r\n     * @param value The amount by which to adjust the GPU memory usage.\r\n     * @zh 根据指定的值调整显存使用量。\r\n     * @param value 要调整的显存使用量。\r\n     */\r\n    _setGPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._gpuMemory;\r\n        this._gpuMemory = value;\r\n        Resource._addGPUMemory(offsetValue);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the URL and UUID used to create this resource.\r\n     * @param url The URL used to create the resource.\r\n     * @param uuid The optional UUID of the resource.\r\n     * @zh 设置用于创建此资源的 URL 和 UUID。\r\n     * @param url 用于创建资源的 URL。\r\n     * @param uuid 资源的可选UUID。\r\n     */\r\n    _setCreateURL(url: string, uuid?: string): void {\r\n        this.url = url;\r\n        this.uuid = uuid;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the resource is created from the specified URL.\r\n     * @param url The URL to check against the resource's creation URL.\r\n     * @returns True if the resource is created from the specified URL, otherwise false.\r\n     * @zh 检查资源是否从指定的 URL 创建。\r\n     * @param url 要检查的资源创建 URL。\r\n     * @returns 如果资源是从指定的 URL 创建的，则返回 true，否则返回 false。\r\n     */\r\n    isCreateFromURL(url: string): boolean {\r\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\r\n            || this.url === url;\r\n    }\r\n\r\n    /**\r\n     * @en Increments the reference count of the resource by the specified amount.\r\n     * @param count The amount by which to increment the reference count, default is 1.\r\n     * @zh 按指定数量增加资源的引用计数。\r\n     * @param count 要增加的引用计数，默认为1。\r\n     */\r\n    _addReference(count: number = 1): void {\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @en Decrements the reference count of the resource by the specified amount. If the reference count reaches zero and certain conditions are met, the resource may be destroyed.\r\n     * @param count The amount by which to decrement the reference count, default is 1.\r\n     * @zh 按指定数量减少资源的引用计数。如果引用计数达到零并且满足特定条件，资源可能会被销毁。\r\n     * @param count 要减少的引用计数，默认为1。\r\n     */\r\n    _removeReference(count: number = 1): void {\r\n        this._referenceCount -= count;\r\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clears the reference count of the resource.\r\n     * @zh 清除引用\r\n     */\r\n    _clearReference(): void {\r\n        this._referenceCount = 0;\r\n    }\r\n\r\n    /**\r\n     * 增加一个依赖内容\r\n     * @param res 依赖内容\r\n     */\r\n    addDep(res: Resource) {\r\n        if (res instanceof Resource) {\r\n            res._addReference();\r\n            this._deps.push(res);\r\n\r\n            if (!LayaEnv.isPlaying && res._traceDeps)\r\n                res.on(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加多个依赖内容\r\n     * @param resArr 依赖内容\r\n     */\r\n    addDeps(resArr: Array<Resource>) {\r\n        for (let res of resArr) {\r\n            if (res instanceof Resource) {\r\n                res._addReference();\r\n                this._deps.push(res);\r\n\r\n                if (!LayaEnv.isPlaying && res._traceDeps)\r\n                    res.on(\"obsolute\", this, this.onDepObsolute);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onDepObsolute() {\r\n        this.obsolute = true;\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the resource, the resource cannot be recovered.\r\n     * @zh 销毁资源,销毁后资源不能恢复。\r\n     */\r\n    destroy(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._destroyed = true;\r\n        this.lock = false; //解锁资源，强制清理\r\n        _disposingCounter++;\r\n        this._disposeResource();\r\n        for (let res of this._deps) {\r\n            res._removeReference();\r\n\r\n            if (!LayaEnv.isPlaying && res._traceDeps)\r\n                res.off(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n        _disposingCounter--;\r\n        this.offAll();\r\n        delete Resource._idResourcesMap[this.id];\r\n        if (this.url) {\r\n            if (Resource.DEBUG)\r\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\r\n            ILaya.loader.clearRes(this.url, this);\r\n        }\r\n    }\r\n}","/**\r\n * @en Config is used to set some global parameters. If you need to change them, please set them before initializing the engine.\r\n * @zh Config类用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\r\n */\r\nexport class Config {\r\n    /**\r\n     * @en Canvas setting for anti-aliasing, only effective for 2D(WebGL). 3D anti-aliasing is controlled on the camera or RT.\r\n     * @zh 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\r\n     */\r\n    static isAntialias: boolean = true;\r\n\r\n    /**\r\n     * @en Whether to use WebGL2\r\n     * @zh 是否使用WebGL2\r\n     */\r\n    static useWebGL2: boolean = true;\r\n\r\n    /**\r\n     * @en FPS limit\r\n     * @zh 限制FPS \r\n     */\r\n    static FPS = 60;\r\n\r\n    /**\r\n     * @en Whether to use retina mode, which may create larger RT on iOS for better effects\r\n     * @zh 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\r\n     */\r\n    static useRetinalCanvas: boolean = false;\r\n\r\n    //-------------2D settings---------------------\r\n\r\n    /**\r\n     * @en Default playback interval for 2D animation, in milliseconds.\r\n     * @zh 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\r\n     */\r\n    static animationInterval: number = 50;\r\n\r\n    /**\r\n     * @en When using WebGL to render 2D, whether to allocate enough cache for 64k vertices each time a VB is created. This can improve efficiency.\r\n     * @zh 当使用WebGL渲染2D的时候，每次创建VB是否直接分配足够64k个顶点的缓存。这样可以提高效率。\r\n     */\r\n    static webGL2D_MeshAllocMaxMem: boolean = true;\r\n\r\n    /**\r\n     * @en Default text size, default is 12\r\n     * @zh 默认文本大小，默认为12\r\n     */\r\n    static defaultFontSize: number = 12;\r\n\r\n    /**\r\n     * @en Default font, default is Arial\r\n     * @zh 默认文本字体，默认为Arial\r\n     */\r\n    static defaultFont: string = \"Arial\";\r\n\r\n    //-------------For engine internal use-------------\r\n\r\n    /**\r\n     * @en Set whether the canvas is transparent, only effective for 2D(WebGL) and 3D.\r\n     * @zh 设置画布是否透明，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isAlpha: boolean = false;\r\n\r\n    /**\r\n     * @en Set whether the canvas contains depth\r\n     * @zh 设置画布是否包含深度\r\n     */\r\n    static isDepth: boolean = false;\r\n\r\n    /**\r\n     * @en Boolean value indicating whether to create this context in a system with low performance\r\n     * @zh 表明在一个系统性能低的环境是否创建该上下文\r\n     */\r\n    static isfailIfMajorPerformanceCaveat: boolean = false;\r\n    /**\r\n     * @en Power preference for the WebGL/WebGPU context. Hints the browser about the desired GPU configuration.\r\n     * - \"default\": Let the browser decide. In WebGPU mode, this is automatically set to \"high-performance\".\r\n     * - \"high-performance\": Prefer high-performance GPU. Use for graphically intensive applications.\r\n     * - \"low-power\": Prefer low-power GPU. Suitable for energy-efficient applications.\r\n     * @zh 图形（WebGL/WebGPU）上下文的电源偏好设置。向浏览器提示所需的 GPU 配置。\r\n     * - \"default\"：让浏览器决定。在 WebGPU 模式下，`default`会让引擎自动设置为`high-performance`。\r\n     * - \"high-performance\"：倾向于高性能 GPU。用于图形密集型应用。\r\n     * - \"low-power\"：倾向于低功耗 GPU。适用于节能的应用。\r\n     */\r\n    static powerPreference: WebGLPowerPreference = \"default\";\r\n\r\n    /**\r\n     * @en Set whether the canvas is pre-multiplied, only effective for 2D(WebGL) and 3D.\r\n     * @zh 设置画布是否预乘，只对2D(WebGL)、3D有效。\r\n     */\r\n    static premultipliedAlpha: boolean = true;\r\n\r\n    /**\r\n     * @en Set whether to enable stencil buffer for the canvas, only effective for 2D(WebGL) and 3D.\r\n     * @zh 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isStencil: boolean = true;\r\n\r\n    /**\r\n     * @en Whether to preserve the drawing buffer.\r\n     * @zh 是否保留渲染缓冲区。\r\n     */\r\n    static preserveDrawingBuffer: boolean = false;\r\n\r\n    /**\r\n     * @en Whether to print WebGL instructions and locate WebGL errors\r\n     * @zh 是否打印WebGL指令，同时定位WebGL报错\r\n     */\r\n    static printWebglOrder: boolean = false;\r\n\r\n    /**\r\n     * @en On iOS, some fonts may not be found. The engine provides font mapping functionality. For example, by default, \"黑体\" is mapped to \"黑体-简\". More mappings can be added.\r\n     * @zh 在iOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加\r\n     */\r\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\n\r\n    /**\r\n     * @en Whether to use a fixed frame rate for rendering and updates.\r\n     * - When true: Rendering and logic updates are limited to the frame rate defined by Config.FPS. Ensures consistent application speed across different devices.\r\n     * - When false: Updates occur on every requestAnimationFrame callback. Can lead to varying application speeds on different devices.\r\n     * @zh 是否使用固定帧率进行渲染和更新。\r\n     * - 当为 true 时：渲染和逻辑更新被限制在由 Config.FPS 定义的帧率内。确保在不同设备上应用程序运行速度一致。\r\n     * - 当为 false 时：在每次 requestAnimationFrame 回调时进行更新。可能导致在不同设备上应用程序运行速度不同。\r\n     */\r\n    static fixedFrames: boolean = true;\r\n\r\n    /**\r\n     * @en Whether to immediately delete resources when the reference parameter is 0. If not immediate deletion, please call DestrotyUnUse\r\n     * @zh 资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse\r\n     */\r\n    static destroyResourceImmediatelyDefault = true;\r\n    /**@internal */\r\n    static _enableWindowRAFFunction: boolean = true;\r\n}\r\n\r\nexport const PlayerConfig: {\r\n    physics2D?: any,\r\n    physics3D?: any,\r\n    spineVersion?: string,\r\n    workerLoaderLib?: string,\r\n    [key: string]: any,\r\n} = {};","export enum HDREncodeFormat{\r\n    NONE,\r\n    RGBM,\r\n    RGBD\r\n   \r\n}","/**\r\n * 纹理格式\r\n */\r\nexport enum TextureFormat {\r\n    /**纹理格式_R8G8B8。*/\r\n    R8G8B8 = 0,\r\n    /**纹理格式_R8G8B8A8。*/\r\n    R8G8B8A8 = 1,\r\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\r\n    R5G6B5 = 16,\r\n    /**纹理格式_ALPHA8。*/\r\n    Alpha8 = 2,\r\n    /**纹理格式_DXT1。*/\r\n    DXT1 = 3,\r\n    /**纹理格式_DXT3 */\r\n    DXT3 = 29,\r\n    /**纹理格式_DXT5。*/\r\n    DXT5 = 4,\r\n    /**纹理格式_ETC2RGB。*/\r\n    ETC1RGB = 5,\r\n    ///**纹理格式_ETC2RGB。*/\r\n    ETC2RGB = 6,\r\n    ///**纹理格式_ETC2RGBA。*/\r\n    ETC2RGBA = 7,\r\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\r\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\r\n    /**纹理格式_PVRTCRGB_2BPPV。*/\r\n    ETC2SRGB_Alpha8 = 8,\r\n    /** 纹理格式_ETC2SRGB*/\r\n    ETC2SRGB = 28,\r\n    /** 纹理格式 RGB8_PUNCHTHROUGH_ALPHA1_ETC2 */\r\n    ETC2RGB_Alpha1 = 32,\r\n    /** 纹理格式 SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 */\r\n    ETC2SRGB_Alpha1 = 33,\r\n    /** 纹理格式_PVRTCRGB_2BPPV*/\r\n    PVRTCRGB_2BPPV = 9,\r\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\r\n    PVRTCRGBA_2BPPV = 10,\r\n    /**纹理格式_PVRTCRGB_4BPPV。*/\r\n    PVRTCRGB_4BPPV = 11,\r\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\r\n    PVRTCRGBA_4BPPV = 12,\r\n    /**RGBA格式纹理,每个通道32位浮点数。*/\r\n    R32G32B32A32 = 15,\r\n    /**R32G32B32 */\r\n    R32G32B32 = 30,\r\n    /**RGBA格式纹理，每个通道16位浮点数。 */\r\n    R16G16B16A16 = 17,\r\n    /**R16 G16 B6 */\r\n    R16G16B16 = 31,\r\n    /**ASTC 4x4*/\r\n    ASTC4x4 = 18,\r\n    /**ASTC sRGB 4x4 */\r\n    ASTC4x4SRGB = 23,\r\n    /**ASTC 6x6*/\r\n    ASTC6x6 = 19,\r\n    /**ASTC  6x6*/\r\n    ASTC6x6SRGB = 24,\r\n    /**ASTC 8x8 */\r\n    ASTC8x8 = 20,\r\n    /**ASTC srgb 8x8 */\r\n    ASTC8x8SRGB = 25,\r\n    /**ASTC 10x10 */\r\n    ASTC10x10 = 21,\r\n    /**ASTC srgb 10x10 */\r\n    ASTC10x10SRGB = 26,\r\n    /**ASTC 12x12 */\r\n    ASTC12x12 = 22,\r\n    /**ASTC srgb 12x12 */\r\n    ASTC12x12SRGB = 27,\r\n    /**ktx图片 */\r\n    KTXTEXTURE = -1,\r\n    /**pvr图片 */\r\n    PVRTEXTURE = -2\r\n}","/**\r\n * 纹理的过滤模式。\r\n */\r\nexport enum FilterMode {\r\n    /**点过滤。*/\r\n    Point = 0,\r\n    /**双线性过滤。*/\r\n    Bilinear = 1,\r\n    /**三线性过滤。*/\r\n    Trilinear = 2,\r\n}","export enum RenderCapable {\r\n    Element_Index_Uint32,//Index Usage 32\r\n    TextureFormat_R32G32B32A32,//Texturefloat32\r\n    TextureFormat_R16G16B16A16,//TextureFloat16\r\n    Texture_anisotropic,//anisotropic function\r\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\r\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\r\n    RenderTextureFormat_Depth,//depthTexture\r\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\r\n    Vertex_VAO,//VAO\r\n    DrawElement_Instance,//Instance\r\n    Shader_TextureLod,//Texture lod sampler\r\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\r\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\r\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\r\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\r\n    Texture_SRGB,//Textrue srgb   \r\n    MSAA,//MSAA\r\n    UnifromBufferObject,\r\n    Texture3D,\r\n    Texture_FloatLinearFiltering,\r\n    Texture_HalfFloatLinearFiltering,\r\n}","import { I2DRenderPassFactory } from \"../RenderDriver/DriverDesign/2DRenderPass/I2DRenderPassFactory\";\r\nimport { IRenderDeviceFactory } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderDeviceFactory\";\r\nimport { IRenderEngine } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderEngineFactory\";\r\nimport { ITextureContext } from \"../RenderDriver/DriverDesign/RenderDevice/ITextureContext\";\r\nimport { IUnitRenderModuleDataFactory } from \"../RenderDriver/RenderModuleData/Design/IUnitRenderModuleDataFactory\";\r\n\r\n/**\r\n * @en Package GL commands\r\n * @zh 封装GL命令\r\n */\r\nexport class LayaGL {\r\n    static textureContext: ITextureContext;\r\n    static renderEngine: IRenderEngine;\r\n\r\n    static renderOBJCreate: IRenderEngineFactory;//TODO delete\r\n    static render2DRenderPassFactory:I2DRenderPassFactory;\r\n    static renderDeviceFactory:IRenderDeviceFactory;\r\n    static unitRenderModuleDataFactory:IUnitRenderModuleDataFactory;\r\n}","import { Config } from \"../../Config\";\r\nimport { InternalTexture } from \"../RenderDriver/DriverDesign/RenderDevice/InternalTexture\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * @en The `BaseTexture` class is an abstract class and serves as the base class for textures. It should not be instantiated directly.\r\n * @zh `BaseTexture` 类是纹理的父类，是一个抽象类，不允许直接实例化。\r\n */\r\nexport class BaseTexture extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    _texture: InternalTexture;\r\n    /**\r\n     * @en hdr encode format\r\n     * @zh hdr编码格式\r\n     */\r\n    hdrEncodeFormat: HDREncodeFormat;\r\n    protected _width: number;\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @en The width of the texture.\r\n     * @zh 纹理的宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the texture.\r\n     * @zh 纹理的高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    protected _dimension: TextureDimension;\r\n\r\n    /**\r\n     * @en The texture dimension.\r\n     * @zh 纹理几何属性\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this._dimension;\r\n    }\r\n\r\n    protected _format: TextureFormat;\r\n    /**\r\n     * @en The format of the texture.\r\n     * @zh 纹理的格式。\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to generate mipmap\r\n     * @zh 是否生成mipmap\r\n     */\r\n    public get mipmap(): boolean {\r\n        return this._texture.mipmap;\r\n    }\r\n\r\n    /**\r\n     * @en The number of mipmap generated for this texture.\r\n     * @zh 为此纹理生成的mipmap数量。\r\n     */\r\n    public get mipmapCount(): number {\r\n        return this._texture.mipmapCount;\r\n    }\r\n\r\n    /**\r\n     * @en The anisotropy value of texture\r\n     * @zh 纹理的各向异性值\r\n     */\r\n    public get anisoLevel(): number {\r\n        return this._texture.anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        this._texture.anisoLevel = value;\r\n    }\r\n\r\n    /**\r\n     * @en The sampling filtering mode of the texture.\r\n     * @zh 纹理的采样过滤模式。\r\n     */\r\n    public get filterMode(): FilterMode {\r\n        return this._texture.filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        this._texture.filterMode = value;\r\n    }\r\n\r\n    /**\r\n     * @en U-direction sampling mode\r\n     * @zh U方向采样模式\r\n     */\r\n    public get wrapModeU(): WrapMode {\r\n        return this._texture.wrapU;\r\n    }\r\n    public set wrapModeU(value: WrapMode) {\r\n        this._texture.wrapU = value;\r\n    }\r\n\r\n    /**\r\n     * @en V-direction sampling mode\r\n     * @zh V方向采样模式\r\n     */\r\n    public get wrapModeV(): WrapMode {\r\n        return this._texture.wrapV;\r\n    }\r\n    public set wrapModeV(value: WrapMode) {\r\n        this._texture.wrapV = value;\r\n    }\r\n\r\n    /**\r\n     * @en W-direction sampling mode\r\n     * @zh W方向采样模式\r\n     */\r\n    public get wrapModeW(): WrapMode {\r\n        return this._texture.wrapW;\r\n    }\r\n    public set wrapModeW(value: WrapMode) {\r\n        this._texture.wrapW = value;\r\n    }\r\n\r\n    /**\r\n     * @en The texture compare mode.\r\n     * @zh 贴图压缩格式\r\n     */\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._texture.compareMode;\r\n    }\r\n\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\r\n    }\r\n\r\n    /**\r\n     * @en The gamma correction value of the texture. If set to 1.0, texture sampling will be linear without any correction.\r\n     * @zh 纹理的伽马校正值。如果设置为1.0，则纹理采样将为线性，不进行任何校正。\r\n     */\r\n    public get gammaCorrection(): number {\r\n        return this._texture.gammaCorrection;\r\n    }\r\n\r\n    /**\r\n     * @en The base mipmap level of the texture.\r\n     * @zh 纹理的mipmap起始等级。\r\n     */\r\n    public get baseMipmapLevel(): number {\r\n        return this._texture.baseMipmapLevel;\r\n    }\r\n\r\n    public set baseMipmapLevel(value: number) {\r\n        this._texture.baseMipmapLevel = value;\r\n    }\r\n\r\n    /**\r\n     * @en The maximum mipmap level of the texture.\r\n     * @zh 纹理的最大mipmap等级。\r\n     */\r\n    public get maxMipmapLevel(): number {\r\n        return this._texture.maxMipmapLevel;\r\n    }\r\n\r\n    public set maxMipmapLevel(value: number) {\r\n        this._texture.maxMipmapLevel = value;\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _gammaSpace: boolean = false;\r\n    // todo\r\n    /**\r\n     * @en Gets whether the texture is using gamma space.\r\n     * @zh 判断纹理是否使用伽马空间。\r\n     */\r\n    public get gammaSpace(): boolean {\r\n        // return this._gammaSpace;\r\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\r\n    }\r\n\r\n    /**\r\n     * @en Creates an instance of BaseTexture.\r\n     * @param width The width of the texture.\r\n     * @param height The height of the texture.\r\n     * @param format The format of the texture, specified as a number.\r\n     * @zh 创建 BaseTexture 类的实例。\r\n     * @param width 纹理的宽度。\r\n     * @param height 纹理的高度。\r\n     * @param format 纹理的格式，以数字形式指定。\r\n     */\r\n    constructor(width: number, height: number, format: number) {\r\n        super();\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = format;\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the texture is in a GPU compressed format.\r\n     * @returns True if the texture is in a GPU compressed format, otherwise false.\r\n     * @zh 是否是gpu压缩纹理格式\r\n     * @returns 如果纹理是gpu压缩格式，则返回true，否则返回false。\r\n     */\r\n    gpuCompressFormat(): boolean {\r\n        let format = this._format;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n            case TextureFormat.R16G16B16:\r\n            case TextureFormat.R16G16B16A16:\r\n            case TextureFormat.R32G32B32:\r\n            case TextureFormat.R32G32B32A32:\r\n            case TextureFormat.R5G6B5:\r\n            case TextureFormat.Alpha8:\r\n                return false;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n            case TextureFormat.ETC1RGB:\r\n            case TextureFormat.ETC2RGB:\r\n            case TextureFormat.ETC2RGBA:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2RGB_Alpha1:\r\n            case TextureFormat.ETC2SRGB_Alpha1:\r\n            case TextureFormat.PVRTCRGB_2BPPV:\r\n            case TextureFormat.PVRTCRGBA_2BPPV:\r\n            case TextureFormat.PVRTCRGB_4BPPV:\r\n            case TextureFormat.PVRTCRGBA_4BPPV:\r\n            case TextureFormat.ASTC4x4:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取纹理格式的字节数\r\n     * @internal\r\n     */\r\n    _getFormatByteCount(): number {\r\n        switch (this._format) {\r\n            case TextureFormat.R8G8B8:\r\n                return 3;\r\n            case TextureFormat.R8G8B8A8:\r\n                return 4;\r\n            case TextureFormat.R5G6B5:\r\n                return 1;\r\n            case TextureFormat.Alpha8:\r\n                return 1;\r\n            case TextureFormat.R16G16B16A16:\r\n                return 2;\r\n            case TextureFormat.R32G32B32A32:\r\n                return 4;\r\n            default:\r\n                throw \"Texture2D: unknown format.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource() {\r\n        return this._texture.resource;\r\n    }\r\n\r\n    /**\r\n     * @en The default texture.\r\n     * @zh 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        throw \"defaulte\"\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        this._texture.dispose();\r\n    }\r\n}","import { Point } from \"./Point\";\r\nimport { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * @en Represents a transformation matrix that determines how to map points from one coordinate space to another.\r\n * You can perform various graphical transformations on a display object by setting the properties of a Matrix object, applying it to the matrix property of a Transform object, and then applying that Transform object as the transform property of the display object. \r\n * These transformation functions include translation (x and y repositioning), rotation, scaling, and skewing.\r\n * @zh 表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。\r\n * 您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，\r\n * 然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。\r\n */\r\nexport class Matrix {\r\n\r\n    /**\r\n     * @private\r\n     * @en An initialized Matrix object. The content of this object is not allowed to be modified.\r\n     * @zh 一个初始化的 Matrix 对象，不允许修改此对象内容。\r\n     */\r\n    static EMPTY: Matrix = new Matrix();\r\n    /**\r\n     * @en A Matrix object used for temporary operations.\r\n     * @zh 用于中转使用的 Matrix 对象。\r\n     */\r\n    static TEMP: Matrix = new Matrix();\r\n    /**@internal */\r\n    static _createFun: Function | null = null;\r\n\r\n    /**\r\n     * @en The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\r\n     * @zh 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     */\r\n    a: number;\r\n    /**\r\n     * @en The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\r\n     * @zh 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     */\r\n    b: number;\r\n    /**\r\n     * @en The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\r\n     * @zh 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     */\r\n    c: number;\r\n    /**\r\n     * @en The value that affects the positioning of pixels along the y axis when scaling or rotating an image.\r\n     * @zh 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     */\r\n    d: number;\r\n    /**\r\n     * @en The distance by which to translate each point along the x axis.\r\n     * @zh 沿 x 轴平移每个点的距离。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * @en The distance by which to translate each point along the y axis.\r\n     * @zh 沿 y 轴平移每个点的距离。\r\n     */\r\n    ty: number;\r\n    /**\r\n     * @internal\r\n     * @en Whether there are rotation or scaling operations.\r\n     * @zh 是否有旋转缩放操作。\r\n     */\r\n    _bTransform: boolean = false;\r\n\r\n    /**\r\n     * @en Constructs method, initialize matrix.\r\n     * @param a (Optional) The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\r\n     * @param b (Optional) The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\r\n     * @param c (Optional) The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\r\n     * @param d (Optional) The value that affects the positioning of pixels along the y axis when scaling or rotating an image.\r\n     * @param tx (Optional) The distance by which to translate each point along the x axis. \r\n     * @param ty (Optional) The distance by which to translate each point along the y axis. \r\n     * @param nums (Optional) Additional parameter. \r\n     * @zh 构造方法，初始化矩阵。\r\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\r\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\r\n     * @param nums   (可选) 附加参数。\r\n     */\r\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\r\n        if (Matrix._createFun != null) {\r\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\r\n        }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        this._checkTransform();\r\n    }\r\n\r\n    /**\r\n     * @en Sets this matrix to an identity matrix.\r\n     * @returns The current matrix.\r\n     * @zh 将本矩阵设置为单位矩阵。\r\n     * @return 返回当前矩形。\r\n     */\r\n    identity(): Matrix {\r\n        this.a = this.d = 1;\r\n        this.b = this.tx = this.ty = this.c = 0;\r\n        this._bTransform = false;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _checkTransform(): boolean {\r\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the translation along the x and y axes.\r\n     * @param x The distance to translate along the x axis.\r\n     * @param y The distance to translate along the y axis.\r\n     * @returns The current matrix object.\r\n     * @zh 设置沿 x 、y 轴平移每个点的距离。\r\n     * @param\tx 沿 x 轴平移每个点的距离。\r\n     * @param\ty 沿 y 轴平移每个点的距离。\r\n     * @return\t返回对象本身\r\n     */\r\n    setTranslate(x: number, y: number): Matrix {\r\n        this.tx = x;\r\n        this.ty = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Translates the matrix along the x and y axes, as specified by the x and y parameters.\r\n     * @param x The amount to move along the x axis (in pixels).\r\n     * @param y The amount to move along the y axis (in pixels).\r\n     * @returns The current matrix object.\r\n     * @zh 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\r\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\r\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\r\n     * @return 返回此矩形对象。\r\n     */\r\n    translate(x: number, y: number): Matrix {\r\n        this.tx += x;\r\n        this.ty += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Applies a scaling transformation to the matrix.\r\n     * @param x The multiplier used to scale the object along the x axis.\r\n     * @param y The multiplier used to scale the object along the y axis.\r\n     * @returns The current matrix object.\r\n     * @zh 对矩阵应用缩放转换。\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    scale(x: number, y: number): Matrix {\r\n        this.a *= x;\r\n        this.d *= y;\r\n        this.c *= x;\r\n        this.b *= y;\r\n        this.tx *= x;\r\n        this.ty *= y;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Applies a rotation transformation to the Matrix object.\r\n     * @param angle The rotation angle in radians.\r\n     * @returns The current matrix objec.\r\n     * @zh 对 Matrix 对象应用旋转转换。\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    rotate(angle: number): Matrix {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var a1: number = this.a;\r\n        var c1: number = this.c;\r\n        var tx1: number = this.tx;\r\n\r\n        this.a = a1 * cos - this.b * sin;\r\n        this.b = a1 * sin + this.b * cos;\r\n        this.c = c1 * cos - this.d * sin;\r\n        this.d = c1 * sin + this.d * cos;\r\n        this.tx = tx1 * cos - this.ty * sin;\r\n        this.ty = tx1 * sin + this.ty * cos;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Applies a skew transformation to the Matrix object.\r\n     * @param x The 2D skew angle along the X axis in radians.\r\n     * @param y The 2D skew angle along the Y axis in radians.\r\n     * @returns The current Matrix object.\r\n     * @zh 对 Matrix 对象应用倾斜转换。\r\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\r\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\r\n     * @returns 当前 Matrix 对象。\r\n     */\r\n    skew(x: number, y: number): Matrix {\r\n        var tanX: number = Math.tan(x);\r\n        var tanY: number = Math.tan(y);\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        this.a += tanY * this.c;\r\n        this.b += tanY * this.d;\r\n        this.c += tanX * a1;\r\n        this.d += tanX * b1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Applies the inverse transformation of the current matrix to the specified point and returns this point.\r\n     * @param out The Point object to be transformed.\r\n     * @returns The transformed out Point object.\r\n     * @zh 对指定的点应用当前矩阵的逆转化并返回此点。\r\n     * @param\tout 待转化的点 Point 对象。\r\n     * @returns\t返回out\r\n     */\r\n    invertTransformPoint(out: Point): Point {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n\r\n        var a2: number = d1 / n;\r\n        var b2: number = -b1 / n;\r\n        var c2: number = -c1 / n;\r\n        var d2: number = a1 / n;\r\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\r\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\r\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\r\n    }\r\n\r\n    /**\r\n     * @en Applies the geometric transformation represented by the Matrix object to the specified point.\r\n     * @param out The point used to set the output result.\r\n     * @returns The transformed out Point object.\r\n     * @zh 将 Matrix 对象表示的几何转换应用于指定点。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @returns\t返回out\r\n     */\r\n    transformPoint(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\r\n    }\r\n\r\n    /**\r\n     * @en Applies the geometric transformation represented by the Matrix object to the specified point, ignoring tx and ty.\r\n     * @param out The point used to set the output result.\r\n     * @returns The transformed out Point object.\r\n     * @zh 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @returns\t返回out\r\n     */\r\n    transformPointN(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the X-axis scaling value.\r\n     * @zh 获取 X 轴缩放值。\r\n     */\r\n    getScaleX(): number {\r\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the Y-axis scaling value.\r\n     * @zh 获取 Y 轴缩放值。\r\n     */\r\n    getScaleY(): number {\r\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\r\n    }\r\n\r\n    /**\r\n     * @en Perform the inverse transformation of the original matrix.\r\n     * @returns The current matrix object.\r\n     * @zh 执行原始矩阵的逆转换。\r\n     * @returns 当前矩阵对象。\r\n     */\r\n    invert(): Matrix {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n        this.a = d1 / n;\r\n        this.b = -b1 / n;\r\n        this.c = -c1 / n;\r\n        this.d = a1 / n;\r\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\r\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the members of Matrix to the specified values.\r\n     * @param a The value that affects the positioning of pixels along the x axis when scaling or rotating an image.\r\n     * @param b The value that affects the positioning of pixels along the y axis when rotating or skewing an image.\r\n     * @param c The value that affects the positioning of pixels along the x axis when rotating or skewing an image.\r\n     * @param d The value that affects the positioning of pixels along the y axis when scaling or rotating an image.\r\n     * @param tx The distance by which to translate each point along the x axis.\r\n     * @param ty The distance by which to translate each point along the y axis.\r\n     * @returns The current matrix object.\r\n     * @zh 将 Matrix 的成员设置为指定值。\r\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param\ttx 沿 x 轴平移每个点的距离。\r\n     * @param\tty 沿 y 轴平移每个点的距离。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\r\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Concatenates the specified matrix with the current matrix, effectively combining the geometric effects of the two.\r\n     * @param matrix The matrix to be concatenated to the source matrix.\r\n     * @returns The current matrix.\r\n     * @zh 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\r\n     * @param\tmatrix 要连接到源矩阵的矩阵。\r\n     * @return\t当前矩阵。\r\n     */\r\n    concat(matrix: Matrix): Matrix {\r\n        var a: number = this.a;\r\n        var c: number = this.c;\r\n        var tx: number = this.tx;\r\n        this.a = a * matrix.a + this.b * matrix.c;\r\n        this.b = a * matrix.b + this.b * matrix.d;\r\n        this.c = c * matrix.a + this.d * matrix.c;\r\n        this.d = c * matrix.b + this.d * matrix.d;\r\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the specified two matrices and assigns the result to the specified output object.\r\n     * @param m1 The first matrix.\r\n     * @param m2 The second matrix.\r\n     * @param out The output object.\r\n     * @returns The result output object out.\r\n     * @zh 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\r\n     * @param\tm1 矩阵一。\r\n     * @param\tm2 矩阵二。\r\n     * @param\tout 输出对象。\r\n     * @return\t结果输出对象 out。\r\n     */\r\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out.a = aa * ba + ab * bc;\r\n            out.b = aa * bb + ab * bd;\r\n            out.c = ac * ba + ad * bc;\r\n            out.d = ac * bb + ad * bd;\r\n            out.tx = ba * atx + bc * aty + btx;\r\n            out.ty = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out.a = aa * ba;\r\n            out.b = ab * bd;\r\n            out.c = ac * ba;\r\n            out.d = ad * bd;\r\n            out.tx = ba * atx + btx;\r\n            out.ty = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Multiplies the specified two matrices and assigns the result to the specified output array of length 16.\r\n     * @param m1 The first matrix.\r\n     * @param m2 The second matrix.\r\n     * @param out The output Array object.\r\n     * @returns The result output object out.\r\n     * @zh 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\r\n     * @param m1\t矩阵一。\r\n     * @param m2\t矩阵二。\r\n     * @param out\t输出对象Array。\r\n     * @returns 结果输出对象 out。\r\n     */\r\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out[0] = aa * ba + ab * bc;\r\n            out[1] = aa * bb + ab * bd;\r\n            out[4] = ac * ba + ad * bc;\r\n            out[5] = ac * bb + ad * bd;\r\n            out[12] = ba * atx + bc * aty + btx;\r\n            out[13] = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out[0] = aa * ba;\r\n            out[1] = ab * bd;\r\n            out[4] = ac * ba;\r\n            out[5] = ad * bd;\r\n            out[12] = ba * atx + btx;\r\n            out[13] = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Applies a scaling transformation to the matrix. Reverse multiplication.\r\n     * @param x The multiplier used to scale the object along the x axis.\r\n     * @param y The multiplier used to scale the object along the y axis.\r\n     * @zh 对矩阵应用缩放转换。反向相乘\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     */\r\n    scaleEx(x: number, y: number): void {\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = x * ba;\r\n            this.b = x * bb;\r\n            this.c = y * bc;\r\n            this.d = y * bd;\r\n        } else {\r\n            this.a = x * ba;\r\n            this.b = 0 * bd;\r\n            this.c = 0 * ba;\r\n            this.d = y * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Applies a rotation transformation to the Matrix object. Reverse multiplication.\r\n     * @param angle The rotation angle in radians.\r\n     * @zh 对 Matrix 对象应用旋转转换。反向相乘\r\n     * @param angle 以弧度为单位的旋转角度。\r\n     */\r\n    rotateEx(angle: number): void {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = cos * ba + sin * bc;\r\n            this.b = cos * bb + sin * bd;\r\n            this.c = -sin * ba + cos * bc;\r\n            this.d = -sin * bb + cos * bd;\r\n        } else {\r\n            this.a = cos * ba;\r\n            this.b = sin * bd;\r\n            this.c = -sin * ba;\r\n            this.d = cos * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a copy of this Matrix object.\r\n     * @returns A new Matrix instance with exactly the same properties as the original instance.\r\n     * @zh 返回此 Matrix 对象的副本。\r\n     * @returns 与原始实例具有完全相同的属性的新 Matrix 实例。\r\n     */\r\n    clone(): Matrix {\r\n        var dec: Matrix = Matrix.create();\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * @en Copy all matrix data from the current Matrix object to the specified Matrix object.\r\n     * @param dec The Matrix object to copy the current matrix data to.\r\n     * @returns The Matrix object with the copied matrix data.\r\n     * @zh 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\r\n     * @param dec 要复制当前矩阵数据的 Matrix 对象。\r\n     * @returns 已复制当前矩阵数据的 Matrix 对象。\r\n     */\r\n    copyTo(dec: Matrix): Matrix {\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * @en Return a string that lists the properties of this Matrix object.\r\n     * @returns A string containing the property values of the Matrix object: a, b, c, d, tx, and ty.\r\n     * @zh 返回列出该 Matrix 对象属性的文本值。\r\n     * @returns 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\r\n     */\r\n    toString(): string {\r\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy this object.\r\n     * @zh 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool for reuse.\r\n     * @zh 回收到对象池，方便复用。\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Matrix\", this.identity());\r\n    }\r\n\r\n    /**\r\n     * @en Create a Matrix object from the object pool.\r\n     * @returns A Matrix object.\r\n     * @zh 从对象池中创建一个 Matrix 对象。\r\n     * @returns 返回一个 Matrix 对象。\r\n     */\r\n    static create(): Matrix {\r\n        return Pool.getItemByClass(\"Matrix\", Matrix);\r\n    }\r\n}\r\n\r\n","import { Matrix } from \"../maths/Matrix\"\r\n\r\n/**\r\n * @en The Byte class provides methods and properties for optimizing the reading, writing, and handling of binary data. The Byte class is suitable for advanced developers who need to access data at the byte level.\r\n * @zh Byte 类提供用于优化读取、写入以及处理二进制数据的方法和属性。Byte 类适用于需要在字节层访问数据的高级开发人员。\r\n */\r\nexport class Byte {\r\n\r\n    /**\r\n     * @en Host byte order, which represents the two different sequences in which a CPU can store data: little-endian and big-endian. Use getSystemEndian to obtain the byte order of the current system.\r\n     * BIG_ENDIAN byte order: The lower address stores, the higher bits of the value, and the higher address stores the lower bits. It is sometimes referred to as network byte order.\r\n     * LITTLE_ENDIAN byte order: The lower address stores, the lower bits of the value, and the higher address stores the higher bits.\r\n     * @zh 主机字节序，是 CPU 存放数据的两种不同顺序：小端字节序和大端字节序。使用 getSystemEndian 获取当前系统的字节序。\r\n     * BIG_ENDIAN：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。\r\n     * LITTLE_ENDIAN： 小端字节序，地址低位存储值的低位，地址高位存储值的高位。\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**\r\n     * @en Host byte order, which represents the two different sequences in which a CPU can store data: little-endian and big-endian. Use getSystemEndian to obtain the byte order of the current system.\r\n     * LITTLE_ENDIAN byte order: The lower address stores the lower bits of the value, and the higher address stores the higher bits.\r\n     * BIG_ENDIAN byte order: The lower address stores the higher bits of the value, and the higher address stores the lower bits. It is sometimes referred to as network byte order.\r\n     * @zh 主机字节序，是 CPU 存放数据的两种不同顺序：小端字节序和大端字节序。使用 getSystemEndian 获取当前系统的字节序。\r\n     * LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。\r\n     * BIG_ENDIAN：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**@private */\r\n    private static _sysEndian: string = null;\r\n    /**@private 是否为小端数据。*/\r\n    protected _xd_: boolean = true;\r\n    /**@private */\r\n    private _allocated_: number = 8;\r\n    /**@private 原始数据。*/\r\n    protected _d_: any\r\n    /**@private DataView*/\r\n    protected _u8d_: any;\r\n    /**@private */\r\n    protected _pos_: number = 0;\r\n    /**@private */\r\n    protected _length: number = 0;\r\n\r\n    /**\r\n     * @en Get the byte order of the current host.\r\n     * The host byte order refers to the two different sequences in which a CPU stores data, which includes little-endian and big-endian.\r\n     * BIG_ENDIAN: Big-endian byte order, where the lower address stores the higher bits of the value, and the higher address stores the lower bits. It is sometimes also called network byte order.\r\n     * LITTLE_ENDIAN: Little-endian byte order, where the lower address stores the lower bits of the value, and the higher address stores the higher bits.\r\n     * @returns The byte order of the current system.\r\n     * @zh 获取当前主机的字节序。\r\n     * 主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。\r\n     * BIG_ENDIAN：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。\r\n     * LITTLE_ENDIAN：小端字节序，地址低位存储值的低位，地址高位存储值的高位。\r\n     * @return 当前系统的字节序。\r\n     */\r\n    static getSystemEndian(): string {\r\n        if (!Byte._sysEndian) {\r\n            var buffer: any = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n        }\r\n        return Byte._sysEndian;\r\n    }\r\n    /**\r\n     * @en Constructor method.\r\n     * @param data Specifies the number of elements for initialization, or a TypedArray object or ArrayBuffer object for initialization. If null, allocate a certain amount of memory in advance. When available space is not enough, use this part of the memory first, and reallocate the required memory if it is still not enough.\r\n     * @zh 构造方法\r\n     * @param data 用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\r\n     */\r\n    constructor(data: any = null) {\r\n        if (data) {\r\n            this._u8d_ = new Uint8Array(data);\r\n            this._d_ = new DataView(this._u8d_.buffer);\r\n            this._length = this._d_.byteLength;\r\n        } else {\r\n            this._resizeBuffer(this._allocated_);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The ArrayBuffer data of this object, which contains only the valid data part.\r\n     * @zh 此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\r\n     */\r\n    get buffer(): ArrayBuffer {\r\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\r\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\r\n        return rstBuffer.slice(0, this._length);\r\n    }\r\n\r\n    /**\r\n     * @en The byte order of the `Byte` instance. Possible values are `BIG_ENDIAN` or `LITTLE_ENDIAN`.\r\n     * The host byte order is one of two sequences used by the CPU to store data, which includes little-endian and big-endian byte orders.The current system's byte order can be obtained using `getSystemEndian`.\r\n     * `BIG_ENDIAN`: Big-endian byte order, where the lower memory address stores the higher-order bits of a number, and is sometimes referred to as network byte order.\r\n     * `LITTLE_ENDIAN`: Little-endian byte order, where the lower memory address stores the lower-order bits of a number.\r\n     * @zh `Byte` 实例的字节序。取值为 `BIG_ENDIAN` 或 `LITTLE_ENDIAN`。\r\n     * 主机字节序是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。可以通过 `getSystemEndian` 获取当前系统的字节序。\r\n     * BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。\r\n     * LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。\r\n     */\r\n    get endian(): string {\r\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The length of the `Byte` object, measured in bytes.\r\n     * When setting the length to a value greater than the current length, the byte array is right-padded with zeros. If the length is set to a value less than the current length, the byte array is truncated.\r\n     * If the length to be set exceeds the current allocated memory space, the memory is reallocated to the larger of either the new length or twice the current allocated length, and the original data is copied to the new memory space. If the length to be set is less than the current allocated memory space, the memory is reallocated to the new length, and the original data is truncated from the beginning to fit the new length.\r\n     * @zh `Byte` 对象的长度（以字节为单位）。\r\n     * 如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。\r\n     * 如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。\r\n     */\r\n    set length(value: number) {\r\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\r\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\r\n        this._length = value;\r\n    }\r\n\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    /**@private */\r\n    private _resizeBuffer(len: number): void {\r\n        try {\r\n            var newByteView: any = new Uint8Array(len);\r\n            if (this._u8d_ != null) {\r\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\r\n                else newByteView.set(this._u8d_.subarray(0, len));\r\n            }\r\n            this._u8d_ = newByteView;\r\n            this._d_ = new DataView(newByteView.buffer);\r\n        } catch (err) {\r\n            throw \"Invalid typed array length:\" + len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Commonly used to parse a byte stream in a fixed format.\r\n     * First, read a `Uint16` value from the current byte offset of the byte stream, and then read a string of this length.\r\n     * @returns The read string.\r\n     * @zh 常用于解析固定格式的字节流。\r\n     * 先从字节流的当前字节偏移位置处读取一个 `Uint16` 值，然后以此值为长度，读取此长度的字符串。\r\n     * @return 读取的字符串。\r\n     */\r\n    getString(): string {\r\n        return this.readString();\r\n    }\r\n\r\n    /**\r\n     * @en Commonly used to parse a byte stream in a fixed format.\r\n     * First, read a `Uint16` value from the current byte offset of the byte stream, and then read a string of this length.\r\n     * @returns The read string.\r\n     * @zh 常用于解析固定格式的字节流。\r\n     * 先从字节流的当前字节偏移位置处读取一个 `Uint16` 值，然后以此值为长度，读取此长度的字符串。\r\n     * @return 读取的字符串\r\n     */\r\n    readString(): string {\r\n        return this._rUTF(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates a `Float32Array` object from the data.\r\n     * Note: The returned `Float32Array` object is a native HTML5 `Float32Array` object in the JavaScript environment. Reading operations on this object are based on the current host byte order of the machine running the program. This order may differ from the actual byte order of the data. If you use this object for reading, you need to be aware of the actual data's byte order and the current host byte order. If they are the same, you can read normally; otherwise, you need to wrap the actual data (`Float32Array.buffer`) with a `DataView` object to read according to the specified byte order.\r\n     * @param start The starting position.\r\n     * @param len The number of bytes to read. If the length to be read exceeds the readable range, only the values within the readable range are returned.\r\n     * @returns The read `Float32Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Float32Array` 对象并返回此对象。\r\n     * 注意：返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    getFloat32Array(start: number, len: number): any {\r\n        return this.readFloat32Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates a `Float32Array` object from the data.\r\n     * @param start The starting position.\r\n     * @param len The number of bytes to read. If the length to be read exceeds the readable range, only the values within the readable range are returned.\r\n     * @returns The read `Float32Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Float32Array` 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    readFloat32Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates a `Uint8Array` object from the data.\r\n     * @param start The starting position.\r\n     * @param len The number of bytes to read. If the length to be read exceeds the readable range, only the values within the readable range are returned.\r\n     * @returns The read `Uint8Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Uint8Array` 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    getUint8Array(start: number, len: number): Uint8Array {\r\n        return this.readUint8Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates a `Uint8Array` object from the data.\r\n     * @param start The starting position.\r\n     * @param len The number of bytes to read. If the length to be read exceeds the readable range, only the values within the readable range are returned.\r\n     * @returns The read `Uint8Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Uint8Array` 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readUint8Array(start: number, len: number): Uint8Array {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates an `Int16Array` object from the data.\r\n     * Note: The returned `Int16Array` object is a native HTML5 `Int16Array` object in the JavaScript environment. Reading operations on this object are based on the current host byte order. This order may differ from the actual byte order of the data. If you use this object for reading, you must be aware of the actual data's byte order and the current host byte order. If they match, you can read normally; otherwise, you need to wrap the actual data (`Int16Array.buffer`) with a `DataView` object to read according to the specified byte order.\r\n     * @param start The byte offset from the start of the stream to begin reading.\r\n     * @param len The number of bytes to read. Only values within the readable range are returned if the length exceeds the range.\r\n     * @returns The created `Int16Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Int16Array` 对象并返回此对象。\r\n     * 注意：返回的 `Int16Array` 对象是 JavaScript 环境下原生的 HTML5 `Int16Array` 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序。此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据 (`Int16Array.buffer`) 包装一层 `DataView` 对象，使用 `DataView` 对象可按照指定的字节序进行读取。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Int16Array 对象。\r\n     */\r\n    getInt16Array(start: number, len: number): any {\r\n        return this.readInt16Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * @en Reads a number of bytes specified by the `len` parameter from the byte stream starting at the position indicated by the `start` parameter, and creates an `Int16Array` object from the data.\r\n     * @param start The byte offset from the start of the stream to begin reading.\r\n     * @param len The number of bytes to read. Only values within the readable range are returned if the length exceeds the range.\r\n     * @returns The created `Int16Array` object.\r\n     * @zh 从字节流中 `start` 参数指定的位置开始，读取 `len` 参数指定的字节数的数据，用于创建一个 `Int16Array` 对象并返回此对象。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readInt16Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a 32-bit floating-point number from the current position in the byte stream using IEEE 754 format.\r\n     * @returns The 32-bit floating-point number.\r\n     * @zh 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    getFloat32(): number {\r\n        return this.readFloat32();\r\n    }\r\n\r\n    /**\r\n     * @en Reads a 32-bit floating-point number from the current position in the byte stream using IEEE 754 format.\r\n     * @returns The 32-bit floating-point number.\r\n     * @zh 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    readFloat32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a 64-bit floating-point number from the current position in the byte stream using IEEE 754 format.\r\n     * @returns The 64-bit floating-point number.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    getFloat64(): number {\r\n        return this.readFloat64();\r\n    }\r\n\r\n    /**\r\n     * @en Reads a 64-bit floating-point number from the current position in the byte stream using IEEE 754 format.\r\n     * @returns The 64-bit floating-point number.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    readFloat64(): number {\r\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\r\n        this._pos_ += 8;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @en Writes an IEEE 754 single-precision (32-bit) floating point number to the byte stream at the current position.\r\n     * @param value The single-precision (32-bit) floating point number to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @param value 需要写入的单精度（32 位）浮点数。\r\n     */\r\n    writeFloat32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setFloat32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @en Writes an IEEE 754 double-precision (64-bit) floating point number to the byte stream at the current position.\r\n     * @param value  The double-precision (64-bit) floating point number to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @param value  需要写入的双精度（64 位）浮点数。\r\n     */\r\n    writeFloat64(value: number): void {\r\n        this._ensureWrite(this._pos_ + 8);\r\n        this._d_.setFloat64(this._pos_, value, this._xd_);\r\n        this._pos_ += 8;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads an Int32 value from the current position in the byte stream.\r\n     * @returns The Int32 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @returns  读取的 Int32 值。\r\n     */\r\n    getInt32(): number {\r\n        return this.readInt32();\r\n    }\r\n\r\n    /**\r\n     * @en Reads an Int32 value from the current position in the byte stream.\r\n     * @returns The Int32 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @returns 读取的 Int32 值。\r\n     */\r\n    readInt32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\r\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return float;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a Uint32 value from the current position in the byte stream.\r\n     * @returns The Uint32 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @returns 读取的 Uint32 值。\r\n     */\r\n    getUint32(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    /**\r\n     * @en Reads a Uint32 value from the current position in the byte stream.\r\n     * @returns The Uint32 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @returns 读取的 Uint32 值。\r\n     */\r\n    readUint32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\r\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @en Writes the specified Int32 value to the byte stream at the current position.\r\n     * @param value The Int32 value to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\r\n     * @param value 需要写入的 Int32 值。\r\n     */\r\n    writeInt32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setInt32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @en Writes the specified Uint32 value to the byte stream at the current position.\r\n     * @param value The Uint32 value to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入 Uint32 值。\r\n     * @param value 需要写入的 Uint32 值。\r\n     */\r\n    writeUint32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setUint32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads an Int16 value from the current byte offset in the byte stream.\r\n     * @returns The Int16 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @returns 读取的 Int16 值。\r\n     */\r\n    getInt16(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    /**\r\n     * @en Reads an Int16 value from the current byte offset in the byte stream.\r\n     * @returns The Int16 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @returns 读取的 Int16 值。\r\n     */\r\n    readInt16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\r\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a Uint16 value from the current byte offset in the byte stream.\r\n     * @returns The Uint16 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @returns 读取的 Uint16 值。\r\n     */\r\n    getUint16(): number {\r\n        return this.readUint16();\r\n    }\r\n\r\n    /**\r\n     * @en Reads a Uint16 value from the current byte offset in the byte stream.\r\n     * @returns The Uint16 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @returns 读取的 Uint16 值。\r\n     */\r\n    readUint16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\r\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @en Writes the specified Uint16 value to the byte stream at the current byte offset.\r\n     * @param value The Uint16 value to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\r\n     * @param value 需要写入的 Uint16 值。\r\n     */\r\n    writeUint16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setUint16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @en Writes the specified Int16 value to the byte stream at the current byte offset.\r\n     * @param value The Int16 value to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\r\n     * @param value 需要写入的 Int16 值。\r\n     */\r\n    writeInt16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setInt16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a Uint8 value from the current byte offset in the byte stream.\r\n     * @returns The Uint8 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @returns 读取的 Uint8 值。\r\n     */\r\n    getUint8(): number {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * @en Reads a Uint8 value from the current byte offset in the byte stream.\r\n     * @returns The Uint8 value that was read.\r\n     * @zh 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @returns 读取的 Uint8 值。\r\n     */\r\n    readUint8(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\r\n        return this._u8d_[this._pos_++];\r\n    }\r\n\r\n    /**\r\n     * @en Writes the specified Uint8 value to the byte stream at the current byte offset.\r\n     * @param value The Uint8 value to be written.\r\n     * @zh 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\r\n     * @param value 需要写入的 Uint8 值。\r\n     */\r\n    writeUint8(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setUint8(this._pos_, value);\r\n        this._pos_++;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads a Uint8 value from the specified byte offset in the byte stream.\r\n     * @param pos The byte offset to read from.\r\n     * @returns The Uint8 value that was read.\r\n     * @zh 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param pos 字节读取位置。\r\n     * @returns 读取的 Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUInt8(pos: number): number {\r\n        return this._readUInt8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads a Uint8 value from the specified byte offset in the byte stream.\r\n     * @param pos The byte offset to read from.\r\n     * @returns The Uint8 value that was read.\r\n     * @zh 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param pos 字节读取位置。\r\n     * @returns 读取的 Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUInt8(pos: number): number {\r\n        return this._d_.getUint8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads a Uint16 value from the specified byte offset in the byte stream.\r\n     * @param pos The byte offset to read from.\r\n     * @returns The Uint16 value that was read.\r\n     * @zh 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param pos 字节读取位置。\r\n     * @returns 读取的 Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUint16(pos: number): number {\r\n        return this._readUint16(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads a Uint16 value from the specified byte offset in the byte stream.\r\n     * @param pos The byte offset to read from.\r\n     * @returns The Uint16 value that was read, taking into account the endianness.\r\n     * @zh 从字节流的指定字节偏移量位置处读取一个 Uint16 值，考虑字节序。\r\n     * @param pos 字节读取位置。\r\n     * @returns 读取的 Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUint16(pos: number): number {\r\n        return this._d_.getUint16(pos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads six values using getFloat32() and returns a Matrix object created from those values.\r\n     * @returns The Matrix object that was created.\r\n     * @zh 使用 getFloat32() 读取六个值，并创建返回一个 Matrix 对象。\r\n     * @returns 创建的 Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _getMatrix(): Matrix {\r\n        return this._readMatrix();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Reads six values using getFloat32() and returns a Matrix object created from those values.\r\n     * @returns The Matrix object that was created.\r\n     * @zh 使用 getFloat32() 读取六个值，并创建返回一个 Matrix 对象。\r\n     * @returns 创建的 Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _readMatrix(): Matrix {\r\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取指定长度的 UTF 型字符串。\r\n     * @param\tlen 需要读取的长度。\r\n     * @return 读取的字符串。\r\n     */\r\n    private _rUTF(len: number): string {\r\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        var strs: any[] = [];\r\n        var n: number = 0;\r\n        strs.length = 1000;\r\n        while (this._pos_ < max) {\r\n            c = u[this._pos_++];\r\n            if (c < 0x80) {\r\n                if (c != 0)\r\n                    //v += f(c);\\\r\n                    strs[n++] = f(c);\r\n            } else if (c < 0xE0) {\r\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else if (c < 0xF0) {\r\n                c2 = u[this._pos_++];\r\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else {\r\n                c2 = u[this._pos_++];\r\n                c3 = u[this._pos_++];\r\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\r\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\r\n                if (_code >= 0x10000) {\r\n                    const _offset = _code - 0x10000;\r\n                    const _lead = 0xd800 | (_offset >> 10);\r\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\r\n                    strs[n++] = f(_lead);\r\n                    strs[n++] = f(_trail);\r\n                }\r\n                else {\r\n                    strs[n++] = f(_code);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        strs.length = n;\r\n        return strs.join('');\r\n        //return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a string of the specified length.\r\n     * @param len The length of the string to read.\r\n     * @returns The string of the specified length.\r\n     * @zh 读取指定长度的字符串。\r\n     * @param len 要读取的字符串的长度。\r\n     * @returns 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getCustomString(len: number): string {\r\n        return this.readCustomString(len);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a string of the specified length.\r\n     * @param len The length of the string to read.\r\n     * @returns The string of the specified length.\r\n     * @zh 读取指定长度的字符串。\r\n     * @param len 要读取的字符串的长度。\r\n     * @returns 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    readCustomString(len: number): string {\r\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        while (len > 0) {\r\n            c = u[this._pos_];\r\n            if (c < 0x80) {\r\n                v += f(c);\r\n                this._pos_++;\r\n                len--;\r\n            } else {\r\n                ulen = c - 0x80;\r\n                this._pos_++;\r\n                len -= ulen;\r\n                while (ulen > 0) {\r\n                    c = u[this._pos_++];\r\n                    c2 = u[this._pos_++];\r\n                    v += f((c2 << 8) | c);\r\n                    ulen--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @en The current position of the Byte object's read/write pointer (in bytes).\r\n     * When reading, the next read operation will start at this position. When writing, the next write operation will start at this position.\r\n     * @zh Byte对象的读写指针的当前位置（以字节为单位）。\r\n     * 下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\r\n     */\r\n    get pos(): number {\r\n        return this._pos_;\r\n    }\r\n\r\n    set pos(value: number) {\r\n        this._pos_ = value;\r\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\r\n        //_d_.byteOffset = value;\r\n    }\r\n\r\n    /**\r\n     * @en The number of bytes available to read from the current position to the end of the byte stream.\r\n     * @zh 从当前位置到字节流末尾可读取的数据的字节数。\r\n     */\r\n    get bytesAvailable(): number {\r\n        return this._length - this._pos_;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the content of the byte array and resets the length and pos properties to 0. Calling this method will release the memory occupied by the Byte instance.\r\n     * @zh 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\r\n     */\r\n    clear(): void {\r\n        this._pos_ = 0;\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Gets the ArrayBuffer reference of this object.\r\n     * @zh 获取此对象的 ArrayBuffer 引用。\r\n     */\r\n    __getBuffer(): ArrayBuffer {\r\n        //this._d_.buffer.byteLength = this.length;\r\n        return this._d_.buffer;\r\n    }\r\n\r\n    /**\r\n     * @en Writes a UTF-8 string to the byte stream. Similar to the writeUTF() method, but writeUTFBytes() does not prefix the string with a 16-bit length word.\r\n     * The corresponding reading method is getUTFBytes.\r\n     * @param value The string to write.\r\n     * @zh 将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字节为字符串添加前缀。\r\n     * 对应的读取方法为： getUTFBytes 。\r\n     * @param value 要写入的字符串。\r\n     */\r\n    writeUTFBytes(value: string): void {\r\n        // utf8-decode\r\n        value = value + \"\";\r\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\r\n            var c: number = value.charCodeAt(i);\r\n\r\n            if (c <= 0x7F) {\r\n                this.writeByte(c);\r\n            } else if (c <= 0x7FF) {\r\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\r\n                this._ensureWrite(this._pos_ + 2);\r\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 2;\r\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\r\n                i++;\r\n                const c2 = value.charCodeAt(i);\r\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                    const _p1 = (c & 0x3FF) + 0x40;\r\n                    const _p2 = c2 & 0x3FF;\r\n\r\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\r\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\r\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\r\n                    const _b4 = 0x80 | (_p2 & 0x3F);\r\n\r\n                    this._ensureWrite(this._pos_ + 4);\r\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\r\n                    this._pos_ += 4;\r\n                }\r\n            } else if (c <= 0xFFFF) {\r\n                this._ensureWrite(this._pos_ + 3);\r\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 3;\r\n            } else {\r\n                this._ensureWrite(this._pos_ + 4);\r\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 4;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Writes a UTF-8 string to the byte stream. First, the length of the UTF-8 string in bytes is written (as a 16-bit integer), followed by the bytes representing the string characters.\r\n     * The corresponding reading method is getUTFString.\r\n     * @param value The string value to write.\r\n     * @zh 将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。\r\n     * 对应的读取方法为： getUTFString 。\r\n     * @param value 要写入的字符串值。\r\n     */\r\n    writeUTFString(value: string): void {\r\n        var tPos: number = this.pos;\r\n        this.writeUint16(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos: number = this.pos - tPos - 2;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint16(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @en Writes a UTF-8 string to the byte stream. First, the length of the UTF-8 string in bytes is written (as a 32-bit integer), followed by the bytes representing the string characters.\r\n     * @param value The string value to write.\r\n     * @zh 将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。\r\n     * @param value 要写入的字符串值。\r\n     */\r\n    writeUTFString32(value: string): void {\r\n        var tPos = this.pos;\r\n        this.writeUint32(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos = this.pos - tPos - 4;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint32(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a UTF-8 string.\r\n     * @returns The read string.\r\n     * @zh 读取 UTF-8 字符串。\r\n     * @returns 读取的字符串。\r\n     */\r\n    readUTFString(): string {\r\n        //var tPos:int = pos;\r\n        //var len:int = getUint16();\r\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\r\n        return this.readUTFBytes(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a UTF-8 string that was written with the writeUTFString32() method.\r\n     * @zh 读取由 writeUTFString32() 方法写入的 UTF-8 字符串。\r\n     */\r\n    readUTFString32(): string {\r\n        return this.readUTFBytes(this.getUint32());\r\n    }\r\n\r\n    /**\r\n     * @en Reads a UTF-8 string from the byte stream, assuming the string is prefixed with an unsigned short indicating the length to read.\r\n     * The corresponding writing method is writeUTFString.\r\n     * @returns The read string.\r\n     * @zh 从字节流中读取一个 UTF-8 字符串，假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。\r\n     * 对应的写入方法为：writeUTFString。\r\n     * @returns 读取的字符串。\r\n     */\r\n    getUTFString(): string {\r\n        return this.readUTFString();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a string that must have been written with the writeUTFBytes method.\r\n     * @param len The length of the buffer to read. If set to -1, all data in the buffer will be read.\r\n     * @returns The read string.\r\n     * @zh 读字符串，必须是 writeUTFBytes 方法写入的字符串。\r\n     * @param len 要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @returns 读取的字符串。\r\n     */\r\n    readUTFBytes(len: number = -1): string {\r\n        if (len === 0) return \"\";\r\n        var lastBytes: number = this.bytesAvailable;\r\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\r\n        len = len > 0 ? len : lastBytes;\r\n        return this._rUTF(len);\r\n    }\r\n\r\n    /**\r\n     * @en Reads a UTF-8 byte sequence of a specified length from the byte stream and returns a string.\r\n     * Typically used to read strings written with the writeUTFBytes method.\r\n     * @param len The length of the buffer to read. If set to -1, all data in the buffer will be read.\r\n     * @returns The read string.\r\n     * @zh 从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。\r\n     * 一般读取的是由 writeUTFBytes 方法写入的字符串。\r\n     * @param len 要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @returns 读取的字符串。\r\n     */\r\n    getUTFBytes(len: number = -1): string {\r\n        return this.readUTFBytes(len);\r\n    }\r\n\r\n    /**\r\n     * @en Writes a byte to the byte stream. Only the lower 8 bits of the parameter are used. The higher 24 bits are ignored.\r\n     * @param value The byte to write (0-255).\r\n     * @zh 在字节流中写入一个字节。只使用参数的低 8 位。忽略高 24 位。\r\n     * @param value 要写入的字节（0-255）。\r\n     */\r\n    writeByte(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setInt8(this._pos_, value);\r\n        this._pos_ += 1;\r\n    }\r\n\r\n    /**\r\n     * @en Reads a signed byte from the byte stream. The return value is in the range of -128 to 127.\r\n     * @returns An integer between -128 and 127.\r\n     * @zh 从字节流中读取带符号的字节。返回值的范围是从 -128 到 127。\r\n     * @returns 介于 -128 和 127 之间的整数。\r\n     */\r\n    readByte(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\r\n        return this._d_.getInt8(this._pos_++);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Reads a signed byte from the byte stream.\r\n     * @zh 从字节流中读取带符号的字节。\r\n     */\r\n    getByte(): number {\r\n        return this.readByte();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Ensures that the available length of this byte stream is at least the value specified by the lengthToEnsure parameter.\r\n     * @param lengthToEnsure The length to ensure is available in the byte stream.\r\n     * @zh 保证该字节流的可用长度不小于 lengthToEnsure 参数指定的值。\r\n     * @param lengthToEnsure 指定的字节流中应确保可用的最小长度。\r\n     */\r\n    _ensureWrite(lengthToEnsure: number): void {\r\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\r\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\r\n    }\r\n\r\n    /**\r\n     * @en Writes a byte sequence from the specified arraybuffer object into the byte stream, starting at the offset and with the specified length.\r\n     * If the length parameter is omitted, the default length of 0 is used, and the method writes the entire buffer from the offset, if the offset is also omitted, the entire buffer is written.\r\n     * The function will throw an exception if the offset or length is less than 0.\r\n     * @param arraybuffer The ArrayBuffer object to write from.\r\n     * @param offset The offset index of the ArrayBuffer object (in bytes).\r\n     * @param length The length to write from the ArrayBuffer object into the Byte object (in bytes).\r\n     * @zh 将指定 arraybuffer 对象中的以 offset 为起始偏移量，length 为长度的字节序列写入字节流。\r\n     * 如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。\r\n     * 如果 offset 或 length 小于0，本函数将抛出异常。\r\n     * @param arraybuffer 需要写入的 Arraybuffer 对象。\r\n     * @param offset Arraybuffer 对象的索引的偏移量（以字节为单位）。\r\n     * @param length 从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）。\r\n     */\r\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\r\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\r\n        if (length == 0) length = arraybuffer.byteLength - offset;\r\n        this._ensureWrite(this._pos_ + length);\r\n        var uint8array: any = new Uint8Array(arraybuffer);\r\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\r\n        this._pos_ += length;\r\n    }\r\n\r\n    /**\r\n     * @en Reads an ArrayBuffer of the specified length from the byte stream.\r\n     * @param length The length of the ArrayBuffer to read.\r\n     * @zh 读取ArrayBuffer数据，长度由参数指定。\r\n     * @param length 要读取的ArrayBuffer的长度。\r\n     */\r\n    readArrayBuffer(length: number): ArrayBuffer {\r\n        var rst: ArrayBuffer;\r\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\r\n        this._pos_ = this._pos_ + length\r\n        return rst;\r\n    }\r\n}\r\n\r\n","/**\r\n * @en The HalfFloatUtils class is used to create the HalfFloat tool.\r\n * @zh HalfFloatUtils 类用于创建HalfFloat工具。\r\n */\r\nexport class HalfFloatUtils {\r\n    /**@internal */\r\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\r\n    /**@internal */\r\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\r\n    /**@internal */\r\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\r\n\r\n    /**@internal */\r\n    private static _baseTable: Uint32Array = new Uint32Array(512);\r\n    /**@internal */\r\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\r\n\r\n    /**@internal */\r\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\r\n    /**@internal */\r\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\r\n    /**@internal */\r\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        for (var i: number = 0; i < 256; ++i) {\r\n            var e: number = i - 127;\r\n            // very small number (0, -0)\r\n            if (e < -27) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // small number (denorm)\r\n            } else if (e < -14) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\r\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\r\n\r\n                // normal number\r\n            } else if (e <= 15) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\r\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n\r\n                // large number (Infinity, -Infinity)\r\n            } else if (e < 128) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // stay (NaN, Infinity, -Infinity)\r\n            } else {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n            }\r\n        }\r\n\r\n        HalfFloatUtils._mantissaTable[0] = 0;\r\n        for (i = 1; i < 1024; ++i) {\r\n            var m: number = i << 13;    // zero pad mantissa bits\r\n            e = 0;          // zero exponent\r\n\r\n            // normalized\r\n            while ((m & 0x00800000) === 0) {\r\n                e -= 0x00800000;    // decrement exponent\r\n                m <<= 1;\r\n            }\r\n\r\n            m &= ~0x00800000;   // clear leading 1 bit\r\n            e += 0x38800000;    // adjust bias\r\n\r\n            HalfFloatUtils._mantissaTable[i] = m | e;\r\n        }\r\n        for (i = 1024; i < 2048; ++i) {\r\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\r\n        }\r\n\r\n        HalfFloatUtils._exponentTable[0] = 0;\r\n        for (i = 1; i < 31; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = i << 23;\r\n        }\r\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\r\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\r\n        for (i = 33; i < 63; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\r\n        }\r\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\r\n\r\n        HalfFloatUtils._offsetTable[0] = 0;\r\n        for (i = 1; i < 64; ++i) {\r\n            if (i === 32) {\r\n                HalfFloatUtils._offsetTable[i] = 0;\r\n            } else {\r\n                HalfFloatUtils._offsetTable[i] = 1024;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en round a number to a half float number bits.\r\n     * @param num The number to round.\r\n     * @zh 将数字四舍五入到最接近的半浮点数。\r\n     * @param num 要舍入的数字。\r\n     */\r\n    static roundToFloat16Bits(num: number): number {\r\n        HalfFloatUtils._floatView[0] = num;\r\n        var f: number = HalfFloatUtils._uint32View[0];\r\n        var e: number = (f >> 23) & 0x1ff;\r\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\r\n    }\r\n\r\n    /**\r\n     * @en Converts a half-precision floating-point number in bits to a JavaScript number.\r\n     * @param float16bits  half float number bits\r\n     * @zh 将半精度浮点数的位转换为 JavaScript 数字。\r\n     * @param float16bits 半精度浮点数\r\n     */\r\n    static convertToNumber(float16bits: number): number {\r\n        var m: number = float16bits >> 10;\r\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\r\n        return HalfFloatUtils._floatView[0];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst FOURCC_DXT1: number = 827611204;\r\nconst FOURCC_DXT3 = 861165636;\r\nconst FOURCC_DXT4 = 877942852;\r\nconst FOURCC_DXT5: number = 894720068;\r\nconst FOURCC_DX10 = 808540228;\r\nconst DDPF_FOURCC: number = 0x4;\r\nconst DDPF_RGB = 0x40;\r\nconst DDSCAPS2_CUBEMAP = 0x200;\r\nconst DDPF_LUMINANCE = 0x20000;\r\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\r\nconst DDS_MAGIC: number = 0x20534444;\r\nconst DDS_HEADER_LENGTH: number = 31;\r\nconst DDS_DXGI_FORMAT: number = 32;\r\nconst DDS_HEADER_MAGIC: number = 0;\r\nconst DDS_HEADER_SIZE: number = 1;\r\nconst DDS_HEADER_FLAGS: number = 2;\r\nconst DDS_HEADER_HEIGHT: number = 3;\r\nconst DDS_HEADER_WIDTH: number = 4;\r\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\r\nconst DDS_HEADER_PF_FLAGS: number = 20;\r\nconst DDS_HEADER_PF_FOURCC: number = 21;\r\nconst DDS_HEADER_PF_RGBBPP: number = 22;\r\nconst DDS_HEADER_PF_CAPS2: number = 28;\r\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\r\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\r\n\r\nconst Int32ToFourCC = (value: number) => {\r\n    return String.fromCharCode(\r\n        value & 0xff,\r\n        (value >> 8) & 0xff,\r\n        (value >> 16) & 0xff,\r\n        (value >> 24) & 0xff\r\n    );\r\n}\r\n\r\n/**\r\n * dds 未存储 color space 需要手动指定\r\n */\r\nexport class DDSTextureInfo {\r\n\r\n    width: number;\r\n    height: number;\r\n    mipmapCount: number;\r\n    isCube: boolean;\r\n    bpp: number;\r\n    blockBytes: number;\r\n    format: TextureFormat;\r\n    compressed: boolean;\r\n    dataOffset: number;\r\n    source: ArrayBuffer;\r\n\r\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mipmapCount = mipmapCount;\r\n        this.isCube = isCube;\r\n        this.blockBytes = blockBytes;\r\n        this.dataOffset = dataOffset;\r\n        this.format = format;\r\n        this.source = sourceData;\r\n        this.bpp = bpp;\r\n        this.compressed = compressed;\r\n    }\r\n\r\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\r\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\r\n\r\n        let width = header[DDS_HEADER_WIDTH];\r\n        let height = header[DDS_HEADER_HEIGHT];\r\n\r\n        let mipmapCount = 1;\r\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\r\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\r\n        }\r\n\r\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\r\n\r\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\r\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\r\n\r\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\r\n\r\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\r\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\r\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\r\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5 || fourCC === FOURCC_DXT4);\r\n\r\n        let layaTexFormat = TextureFormat.DXT1;\r\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\r\n        let blockBytes = 1;\r\n        // todo  DXT10  unCompressed texture ?\r\n        switch (fourCC) {\r\n            case FOURCC_DXT1:\r\n                layaTexFormat = TextureFormat.DXT1;\r\n                blockBytes = 8;\r\n                break;\r\n            case FOURCC_DXT3:\r\n                layaTexFormat = TextureFormat.DXT3;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_DXT4:\r\n            case FOURCC_DXT5:\r\n                layaTexFormat = TextureFormat.DXT5;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_D3DFMT_R16G16B16A16F:\r\n                layaTexFormat = TextureFormat.R16G16B16A16;\r\n                blockBytes = 4;\r\n                break;\r\n            case FOURCC_D3DFMT_R32G32B32A32F:\r\n                layaTexFormat = TextureFormat.R32G32B32A32;\r\n                blockBytes = 4;\r\n                break;\r\n            default:\r\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\r\n        }\r\n\r\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\r\n            throw \"Invalid magic number in DDS header\";\r\n        }\r\n        if (!isFourCC && !isRGB && !isLuminance) {\r\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\r\n        }\r\n\r\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\r\n\r\n        if (isCompressed && !ext) {\r\n            throw \"Compressed textures are not supported on this platform.\";\r\n        }\r\n\r\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\r\n    }\r\n\r\n}","\r\nexport enum TextureDimension {\r\n    Tex2D,\r\n    Cube,\r\n    Tex3D,\r\n    Texture2DArray,\r\n    CubeArray,\r\n    Unkonw,\r\n    None\r\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst KTX1FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst KTX2FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst IdentifierByteSize = 12;\r\nconst HeaderSize = 13;\r\n\r\n/** etc1 */\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\r\n\r\n/** etc2 */\r\nconst COMPRESSED_R11_EAC = 37488;\r\nconst COMPRESSED_RG11_EAC = 37490;\r\nconst COMPRESSED_RGB8_ETC2 = 37492;\r\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\r\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\r\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\r\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\r\nconst COMPRESSED_SRGB8_ETC2 = 37493;\r\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\r\n\r\n/** astc */\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\r\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\r\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\r\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\r\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\r\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\r\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\r\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\r\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\r\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\r\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\r\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\r\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\r\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\r\n\r\n/** pvr */\r\n// todo\r\n\r\n\r\n/** gl param for unCompressed image data*/\r\nconst GL_FORMAT_RGBA = 6408;\r\nconst GL_FORMAT_RGB = 6407;\r\nconst GL_FORMAT_RGBA32F = 0x8814;\r\nconst GL_FORMAT_RGB32F = 0x8815;\r\nconst GL_FORMAT_RGBA16F = 0x881A;\r\nconst GL_FORMAT_RGB16F = 0x881B;\r\nconst GL_FORMAT_SRGB8 = 0x8C41;\r\n\r\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\r\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\r\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\r\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\r\n\r\n// gl data type\r\nconst GL_DATATYPE_BYTE = 0x1400;\r\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\r\nconst GL_DATATYPE_SHORT = 0x1402;\r\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\r\nconst GL_DATATYPE_INT = 0x1404;\r\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\r\nconst GL_DATATYPE_FLOAT = 0x1406;\r\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\r\n\r\n/**\r\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\r\n */\r\nexport class KTXTextureInfo {\r\n\r\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\r\n\r\n        if (glFormat == 0) {\r\n            switch (glInternalFormat) {\r\n                /** etc1 */\r\n                case COMPRESSED_RGB_ETC1_WEBGL:\r\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\r\n                /** etc2 */\r\n                // todo etc2 其他格式\r\n                case COMPRESSED_RGBA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\r\n                case COMPRESSED_RGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\r\n                case COMPRESSED_SRGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\r\n                case COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB_Alpha1, sRGB: false };\r\n                case COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha1, sRGB: true };\r\n\r\n                /** astc */\r\n                // todo astc 其他格式\r\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\r\n                default:\r\n                    throw \"KTX: UnSupported Compressed format.\";\r\n            }\r\n        }\r\n        else {\r\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: false };\r\n            }\r\n            else {\r\n                throw \"ktx: Unsupported UnCompressed image data.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n\r\n        let FileIdentifier = new Uint8Array(source, 0, 12);\r\n\r\n        // ktx2\r\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            throw \"ktx2 !\"\r\n        }\r\n        // ktx1\r\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            return KTXTextureInfo.createKTX1Info(source);\r\n        }\r\n        else {\r\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\r\n        }\r\n    }\r\n\r\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\r\n\r\n        let endianness = headerDataView.getUint32(0, true);\r\n        let littleEndian = endianness == 0x04030201;\r\n\r\n        // header\r\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\r\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\r\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\r\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\r\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\r\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\r\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\r\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\r\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\r\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\r\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\r\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\r\n        let compressed = glType == 0;\r\n\r\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\r\n        let layaFormat = formatInfo.format;\r\n        let sRGBData = formatInfo.sRGB;\r\n\r\n        // todo  3d texture\r\n        let layaDemision = TextureDimension.Tex2D;\r\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.CubeArray;\r\n        }\r\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\r\n            layaDemision = TextureDimension.Cube;\r\n        }\r\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.Texture2DArray;\r\n        }\r\n\r\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\r\n\r\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\r\n\r\n    }\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\r\n\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * @en Interface for texture property parameters.\r\n * @zh 纹理属性参数接口。\r\n */\r\nexport interface TexturePropertyParams {\r\n    /**\r\n     * @en Texture U-coordinate line break mode.\r\n     * @zh 纹理 U 坐标换行模式。\r\n     */\r\n    wrapModeU?: number,\r\n    /**\r\n     * @en Texture V-coordinate line break mode.\r\n     * @zh 纹理 V 坐标换行模式。\r\n     */\r\n    wrapModeV?: number,\r\n    /**\r\n     * @en The filter mode for the texture.\r\n     * @zh 纹理的过滤模式。\r\n     */\r\n    filterMode?: FilterMode,\r\n    /**\r\n     * @en The anisotropic filtering level for the texture.\r\n     * @zh 纹理的各向异性过滤级别。\r\n     */\r\n    anisoLevel?: number,\r\n    /**\r\n     * @en Whether to premultiply the alpha channel.\r\n     * @zh 是否预乘alpha通道。\r\n     */\r\n    premultiplyAlpha?: boolean,\r\n    /**\r\n     * @en The HDR encoding format for the texture.\r\n     * @zh 纹理的HDR编码格式。\r\n     */\r\n    hdrEncodeFormat?: HDREncodeFormat,\r\n}\r\n\r\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\r\n\r\n/**\r\n * @en The Texture2D class is used to generate 2D textures.\r\n * @zh Texture2D 类用于生成2D纹理。\r\n */\r\nexport class Texture2D extends BaseTexture {\r\n    /**\r\n     * @en The identifier for Texture2D resources.\r\n     * @zh Texture2D 资源的标识符。\r\n     */\r\n    static TEXTURE2D: string = \"TEXTURE2D\";\r\n\r\n    /**\r\n     * @en A pure gray texture.\r\n     * @zh 纯灰色纹理。\r\n     */\r\n    static grayTexture: Texture2D = null;\r\n    /**\r\n     * @en A pure white texture.\r\n     * @zh 纯白色纹理。\r\n     */\r\n    static whiteTexture: Texture2D = null;\r\n    /**\r\n     * @en A pure black texture.\r\n     * @zh 纯黑色纹理。\r\n     */\r\n    static blackTexture: Texture2D = null;\r\n    /**\r\n     * @en The default normal map texture.\r\n     * @zh 默认法线纹理。\r\n     */\r\n    static normalTexture: Texture2D = null;\r\n    /**\r\n     * @en The error texture displayed when a texture fails to load.\r\n     * @zh 当纹理加载失败时显示的错误纹理。\r\n     */\r\n    static errorTexture: Texture2D = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        var pixels: Uint8Array = new Uint8Array(4);\r\n        pixels[0] = 128;\r\n        pixels[1] = 128;\r\n        pixels[2] = 128;\r\n        pixels[3] = 255;\r\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.grayTexture.name = \"Default_Gray\";\r\n        pixels[0] = 255;\r\n        pixels[1] = 255;\r\n        pixels[2] = 255;\r\n        pixels[3] = 255;\r\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.whiteTexture.name = \"Default_White\";\r\n        pixels[0] = 0;\r\n        pixels[1] = 0;\r\n        pixels[2] = 0;\r\n        pixels[3] = 255;\r\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.blackTexture.name = \"Default_Black\";\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n            let floatPixle = new Uint16Array(4);\r\n            floatPixle[0] = 14336;\r\n            floatPixle[1] = 14336;\r\n            floatPixle[2] = 15360;\r\n            floatPixle[3] = 15360;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16A16, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\r\n        }\r\n        else {\r\n            pixels[0] = 128;\r\n            pixels[1] = 128;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\r\n        }\r\n\r\n        Texture2D.normalTexture.lock = true;\r\n        Texture2D.normalTexture.name = \"Default_Normal\";\r\n        Texture2D.errorTexture = Texture2D.whiteTexture;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        var byte: Byte = new Byte(data);\r\n        var version: String = byte.readUTFString();\r\n        var texture: Texture2D;\r\n        var pixelDataArrays: Float32Array | Uint16Array;\r\n        var usePixelData: Float32Array | Uint16Array;\r\n        switch (version) {\r\n            case \"LAYAANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\r\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\r\n                pixelDataArrays.set(usePixelData, 0);\r\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                texture.setPixelsData(pixelDataArrays, false, false);\r\n                texture.filterMode = FilterMode.Point;\r\n                break;\r\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\r\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\r\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\r\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\r\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\r\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\r\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\r\n                    }\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n\r\n                } else {\r\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\r\n                    usePixelData.set(pixelDataArrays, 0);\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n                }\r\n                break;\r\n            default:\r\n                throw \"Laya3D:unknow version.\";\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n\r\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\r\n        let mipmap = constructParams ? constructParams[3] : true;\r\n        let canread = constructParams ? constructParams[4] : false;\r\n        let srgb = constructParams ? constructParams[5] : false;\r\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\r\n        // todo  srgb\r\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\r\n\r\n        if (propertyParams) {\r\n            texture.setImageData(imageSource, pma, false);\r\n            texture.setProperties(propertyParams);\r\n        }\r\n        else\r\n            texture.setImageData(imageSource, false, false);\r\n\r\n        if (canread) {\r\n            if (LayaEnv.isConch && imageSource._nativeObj) {\r\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\r\n            } else {\r\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\r\n                ILaya.Browser.canvas.clear();\r\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\r\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n\r\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n\r\n        let sRGB = constructParams[5];\r\n\r\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, sRGB);\r\n\r\n        texture.setDDSData(ddsInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\r\n\r\n        texture.setKTXData(ktxInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n        throw \"pvr !\";\r\n    }\r\n\r\n    /**\r\n     * @en Loads a texture from the specified URL.\r\n     * @param url The path to the texture file.\r\n     * @param complete The callback function to be called after the texture is loaded.\r\n     * @zh 从指定的 URL 加载纹理。\r\n     * @param url 纹理文件的路径。\r\n     * @param complete 纹理加载完成后的回调函数。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**@internal */\r\n    _canRead: boolean = false;\r\n    /**@internal */\r\n    _pixels: Uint8Array;\r\n\r\n    /**\r\n     * @en Creates an instance of Texture2D.\r\n     * @param width The width of the texture.\r\n     * @param height The height of the texture.\r\n     * @param format The format of the texture.\r\n     * @param mipmap Indicates whether to generate mipmaps for the texture.\r\n     * @param canRead Indicates whether the texture data can be read.\r\n     * @param sRGB Indicates whether the texture uses sRGB color space.\r\n     * @param premultiplyAlpha Indicates whether the texture data is premultiplied by the alpha channel.\r\n     * @zh 创建 Texture2D 类的实例。\r\n     * @param width 纹理的宽度。\r\n     * @param height 纹理的高度。\r\n     * @param format 纹理的格式。\r\n     * @param mipmap 是否为纹理生成mipmap。\r\n     * @param canRead 纹理数据是否可以读取。\r\n     * @param sRGB 纹理是否使用sRGB色彩空间。\r\n     * @param premultiplyAlpha 纹理数据是否预乘alpha通道。\r\n     */\r\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._gammaSpace = sRGB;\r\n        this._canRead = canRead;\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the image data for the texture.\r\n     * @param source The image source, can be an `HTMLImageElement`, `HTMLCanvasElement`, or `ImageBitmap`.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha.\r\n     * @param invertY Whether to invert the Y-axis of the image.\r\n     * @zh 设置纹理的图像数据。\r\n     * @param source 图像源，可以是 `HTMLImageElement`、`HTMLCanvasElement` 或 `ImageBitmap`。\r\n     * @param premultiplyAlpha 是否预乘 alpha。\r\n     * @param invertY 是否反转图像的 Y 轴。\r\n     */\r\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the pixel data for the texture.\r\n     * @param source The pixel data to be set.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha.\r\n     * @param invertY Whether to invert the Y-axis of the pixel data.\r\n     * @zh 设置纹理的像素数据。\r\n     * @param source 要设置的像素数据。\r\n     * @param premultiplyAlpha 是否预乘 alpha。\r\n     * @param invertY 是否反转像素数据的 Y 轴。\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a sub-region of pixel data for the texture.\r\n     * @param xOffset The x-offset for the sub-region.\r\n     * @param yOffset The y-offset for the sub-region.\r\n     * @param width The width of the sub-region.\r\n     * @param height The height of the sub-region.\r\n     * @param pixels The pixel data for the sub-region.\r\n     * @param mipmapLevel The mipmap level to update, if mipmap is enabled.\r\n     * @param generateMipmap Whether to generate mipmaps for the updated region.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha channel of the pixel data.\r\n     * @param invertY Whether to invert the Y-axis of the pixel data.\r\n     * @zh 设置纹理的子区域像素数据。\r\n     * @param xOffset 子区域的 x 偏移。\r\n     * @param yOffset 子区域的 y 偏移。\r\n     * @param width 子区域的宽度。\r\n     * @param height 子区域的高度。\r\n     * @param pixels 子区域的像素数据。\r\n     * @param mipmapLevel 要更新的mipmap等级，如果mipmap为true。\r\n     * @param generateMipmap 是否为更新的区域生成mipmap。\r\n     * @param premultiplyAlpha 是否预乘子区域的像素数据的 alpha 通道。\r\n     * @param invertY 是否反转子区域的像素数据的 Y 轴。\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the DDS  data for the texture.\r\n     * @param ddsInfo The DDS texture information containing the data to be set.\r\n     * @zh 设置纹理的 DDS 数据。\r\n     * @param ddsInfo DDS 纹理信息，包含要设置的数据。\r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the KTX  data for the texture.\r\n     * @param ktxInfo The KTX texture information containing the data to be set.\r\n     * @zh 设置纹理的 KTX 数据。\r\n     * @param ktxInfo KTX 纹理信息，包含要设置的数据。\r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the HDR data for the texture.\r\n     * @param hdrInfo The HDR texture information containing the data to be set.\r\n     * @zh 设置纹理的 HDR 数据。\r\n     * @param hdrInfo HDR 纹理信息，包含要设置的数据。\r\n     */\r\n    setHDRData(hdrInfo: HDRTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\r\n    }\r\n\r\n    /**\r\n     * @en The default texture.\r\n     * @zh 默认纹理。\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the pixel data from the texture.\r\n     * @zh 从纹理中检索像素数据。\r\n     */\r\n    getPixels() {\r\n        if (this._canRead && this._pixels) {\r\n            return this._pixels;\r\n        }\r\n        else {\r\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\r\n        }\r\n    }\r\n\r\n    private setProperties(propertyParams: TexturePropertyParams) {\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n    }\r\n}","import { TextureFormat } from \"./TextureFormat\";\r\n\r\nexport enum RenderTargetFormat {\r\n \r\n    None = -1,\r\n    /**使用RGB的纹理，不可设置SRGB参数 */\r\n    R8G8B8 = TextureFormat.R8G8B8,\r\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\r\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\r\n    R32G32B32 = TextureFormat.R32G32B32,\r\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\r\n    R16G16B16 = TextureFormat.R16G16B16,\r\n    \r\n    DEPTH_16 = 35,\r\n    STENCIL_8 = 36,\r\n    DEPTHSTENCIL_24_8 = 37,\r\n    DEPTH_32 = 38,\r\n    DEPTHSTENCIL_24_Plus = 39\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * @en The Color class is used to create color instances.\r\n * @zh Color类用于创建颜色实例。\r\n */\r\nexport class Color implements IClone {\r\n    /**\r\n     * @en Red color\r\n     * @zh 红色\r\n     */\r\n    static RED: Color = new Color(1, 0, 0, 1);\r\n    /**\r\n     * @en Green color\r\n     * @zh 绿色\r\n     */\r\n    static GREEN: Color = new Color(0, 1, 0, 1);\r\n    /**\r\n     * @en Blue color\r\n     * @zh 蓝色\r\n     */\r\n    static BLUE: Color = new Color(0, 0, 1, 1);\r\n    /**\r\n     * @en Cyan color\r\n     * @zh 蓝绿色\r\n     */\r\n    static CYAN: Color = new Color(0, 1, 1, 1);\r\n    /**\r\n     * @en Yellow color\r\n     * @zh 黄色\r\n     */\r\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\r\n    /**\r\n     * @en Magenta color\r\n     * @zh 品红色\r\n     */\r\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\r\n    /**\r\n     * @en Gray color\r\n     * @zh 灰色\r\n     */\r\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\r\n    /**\r\n     * @en White color\r\n     * @zh 白色\r\n     */\r\n    static WHITE: Color = new Color(1, 1, 1, 1);\r\n    /**\r\n     * @en Black color\r\n     * @zh 黑色\r\n     */\r\n    static BLACK: Color = new Color(0, 0, 0, 1);\r\n    /**\r\n     * @en Fully transparent\r\n     * @zh 全透明\r\n     */\r\n    static CLEAR: Color = new Color(0, 0, 0, 0);\r\n\r\n    /**\r\n     * @en Convert gamma space value to linear space.\r\n     * @param value The value in gamma space.\r\n     * @returns The value in linear space.\r\n     * @zh 将 Gamma 空间值转换为线性空间值。\r\n     * @param value Gamma 空间值。\r\n     * @returns 线性空间值。\r\n     */\r\n    static gammaToLinearSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  cs / 12.92,                 cs <= 0.04045 }\r\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\r\n        if (value <= 0.04045)\r\n            return value / 12.92;\r\n        else if (value < 1.0)\r\n            return Math.pow((value + 0.055) / 1.055, 2.4);\r\n        else\r\n            return Math.pow(value, 2.4);\r\n    }\r\n\r\n    /**\r\n     * @en Convert linear space value to gamma space.\r\n     * @param value The value in linear space.\r\n     * @returns The value in gamma space.\r\n     * @zh 将线性空间值转换为 Gamma 空间值。\r\n     * @param value 线性空间值。\r\n     * @returns Gamma 空间值。\r\n     */\r\n    static linearToGammaSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  0.0,                          0         <= cl\r\n        // {  12.92 * c,                    0         <  cl < 0.0031308\r\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\r\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\r\n        if (value <= 0.0)\r\n            return 0.0;\r\n        else if (value <= 0.0031308)\r\n            return 12.92 * value;\r\n        else if (value <= 1.0)\r\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\r\n        else\r\n            return Math.pow(value, 0.41666);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Red component\r\n     * @zh 红色分量\r\n     */\r\n    r: number;\r\n\r\n    /**\r\n     * @en Green component\r\n     * @zh 绿色分量\r\n     */\r\n    g: number;\r\n\r\n    /**\r\n     * @en Blue component\r\n     * @zh 蓝色分量\r\n     */\r\n    b: number;\r\n\r\n    /**\r\n     * @en Alpha component\r\n     * @zh 透明度分量\r\n     */\r\n    a: number;\r\n\r\n    /**\r\n     * @en Constructor method Color.\r\n     * @param r Red component (0-1).\r\n     * @param g Green component (0-1).\r\n     * @param b Blue component (0-1).\r\n     * @param a Alpha component (0-1).\r\n     * @zh 构造函数,初始化颜色实例。\r\n     * @param r 红色分量（0-1）。\r\n     * @param g 绿色分量（0-1）。\r\n     * @param b 蓝色分量（0-1）。\r\n     * @param a 透明度分量（0-1）。\r\n     */\r\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * @en Check if two colors are equal.\r\n     * @param c The color to compare with.\r\n     * @returns True if the colors are equal, false otherwise.\r\n     * @zh 判断两个颜色是否相等。\r\n     * @param c 要比较的颜色。\r\n     * @returns 如果颜色相等则返回 true，否则返回 false。\r\n     */\r\n    equal(c: Color): boolean {\r\n        if (!c) return false;\r\n        const toFIxed = (a: number, b: number) => {\r\n            var delta = 1e-5;\r\n            return -delta < a - b && a - b < delta;\r\n        }\r\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\r\n    }\r\n\r\n    /**\r\n     * @en Convert from gamma space to linear space.\r\n     * @param out The output color in linear space.\r\n     * @zh 从 Gamma 空间转换到线性空间。\r\n     * @param out 输出的线性空间颜色。\r\n     */\r\n    toLinear(out: Color): void {\r\n        out.r = Color.gammaToLinearSpace(this.r);\r\n        out.g = Color.gammaToLinearSpace(this.g);\r\n        out.b = Color.gammaToLinearSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * @en Convert from linear space to gamma space.\r\n     * @param out The output color in gamma space.\r\n     * @zh 从线性空间转换到 Gamma 空间。\r\n     * @param out 输出的 Gamma 空间颜色。\r\n     */\r\n    toGamma(out: Color): void {\r\n        out.r = Color.linearToGammaSpace(this.r);\r\n        out.g = Color.linearToGammaSpace(this.g);\r\n        out.b = Color.linearToGammaSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * @en Clone the color to another object.\r\n     * @param destObject The target object to clone to.\r\n     * @zh 克隆颜色到目标对象。\r\n     * @param destObject 目标克隆对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destColor: Color = (<Color>destObject);\r\n        destColor.r = this.r;\r\n        destColor.g = this.g;\r\n        destColor.b = this.b;\r\n        destColor.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * @en Scale the color.\r\n     * @param value The scale value.\r\n     * @returns The scaled color.\r\n     * @zh 缩放颜色。\r\n     * @param value 缩放值。\r\n     * @returns 缩放后的颜色。\r\n     */\r\n    scale(value: number): Color {\r\n        this.r = this.r * value;\r\n        this.g = this.g * value;\r\n        this.b = this.b * value;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the color components (0-1).\r\n     * @param r Red component.\r\n     * @param g Green component.\r\n     * @param b Blue component.\r\n     * @param a Alpha component.\r\n     * @zh 设置颜色分量（0-1）。\r\n     * @param r 红色分量。\r\n     * @param g 绿色分量。\r\n     * @param b 蓝色分量。\r\n     * @param a 透明度分量。\r\n     */\r\n    setValue(r: number, g: number, b: number, a: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * @en Convert from Array to color.\r\n     * @param array The source array.\r\n     * @param offset The offset of the array.\r\n     * @zh 从Array数组拷贝值。\r\n     * @param array 数组。\r\n     * @param offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.r = array[offset + 0];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n        this.a = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * @en Convert to Array.\r\n     * @returns An array representing the color [r, g, b, a].\r\n     * @zh 转换为Array数组\r\n     * @returns 表示颜色的数组 [r, g, b, a]。\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    /**\r\n     * @en Clone the color.\r\n     * @returns The cloned color.\r\n     * @zh 克隆颜色。\r\n     * @returns 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Color = new Color();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\"\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { InternalRenderTarget } from \"../RenderDriver/DriverDesign/RenderDevice/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderTarget\";\r\n/**\r\n * @en RenderTexture2D class used to create 2D render targets.\r\n * @zh RenderTexture2D 类用于创建2D渲染目标。\r\n */\r\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    private static _currentActive: RenderTexture2D;\r\n    static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    static _clear: boolean = false;\r\n    static _clearLinearColor: Color = new Color();\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    /**\r\n     * @en Default UV coordinates.\r\n     * @zh 默认的UV坐标。\r\n     */\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    /**\r\n     * @en Default flipped UV coordinates.\r\n     * @zh 默认翻转的UV坐标。\r\n     */\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * @en The currently active RenderTexture.\r\n     * @zh 当前激活的渲染纹理。\r\n     */\r\n    static get currentActive(): RenderTexture2D {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n\r\n    private _depthStencilFormat: number;\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n    /**@internal */\r\n    _invertY: boolean = false;\r\n    /**\r\n     * @en Depth format.\r\n     * @zh 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @en The default texture.\r\n     * @zh 默认纹理。\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether the RenderTexture2D is ready.\r\n     * @zh 检查2D渲染纹理是否准备好。\r\n     */\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en The source width of the RenderTexture2D.\r\n     * @zh 2D渲染纹理的源宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * @en The source height of the RenderTexture2D.\r\n     * @zh 2D渲染纹理的源高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * @en The X-axis offset of the RenderTexture2D.\r\n     * @zh 2D渲染纹理的X轴偏移。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en The Y-axis offset of the RenderTexture2D.\r\n     * @zh 2D渲染纹理的Y轴偏移。\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en Depth stencil texture\r\n     * @zh 深度模板纹理\r\n     */\r\n    depthStencilTexture: BaseTexture;\r\n\r\n    /**\r\n     * @ignore\r\n     * @en The RenderTarget.\r\n     * @zh 渲染目标。\r\n     */\r\n    _renderTarget: InternalRenderTarget;\r\n    /**\r\n     * @en Whether the RenderTexture2D is a CameraTarget.\r\n     * @zh 是否是CameraTarget\r\n     */\r\n    _isCameraTarget: boolean;\r\n\r\n\r\n    /**\r\n     * @en Creates an instance of RenderTexture2D.\r\n     * @param width The width.\r\n     * @param height The height.\r\n     * @param format The texture format.\r\n     * @param depthStencilFormat The depth format.\r\n     * @zh 创建 RenderTexture2D 类的实例。\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     */\r\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the render target is a cube render target.\r\n     * @zh 渲染目标是否是立方体贴图渲染目标。\r\n     */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**\r\n     * @en The number of samples for the render target.\r\n     * @zh 渲染目标的采样数。\r\n     */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if mipmaps are generated for the render target.\r\n     * @zh 检查是否为渲染目标生成了mipmaps。\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _create() {\r\n        // todo  mipmap\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\r\n        this._texture = this._renderTarget._textures[0];\r\n        this._texture.gammaCorrection = 2.2;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the render texture.\r\n     * @param r The red component.\r\n     * @param g The green component.\r\n     * @param b The blue component.\r\n     * @param a The alpha component, default is 1.0 for full opacity.\r\n     * @zh 清理渲染纹理。\r\n     * @param r 红色分量。\r\n     * @param g 绿色分量。\r\n     * @param b 蓝色分量。\r\n     * @param a 透明度分量，默认为1.0表示完全不透明。\r\n     */\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n        RenderTexture2D._clearColor.r = r;\r\n        RenderTexture2D._clearColor.g = g;\r\n        RenderTexture2D._clearColor.b = b;\r\n        RenderTexture2D._clearColor.a = a;\r\n        RenderTexture2D._clear = true;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the pixel data from the render texture within the specified area.\r\n     * @param x The X coordinate of the pixel area.\r\n     * @param y The Y coordinate of the pixel area.\r\n     * @param width The width of the pixel area.\r\n     * @param height The height of the pixel area.\r\n     * @returns The pixel data from the specified area.\r\n     * @zh 从指定区域获取渲染纹理的像素数据。\r\n     * @param x 像素区域的X坐标。\r\n     * @param y 像素区域的Y坐标。\r\n     * @param width 像素区域的宽度。\r\n     * @param height 像素区域的高度。\r\n     * @returns 指定区域的像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Recycles the RenderTexture2D.\r\n     * @zh 回收渲染纹理。\r\n     */\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        //width 和height为0的时候不会创建资源\r\n        this._renderTarget && this._renderTarget.dispose();\r\n    }\r\n\r\n}","import { Texture2D } from \"./Texture2D\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\n\r\nconst _rect1 = new Rectangle();\r\nconst _rect2 = new Rectangle();\r\n\r\n/**\r\n * @en The Texture is a texture processing class.\r\n * @zh Texture 是一个纹理处理类。\r\n */\r\nexport class Texture extends Resource {\r\n    /**\r\n     * @en Default UV information.\r\n     * @zh 默认 UV 信息。\r\n     */\r\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\r\n    /**\r\n     * @en No UV information.\r\n     * @zh 无 UV 信息\r\n     */\r\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n    /**\r\n     * @en Inverse UV information.\r\n     * @zh 反转 UV 信息。\r\n     */\r\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\r\n\r\n    /**\r\n     * @en Range of UV\r\n     * @zh uv的范围\r\n     */\r\n    uvrect: number[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\r\n    private _bitmap: BaseTexture;\r\n    /**@internal */\r\n    public _uv: ArrayLike<number>;\r\n    private _w: number = 0;\r\n    private _h: number = 0;\r\n\r\n    /**\r\n     * @en The offset along the X-axis.\r\n     * @zh 沿 X 轴的偏移量。\r\n     */\r\n    offsetX: number = 0;\r\n    /**\r\n     * @en The offset along the Y-axis.\r\n     * @zh 沿 Y 轴的偏移量。\r\n     */\r\n    offsetY: number = 0;\r\n    /**\r\n     * @en The original width of the texture, including any transparent areas that have been cropped out.\r\n     * @zh 包括已被裁剪掉的透明区域的纹理原始宽度。\r\n     */\r\n    sourceWidth: number = 0;\r\n    /**\r\n     * @en The original height of the texture, including any transparent areas that have been cropped out.\r\n     * @zh 包括已被裁剪掉的透明区域的纹理原始高度。\r\n     */\r\n    sourceHeight: number = 0;\r\n    /**\r\n     * @en The URL of the texture image.\r\n     * @zh 纹理图片的地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * @en The UUID of the texture.\r\n     * @zh 纹理的 UUID。\r\n     */\r\n    uuid: string;\r\n    /**\r\n     * @en The scale rate of the texture.\r\n     * @zh 纹理的缩放率。\r\n     */\r\n    scaleRate: number = 1;\r\n\r\n    /**\r\n     * 九宫格\r\n     * @internal\r\n     */\r\n    _sizeGrid?: Array<number>;\r\n    /**\r\n     * 状态数量\r\n     * @internal\r\n     */\r\n    _stateNum?: number;\r\n\r\n    /**@internal */\r\n    _clipCache: Map<string, Texture>;\r\n\r\n    /**\r\n     * @en Creates a `Texture` object based on the specified source, coordinates, dimensions, and offsets.\r\n     * @param source The source texture, either a `Texture2D` or a `Texture` object.\r\n     * @param x The starting absolute x coordinate.\r\n     * @param y The starting absolute y coordinate.\r\n     * @param width The absolute width.\r\n     * @param height The absolute height.\r\n     * @param offsetX The offset on the X-axis (optional). It is the position of [x, y] relative to the original small image. Generally, it is positive, indicating that the size of the blank edge has been cut off. If it is negative, it usually indicates that a protective edge has been added\r\n     * @param offsetY The offset on the Y-axis (optional).\r\n     * @param sourceWidth The original width, including any cropped transparent areas (optional).\r\n     * @param sourceHeight The original height, including any cropped transparent areas (optional).\r\n     * @returns A `Texture` object.\r\n     * @zh 根据指定的资源、坐标、宽高和偏移量等创建 `Texture` 对象。\r\n     * @param source 资源，可以是 `Texture2D` 或 `Texture` 对象。\r\n     * @param x 绝对坐标 x 。\r\n     * @param y 绝对坐标 y 。\r\n     * @param width 绝对宽度。\r\n     * @param height 绝对高度。\r\n     * @param offsetX X 轴偏移量（可选）。 就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\r\n     * @param offsetY Y 轴偏移量（可选）。\r\n     * @param sourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param sourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @return `Texture` 对象。\r\n     */\r\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\r\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @param\toutTexture 返回的Texture对象。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\r\n        var btex: boolean = source instanceof Texture;\r\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\r\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\r\n\r\n        if (bitmap.width && (x + width) > bitmap.width)\r\n            width = bitmap.width - x;\r\n        if (bitmap.height && (y + height) > bitmap.height)\r\n            height = bitmap.height - y;\r\n        var tex: Texture;\r\n        if (outTexture) {\r\n            tex = outTexture;\r\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\r\n        } else {\r\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\r\n        }\r\n        tex.width = width;\r\n        tex.height = height;\r\n        tex.offsetX = offsetX;\r\n        tex.offsetY = offsetY;\r\n\r\n        var dwidth: number = 1 / bitmap.width;\r\n        var dheight: number = 1 / bitmap.height;\r\n        x *= dwidth;\r\n        y *= dheight;\r\n        width *= dwidth;\r\n        height *= dheight;\r\n\r\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\r\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\r\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\r\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\r\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\r\n\r\n        var bitmapScale: number = (<Texture>source).scaleRate;\r\n        if (bitmapScale && bitmapScale != 1) {\r\n            tex.sourceWidth /= bitmapScale;\r\n            tex.sourceHeight /= bitmapScale;\r\n            tex.width /= bitmapScale;\r\n            tex.height /= bitmapScale;\r\n            tex.scaleRate = bitmapScale;\r\n            tex.offsetX /= bitmapScale;\r\n            tex.offsetY /= bitmapScale;\r\n        } else {\r\n            tex.scaleRate = 1;\r\n        }\r\n        return tex;\r\n    }\r\n\r\n    /**\r\n     * @en Creates a new `Texture` by cropping a part of an existing `Texture`. If the two areas do not intersect, it returns null.\r\n     * @param texture The target `Texture` to crop.\r\n     * @param x The x position relative to the target `Texture`.\r\n     * @param y The y position relative to the target `Texture`.\r\n     * @param width The width to crop.\r\n     * @param height The height to crop.\r\n     * @returns A new `Texture` or null if the areas do not intersect.\r\n     * @zh 截取 `Texture` 的一部分区域，生成一个新的 `Texture`，如果两个区域没有相交，则返回 null。\r\n     * @param texture 目标 `Texture` 。\r\n     * @param x 相对于目标 `Texture` 的 x 位置。\r\n     * @param y 相对于目标 `Texture` 的 y 位置。\r\n     * @param width 截取的宽度。\r\n     * @param height 截取的高度。\r\n     * @return 一个新的 `Texture` 或 null，如果两个区域没有相交。\r\n     */\r\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\r\n        var texScaleRate: number = texture.scaleRate;\r\n        if (texScaleRate != 1) {\r\n            x *= texScaleRate;\r\n            y *= texScaleRate;\r\n            width *= texScaleRate;\r\n            height *= texScaleRate;\r\n        }\r\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\r\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\r\n        if (result)\r\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @en The UV coordinates of the texture.\r\n     * @zh 纹理的 UV 坐标。\r\n     */\r\n    get uv(): ArrayLike<number> {\r\n        return this._uv;\r\n    }\r\n\r\n    set uv(value: ArrayLike<number>) {\r\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\r\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\r\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\r\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\r\n        this._uv = value;\r\n    }\r\n\r\n    /**\r\n     * @en The actual width of the texture.\r\n     * @zh 纹理的实际宽度。\r\n     */\r\n    get width(): number {\r\n        if (this._w)\r\n            return this._w;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._w = value;\r\n        this.sourceWidth || (this.sourceWidth = value);\r\n    }\r\n\r\n    /**\r\n     * @en The actual height of the texture.\r\n     * @zh 纹理的实际高度。\r\n     */\r\n    get height(): number {\r\n        if (this._h)\r\n            return this._h;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._h = value;\r\n        this.sourceHeight || (this.sourceHeight = value);\r\n    }\r\n\r\n    /**\r\n     * @en The bitmap of the texture.\r\n     * @zh 纹理的位图。\r\n     */\r\n    get bitmap(): BaseTexture {\r\n        return this._bitmap;\r\n    }\r\n\r\n    set bitmap(value: BaseTexture) {\r\n        if (this._bitmap == value)\r\n            return;\r\n        this._bitmap && this._bitmap._removeReference(this._referenceCount);\r\n        this._bitmap = value;\r\n        value && (value._addReference(this._referenceCount));\r\n    }\r\n\r\n    /**\r\n     * @en Creates an instance of Texture class.\r\n     * @param bitmap Bitmap resource.\r\n     * @param uv UV data information.\r\n     * @zh 创建 Texture 类的新实例\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     */\r\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0) {\r\n        super(false);\r\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\r\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addReference(count: number = 1): void {\r\n        super._addReference(count);\r\n        this._bitmap && this._bitmap._addReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _removeReference(count: number = 1): void {\r\n        this._bitmap && this._bitmap._removeReference(count);\r\n        super._removeReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource(cb: () => void = null): any {\r\n        if (this._destroyed || !this._bitmap)\r\n            return null;\r\n        this.recoverBitmap(cb);\r\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\r\n    }\r\n\r\n    /**\r\n     * @en Sets the bitmap resource and UV data information for this object.\r\n     * @param bitmap The bitmap resource.\r\n     * @param uv The UV data information.\r\n     * @param sourceWidth The original width of the texture.\r\n     * @param sourceHeight The original height of the texture.\r\n     * @zh 设置此对象的位图资源和 UV 数据信息。\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     * @param sourceWidth 纹理原始宽度。\r\n     * @param sourceHeight 纹理原始高度。\r\n     */\r\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\r\n        this.bitmap = bitmap;\r\n        this.sourceWidth = sourceWidth;\r\n        this.sourceHeight = sourceHeight;\r\n\r\n        if (bitmap) {\r\n            this._w = bitmap.width;\r\n            this._h = bitmap.height;\r\n            this.sourceWidth = this.sourceWidth || bitmap.width;\r\n            this.sourceHeight = this.sourceHeight || bitmap.height\r\n        }\r\n        this.uv = uv || Texture.DEF_UV;\r\n    }\r\n\r\n    /**\r\n     * @en Loads an image from the specified URL.\r\n     * @param url The URL of the image to load.\r\n     * @param complete An optional callback function that is called when the image is loaded.\r\n     * @returns A promise that resolves to the loaded image.\r\n     * @zh 从指定的 URL 加载图片。\r\n     * @param url 图片地址。    \r\n     * @param complete 加载完成回调。\r\n     * @returns 一个 Promise 对象，解析为加载的图片。\r\n     */\r\n    load(url: string, complete?: Handler): Promise<void> {\r\n        if (this._destroyed)\r\n            return Promise.resolve();\r\n\r\n        return ILaya.loader.load(url).then((tex: Texture) => {\r\n            let bit = tex.bitmap;\r\n            this.bitmap = bit;\r\n            this.sourceWidth = this._w = bit.width;\r\n            this.sourceHeight = this._h = bit.height;\r\n            complete && complete.run();\r\n            this.event(Event.READY, this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the pixel data from a region of the texture.\r\n     * @param x The x-coordinate of the region.\r\n     * @param y The y-coordinate of the region.\r\n     * @param width The width of the region.\r\n     * @param height The height of the region.\r\n     * @returns A Uint8Array containing the pixel data.\r\n     * @zh 从纹理的特定区域获取像素数据。\r\n     * @param x 区域的 x 坐标。\r\n     * @param y 区域的 y 坐标。\r\n     * @param width 区域的宽度。\r\n     * @param height 区域的高度。\r\n     * @return 一个 Uint8Array 对象，包含了像素数据。   \r\n     */\r\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        var st: number, dst: number, i: number;\r\n        var tex2d = this.bitmap;\r\n        // 适配图集\r\n        var texw = this._w;\r\n        var texh = this._h;\r\n        var sourceWidth = this.sourceWidth;\r\n        var sourceHeight = this.sourceHeight;\r\n        var tex2dw = tex2d.width;\r\n        var tex2dh = tex2d.height;\r\n        var offsetX = this.offsetX;\r\n        var offsetY = this.offsetY;\r\n        let draww = width;\r\n        let drawh = height;\r\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\r\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\r\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\r\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\r\n        if (width <= 0 || height <= 0) return null;\r\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\r\n        let marginT = offsetY > y ? offsetY - y : 0;\r\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\r\n        let rePosY = y > offsetY ? y - offsetY : 0;\r\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\r\n        drawh -= marginT;\r\n\r\n        var wstride = width * 4;\r\n        var pix: Uint8Array = null;\r\n        try {\r\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\r\n        } catch (e) {\r\n        }\r\n        if (pix) {\r\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\r\n                return pix;\r\n            //否则只取一部分\r\n            let uv = (this._uv as Array<number>).slice();\r\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\r\n            let atlasPosY = Math.round(uv[1] * tex2dh);\r\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\r\n            wstride = tex2dw * 4;\r\n            dst = (atlasPosY + rePosY) * wstride;\r\n            st = atlasPosX * 4 + rePosX * 4 + dst;\r\n            for (i = 0; i < drawh; i++) {\r\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\r\n                st += wstride;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        // 如果无法直接获取，只能先渲染出来\r\n        var ctx = new ILaya.Context();\r\n        ctx.size(width, height);\r\n        let rt = new RenderTexture2D(width,height,RenderTargetFormat.R8G8B8A8);\r\n        ctx.render2D = ctx.render2D.clone(rt)\r\n        var uv: number[] = null;\r\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\r\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\r\n            var stu = uv[0];\r\n            var stv = uv[1];\r\n            var uvw = uv[2] - stu;\r\n            var uvh = uv[7] - stv;\r\n            var uk = uvw / texw;\r\n            var vk = uvh / texh;\r\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\r\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\r\n        }\r\n        ctx.startRender();\r\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\r\n        ctx.endRender();\r\n        var dt: Uint8Array = rt.getData(0, 0, width, height) as Uint8Array;\r\n        ctx.destroy();\r\n        rt.destroy();\r\n        // 上下颠倒一下\r\n        ret = new Uint8Array(width * height * 4);\r\n        st = 0;\r\n        dst = (height - 1) * wstride;\r\n        for (i = height - 1; i >= 0; i--) {\r\n            ret.set(dt.slice(dst, dst + wstride), st);\r\n            st += wstride;\r\n            dst -= wstride;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the pixel data from a specific area of the `Texture`.\r\n     * @param x The x-coordinate of the area.\r\n     * @param y The y-coordinate of the area.\r\n     * @param width The width of the area.\r\n     * @param height The height of the area.\r\n     * @returns A `Uint8Array` containing the pixel data.\r\n     * @zh 从 `Texture` 的特定区域获取像素点集合。\r\n     * @param x 区域的 x 坐标。\r\n     * @param y 区域的 y 坐标。\r\n     * @param width 区域的宽度。\r\n     * @param height 区域的高度。\r\n     * @return 一个 `Uint8Array` 对象，包含了像素点集合。\r\n     */\r\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        return this.getTexturePixels(x, y, width, height);\r\n        // canvas 不支持\r\n    }\r\n\r\n    /**\r\n     * @en Forces the recovery of the `bitmap` from the URL.\r\n     * @param callback An optional callback function to call after the bitmap is recovered.\r\n     * @zh 通过 URL 强制恢复 `bitmap`。\r\n     * @param callback 位图恢复后调用的可选回调函数。\r\n     */\r\n    recoverBitmap(callback?: () => void): void {\r\n        var url = this._bitmap.url;\r\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.bitmap = tex.bitmap;\r\n                callback && callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Forces the disposal of the `bitmap`, regardless of references.\r\n     * @zh 强制释放 `bitmap`，无论它是否被引用。\r\n     */\r\n    disposeBitmap(): void {\r\n        if (!this._destroyed && this._bitmap) {\r\n            this._bitmap.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether the texture is valid.\r\n     * @zh 纹理是否有效。\r\n     */\r\n    get valid(): boolean {\r\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the texture is considered obsolete.\r\n     * @zh 纹理是否被认为是过时的。\r\n     */\r\n    public get obsolute(): boolean {\r\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the resource.\r\n     * @zh 销毁资源。\r\n     */\r\n    protected _disposeResource(): void {\r\n        let bit = this._bitmap;\r\n        this._bitmap = null;\r\n        if (bit)\r\n            bit._removeReference(this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a clipped sub-texture from this texture and caches it for future access.\r\n     * @param x The x-coordinate of the clip area.\r\n     * @param y The y-coordinate of the clip area.\r\n     * @param width The width of the clip area.\r\n     * @param height The height of the clip area.\r\n     * @returns A `Texture` object representing the clipped sub-texture, or null if the clip area is out of bounds.\r\n     * @zh 从当前纹理获取裁剪后的子纹理，并将其缓存以供将来访问。\r\n     * @param x 裁剪区域的 x 坐标。\r\n     * @param y 裁剪区域的 y 坐标。\r\n     * @param width 裁剪区域的宽度。\r\n     * @param height 裁剪区域的高度。\r\n     * @return 一个 `Texture` 对象，表示裁剪后的子纹理，如果裁剪区域越界，则返回 null。\r\n     */\r\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\r\n        let key = `${x}_${y}_${width}_${height}`;\r\n        if (!this._clipCache)\r\n            this._clipCache = new Map();\r\n\r\n        let tex = this._clipCache.get(key);\r\n        if (tex)\r\n            return tex;\r\n        tex = Texture.createFromTexture(this, x, y, width, height);\r\n        if (tex)\r\n            tex._sizeGrid = this._sizeGrid;\r\n\r\n        if (this._clipCache.size > 100)\r\n            this._clipCache.clear();\r\n\r\n        this._clipCache.set(key, tex);\r\n\r\n        return tex;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Translates UV coordinates by a specified offset.\r\n * @param offsetX The offset distance along the X-axis.\r\n * @param offsetY The offset distance along the Y-axis.\r\n * @param uv The UV coordinates to be translated. Expected to be an array of at least 8 numbers.\r\n * @returns The translated UV coordinates.\r\n * @zh 按指定的偏移量平移 UV 坐标。\r\n * @param offsetX X 轴上的偏移量。\r\n * @param offsetY Y 轴上的偏移量。\r\n * @param uv 待平移的 UV 坐标。期望是一个包含 8 个元素的数组。\r\n * @returns 平移后的 UV 坐标。\r\n */\r\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\r\n    for (var i: number = 0; i < 8; i += 2) {\r\n        uv[i] += offsetX;\r\n        uv[i + 1] += offsetY;\r\n    }\r\n    return uv;\r\n}\r\n","import { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { URL } from \"./URL\";\r\n\r\n/**\r\n * 自动图集管理类\r\n * @private\r\n */\r\nexport class AtlasInfoManager {\r\n\r\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\r\n\r\n    static enable(infoFile: string, callback: Handler | null = null): void {\r\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\r\n            if (!data)\r\n                return;\r\n\r\n            AtlasInfoManager.addAtlases(data);\r\n            callback && callback.run();\r\n        });\r\n    }\r\n\r\n    static addAtlases(data: Record<string, [string, string[]]>) {\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        for (let key in data) {\r\n            let arr = data[key];\r\n            let prefix = URL.formatURL(arr[0]);\r\n            let frames = arr[1];\r\n            let len = frames.length;\r\n            let entry = { url: key };\r\n            for (let i = 0; i < len; i++) {\r\n                dic[prefix + frames[i]] = entry;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\r\n        prefix = URL.formatURL(prefix);\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        let entry = { url: atlasUrl };\r\n        for (let i of frames) {\r\n            dic[prefix + i] = entry;\r\n        }\r\n    }\r\n\r\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\r\n        return AtlasInfoManager._fileLoadDic[file];\r\n    }\r\n}\r\n\r\n\r\n","import { PlayerConfig } from \"../../Config\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * Worker Image加载器\r\n */\r\nexport class WorkerLoader {\r\n\r\n    /**worker.js的路径 */\r\n    static workerPath: string = \"libs/laya.workerloader.js\";\r\n\r\n    private static _worker: Worker;\r\n    private static _dispatcher: EventDispatcher;\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 是否支持worker\r\n     * @return 是否支持worker\r\n     */\r\n    static workerSupported(): boolean {\r\n        return Worker ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 是否启用。\r\n     */\r\n    static set enable(value: boolean) {\r\n        if (WorkerLoader._enable != value) {\r\n            if (value) {\r\n                if (!Worker)\r\n                    return;\r\n\r\n                if (!WorkerLoader._worker) {\r\n                    WorkerLoader._worker = new Worker(PlayerConfig.workerLoaderLib || WorkerLoader.workerPath);\r\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\r\n                    WorkerLoader._dispatcher = new EventDispatcher();\r\n                }\r\n            }\r\n            WorkerLoader._enable = value;\r\n        }\r\n    }\r\n\r\n    static get enable(): boolean {\r\n        return WorkerLoader._enable;\r\n    }\r\n\r\n    static load(url: string, options: any): Promise<any> {\r\n        return new Promise(resolve => {\r\n            WorkerLoader._worker.postMessage({ url, options });\r\n            WorkerLoader._dispatcher.once(url, resolve);\r\n        });\r\n    }\r\n\r\n    private static workerMessage(evt: any): void {\r\n        let data = evt.data;\r\n        if (data) {\r\n            switch (data.type) {\r\n                case \"Image\":\r\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\r\n                    break;\r\n                case \"Disable\":\r\n                    WorkerLoader.enable = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\nimport { Texture } from \"./Texture\";\r\n/**\r\n * @en Resource class for managing an atlas, which is a collection of textures and their frames.\r\n * @zh 管理大图合集资源的类，该类包含纹理和它们的帧。\r\n */\r\nexport class AtlasResource extends Resource {\r\n    /**\r\n     * @en The directory where the atlas resource is stored.\r\n     * @zh 存储大图合集资源的目录。\r\n     */\r\n    readonly dir: string;\r\n    /**\r\n     * @en An array of textures contained within the atlas.\r\n     * @zh 包含在大图合集中的纹理数组。\r\n     */\r\n    readonly textures: Array<Texture>;\r\n    /**\r\n     * @en An array of texture frames, which are individual images within the atlas.\r\n     * @zh 大图合集中的纹理帧数组，它们是大图中的单个图像。\r\n     */\r\n    readonly frames: Array<Texture>;\r\n\r\n    /**\r\n     * @en Creates a new instance of the AtlasResource class.\r\n     * @param dir Directory of the atlas.\r\n     * @param textures Array of textures in the atlas.\r\n     * @param frames Array of frames corresponding to the textures.\r\n     * @zh 创建AtlasResource类的新实例。实例化大图合集资源。\r\n     * @param dir 大图合集的目录路径。\r\n     * @param textures 大图合集中的纹理数组。\r\n     * @param frames 对应纹理的帧数组。\r\n     */\r\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\r\n        super();\r\n\r\n        this.dir = dir;\r\n        this.textures = textures;\r\n        this.frames = frames;\r\n        this.lock = true;\r\n    }\r\n\r\n    // get referenceCount(): number {\r\n    //     let count = 0;\r\n    //      this.textures.forEach((tex) => {\r\n    //          count += tex.referenceCount;\r\n    //     })\r\n    //     return count;\r\n    // }\r\n\r\n    // _removeReference(count: number = 1): void {\r\n    //     //this._referenceCount -= count;\r\n    //     //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n    //     if (this.referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n    //         this.destroy();\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * @en Disposes of the resources used by the atlas, destroying all textures and frames.\r\n     * @zh 释放大图合集使用的资源，销毁所有纹理和帧。\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let tex of this.textures) {\r\n            if (tex)\r\n                tex.destroy();\r\n        }\r\n\r\n        for (let tex of this.frames)\r\n            tex.destroy();\r\n\r\n        this.frames.length = 0;\r\n        this.textures.length = 0;\r\n    }\r\n}","export type ProgressCallback = (progress: number) => void;\r\n\r\nexport interface IBatchProgress {\r\n    readonly itemCount: number;\r\n    createCallback(weight?: number): ProgressCallback;\r\n    update(index: number, progress: number): void;\r\n}\r\n\r\nexport class BatchProgress implements IBatchProgress {\r\n    private _callback: ProgressCallback;\r\n    private _items: Array<number>;\r\n    private _weights: Array<number>;\r\n    private _progress: number;\r\n\r\n    constructor(callback: ProgressCallback) {\r\n        this._callback = callback;\r\n        this._items = [];\r\n        this._weights = [];\r\n        this._progress = 0;\r\n    }\r\n\r\n    get itemCount() {\r\n        return this._items.length;\r\n    }\r\n\r\n    reset() {\r\n        this._items.length = 0;\r\n        this._weights.length = 0;\r\n        this._progress = 0;\r\n    }\r\n\r\n    createCallback(weight?: number): ProgressCallback {\r\n        let index = this._items.length;\r\n        this._items.push(0);\r\n        if (weight == null)\r\n            this._weights.push(null);\r\n        else\r\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\r\n\r\n        return (progress: number) => this.update(index, progress);\r\n    }\r\n\r\n    update(index: number, value: number) {\r\n        if (index != -1) {\r\n            this._items[index] = Math.max(0, Math.min(value, 1));\r\n\r\n            let np = 0;\r\n            let col = this._items;\r\n            let ws = this._weights;\r\n            let perc = 1 / col.length;\r\n            for (let i = 0; i < col.length; i++) {\r\n                let p = col[i];\r\n                let w = ws[i];\r\n                if (p != null)\r\n                    np += p * (w != null ? w : perc);\r\n            }\r\n            value = np;\r\n            if (value > 1) value = 1;\r\n        }\r\n\r\n        if (value > this._progress) {\r\n            this._progress = value;\r\n            this._callback(value);\r\n        }\r\n    }\r\n}","/**\r\n * @en The `Handler` class is an event handler class.\r\n * It is recommended to create a `Handler` object from the object pool using the `Handler.create()` method to reduce the overhead of object creation. When a `Handler` object is no longer needed, it can be recovered to the object pool using `Handler.recover()`. Do not use this object after recovery, as doing so may lead to unpredictable errors.\r\n * Note: Since mouse events also use this object pool, improper recovery and invocation may affect the execution of mouse events.\r\n * @zh Handler 是事件处理器类。\r\n * 推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。\r\n * 注意：由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。\r\n */\r\nexport class Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: Handler[] = [];\r\n    /**@private */\r\n    private static _gid: number = 1;\r\n\r\n    /**\r\n     * @en The scope of the object (this).\r\n     * @zh 执行域(this)。\r\n     */\r\n    caller: Object | null;\r\n    /**\r\n     * @en The handling method.\r\n     * @zh 处理方法。\r\n     */\r\n    method: Function | null;\r\n    /**\r\n     * @en Arguments passed to the handler method.\r\n     * @zh 参数。\r\n     */\r\n    args: any[] | null;\r\n    /**\r\n     * @en Indicates whether the handler should be executed only once. If true, the handler will be recovered after execution.After recycling, it will be reused, default to false.\r\n     * @zh 表示是否只执行一次。如果为true，回调后执行recover()进行回收。回收后会被再利用，默认为false\r\n     */\r\n    once = false;\r\n\r\n    /**@private */\r\n    protected _id = 0;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @param caller The execution context.\r\n     * @param method The handling function.\r\n     * @param args Function arguments.\r\n     * @param once Whether it should be executed only once.\r\n     * @zh 构造方法\r\n     * @param caller 执行域。\r\n     * @param method 处理函数。\r\n     * @param args 函数参数。\r\n     * @param once 是否只执行一次。\r\n     */\r\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the specified property values for this object.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback method.\r\n     * @param args The arguments to be passed to the method.\r\n     * @param once Whether the handler should be executed only once. If true, the handler will be recovered after execution.\r\n     * @returns Returns the handler itself.\r\n     * @zh 设置此对象的指定属性值。\r\n     * @param caller 执行域(this)。\r\n     * @param method 回调方法。\r\n     * @param args 携带的参数。\r\n     * @param once 是否只执行一次，如果为true，执行后执行recover()进行回收。\r\n     * @returns 返回 handler 本身。\r\n     */\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Executes the handler.\r\n     * @zh 执行处理器。\r\n     */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        var result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @en Executes the handler with additional data.\r\n     * @param data Additional callback data, can be a single data or an Array (as multiple arguments).\r\n     * @zh 执行处理器，并携带额外数据。\r\n     * @param data 附加的回调数据，可以是单个数据或者数组（作为多参）。\r\n     */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        if (data == null)\r\n            var result: any = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        else result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the references of the object.\r\n     * @zh 清理对象引用。\r\n     */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the handler and recovers it to the Handler object pool.\r\n     * @zh 清理并回收到 Handler 对象池内。\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Creates a Handler from the object pool. By default, the handler will execute once and then be recovered immediately. If automatic recovery is not desired, set the `once` parameter to false.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback method.\r\n     * @param args The arguments to be passed to the callback method.\r\n     * @param once Whether the handler should be executed only once. If true, the handler will be recovered after execution.\r\n     * @returns Return the created handler instance.\r\n     * @zh 从对象池内创建一个 Handler，默认会执行一次并立即回收。如果不需要自动回收，设置 `once` 参数为 false。\r\n     * @param caller 执行域(this)。\r\n     * @param method 回调方法。\r\n     * @param args 回调方法的参数。\r\n     * @param once 是否只执行一次，如果为true，回调后执行 recover() 进行回收，默认为true。\r\n     * @return 返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\n\r\n","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * @en Browser is a browser proxy class. Encapsulate some of the features provided by the browser and native JavaScript.\r\n * @zh Browser 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\r\n */\r\nexport class Browser {\r\n\r\n    /**\r\n     * @en Browser proxy information.\r\n     * @zh 浏览器代理信息。\r\n     */\r\n    static userAgent: string;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a mobile device, including iOS and Android devices.\r\n     * @zh 表示当前环境是否为移动设备，包括 iOS 和 Android 设备。\r\n     */\r\n    static onMobile: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within an iOS device.\r\n     * @zh 表示当前环境是否在 IOS 设备内。\r\n     */\r\n    static onIOS: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a Mac device.\r\n     * @zh 表示当前环境是否为 Mac 设备。\r\n     */\r\n    static onMac: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within an iPhone.\r\n     * @zh 表示当前环境是否在 iPhone 内。\r\n     */\r\n    static onIPhone: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within an iPad.\r\n     * @zh 表示当前环境是否在 iPad 内。\r\n     */\r\n    static onIPad: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within an Android device.\r\n     * @zh 表示当前环境是否在 Android 设备内。\r\n     */\r\n    static onAndroid: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within an OpenHarmonyOS device.\r\n     * @zh 表示当前环境是否在 OpenHarmonyOS 设备内。\r\n     */\r\n    static onOpenHarmonyOS: boolean\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within a Windows Phone device.\r\n     * @zh 表示当前环境是否在 Windows Phone 设备内。\r\n     */\r\n    static onWP: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within the QQ browser.\r\n     * @zh 表示当前环境是否在 QQ 浏览器内。\r\n     */\r\n    static onQQBrowser: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within the mobile QQ or QQ browser.\r\n     * @zh 表示当前环境是否在移动 QQ 或 QQ 浏览器内。\r\n     */\r\n    static onMQQBrowser: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within Safari.\r\n     * @zh 表示当前环境是否在 Safari 内。\r\n     */\r\n    static onSafari: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within Chrome.\r\n     * @zh 表示当前环境是否在 Chrome 内。\r\n     */\r\n    static onChrome: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within the Internet Explorer browser.\r\n     * @zh 表示当前环境是否在 Internet Explorer 浏览器内。\r\n     */\r\n    static onIE: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is within WeChat.\r\n     * @zh 表示当前环境是否在微信内。\r\n     */\r\n    static onWeiXin: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a PC.\r\n     * @zh 表示当前环境是否为 PC。\r\n     */\r\n    static onPC: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a WeChat mini-game.\r\n     * @zh 表示当前环境是否是微信小游戏。\r\n     */\r\n    static onMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a Baidu mini-game.\r\n     * @zh 表示当前环境是否是百度小游戏。\r\n     */\r\n    static onBDMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a Xiaomi mini-game.\r\n     * @zh 表示当前环境是否是小米小游戏。\r\n     */\r\n    static onKGMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is an OPPO mini-game.\r\n     * @zh 表示当前环境是否是 OPPO 小游戏。\r\n     */\r\n    static onQGMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a VIVO mini-game.\r\n     * @zh 表示当前环境是否是 vivo 小游戏。\r\n     */\r\n    static onVVMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is an Alipay mini-game.\r\n     * @zh 表示当前环境是否是支付宝小游戏。\r\n     */\r\n    static onAlipayMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a QQ mini-game on mobile.\r\n     * @zh 表示当前环境是否是手机 QQ 小游戏。\r\n     */\r\n    static onQQMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a BILIBILI mini-game.\r\n     * @zh 表示当前环境是否是 BILIBILI 小游戏。\r\n     */\r\n    static onBLMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a TikTok (Douyin) mini-game.\r\n     * @zh 表示当前环境是否是抖音小游戏。\r\n     */\r\n    static onTTMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a Huawei mini-game.\r\n     * @zh 表示当前环境是否是华为快游戏。\r\n     */\r\n    static onHWMiniGame: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is a Taobao mini-game.\r\n     * @zh 表示当前环境是否是淘宝小游戏。\r\n     */\r\n    static onTBMiniGame: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Indicates whether the current environment is the Firefox browser.\r\n     * @zh 表示当前环境是否是 Firefox 浏览器。\r\n     */\r\n    static onFirefox: boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the current environment is the Edge browser.\r\n     * @zh 表示当前环境是否是 Edge 浏览器。\r\n     */\r\n    static onEdge: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Indicates whether the current environment is running on LayaAir Native Runtime.\r\n     * @zh 表示当前环境是否运行在 LayaAir Native Runtime。\r\n     */\r\n    static onLayaRuntime: boolean;\r\n\r\n    /**\r\n     * @en The actual platform type, OnMobile and others are determined through UserAgent, which may be faked.\r\n     * @zh 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性\r\n     */\r\n    static platform: number;\r\n    static PLATFORM_PC = 0;\r\n    static PLATFORM_ANDROID = 1;\r\n    static PLATFORM_IOS = 2;\r\n\r\n    /**\r\n     * @en Indicates whether the environment supports WebAudio.\r\n     * @zh 表示环境是否支持 WebAudio。\r\n     */\r\n    static supportWebAudio: boolean;\r\n    /**\r\n     * @en Indicates whether the environment supports LocalStorage.\r\n     * @zh 表示环境是否支持 LocalStorage。\r\n     */\r\n    static supportLocalStorage: boolean;\r\n\r\n    /**\r\n     * @en The global offline canvas (not the main canvas), used primarily for measuring text and obtaining image data.\r\n     * @zh 全局离线画布（非主画布），主要用来测量文本和获取图像数据。\r\n     */\r\n    static canvas: any;\r\n    /**\r\n     * @en The rendering context of the global offline canvas (not the main canvas).\r\n     * @zh 全局离线画布上绘图的环境（非主画布）。\r\n     */\r\n    static context: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * @en The service object for mini-game platform services.\r\n     * @zh 小游戏平台服务对象。\r\n     */\r\n    static miniGameContext: any;\r\n\r\n    /**\r\n     * @en The loaded bundles.\r\n     * @zh 已载入的脚本集。\r\n     */\r\n    static bundles = new Map<string, any>();\r\n\r\n    /** @private */\r\n    private static _window: any;\r\n    /** @private */\r\n    private static _document: Document;\r\n    /** @private */\r\n    private static _container: any;\r\n    /** @private */\r\n    private static _pixelRatio: number = -1;\r\n\r\n    /** @private */\r\n    private static _clientWidth: number;\r\n    /** @private */\r\n    private static _clientHeight: number;\r\n\r\n    /** @private */\r\n    static mainCanvas: any = null;\r\n\r\n    /**@private */\r\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\r\n    /**@private */\r\n    private static fontMap: { [key: string]: string } = {};\r\n    /**@private */\r\n    static measureText: Function = function (txt: string, font: string): any {\r\n        let isChinese: boolean = Browser.hanzi.test(txt);\r\n        if (isChinese && Browser.fontMap[font]) {\r\n            return Browser.fontMap[font];\r\n        }\r\n\r\n        let ctx: CanvasRenderingContext2D = Browser.context;\r\n        ctx.font = font;\r\n\r\n        let r: any = ctx.measureText(txt);\r\n        if (isChinese) Browser.fontMap[font] = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        let Laya: any = (window as any).Laya || ILaya.Laya;\r\n        if (Browser._window) return Browser._window;\r\n        let win: any = Browser._window = window;\r\n        let doc: any = Browser._document = win.document;\r\n        let u: string = Browser.userAgent = win.navigator.userAgent;\r\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\r\n        let platform: string = win.navigator.platform;\r\n        let miniGame: [string, string, string];\r\n\r\n        //微信小游戏\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            miniGame = [\"wxMiniGame\", \"MiniAdpter\", \"wx\"];\r\n        }\r\n        //阿里小游戏\r\n        if (\"my\" in Browser.window) {\r\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n                miniGame = [\"tbMiniGame\", \"TBMiniAdapter\", \"my\"];\r\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\r\n                miniGame = [\"aliPayMiniGame\", \"ALIMiniAdapter\", \"my\"];\r\n            }\r\n        }\r\n\r\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\r\n            if (\"tt\" in Browser.window) {\r\n                //抖音小游戏\r\n                miniGame = [\"ttMiniGame\", \"TTMiniAdapter\", \"tt\"];\r\n            } else if (\"bl\" in Browser.window) {\r\n                //手机B站小游戏\r\n                miniGame = [\"biliMiniGame\", \"BLMiniAdapter\", null];\r\n            }\r\n            else if (\"qq\" in Browser.window) {\r\n                //手机QQ小游戏\r\n                miniGame = [\"qqMiniGame\", \"QQMiniAdapter\", null];\r\n            }\r\n            else {\r\n                //微信小游戏\r\n                miniGame = [\"wxMiniGame\", \"MiniAdpter\", \"wx\"];\r\n            }\r\n        }\r\n        //华为快游戏\r\n        if (\"hbs\" in Browser.window) {\r\n            miniGame = [\"hwMiniGame\", \"HWMiniAdapter\", null];\r\n        }\r\n\r\n        //百度小游戏\r\n        if (u.indexOf(\"SwanGame\") > -1) {\r\n            miniGame = [\"bdMiniGame\", \"BMiniAdapter\", null];\r\n        }\r\n\r\n        //小米小游戏\r\n        if (u.indexOf('QuickGame') > -1) {\r\n            miniGame = [\"miMiniGame\", \"KGMiniAdapter\", \"qg\"];\r\n        }\r\n\r\n        //OPPO小游戏\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            miniGame = [\"qgMiniGame\", \"QGMiniAdapter\", \"qg\"];\r\n            //temp oppo 需要修改交换链的功能\r\n            Config.fixedFrames = false;\r\n        }\r\n\r\n        //VIVO小游戏\r\n        if (u.indexOf('VVGame') > -1) {\r\n            miniGame = [\"vvMiniGame\", \"VVMiniAdapter\", \"qg\"];\r\n            //temp oppo 需要修改交换链的功能\r\n            Config.fixedFrames = false;\r\n        }\r\n\r\n        if (miniGame != null) {\r\n            Browser.window[miniGame[0]](Laya, Laya);\r\n            Laya[miniGame[1]].enable();\r\n            Browser.miniGameContext = Browser.window[miniGame[2]];\r\n        }\r\n\r\n        //新增trace的支持\r\n        win.trace = console.log;\r\n\r\n        //兼容requestAnimationFrame\r\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\r\n            return win.setTimeout(fun, 1000 / 60);\r\n        }\r\n\r\n        //强制修改body样式\r\n        var bodyStyle: any = doc.body.style;\r\n        bodyStyle.margin = 0;\r\n        bodyStyle.overflow = 'hidden';\r\n        bodyStyle['-webkit-user-select'] = 'none';\r\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\r\n\r\n        //强制修改meta标签，防止开发者写错\r\n        var metas: any[] = doc.getElementsByTagName('meta');\r\n        let viewportContent: Record<string, string> = {\r\n            \"width\": \"device-width\",\r\n            \"initial-scale\": \"1.0\",\r\n            \"minimum-scale\": \"1.0\",\r\n            \"maximum-scale\": \"1.0\",\r\n            \"user-scalable\": \"no\"\r\n        };\r\n        let viewport: any;\r\n        for (const meta of metas) {\r\n            if (meta.name == \"viewport\") {\r\n                viewport = meta;\r\n                break;\r\n            }\r\n        }\r\n        if (!viewport) {\r\n            viewport = doc.createElement('meta');\r\n            viewport.name = 'viewport';\r\n            doc.getElementsByTagName('head')[0]?.appendChild(viewport);\r\n        }\r\n        else {\r\n            let arr: Array<string> = (viewport.content || \"\").split(\",\");\r\n            for (let ele of arr) {\r\n                let arr2 = ele.split(\"=\");\r\n                if (!viewportContent[arr2[0].trim()])\r\n                    viewportContent[arr2[0]] = arr2[1];\r\n            }\r\n        }\r\n        viewport.content = Object.keys(viewportContent).map(k => k + \"=\" + viewportContent[k]);\r\n\r\n        //处理兼容性\t\t\t\r\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\r\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\r\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\r\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\r\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\r\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\r\n        Browser.onOpenHarmonyOS = u.indexOf('OpenHarmony') > -1;\r\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\r\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\r\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\r\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\r\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\r\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\r\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\r\n        Browser.onPC = !Browser.onMobile;\r\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\r\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\r\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\r\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\r\n        Browser.onLayaRuntime = !!(window as any).conch;\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQGMiniGame = true;//OPPO环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQQMiniGame = true;//手机QQ环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onBLMiniGame = true;//B站环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onTTMiniGame = true;\r\n            Browser.onMiniGame = false;\r\n        }\r\n\r\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\r\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\r\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\r\n        if (u.indexOf('AlipayMiniGame') > -1) {\r\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\r\n            Browser.onMiniGame = false;\r\n        }\r\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n            Browser.onTBMiniGame = true;\r\n        }\r\n\r\n        if (Browser.onAndroid || Browser.onIOS) {\r\n            //也有可能是模拟器\r\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\r\n                Browser.platform = Browser.PLATFORM_PC;\r\n            else if (Browser.onAndroid)\r\n                Browser.platform = Browser.PLATFORM_ANDROID;\r\n            else\r\n                Browser.platform = Browser.PLATFORM_IOS;\r\n        }\r\n        else\r\n            Browser.platform = Browser.PLATFORM_PC;\r\n\r\n        return win;\r\n    }\r\n    /**\r\n     * @en Gets whether it is a mini game environment\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     * @zh 获取是否为小游戏环境\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     */\r\n    static get _isMiniGame(): boolean {\r\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\r\n    }\r\n\r\n    /**\r\n     * @en Creates a native browser element of the specified type.\r\n     * @param type The type of node to create.\r\n     * @return A reference to the created node object.\r\n     * @zh 创建指定类型的浏览器原生节点。\r\n     * @param type 要创建的节点类型。\r\n     * @return 创建的节点对象的引用。\r\n     */\r\n    static createElement(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.createElement(type);\r\n    }\r\n\r\n    /**\r\n     * @en Returns a reference to the first object in the Document object with the specified id.\r\n     * @param id The id of the node.\r\n     * @return The node object.\r\n     * @zh 返回 Document 对象中拥有指定 id 的第一个对象的引用。\r\n     * @param type 节点的 id。\r\n     * @return 节点对象。\r\n     */\r\n    static getElementById(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.getElementById(type);\r\n    }\r\n\r\n    /**\r\n     * @en Removes the specified native browser node object from the DOM.\r\n     * @param ele The node object to be removed.\r\n     * @zh 移除指定的浏览器原生节点对象。\r\n     * @param ele 要移除的节点对象。\r\n     */\r\n    static removeElement(ele: any): void {\r\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the current timestamp in milliseconds since the epoch.\r\n     * @zh 获取浏览器当前时间戳，单位为毫秒。\r\n     */\r\n    static now(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * @en The viewport width of the browser window.\r\n     * The method analyzes the browser information to determine the width, with a priority given to `window.innerWidth` (includes scrollbar width) > `document.body.clientWidth` (does not include scrollbar width).\r\n     * If the former is 0 or undefined, the latter is chosen.\r\n     * @zh 浏览器窗口的可视宽度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，\r\n     * 如果前者为 0 或未定义，则选择后者。\r\n     */\r\n    static get clientWidth(): number {\r\n        Browser.__init__();\r\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\r\n    }\r\n\r\n    static set clientWidth(value: number) {\r\n        Browser._clientWidth = value;\r\n    }\r\n\r\n    /**\r\n     * @en The viewport height of the browser window.\r\n     * The method analyzes the browser information to determine the height, with a priority given to `window.innerHeight` (includes scrollbar height) > `document.body.clientHeight` (excluding scrollbar height) > `document.documentElement.clientHeight` (both do not include scrollbar height).\r\n     * If the former is 0 or undefined, it falls back to the latter.\r\n     * @zh 浏览器窗口的可视高度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight，\r\n     * 如果前者为 0 或未定义，则选择后者。\r\n     */\r\n    static get clientHeight(): number {\r\n        Browser.__init__();\r\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\r\n    }\r\n\r\n    static set clientHeight(value: number) {\r\n        Browser._clientHeight = value;\r\n    }\r\n\r\n    /**\r\n     * @en The physical width of the browser window, taking into account the device pixel ratio.\r\n     * @zh 浏览器窗口的物理宽度，考虑了设备像素比。\r\n     */\r\n    static get width(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\r\n    }\r\n\r\n    /**\r\n     * @en The physical height of the browser window, taking into account the device pixel ratio.\r\n     * @zh 浏览器窗口的物理高度，考虑了设备像素比。\r\n     */\r\n    static get height(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\r\n    }\r\n\r\n    /**\r\n     * @en The device pixel ratio of the current environment.\r\n     * @zh 当前环境的设备像素比。\r\n     */\r\n    static get pixelRatio(): number {\r\n        if (Browser._pixelRatio < 0) {\r\n            Browser.__init__();\r\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\r\n            else {\r\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\r\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\r\n            }\r\n        }\r\n        return Browser._pixelRatio;\r\n    }\r\n\r\n    /**\r\n     * @en The canvas container that holds the canvas element, facilitating control over the canvas.\r\n     * @zh 用来存放画布元素的容器，方便对画布进行控制。\r\n     */\r\n    static get container(): any {\r\n        if (!Browser._container) {\r\n            Browser.__init__();\r\n            Browser._container = Browser.createElement(\"div\");\r\n            Browser._container.id = \"layaContainer\";\r\n            Browser._document.body.appendChild(Browser._container);\r\n        }\r\n        return Browser._container;\r\n    }\r\n\r\n    static set container(value: any) {\r\n        Browser._container = value;\r\n    }\r\n\r\n    /**\r\n     * @en Reference to the browser native window object.\r\n     * @zh 浏览器原生 window 对象的引用。\r\n     */\r\n    static get window(): any {\r\n        return Browser._window || Browser.__init__();\r\n    }\r\n\r\n    /**\r\n     * @en Reference to the browser native document object.\r\n     * @zh 浏览器原生 document 对象的引用。\r\n     */\r\n    static get document(): any {\r\n        Browser.__init__();\r\n        return Browser._document;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the value of a URL parameter.\r\n     * @param name The name of the parameter.\r\n     * @return The value of the parameter.\r\n     * @zh 获取 URL 参数的值。\r\n     * @param name 参数的名称。\r\n     * @return 参数的值。\r\n     */\r\n    static getQueryString(name: string): string {\r\n        if (Browser.onMiniGame) return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r: any = window.location.search.substring(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Safari landscape toolbar offset\r\n     * @zh Safari横屏工具栏偏移\r\n     */\r\n    static getSafariToolbarOffset() {\r\n        return (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\r\n    }\r\n\r\n    /**\r\n     * @en Dynamically loads a JavaScript library from the specified source.\r\n     * @zh 从指定源动态加载 JavaScript 库。\r\n     */\r\n    static loadLib(src: string) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let script = Browser.document.createElement('script');\r\n            script.onload = function () {\r\n                resolve();\r\n            };\r\n            script.onerror = function () {\r\n                reject(`load ${src} failed`);\r\n            };\r\n            script.src = src;\r\n            Browser.document.body.appendChild(script);\r\n        });\r\n    }\r\n}\r\n\r\nlet win: any = window;\r\nwin.__getBundle_ = function (bundleId: string) {\r\n    let bun = Browser.bundles.get(bundleId);\r\n    if (!bun)\r\n        Browser.bundles.set(bundleId, bun = {});\r\n    return bun;\r\n}\r\n\r\nwin.__setBundle_ = function (bundleId: string, bun: any, globalName?: string) {\r\n    let existing = Browser.bundles.get(bundleId);\r\n    if (existing)\r\n        copyProps(existing, bun, \"default\");\r\n    Browser.bundles.set(bundleId, bun);\r\n    if (globalName)\r\n        win[globalName] = bun;\r\n}\r\n\r\nfunction copyProps(to: any, from: any, except?: string) {\r\n    var desc: any;\r\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n        for (let key of Object.getOwnPropertyNames(from))\r\n            if (!to.hasOwnProperty(key) && key !== except)\r\n                Object.defineProperty(to, key, { get: () => from[key], enumerable: !(desc = Object.getOwnPropertyDescriptor(from, key)) || desc.enumerable });\r\n    }\r\n    return to;\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * @en Image binary processing class\r\n * @zh 图片二进制处理类\r\n */\r\nexport class ImgUtils {\r\n\r\n    /**\r\n     * @en Storage data pool\r\n     * @zh 存储数据池\r\n     */\r\n    static data: any = {};\r\n    /**\r\n     * @en Whether to save the used data\r\n     * @zh 是否保存使用的数据\r\n     */\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if data preprocessing is supported.\r\n     * @zh 检查是否支持数据预处理。\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Gets a URL object from an ArrayBuffer.\r\n     * @param url The base URL string.\r\n     * @param arrayBuffer The ArrayBuffer to convert.\r\n     * @returns A new URL string representing the binary data.\r\n     * @zh 从 ArrayBuffer 获取 URL 对象。\r\n     * @param url 基础 URL 字符串。\r\n     * @param arrayBuffer 要转换的 ArrayBuffer。\r\n     * @returns 表示二进制数据的新 URL 字符串。\r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the binary memory data associated with a specified URL.\r\n     * @param url The URL to destroy the binary data for.\r\n     * @zh 销毁与指定 URL 相关联的二进制内存数据。\r\n     * @param url 要销毁二进制数据的 URL。\r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","/**\r\n * @en Utility class for XML operations.\r\n * @zh XML操作的工具类。\r\n */\r\nexport class XMLUtils {\r\n    /**\r\n     * @en Decodes a string that contains HTML entities into a displayable form.\r\n     * @param aSource The string to decode.\r\n     * @returns The decoded string.\r\n     * @zh 对包含HTML实体的字符串进行解码，转换为可显示的格式。\r\n     * @param aSource 需要解码的字符串。\r\n     * @returns 返回解码后的字符串。\r\n     */\r\n    public static decodeString(aSource: string): string {\r\n        let len = aSource.length;\r\n        let sb: string = \"\";\r\n        let pos1 = 0, pos2 = 0;\r\n\r\n        while (true) {\r\n            pos2 = aSource.indexOf('&', pos1);\r\n            if (pos2 == -1) {\r\n                sb += aSource.substring(pos1);\r\n                break;\r\n            }\r\n            sb += aSource.substring(pos1, pos2);\r\n\r\n            pos1 = pos2 + 1;\r\n            pos2 = pos1;\r\n            let end = Math.min(len, pos2 + 10);\r\n            for (; pos2 < end; pos2++) {\r\n                if (aSource[pos2] == ';')\r\n                    break;\r\n            }\r\n            if (pos2 < end && pos2 > pos1) {\r\n                let entity: string = aSource.substring(pos1, pos2);\r\n                let u = 0;\r\n                if (entity[0] == '#') {\r\n                    if (entity.length > 1) {\r\n                        if (entity[1] == 'x')\r\n                            u = parseInt(entity.substring(2), 16);\r\n                        else\r\n                            u = parseInt(entity.substring(1));\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n                else {\r\n                    switch (entity) {\r\n                        case \"amp\":\r\n                            u = 38;\r\n                            break;\r\n\r\n                        case \"apos\":\r\n                            u = 39;\r\n                            break;\r\n\r\n                        case \"gt\":\r\n                            u = 62;\r\n                            break;\r\n\r\n                        case \"lt\":\r\n                            u = 60;\r\n                            break;\r\n\r\n                        case \"nbsp\":\r\n                            u = 32;\r\n                            break;\r\n\r\n                        case \"quot\":\r\n                            u = 34;\r\n                            break;\r\n                    }\r\n                    if (u > 0) {\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n            }\r\n            else {\r\n                sb += '&';\r\n            }\r\n        }\r\n\r\n        return sb;\r\n    }\r\n\r\n    /**\r\n     * @en Encodes special characters in a string to their corresponding HTML entities.\r\n     * @param str The string that contains special characters to be encoded.\r\n     * @returns The encoded string with HTML entities.\r\n     * @zh 将字符串中的特殊字符转换为对应的HTML实体。\r\n     * @param str 包含待编码特殊字符的字符串。\r\n     * @returns 包含HTML实体的编码后的字符串。\r\n     */\r\n    public static encodeString(str: string): string {\r\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves an attribute value from an object, and converts it to a string. If the attribute or object does not exist, the default value is used.\r\n     * @param attrs The object that contains the attribute.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @param defValue The default value if the attribute is not found or is null.\r\n     * @returns The retrieved attribute value, or the default if the attribute is not present.\r\n     * @zh 从一个对象中检索一个属性值，并将此属性转化为字符串，如果属性不存在或对象不存在，则使用默认值。\r\n     * @param attrs 包含待检索属性的对象。\r\n     * @param attrName 需要检索的属性名称。\r\n     * @param defValue 如果属性不存在或为null时的默认值。\r\n     * @returns 检索到的属性值的字符串，如果属性不存在或对象不存在，则返回默认值。\r\n     */\r\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\r\n        if (attrs == null)\r\n            return defValue == null ? null : defValue;\r\n\r\n        let ret = attrs[attrName];\r\n        if (ret != null)\r\n            return \"\" + ret;\r\n        else\r\n            return defValue == null ? null : defValue;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute values in the object based on the attribute name and convert them to integers. If the attribute does not exist, use the default value.\r\n     * @param attrs The object containing the attribute.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value if the attribute is not found.\r\n     * @returns If the attribute is a valid integer, return the parsed integer value; otherwise, return the default value.\r\n     * @zh 根据属性名检索对象中的属性值，并将其转换为整数，如果属性不存在，则使用默认值。\r\n     * @param attrs 包含属性的对象。\r\n     * @param attrName 属性的名称。\r\n     * @param defValue 如果属性未找到，则使用的默认值。\r\n     * @returns 如果属性是有效的整数，则返回解析后的整数值，否则返回默认值。\r\n     */\r\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value != null && value.length > 0) {\r\n            if (value[value.length - 1] == '%') {\r\n                let ret = parseInt(value.substring(0, value.length - 1));\r\n                if (!isNaN(ret))\r\n                    return Math.ceil(ret / 100.0 * defValue);\r\n            }\r\n            else {\r\n                let ret = parseInt(value);\r\n                if (!isNaN(ret))\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        return defValue == null ? 0 : defValue;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute value from the object based on the attribute name and convert it to a floating-point number. If the attribute does not exist, use the default value.\r\n     * @param attrs The object containing the attribute.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value if the attribute is not found.\r\n     * @returns If the attribute is a valid floating-point number, return the parsed floating-point number; otherwise, return the default value.\r\n     * @zh 根据属性名检索对象中的属性值，并将其转换为浮点数，如果属性不存在，则使用默认值。\r\n     * @param attrs 包含属性的对象。\r\n     * @param attrName 属性的名称。\r\n     * @param defValue 如果属性未找到，则使用的默认值。\r\n     * @returns 如果属性是有效的浮点数，则返回解析后的浮点数，否则返回默认值。\r\n     */\r\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? 0 : defValue;\r\n\r\n        let ret = parseFloat(value);\r\n        if (isNaN(ret))\r\n            return defValue == null ? 0 : defValue;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute values in the object based on the attribute name and convert them to Boolean values. If the attribute does not exist, use the default value.\r\n     * @param attrs The object containing the attribute.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value if the attribute is not found.\r\n     * @returns If the attribute is a valid Boolean values, return the parsed Boolean values; otherwise, return the default value.\r\n     * @zh 根据属性名检索对象中的属性值，并将其转换为布尔值，如果属性不存在，则使用默认值。\r\n     * @param attrs 包含属性的对象。\r\n     * @param attrName 属性的名称。\r\n     * @param defValue 如果属性未找到，则使用的默认值。\r\n     * @returns 如果属性是有效的布尔值，则返回解析后的布尔值，否则返回默认值。\r\n     */\r\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? false : defValue;\r\n\r\n        if (value == \"true\" || value == \"1\")\r\n            return true;\r\n        else if (value == \"false\" || value == \"0\")\r\n            return false;\r\n        else\r\n            return defValue == null ? false : defValue;\r\n    }\r\n}","import { XMLUtils } from \"./XMLUtils\";\r\n\r\n/**\r\n * @en The tag type of XML.　　\r\n * @zh XML 的标签类型\r\n */\r\nexport enum XMLTagType {\r\n    /**\r\n     * @en Represents the start of an XML element.\r\n     * @zh 表示XML元素的开始。\r\n     */\r\n    Start,\r\n    /**\r\n     * @en Represents the end of an XML element.\r\n     * @zh 表示XML元素的结束。\r\n     */\r\n    End,\r\n    /**\r\n     * @en Represents a void XML element (self-closing tag).\r\n     * @zh 表示空的XML元素（自闭合标签）。\r\n     */\r\n    Void,\r\n    /**\r\n     * @en Represents a CDATA section in XML.\r\n     * @zh 表示XML中的CDATA部分。\r\n     */\r\n    CDATA,\r\n    /**\r\n     * @en Represents an XML comment.\r\n     * @zh 表示XML注释。\r\n     */\r\n    Comment,\r\n    /**\r\n     * @en Represents an XML processing instruction.\r\n     * @zh 表示XML处理指令。\r\n     */\r\n    Instruction\r\n};\r\n\r\nconst CDATA_START = \"<![CDATA[\";\r\nconst CDATA_END = \"]]>\";\r\nconst COMMENT_START = \"<!--\";\r\nconst COMMENT_END = \"-->\";\r\n\r\n/**\r\n * @en XMLIterator class for parsing XML strings.\r\n * @zh XML迭代器类，用于解析XML字符串。\r\n */\r\nexport class XMLIterator {\r\n    /**\r\n     * @en The name of the current XML tag.\r\n     * @zh 当前XML标签的名称。\r\n     */\r\n    public static tagName: string;\r\n    /**\r\n     * @en The type of the current XML tag.\r\n     * @zh 当前XML标签的类型。\r\n     */\r\n    public static tagType: XMLTagType;\r\n    /**\r\n     * @en The name of the last processed XML tag.\r\n     * @zh 上一个处理的XML标签的名称。\r\n     */\r\n    public static lastTagName: string;\r\n\r\n    /**\r\n     * @en The source XML string being parsed.\r\n     * @zh 正在解析的源XML字符串。\r\n     */\r\n    static source: string;\r\n    /**\r\n     * @en The length of the source XML string.\r\n     * @zh 源XML字符串的长度。\r\n     */\r\n    static sourceLen: number;\r\n    /**\r\n     * @en The current parsing position in the source string.\r\n     * @zh 源字符串中的当前解析位置。\r\n     */\r\n    static parsePos: number;\r\n    /**\r\n     * @en The starting position of the current tag in the source string.\r\n     * @zh 当前标签在源字符串中的起始位置。\r\n     */\r\n    static tagPos: number;\r\n    /**\r\n     * @en The length of the current tag.\r\n     * @zh 当前标签的长度。\r\n     */\r\n    static tagLength: number;\r\n    /**\r\n     * @en The ending position of the last processed tag.\r\n     * @zh 上一个处理的标签的结束位置。\r\n     */\r\n    static lastTagEnd: number;\r\n    /**\r\n     * @en Indicates whether attributes have been parsed.\r\n     * @zh 指示是否已解析属性。\r\n     */\r\n    static attrParsed: boolean;\r\n    /**\r\n     * @en Indicates whether tag names should be converted to lowercase.\r\n     * @zh 指示是否应将标签名称转换为小写。\r\n     */\r\n    static lowerCaseName: boolean;\r\n\r\n    private static _attrs: any = {};\r\n\r\n    /**\r\n     * @en Initialize the XMLIterator with a source string.\r\n     * @param source The XML string to parse.\r\n     * @param lowerCaseName Optional. Whether to convert tag names to lowercase.\r\n     * @zh 使用源字符串初始化XMLIterator。\r\n     * @param source 要解析的XML字符串。\r\n     * @param lowerCaseName 可选。是否将标签名称转换为小写。\r\n     */\r\n    public static begin(source: string, lowerCaseName?: boolean) {\r\n        XMLIterator.source = source;\r\n        XMLIterator.lowerCaseName = lowerCaseName;\r\n        this.sourceLen = source.length;\r\n        this.parsePos = 0;\r\n        this.lastTagEnd = 0;\r\n        this.tagPos = 0;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n    }\r\n\r\n    /**\r\n     * @en Parses through the XML source to find the next tag and updates the iterator's state accordingly.\r\n     * @returns Returns true if a new tag is found; otherwise, false if the end of the source is reached.\r\n     * @zh 解析XML源，查找下一个标签并相应地更新迭代器的状态。\r\n     * @returns 如果找到新标签则返回true；如果到达源的末尾则返回false。\r\n     */\r\n    public static nextTag(): boolean {\r\n        let pos: number;\r\n        let c: string;\r\n        let buffer = \"\";\r\n\r\n        this.tagType = XMLTagType.Start;\r\n        this.lastTagEnd = this.parsePos;\r\n        this.attrParsed = false;\r\n        this.lastTagName = this.tagName;\r\n\r\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\r\n            this.parsePos = pos;\r\n            pos++;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            c = this.source[pos];\r\n            if (c == '!') {\r\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\r\n                    pos = this.source.indexOf(CDATA_END, pos);\r\n                    this.tagType = XMLTagType.CDATA;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\r\n                    pos = this.source.indexOf(COMMENT_END, pos);\r\n                    this.tagType = XMLTagType.Comment;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    this.tagType = XMLTagType.Instruction;\r\n                }\r\n            }\r\n            else if (c == '/') {\r\n                pos++;\r\n                this.tagType = XMLTagType.End;\r\n            }\r\n            else if (c == '?') {\r\n                pos++;\r\n                this.tagType = XMLTagType.Instruction;\r\n            }\r\n\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            buffer += this.source.substring(this.parsePos + 1, pos);\r\n            if (buffer.length > 0 && buffer[0] == '/')\r\n                buffer = buffer.substring(1);\r\n\r\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\r\n            let possibleEnd: number = -1;\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (c == '\"') {\r\n                    if (!singleQuoted)\r\n                        doubleQuoted = !doubleQuoted;\r\n                }\r\n                else if (c == '\\'') {\r\n                    if (!doubleQuoted)\r\n                        singleQuoted = !singleQuoted;\r\n                }\r\n\r\n                if (c == '>') {\r\n                    if (!(singleQuoted || doubleQuoted)) {\r\n                        possibleEnd = -1;\r\n                        break;\r\n                    }\r\n\r\n                    possibleEnd = pos;\r\n                }\r\n                else if (c == '<')\r\n                    break;\r\n            }\r\n            if (possibleEnd != -1)\r\n                pos = possibleEnd;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            if (this.source[pos - 1] == '/')\r\n                this.tagType = XMLTagType.Void;\r\n\r\n            this.tagName = buffer;\r\n            if (this.lowerCaseName)\r\n                this.tagName = this.tagName.toLowerCase();\r\n            this.tagPos = this.parsePos;\r\n            this.tagLength = pos + 1 - this.parsePos;\r\n            this.parsePos += this.tagLength;\r\n\r\n            return true;\r\n        }\r\n\r\n        this.tagPos = this.sourceLen;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Get the source of the current XML tag.\r\n     * @returns The source of the current XML tag.\r\n     * @zh 获取当前XML标签的源代码。\r\n     * @returns 当前XML标签的源代码。\r\n     */\r\n    public static getTagSource(): string {\r\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the raw text between the last tag end and the current tag position.\r\n     * @param trim Whether to trim the whitespace characters at the beginning and end of the text.\r\n     * @returns The raw text, trimmed if specified.\r\n     * @zh 获取上一个标签结束和当前标签位置之间的原始文本。\r\n     * @param trim 是否去除文本首尾的空白字符。\r\n     * @returns 返回的原始文本，如果指定则去除首尾空白。\r\n     */\r\n    public static getRawText(trim?: boolean) {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return this.source.substring(i, this.tagPos).trim();\r\n        }\r\n        else\r\n            return this.source.substring(this.lastTagEnd, this.tagPos);\r\n    }\r\n\r\n    /**\r\n     * @en Get the decoded text between XML tags, optionally trimmed.\r\n     * @param trim Whether to trim the whitespace at the beginning and end of the text. Default is false.\r\n     * @returns The decoded text between XML tags.\r\n     * @zh 获取XML标签之间的解码文本，可选择是否去除首尾空白字符。\r\n     * @param trim 是否去除文本开头和结尾的空白字符。默认为false。\r\n     * @returns XML标签之间的解码文本。\r\n     */\r\n    public static getText(trim?: boolean): string {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\r\n        }\r\n        else\r\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\r\n    }\r\n\r\n    /**\r\n     * @en The parsed attributes of the current tag.\r\n     * @zh 当前标签解析后的属性。\r\n     */\r\n    public static get attributes() {\r\n        if (!this.attrParsed) {\r\n            for (let key in this._attrs) {\r\n                delete this._attrs[key];\r\n            }\r\n            this.parseAttributes(this._attrs);\r\n            this.attrParsed = true;\r\n        }\r\n\r\n        return this._attrs;\r\n    }\r\n\r\n    /**\r\n     * @en Gets the value of the specified attribute from the current tag.\r\n     * @param attrName The name of the attribute to get.\r\n     * @returns The value of the attribute.\r\n     * @zh 从当前标签获取指定属性的值。\r\n     * @param attrName 要获取的属性名称。\r\n     * @returns 返回属性的值。\r\n     */\r\n    public static getAttribute(attrName: string): string {\r\n        return this.attributes[attrName];\r\n    }\r\n\r\n    /**\r\n     * @en Parses the attributes from the source text.\r\n     * @param attrs The object to store the parsed attributes.\r\n     * @zh 从源文本解析属性。\r\n     * @param attrs 存储解析后属性的对象。\r\n     */\r\n    static parseAttributes(attrs: any) {\r\n        let attrName: string;\r\n        let valueStart: number = 0;\r\n        let valueEnd: number = 0;\r\n        let waitValue: boolean = false;\r\n        let quoted: number = 0;\r\n        let buffer: string = \"\";\r\n        let i = this.tagPos;\r\n        let attrEnd = this.tagPos + this.tagLength;\r\n\r\n        if (i < attrEnd && this.source[i] == '<') {\r\n            for (; i < attrEnd; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (; i < attrEnd; i++) {\r\n            let c: string = this.source[i];\r\n            if (c == '=') {\r\n                valueStart = -1;\r\n                valueEnd = -1;\r\n                quoted = 0;\r\n                for (let j = i + 1; j < attrEnd; j++) {\r\n                    let c2 = this.source[j];\r\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\r\n                        if (valueStart != -1 && quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '>') {\r\n                        if (quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\"') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 1) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 2;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\\'') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 2) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 1;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (valueStart == -1) {\r\n                        valueStart = j;\r\n                    }\r\n                }\r\n\r\n                if (valueStart != -1 && valueEnd != -1) {\r\n                    attrName = buffer;\r\n                    if (this.lowerCaseName)\r\n                        attrName = attrName.toLowerCase();\r\n                    buffer = \"\";\r\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\r\n                    i = valueEnd + 1;\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\r\n                if (waitValue || c == '/' || c == '>') {\r\n                    if (buffer.length > 0) {\r\n                        attrName = buffer;\r\n                        if (this.lowerCaseName)\r\n                            attrName = attrName.toLowerCase();\r\n                        attrs[attrName] = \"\";\r\n                        buffer = \"\";\r\n                    }\r\n\r\n                    waitValue = false;\r\n                }\r\n\r\n                if (c != '/' && c != '>')\r\n                    buffer += c;\r\n            }\r\n            else {\r\n                if (buffer.length > 0)\r\n                    waitValue = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nif (!String.prototype.trimEnd) {\r\n    String.prototype.trimEnd = function (this: string) {\r\n        return this.replace(/\\s+$/g, \"\");\r\n    }\r\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\n/**\r\n * @en The `XML` class represents an XML node with methods to manipulate and parse XML data.\r\n * @zh `XML` 类表示一个 XML 节点，具有操作和解析 XML 数据的方法。\r\n */\r\nexport class XML {\r\n    /**\r\n     * @en The name of the XML node.\r\n     * @zh XML 节点的名称。\r\n     */\r\n    public name: string;\r\n    /**\r\n     * @en The text content of the XML node.\r\n     * @zh XML 节点的文本内容。\r\n     */\r\n    public text: string;\r\n\r\n    private _attrs: Record<string, string>;\r\n    private _children: Array<XML>;\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Creates a new instance of the `XML` class.\r\n     * @param XmlString Optional. The XML source string to parse.\r\n     * @zh 创建 `XML` 类的新实例。\r\n     * @param XmlString 可选。要解析的 XML 源字符串。\r\n     */\r\n    public constructor(XmlString?: string) {\r\n        if (XmlString)\r\n            this.parse(XmlString);\r\n    }\r\n\r\n    /**\r\n     * @en The attributes of the XML node.\r\n     * @zh XML 节点的属性。\r\n     */\r\n    public get attributes(): Record<string, string> {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n        return this._attrs;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the value of an attribute as a string. If the attribute is not found, the default value is returned.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @param defValue The default value to return if the attribute is not found.\r\n     * @returns The attribute value as a string, or the default value if the attribute is not present.\r\n     * @zh 根据属性名称获取对应的字符串。如果未找到属性，则返回默认值。\r\n     * @param attrName 要检索的属性名称。\r\n     * @param defValue 如果未找到属性，则返回的默认值。\r\n     * @returns 属性的字符串，如果属性不存在，则为默认值。\r\n     */\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute value from the XML node's attributes based on the attribute name, convert it to an integer, and return the default value if the attribute is not found.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @param defValue The default value to return if the attribute is not found or not a number.\r\n     * @returns The integer value of an XML node attribute, or the default value if the attribute value does not exist.\r\n     * @zh 根据属性名称从 XML 节点的属性中检索属性值，将其转换为整数，如果未找到属性，则返回默认值。\r\n     * @param attrName 要检索的属性名称。\r\n     * @param defValue 如果属性未找到或无法转换为整数，则返回的默认整数值。\r\n     * @returns XML 节点属性的整数值，如果属性值不存在，则为默认值。\r\n     */\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute value from the XML node's attributes based on the attribute name, convert it to a floating-point number, and return the default value if the attribute is not found.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @param defValue The default value to return if the attribute is not found.\r\n     * @returns The floating-point value of an XML node attribute, which is the default value if the attribute value does not exist.\r\n     * @zh 根据属性名称从 XML 节点的属性中检索属性值，将其转换为浮点数，如果未找到属性，则返回默认值。\r\n     * @param attrName 要检索的属性名称。\r\n     * @param defValue 如果属性未找到，则返回的默认浮点数。\r\n     * @returns XML 节点属性的浮点数值，如果属性值不存在，则为默认值。\r\n     */\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieve the attribute value from the XML node's attributes based on the attribute name, convert it to a floating-point number, and return the default value if the attribute is not found.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @param defValue The default value to return if the attribute is not found or not a number.\r\n     * @returns The floating-point value of an XML node attribute, which is the default value if the attribute value does not exist.\r\n     * @zh 根据属性名称从 XML 节点的属性中检索属性值，将其转换为布尔值，如果未找到属性，则返回默认值。\r\n     * @param attrName 要检索的属性名称。\r\n     * @param defValue 如果属性未找到，则返回的默认布尔值。\r\n     * @returns XML 节点属性的布尔值，如果属性值不存在，则为默认值。\r\n     */\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Sets an attribute on the XML node to the specified value.\r\n     * @param attrName The name of the attribute to set.\r\n     * @param attrValue The value of the attribute to set.\r\n     * @zh 设置 XML 节点的属性为指定的值。\r\n     * @param attrName 要设置的属性名称。\r\n     * @param attrValue 要设置的属性值。\r\n     */\r\n    public setAttribute(attrName: string, attrValue: string) {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the first child node with the specified name.\r\n     * @param selector The name of the child node to find.\r\n     * @returns The first child node with the specified name, or null if not found.\r\n     * @zh 检索具有指定名称的第一个子节点。\r\n     * @param selector 要查找的子节点名称。\r\n     * @returns 如果找到具有指定名称的第一个子节点，则返回该节点；如果没有找到，则返回 null。\r\n     */\r\n    public getNode(selector: string): XML {\r\n        if (!this._children)\r\n            return null;\r\n        else\r\n            return this._children.find(value => {\r\n                return value.name == selector;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @en Get child elements of the XML node.\r\n     * @param selector Optional. A string to filter child elements by name.\r\n     * @returns An array of XML objects representing the child elements.\r\n     * @zh 获取XML节点的子元素。\r\n     * @param selector 可选。用于按名称筛选子元素的字符串。\r\n     * @returns 表示子元素的XML对象数组。\r\n     */\r\n    public elements(selector?: string): Array<XML> {\r\n        if (!this._children)\r\n            this._children = new Array<XML>();\r\n        if (selector)\r\n            return this._children.filter(value => {\r\n                return value.name == selector;\r\n            });\r\n        else\r\n            return this._children;\r\n    }\r\n\r\n    /**\r\n     * @en Parses the given XML source string and populates the node and its children according to the XML structure.\r\n     * @param aSource The XML source string to parse.\r\n     * @zh 解析给定的 XML 源字符串，并根据 XML 结构填充节点及其子节点。\r\n     * @param aSource 要解析的 XML 源字符串。\r\n     */\r\n    public parse(aSource: string) {\r\n        this.reset();\r\n\r\n        let lastOpenNode: XML;\r\n        let nodeStack: Array<XML> = new Array<XML>();\r\n\r\n        XMLIterator.begin(aSource);\r\n        while (XMLIterator.nextTag()) {\r\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                let childNode: XML;\r\n                if (lastOpenNode)\r\n                    childNode = new XML();\r\n                else {\r\n                    if (this.name != null) {\r\n                        this.reset();\r\n                        throw new Error(\"Invalid xml format - no root node.\");\r\n                    }\r\n                    childNode = this;\r\n                }\r\n\r\n                childNode.name = XMLIterator.tagName;\r\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\r\n\r\n                if (lastOpenNode) {\r\n                    if (XMLIterator.tagType != XMLTagType.Void)\r\n                        nodeStack.push(lastOpenNode);\r\n                    if (lastOpenNode._children == null)\r\n                        lastOpenNode._children = new Array<XML>();\r\n                    lastOpenNode._children.push(childNode);\r\n                }\r\n                if (XMLIterator.tagType != XMLTagType.Void)\r\n                    lastOpenNode = childNode;\r\n            }\r\n            else if (XMLIterator.tagType == XMLTagType.End) {\r\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\r\n                    this.reset();\r\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\r\n                }\r\n\r\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\r\n                    lastOpenNode.text = XMLIterator.getText();\r\n                }\r\n\r\n                if (nodeStack.length > 0)\r\n                    lastOpenNode = nodeStack.pop();\r\n                else\r\n                    lastOpenNode = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Resets the attributes and child nodes of the XML node.\r\n     * @zh 重置 XML 节点的属性和子节点。\r\n     */\r\n    public reset() {\r\n        this._attrs = null;\r\n        if (this._children != null)\r\n            this._children.length == 0;\r\n        this.text = null;\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * 请求进度改变时调度。\r\n * @eventType Event.PROGRESS\r\n * */\r\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求结束后调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求出错时调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\r\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\r\n */\r\nexport class HttpRequest extends EventDispatcher {\r\n    /**@private */\r\n    protected _http = new XMLHttpRequest();\r\n    /**@private */\r\n    private static _urlEncode: Function = encodeURI;\r\n    /**@private */\r\n    protected _responseType: string;\r\n    /**@private */\r\n    protected _data: any;\r\n    /**@private */\r\n    protected _url: string;\r\n\r\n    /**\r\n     * 发送 HTTP 请求。\r\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\r\n     * @param\tdata\t\t\t(default = null)发送的数据。\r\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\r\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\r\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\r\n     */\r\n    send(url: string, data: any = null,\r\n        method: \"get\" | \"post\" | \"head\" = \"get\",\r\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\r\n        headers?: string[]): void {\r\n        this._responseType = responseType;\r\n        this._data = null;\r\n\r\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\r\n            url = HttpRequest._urlEncode(url);\r\n        }\r\n        this._url = url;\r\n\r\n        let http = this._http;\r\n        http.open(method, url, true);\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            else {\r\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (!(data instanceof ArrayBuffer))\r\n                    data = JSON.stringify(data);\r\n            }\r\n        }\r\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\r\n            data = {};\r\n\r\n        if (headers) {\r\n            for (let i = 0; i < headers.length; i++) {\r\n                http.setRequestHeader(headers[i++], headers[i]);\r\n            }\r\n        }\r\n\r\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\r\n        http.responseType = restype;\r\n        if ((http as any).dataType) {//for Ali\r\n            (http as any).dataType = restype;\r\n        }\r\n        http.onerror = (e: any) => {\r\n            this._onError(e);\r\n        }\r\n        http.onabort = (e: any) => {\r\n            this._onAbort(e);\r\n        }\r\n        http.onprogress = (e: any) => {\r\n            this._onProgress(e);\r\n        }\r\n        http.onload = (e: any) => {\r\n            this._onLoad(e);\r\n        }\r\n\r\n        http.send(data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求进度的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onProgress(e: any): void {\r\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求中断的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onAbort(e: any): void {\r\n        this.error(\"Request was aborted by user\");\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求出错侦的听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求消息返回的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onLoad(e: any): void {\r\n        var http: any = this._http;\r\n        var status: number = http.status !== undefined ? http.status : 200;\r\n\r\n        if (status === 200 || status === 204 || status === 0) {\r\n            this.complete();\r\n        } else {\r\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求错误的处理函数。\r\n     * @param\tmessage 错误信息。\r\n     */\r\n    protected error(message: string): void {\r\n        this.clear();\r\n        //console.warn(this.url, message);\r\n        this.event(Event.ERROR, message);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求成功完成的处理函数。\r\n     */\r\n    protected complete(): void {\r\n        this.clear();\r\n        var flag: boolean = true;\r\n        try {\r\n            if (this._responseType === \"json\") {\r\n                this._data = JSON.parse(this._http.responseText);\r\n            } else if (this._responseType === \"xml\") {\r\n                this._data = new XML(this._http.responseText);\r\n            } else {\r\n                this._data = this._http.response || this._http.responseText;\r\n            }\r\n        } catch (e: any) {\r\n            flag = false;\r\n            this.error(e.message);\r\n        }\r\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清除当前请求。\r\n     */\r\n    protected clear(): void {\r\n        var http: any = this._http;\r\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\r\n    }\r\n\r\n    /** 请求的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /** 返回的数据。*/\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * 本对象所封装的原生 XMLHttpRequest 引用。\r\n     */\r\n    get http(): any {\r\n        return this._http;\r\n    }\r\n\r\n    reset() {\r\n        this.offAll();\r\n        this._data = null;\r\n    }\r\n}\r\n\r\n","import { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { ImgUtils } from \"../utils/ImgUtils\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\n\r\nexport class Downloader {\r\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let http = this.getRequestInst();\r\n        http.on(Event.COMPLETE, () => {\r\n            let data = http.data;\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(data);\r\n        });\r\n        http.on(Event.ERROR, null, (error: string) => {\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(null, error);\r\n        });\r\n        if (onProgress)\r\n            http.on(Event.PROGRESS, onProgress);\r\n        http.send(url, null, \"get\", <any>contentType);\r\n        owner.$ref = http; //保持引用避免gc掉\r\n    }\r\n\r\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let image: HTMLImageElement = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(image);\r\n        };\r\n        image.onerror = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        image.src = url;\r\n        owner.$ref = image; //保持引用避免gc掉\r\n    }\r\n\r\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\r\n        this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        WorkerLoader.enable = true;\r\n        if (WorkerLoader.enable) {\r\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\r\n                if (ret)\r\n                    onComplete(ret);\r\n                else\r\n                    onComplete(null, \"workerloader failed!\");\r\n            });\r\n        }\r\n        else\r\n            this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\r\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        audio.crossOrigin = \"\";\r\n        audio.oncanplaythrough = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(audio);\r\n        };\r\n        audio.onerror = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        audio.src = url;\r\n        owner.$ref = audio; //保持引用避免gc掉\r\n    }\r\n\r\n    httpRequestPool: Array<HttpRequest> = [];\r\n    protected getRequestInst() {\r\n        if (this.httpRequestPool.length == 0\r\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\r\n            return new HttpRequest();\r\n        } else {\r\n            return this.httpRequestPool.pop();\r\n        }\r\n    }\r\n\r\n    protected returnRequestInst(inst: HttpRequest) {\r\n        inst.reset();\r\n        if (this.httpRequestPool.length < 10)\r\n            this.httpRequestPool.push(inst);\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Delegate } from \"../utils/Delegate\";\r\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Downloader } from \"./Downloader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { XML } from \"../html/XML\";\r\n\r\nexport interface ILoadTask {\r\n    readonly type: string;\r\n    readonly url: string;\r\n    readonly uuid: string;\r\n    readonly ext: string;\r\n    readonly loader: Loader;\r\n    readonly obsoluteInst: Resource;\r\n    readonly options: Readonly<ILoadOptions>;\r\n    readonly progress: IBatchProgress;\r\n}\r\n\r\nexport interface IResourceLoader {\r\n    load(task: ILoadTask): Promise<any>;\r\n    postLoad?(task: ILoadTask, content: any): Promise<void>;\r\n}\r\n\r\nexport interface ILoadOptions {\r\n    type?: string;\r\n    priority?: number;\r\n    group?: string;\r\n    cache?: boolean;\r\n    ignoreCache?: boolean;\r\n    noRetry?: boolean;\r\n    silent?: boolean;\r\n    useWorkerLoader?: boolean;\r\n    constructParams?: TextureConstructParams;\r\n    propertyParams?: TexturePropertyParams;\r\n    blob?: ArrayBuffer;\r\n    initiator?: ILoadTask;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ILoadURL extends ILoadOptions {\r\n    url: string;\r\n}\r\n\r\ninterface ContentTypeMap {\r\n    \"text\": string,\r\n    \"json\": any,\r\n    \"xml\": XML,\r\n    \"arraybuffer\": ArrayBuffer,\r\n    \"image\": HTMLImageElement | ImageBitmap,\r\n    \"sound\": HTMLAudioElement\r\n}\r\n\r\nvar typeIdCounter = 0;\r\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader, hotReloadable?: boolean };\r\n\r\ninterface URLInfo {\r\n    ext: string,\r\n    typeId: number,\r\n    main: boolean,\r\n    loaderType: new () => IResourceLoader,\r\n}\r\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\r\n\r\n/**\r\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\r\n    static TEXT = \"text\";\r\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\r\n    static JSON = \"json\";\r\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\r\n    static XML = \"xml\";\r\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\r\n    static BUFFER = \"arraybuffer\";\r\n    /**纹理类型，加载完成后返回Texture。*/\r\n    static IMAGE = \"image\";\r\n    /**声音类型，加载完成后返回Sound。*/\r\n    static SOUND = \"sound\";\r\n    /**视频类型，加载完成后返回VideoTexture。*/\r\n    static VIDEO = \"video\";\r\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\r\n    static ATLAS = \"atlas\";\r\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\r\n    static FONT = \"font\";\r\n    /** TTF字体类型，加载完成后返回一个对象。*/\r\n    static TTF = \"ttf\";\r\n    /**Hierarchy资源。*/\r\n    static HIERARCHY = \"HIERARCHY\";\r\n    /**Mesh资源。*/\r\n    static MESH = \"MESH\";\r\n    /**Material资源。*/\r\n    static MATERIAL = \"MATERIAL\";\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\r\n    /**TextureCube资源。*/\r\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\r\n    static TEXTURE2DARRAY = \"TEXTURE2D\";\r\n    /**AnimationClip资源。*/\r\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\n    /**Terrain资源。*/\r\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\n    /**Terrain资源。*/\r\n    static TERRAINRES = \"TERRAIN\";\r\n    /** Spine 资源 */\r\n    static SPINE = \"SPINE\";\r\n    /** Loader ResourceTime */\r\n    static LoaderStat_LoadResourceTime: number;//资源下载+解析时间\r\n    static LoaderStat_LoaderResourceCount: number;//资源下载次数\r\n    static LoaderStat_LoadRequestCount: number;//网络文件请求次数\r\n    static LoaderStat_LoadRequestTime: number;//网络下载时间\r\n\r\n    /** 加载出错后的重试次数，默认重试一次*/\r\n    retryNum: number = 1;\r\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\r\n    retryDelay: number = 0;\r\n    /** 最大下载线程，默认为5个*/\r\n    maxLoader: number = 5;\r\n\r\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\r\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\r\n    static readonly hotReloadableFlags: Record<number, boolean> = {};\r\n\r\n    static downloader = new Downloader();\r\n\r\n    /**\r\n     * 注册一种资源装载器。\r\n     * @param exts 扩展名\r\n     * @param cls\r\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n     * @param hotReloadable 是否支持热重载\r\n     */\r\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string, hotReloadable?: boolean) {\r\n        let typeEntry: TypeMapEntry;\r\n        if (type) {\r\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n            else if (typeEntry.loaderType != cls)\r\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\r\n        }\r\n        else\r\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n        if (hotReloadable)\r\n            Loader.hotReloadableFlags[typeEntry.typeId] = true;\r\n\r\n        for (let ext of exts) {\r\n            let entry = Loader.extMap[ext];\r\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\r\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\r\n                if (i == -1) //注册为次类型\r\n                    entry.push(typeEntry);\r\n                else //覆盖旧的设置\r\n                    entry[i].loaderType = cls;\r\n            }\r\n            else {\r\n                Loader.extMap[ext] = [typeEntry];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**资源分组对应表。*/\r\n    static groupMap: { [name: string]: Set<string> } = {};\r\n    /**已加载的资源池。*/\r\n    static loadedMap: { [url: string]: Array<any> } = {};\r\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\r\n    static preLoadedMap: { [url: string]: any } = {};\r\n\r\n    /**@private */\r\n    private _loadings: Map<string, LoadTask>;\r\n    /**@private */\r\n    private _queue: Array<DownloadItem>;\r\n    /**@private */\r\n    private _downloadings: Set<DownloadItem>;\r\n\r\n    private _tempTime: number;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\r\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._loadings = new Map();\r\n        this._queue = [];\r\n        this._downloadings = new Set();\r\n    }\r\n\r\n    /**\r\n     * 是否有任何的加载任务在进行\r\n     */\r\n    public get loading(): boolean {\r\n        return this._loadings.size > 0;\r\n    }\r\n\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param type 资源类型。比如：Loader.IMAGE。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param options 加载选项。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>这是兼容2.0引擎的加载接口</p>\r\n     * <p>加载资源。</p>\r\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\r\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\r\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\r\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\r\n     * @param cache\t\t是否缓存。\r\n     * @param group\t\t分组，方便对资源进行管理。\r\n     * @param ignoreCache\t是否忽略缓存。\r\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\r\n     * @return Promise对象\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\r\n        let complete: Handler;\r\n        let type: string;\r\n        let options: ILoadOptions = dummyOptions;\r\n        if (arg1 instanceof Handler) {\r\n            complete = arg1;\r\n            type = arg3;\r\n        }\r\n        else if (typeof (arg1) === \"string\")\r\n            type = arg1;\r\n        else if (arg1 != null) {\r\n            type = arg1.type;\r\n            options = arg1;\r\n        }\r\n\r\n        if (priority != null || cache != null || ignoreCache != null || group != null || useWorkerLoader != null) {\r\n            if (options === dummyOptions)\r\n                options = { priority, cache, ignoreCache, group, useWorkerLoader };\r\n            else\r\n                options = Object.assign(options, { priority, cache, ignoreCache, group, useWorkerLoader });\r\n        }\r\n        if (options.cache === false)\r\n            options.ignoreCache = true;\r\n\r\n        let onProgress: ProgressCallback;\r\n        if (arg2 instanceof Handler)\r\n            onProgress = (value: number) => arg2.runWith(value);\r\n        else\r\n            onProgress = arg2;\r\n\r\n        let promise: Promise<any>;\r\n        if (Array.isArray(url)) {\r\n            let pd: BatchProgress;\r\n            if (onProgress)\r\n                pd = new BatchProgress(onProgress);\r\n\r\n            let promises: Array<Promise<any>> = [];\r\n            for (let i = 0; i < url.length; i++) {\r\n                let url2 = url[i];\r\n                if (!url2)\r\n                    continue;\r\n\r\n                if (typeof (url2) === \"string\") {\r\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\r\n                }\r\n                else {\r\n                    promises.push(this._load1(url2.url, url2.type || type,\r\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\r\n                }\r\n            }\r\n\r\n            promise = Promise.all(promises);\r\n        }\r\n        else if (typeof (url) === \"string\")\r\n            promise = this._load1(url, type, options, onProgress);\r\n        else\r\n            promise = this._load1(url.url, url.type || type,\r\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\r\n\r\n        if (complete)\r\n            return promise.then(result => {\r\n                complete.runWith(result);\r\n                return result;\r\n            });\r\n        else\r\n            return promise;\r\n    }\r\n\r\n    /** @internal */\r\n    _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        if (LayaEnv.isPreview) {\r\n            if (url.startsWith(\"res://\")) {\r\n                let uuid = url.substring(6);\r\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\r\n                    if (url2)\r\n                        return this._load2(url2, uuid, type, options, onProgress);\r\n                    else {\r\n                        !options.silent && Loader.warnFailed(url, undefined, options.initiator?.url);\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\r\n                    return this._load2(url, uuid, type, options, onProgress);\r\n                });\r\n            }\r\n        }\r\n        else\r\n            return this._load2(url, null, type, options, onProgress);\r\n    }\r\n\r\n    /** @internal */\r\n    _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\r\n        if (!loaderType) {\r\n            !options.silent && Loader.warnFailed(url, undefined, options.initiator?.url);\r\n            return Promise.resolve(null);\r\n        }\r\n        let formattedUrl = URL.formatURL(url);\r\n\r\n        if (options.group) {\r\n            let set = Loader.groupMap[options.group];\r\n            if (!set)\r\n                set = Loader.groupMap[options.group] = new Set();\r\n            set.add(formattedUrl);\r\n        }\r\n\r\n        let obsoluteRes: Resource;\r\n        if (!options.ignoreCache) {\r\n            let cacheRes = Loader._getRes(formattedUrl, type);\r\n            if (cacheRes !== undefined) {\r\n                if (cacheRes == null)\r\n                    return Promise.resolve(null);\r\n                else {\r\n                    if (!(cacheRes instanceof Resource))\r\n                        return Promise.resolve(cacheRes);\r\n\r\n                    if (cacheRes.obsolute)\r\n                        obsoluteRes = cacheRes;\r\n\r\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\r\n                        return Promise.resolve(cacheRes);\r\n                }\r\n            }\r\n        }\r\n\r\n        let loadingKey = formattedUrl;\r\n        if (!main)\r\n            loadingKey += \"@\" + typeId;\r\n        let task = this._loadings.get(loadingKey);\r\n        if (task) {\r\n            //fix recursive dependency\r\n            let p = options.initiator;\r\n            while (p) {\r\n                if (p === task)\r\n                    return Promise.resolve();\r\n                p = p.options.initiator;\r\n            }\r\n\r\n            if (task.result != null)\r\n                return task.result;\r\n\r\n            if (onProgress)\r\n                task.onProgress.add(onProgress);\r\n            return new Promise((resolve) => task.onComplete.add(resolve));\r\n        }\r\n\r\n        //判断是否在自动图集里\r\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\r\n        if (atlasInfo) {\r\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\r\n                return Loader.getRes(url, type);\r\n            });\r\n        }\r\n\r\n        if (loadTaskPool.length > 0)\r\n            task = loadTaskPool.pop();\r\n        else\r\n            task = new LoadTask();\r\n        task.type = type;\r\n        task.url = url;\r\n        task.uuid = uuid;\r\n        task.ext = ext;\r\n        options = Object.assign(task.options, options);\r\n        delete options.type;\r\n        if (options.priority == null)\r\n            options.priority = 0;\r\n        if (options.useWorkerLoader == null)\r\n            options.useWorkerLoader = WorkerLoader.enable;\r\n        if (onProgress)\r\n            task.onProgress.add(onProgress);\r\n        task.loader = this;\r\n        task.obsoluteInst = obsoluteRes;\r\n\r\n        let assetLoader = new loaderType();\r\n        this._loadings.set(loadingKey, task);\r\n\r\n        let promise: Promise<any>;\r\n\r\n        try {\r\n            Loader.LoaderStat_LoaderResourceCount++;\r\n            this._tempTime = performance.now();\r\n            promise = assetLoader.load(task);\r\n        }\r\n        catch (err: any) {\r\n            !options.silent && Loader.warnFailed(url, err, options.initiator?.url);\r\n\r\n            promise = Promise.resolve(null);\r\n        }\r\n\r\n        return promise.then(content => {\r\n            Loader.LoaderStat_LoadResourceTime += performance.now() - this._tempTime;\r\n            if (content instanceof Resource) {\r\n                content._setCreateURL(url, uuid);\r\n            }\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, content, typeId, main);\r\n\r\n            //console.log(\"Loaded \" + url);\r\n\r\n            if (content != null && assetLoader.postLoad != null) {\r\n                task.result = content;\r\n                return assetLoader.postLoad(task, content).then(() => {\r\n                    task.progress.update(-1, 1);\r\n                    task.onComplete.invoke(content);\r\n                    return content;\r\n                });\r\n            }\r\n            else {\r\n                task.progress.update(-1, 1);\r\n                task.onComplete.invoke(content);\r\n                return content;\r\n            }\r\n        }).catch(error => {\r\n            !options.silent && Loader.warnFailed(url, error, options.initiator?.url);\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, null, typeId, main);\r\n\r\n            task.onComplete.invoke(null);\r\n            return null;\r\n        }).then(content => {\r\n            this._loadings.delete(loadingKey);\r\n            task.reset();\r\n            loadTaskPool.push(task);\r\n            if (this._loadings.size == 0)\r\n                this.event(Event.COMPLETE);\r\n            return content;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\r\n     * 成功则返回下载的数据，失败返回null。\r\n     */\r\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\r\n        options = options || dummyOptions;\r\n        let task: DownloadItem = {\r\n            originalUrl: url,\r\n            url: url,\r\n            contentType: contentType,\r\n            priority: options.priority ?? 1,\r\n            retryCnt: 0,\r\n            onProgress: onProgress,\r\n            onComplete: null,\r\n        };\r\n        if (options.useWorkerLoader) {\r\n            task.useWorkerLoader = true;\r\n            task.workerLoaderOptions = options.workerLoaderOptions;\r\n        }\r\n        if (options.blob)\r\n            task.blob = options.blob;\r\n        if (options.noRetry)\r\n            task.retryCnt = -1;\r\n        if (options.silent)\r\n            task.silent = true;\r\n\r\n        return AssetDb.inst.resolveURL(url).then(url => {\r\n            if (url)\r\n                return new Promise((resolve) => {\r\n                    task.url = URL.formatURL(url);\r\n                    task.onComplete = resolve;\r\n                    this.queueToDownload(task);\r\n                });\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    private queueToDownload(item: DownloadItem) {\r\n        if (this._downloadings.size < this.maxLoader) {\r\n            this.download(item);\r\n            return;\r\n        }\r\n\r\n        let priority = item.priority;\r\n        if (priority == 0)\r\n            this._queue.push(item);\r\n        else {\r\n            let i = this._queue.findIndex(e => e.priority < priority);\r\n            if (i != -1)\r\n                this._queue.splice(i, 0, item);\r\n            else\r\n                this._queue.push(item);\r\n        }\r\n    }\r\n\r\n    private download(item: DownloadItem) {\r\n        this._downloadings.add(item);\r\n        Loader.LoaderStat_LoadRequestCount++;\r\n        item.startTime = performance.now();\r\n        let url = URL.postFormatURL(item.url);\r\n\r\n        if (item.contentType == \"image\") {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                if (!(preloadedContent instanceof ArrayBuffer)) {\r\n                    this.completeItem(item, preloadedContent);\r\n                    return;\r\n                }\r\n\r\n                //cache as arraybuffer\r\n                item.blob = preloadedContent;\r\n            }\r\n\r\n            if (item.blob) {\r\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.retryCnt = -1; //失败无需重试\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else if (item.useWorkerLoader) {\r\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.useWorkerLoader = false; //重试不用worker\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else {\r\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                    this.completeItem(item, data, error));\r\n            }\r\n        }\r\n        else if (item.contentType == \"sound\") {\r\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n        else {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                this.completeItem(item, preloadedContent);\r\n                return;\r\n            }\r\n\r\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n    }\r\n\r\n    private completeItem(item: DownloadItem, content: any, error?: string) {\r\n        this._downloadings.delete(item);\r\n        Loader.LoaderStat_LoadRequestTime += performance.now() - item.startTime;\r\n        if (content) {\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            item.onComplete(content);\r\n        }\r\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\r\n            item.retryCnt++;\r\n            if (!item.silent)\r\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\r\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\r\n        }\r\n        else {\r\n            !item.silent && Loader.warnFailed(item.url);\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    public static getURLInfo(url: string, type?: string): URLInfo {\r\n        //先根据扩展名获得注册信息A\r\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\r\n        let extEntry: Array<TypeMapEntry>;\r\n        if (ext.length > 0)\r\n            extEntry = Loader.extMap[ext];\r\n\r\n        let typeId: number;\r\n        let main: boolean;\r\n        let loaderType: new () => IResourceLoader;\r\n\r\n        if (type) { //指定了类型\r\n            let typeEntry = Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return NullURLInfo;\r\n\r\n            typeId = typeEntry.typeId;\r\n\r\n            let i: number = 0;\r\n            if (extEntry) {\r\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\r\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\r\n                    main = i == 0;\r\n                    loaderType = extEntry[i].loaderType;\r\n                }\r\n                else {\r\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\r\n                    main = false;\r\n                    loaderType = typeEntry.loaderType;\r\n                }\r\n            }\r\n            else { //扩展名没有注册的情况\r\n                main = type != Loader.TEXTURE2D;\r\n                loaderType = typeEntry.loaderType;\r\n            }\r\n        }\r\n        else {\r\n            if (!extEntry)\r\n                return NullURLInfo;\r\n\r\n            //没有自定类型，则认为是主资源\r\n            main = true;\r\n            typeId = extEntry[0].typeId;\r\n            loaderType = extEntry[0].loaderType;\r\n        }\r\n\r\n        return { ext, main, typeId, loaderType };\r\n    }\r\n\r\n    public static warnFailed(url: string, err?: any, initiatorUrl?: string) {\r\n        if (initiatorUrl)\r\n            this.warn(`Failed to load '${url}' (in '${initiatorUrl}')`, err);\r\n        else\r\n            this.warn(`Failed to load '${url}'`, err);\r\n    }\r\n\r\n    public static warn(msg: string, err?: any) {\r\n        if (err)\r\n            console.warn(msg, err);\r\n        else\r\n            console.warn(msg);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的资源。\r\n     * @param url 资源地址。\r\n     * @return 返回资源。\r\n     */\r\n    static getRes(url: string, type?: string): any {\r\n        url = URL.formatURL(url);\r\n        let ret = Loader._getRes(url, type);\r\n        return ret || null;\r\n    }\r\n\r\n    /** @internal */\r\n    static _getRes(url: string, type?: string): any {\r\n        let resArr = Loader.loadedMap[url];\r\n        if (!resArr)\r\n            return undefined;\r\n\r\n        let ret: any;\r\n        if (type) {\r\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return undefined;\r\n\r\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\r\n                if (resArr[0] == typeEntry.typeId)\r\n                    ret = resArr[1];\r\n            }\r\n            else {\r\n                let i = resArr.indexOf(typeEntry.typeId);\r\n                if (i != -1)\r\n                    ret = resArr[i + 1];\r\n            }\r\n        }\r\n        else\r\n            ret = resArr[1]; //主资源\r\n\r\n        if ((ret instanceof Resource) && ret.destroyed)\r\n            return undefined;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getTexture2D(url: string): Texture2D {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的图集地址列表。\r\n     * @param url 图集地址。\r\n     * @return 返回地址集合。\r\n     */\r\n    static getAtlas(url: string): AtlasResource {\r\n        return Loader.getRes(url, Loader.ATLAS);\r\n    }\r\n\r\n    getRes(url: string, type?: string): any {\r\n        return Loader.getRes(url, type);\r\n    }\r\n\r\n    static createNodes<T extends Node>(url: string): T {\r\n        return <T>(<Prefab>Loader.getRes(url))?.create();\r\n    }\r\n\r\n    /**\r\n     * 缓存资源。\r\n     * @param url 资源地址。\r\n     * @param data 要缓存的内容。\r\n     */\r\n    static cacheRes(url: string, data: any, type?: string): void {\r\n        url = URL.formatURL(url);\r\n        let urlInfo = Loader.getURLInfo(url, type);\r\n        if (urlInfo.typeId != null)\r\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\r\n    }\r\n\r\n    /** @internal */\r\n    static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\r\n        let entry: Array<any> = Loader.loadedMap[url];\r\n        if (main) {\r\n            if (entry) {\r\n                entry[0] = typeId;\r\n                entry[1] = data;\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [typeId, data];\r\n        }\r\n        else {\r\n            if (entry) {\r\n                let i = entry.findIndex(e => e === typeId);\r\n                if (i != -1)\r\n                    entry[i + 1] = data;\r\n                else\r\n                    entry.push(typeId, data);\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\r\n        }\r\n    }\r\n\r\n    cacheRes(url: string, data: any, type?: string): void {\r\n        Loader.cacheRes(url, data, type);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    static clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _clearRes(url: string, checkObj?: any) {\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n\r\n        if (checkObj) {\r\n            if (entry[1] == checkObj) {\r\n                if (entry.length == 2)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry[1] = undefined;\r\n            }\r\n            else {\r\n                let i = entry.indexOf(checkObj);\r\n                if (i == -1)\r\n                    return;\r\n\r\n                if (entry.length == 4 && entry[0] == null)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry.splice(i - 1, 2);\r\n            }\r\n\r\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\r\n                checkObj.destroy();\r\n            }\r\n        }\r\n        else {\r\n            delete Loader.loadedMap[url];\r\n\r\n            if (entry.length > 2) {\r\n                for (let i = 1; i < entry.length; i += 2) {\r\n                    let obj = entry[i];\r\n                    if ((obj instanceof Resource) && !obj.destroyed) {\r\n                        obj.destroy();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let obj = entry[1];\r\n                if ((obj instanceof Resource) && !obj.destroyed) {\r\n                    obj.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\r\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\r\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\r\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\r\n     */\r\n    clearTextureRes(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n        let res = entry[1];\r\n        if (res instanceof Texture) {\r\n            res.disposeBitmap();\r\n        }\r\n        else if (res instanceof AtlasResource) {\r\n            for (let tex of res.textures)\r\n                tex.disposeBitmap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置资源分组。\r\n     * @param url 资源地址。\r\n     * @param group 分组名。\r\n     */\r\n    static setGroup(url: string, group: string): void {\r\n        url = URL.formatURL(url);\r\n        let set = Loader.groupMap[group];\r\n        if (!set)\r\n            set = Loader.groupMap[group] = new Set();\r\n        set.add(url);\r\n    }\r\n\r\n    /**\r\n     * 根据分组清理资源。\r\n     * @param group 分组名\r\n     */\r\n    static clearResByGroup(group: string): void {\r\n        let set = Loader.groupMap[group];\r\n        if (set) {\r\n            for (let k of set)\r\n                Loader._clearRes(k);\r\n        }\r\n    }\r\n\r\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\r\n    clearUnLoaded(): void {\r\n        if (this._queue.length == 0)\r\n            return;\r\n\r\n        let arr = this._queue.concat();\r\n        this._queue.length = 0;\r\n        for (let item of arr)\r\n            item.onComplete(null);\r\n    }\r\n\r\n    /**\r\n     * 根据地址集合清理掉未加载的内容\r\n     * @param urls 资源地址集合\r\n     */\r\n    cancelLoadByUrls(urls: any[]): void {\r\n        if (!urls) return;\r\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\r\n            this.cancelLoadByUrl(urls[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址清理掉未加载的内容\r\n     * @param url 资源地址\r\n     */\r\n    cancelLoadByUrl(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let i = this._queue.findIndex(item => item.url == url);\r\n        if (i != -1) {\r\n            let item = this._queue[i];\r\n            this._queue.splice(i, 1);\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 载入一个分包\r\n     * @path 小游戏的分包路径\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\r\n    /**\r\n     * 载入一个分包。\r\n     * @path 分包路径\r\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\r\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\r\n        let progress: ProgressCallback;\r\n        let remoteUrl: string;\r\n\r\n        if (typeof (arg2) === \"string\") {\r\n            remoteUrl = arg2;\r\n            progress = arg3;\r\n        } else {\r\n            progress = arg3 || arg2;\r\n        }\r\n\r\n        if (remoteUrl) {\r\n            if (!remoteUrl.endsWith(\"/\"))\r\n                remoteUrl += \"/\";\r\n            URL.basePaths[path.length > 0 ? (path + \"/\") : path] = remoteUrl;\r\n            return this._loadSubFileConfig(path, null, progress);\r\n        } else {\r\n            if (LayaEnv.isPreview)\r\n                return Promise.resolve();\r\n\r\n            let mini = ILaya.Browser.miniGameContext;\r\n\r\n            if (mini == null) {\r\n                return this._loadSubFileConfig(path, null, progress);\r\n            }\r\n            else {\r\n                return this._loadMiniPackage(mini, path, progress).then(() =>\r\n                    this._loadSubFileConfig(path, mini, progress)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\r\n        if (mini.subPkgNameSeperator)\r\n            packName = packName.replace(/\\//g, mini.subPkgNameSeperator);\r\n        if (!(packName.length > 0)) return Promise.resolve();\r\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\r\n            let loadTask: any = mini.loadSubpackage({\r\n                name: packName,\r\n                success: (res: any) => {\r\n                    resolve(res);\r\n                },\r\n                fail: (res: any) => {\r\n                    reject(res);\r\n                }\r\n            });\r\n\r\n            loadTask.onProgressUpdate && loadTask.onProgressUpdate((res: any) => {\r\n                progress && progress(res);\r\n            });\r\n        })\r\n    }\r\n\r\n    private _loadSubFileConfig(path: string, mini: any, onProgress: ProgressCallback): Promise<any> {\r\n        if (mini && mini.subPkgPathSeperator)\r\n            path = path.replace(/\\//g, mini.subPkgPathSeperator);\r\n        if (path.length > 0)\r\n            path += \"/\";\r\n\r\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\r\n            let files: Array<string> = [];\r\n            let col = fileConfig.files;\r\n            for (let k in col) {\r\n                if (k.length > 0) {\r\n                    for (let file of col[k])\r\n                        files.push(k + \"/\" + file);\r\n                }\r\n                else {\r\n                    for (let file of col[k])\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            if (fileConfig.hash) {\r\n                let i = 0;\r\n                let version = URL.version;\r\n                for (let k of fileConfig.hash) {\r\n                    if (k != null)\r\n                        version[files[i]] = k;\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            let configs: Array<any> = fileConfig.config;\r\n            let len = configs.length;\r\n            let i = 0, j = 0, m = 0, k = 0, n = 0;\r\n            let indice: Array<number>;\r\n            let c: any;\r\n            let metaMap = AssetDb.inst.metaMap;\r\n            while (true) {\r\n                if (indice == null) {\r\n                    if (i >= len)\r\n                        break;\r\n                    c = configs[i];\r\n                    indice = c.i;\r\n                    if (Array.isArray(indice))\r\n                        n = indice.length;\r\n                    else {\r\n                        m = indice;\r\n                        n = 0;\r\n                        k = 1;\r\n                    }\r\n                    j = 0;\r\n                }\r\n                if (k == 0) {\r\n                    if (j >= n) {\r\n                        i++;\r\n                        indice = null;\r\n                        continue;\r\n                    }\r\n                    k = indice[j++];\r\n                    if (k > 0) {\r\n                        m = k;\r\n                        k = 0;\r\n                    }\r\n                    else\r\n                        k = -k;\r\n                }\r\n                else\r\n                    k--;\r\n\r\n                let file = files[m + k];\r\n                switch (c.t) {\r\n                    case 0: //图片\r\n                        metaMap[file] = c;\r\n                        break;\r\n                    case 1: //自动图集\r\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\r\n                        break;\r\n                    case 2: //Shader\r\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\r\n                        break;\r\n                    case 3: //render texture\r\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (!mini && fileConfig.entry)\r\n                return ILaya.Browser.loadLib(URL.formatURL(path + fileConfig.entry));\r\n            else\r\n                return Promise.resolve();\r\n        });\r\n    }\r\n}\r\n\r\nclass LoadTask implements ILoadTask {\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n    ext: string;\r\n    options: ILoadOptions;\r\n    loader: Loader;\r\n    progress: BatchProgress;\r\n    obsoluteInst: Resource;\r\n    result: any;\r\n    onProgress: Delegate;\r\n    onComplete: Delegate;\r\n\r\n    constructor() {\r\n        this.options = {};\r\n        this.onProgress = new Delegate();\r\n        this.onComplete = new Delegate();\r\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\r\n    }\r\n\r\n    public reset() {\r\n        for (let k in this.options)\r\n            delete this.options[k];\r\n        this.onProgress.clear();\r\n        this.onComplete.clear();\r\n        this.progress.reset();\r\n        this.obsoluteInst = null;\r\n        this.result = null;\r\n    }\r\n}\r\n\r\nconst loadTaskPool: Array<LoadTask> = [];\r\nconst dummyOptions: ILoadOptions = {};\r\n\r\ninterface DownloadItem {\r\n    url: string;\r\n    originalUrl: string;\r\n    contentType: string;\r\n    priority: number;\r\n    useWorkerLoader?: boolean;\r\n    workerLoaderOptions?: Record<string, any>;\r\n    blob?: ArrayBuffer;\r\n    retryCnt?: number;\r\n    silent?: boolean;\r\n    startTime?: number;\r\n    onComplete: (content: any) => void;\r\n    onProgress: ProgressCallback;\r\n}","/**\r\n * @en The ClassUtils is a utility class for class operations.\r\n * @zh ClassUtils 是一个类工具的类。\r\n */\r\nexport class ClassUtils {\r\n    static _classMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * @en Registers a class mapping for easy retrieval during class reflection.\r\n     * @param className The name or alias for the class mapping.\r\n     * @param classDef The full name of the class or a reference to the class.\r\n     * @zh 注册 Class 映射，方便在类反射时获取。\r\n     * @param className 映射的名字或者别名。\r\n     * @param classDef 类的全名或者类的引用，全名比如：\"laya.Sprite\"。\r\n     */\r\n    static regClass(className: string, classDef: any): void {\r\n        ClassUtils._classMap[className] = classDef;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the class object based on the class name.\r\n     * @param className The class name (e.g., \"laya.display.Sprite\") or a registered alias (e.g., \"Sprite\").\r\n     * @return The class object.\r\n     * @zh 根据类名返回类对象。\r\n     * @param className 类名（比如 \"laya.display.Sprite\"）或者注册的别名（比如 \"Sprite\"）。\r\n     * @return 类对象。\r\n     */\r\n    static getClass(className: string): any {\r\n        return ClassUtils._classMap[className];\r\n    }\r\n\r\n    /**\r\n     * @en Creates an instance of a class based on the class name.\r\n     * @param className The class name (e.g., \"laya.display.Sprite\") or a registered alias (e.g., \"Sprite\").\r\n     * @return An instance of the class.\r\n     * @zh 根据名称创建 Class 实例。\r\n     * @param className 类名（比如 \"laya.display.Sprite\"）或者注册的别名（比如 \"Sprite\"）。\r\n     * @return 返回类的实例。\r\n     */\r\n    static getInstance(className: string): any {\r\n        var compClass: any = ClassUtils.getClass(className);\r\n        if (compClass) return new compClass();\r\n        else console.warn(\"[error] Undefined class:\", className);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Loader } from \"./laya/net/Loader\";\r\nimport { ClassUtils } from \"./laya/utils/ClassUtils\";\r\n\r\nexport type FEnumDescriptor = {\r\n    name: string,\r\n    value: any,\r\n    extend?: FEnumDescriptor,\r\n    [index: string]: any,\r\n}[] | any[] | Object | string;\r\n\r\nexport type FPropertyType = string | Function | Object | [FPropertyType] | [\"Record\", FPropertyType];\r\n\r\nexport interface FPropertyDescriptor {\r\n    /**\r\n    * @en Property name. Generally does not need to be set.\r\n    * @zh 属性名称。一般不需要设定。\r\n    */\r\n    name: string;\r\n    /**\r\n     * @en Property type.\r\n     * Basic types are: \"number\", \"string\", \"boolean\", \"any\", note that these are used as strings, not types.\r\n     * Composite types are: arrays, expressed as [\"number\"]; dictionaries, expressed as [\"Record\", \"number\"], where the first element is fixed as \"Record\" and the second element is the actual type.\r\n     * Other object types can directly use the class name, but note that the class must use the regClass decorator. Enum types are also supported. Enum types do not need regClass.\r\n     * If type is not provided, it indicates that it is only used for UI style, has no actual corresponding data, and will not be serialized.\r\n     * @zh 属性类型。\r\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\r\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\r\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\r\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\r\n     */\r\n    type: FPropertyType;\r\n\r\n    /**\r\n     * @en The initial value of the property in the prototype. This value is also used for comparison during serialization, so if they are the same, this property will not be serialized. It must be ensured that the value set here is the initial value of the variable in the class.\r\n     * @zh 该属性在原型中的初始值。这个值也用于序列化时比较，如果相同则不序列化这个属性，所以必须保证这里设置的值就是类中变量的初始值。\r\n     */\r\n    default?: any;\r\n\r\n    /**\r\n     * @en Title. If not provided, the name will be used.\r\n     * @zh 标题。如果不提供，则使用name。\r\n     */\r\n    caption: string;\r\n    /**\r\n     * @en Tooltip text\r\n     * @zh 提示文字\r\n     */\r\n    tips: string;\r\n\r\n    /**\r\n     * @en Property category. Setting the same value for multiple properties can display them in the same Inspector category.\r\n     * @zh 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个属性栏目内。\r\n     */\r\n    catalog: string;\r\n\r\n    /**\r\n     * @en Category title. If not provided, the category name will be used directly.\r\n     * @zh 栏目标题。不提供则直接使用栏目名称。\r\n     */\r\n    catalogCaption: string;\r\n\r\n    /**\r\n     * @en The display order of the category, lower values are displayed in front. If not provided, it follows the order in which properties appear.\r\n     * @zh 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。\r\n     */\r\n    catalogOrder: number;\r\n\r\n    /**\r\n     * @en The control for editing this property. Built-in ones include: number, string, boolean, color, vec2, vec3, vec4, asset\r\n     * - number : Number input.\r\n     * - string : String input. Default is single-line input, for multi-line, need to activate the multiline option.\r\n     * - boolean : Boolean input, used for checkboxes or radio buttons.\r\n     * - color : A color box + palette + color picker\r\n     * - vec2 : Combination of X and Y inputs\r\n     * - vec3 : Combination of X, Y, and Z inputs\r\n     * - vec4 : Combination of X, Y, Z, and W inputs\r\n     * - asset : Select resource\r\n     * - Generally, you don't need to set this option, the editor will automatically select the appropriate control based on the property type, but in some cases you may need to specify it forcefully.\r\n     * - For example, if the data type is Vector4, but it actually expresses a color, the default control for editing Vector4 is not suitable, and you need to set it to \"color\" here.\r\n     * - Explicitly setting inspector to null will not construct an inspector for the property. This is different from setting hidden to true. When hidden is true, it is created but not visible,\r\n     * while when inspector is null, it is not created at all.\r\n     * @zh 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\r\n     * - number : 数字输入。\r\n     * - string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\r\n     * - boolean : 布尔值输入，用于单选框或多选框。\r\n     * - color : 一个颜色框+调色盘+拾色器\r\n     * - vec2 : XY输入的组合\r\n     * - vec3 : XYZ输入的组合\r\n     * - vec4 : XYZW输入的组合\r\n     * - asset : 选择资源\r\n     * - 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\r\n     * - 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为\"color\"。\r\n     * - 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\r\n     * inspector为null的话则是完全不创建。\r\n     */\r\n    inspector: string;\r\n\r\n    /**\r\n     * @en Hide control: true to hide, false to show. Often used in cases of associated properties.\r\n     * - 1. Can use expressions by putting condition expressions in strings to get boolean type calculation results, for example \"!data.a && !data.b\" means when properties a and b are both empty, the condition is true, and this property is hidden.\r\n     * - 2. Here, data is the object data of the current component, data.a and data.b property fields a and b refer to the a and b property values in the current component, by this method to get the property values in the component object data, used for conditional judgment, acting on whether the current property is hidden.\r\n     * @zh 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\r\n     * - 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\r\n     * - 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    hidden: boolean | string;\r\n\r\n    /**\r\n     * @en Read-only control.\r\n     * - 1. Can use expressions by putting condition expressions in strings to get boolean type calculation results, for example \"!data.a && !data.b\" means when properties a and b are both empty, the condition is true, and this property is read-only.\r\n     * - 2. Here, data is the object data of the current component, data.a and data.b property fields a and b refer to the a and b property values in the current component, by this method to get the property values in the component object data, used for conditional judgment, acting on whether the current property is hidden.\r\n     * @zh 只读控制。\r\n     * - 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\r\n     * - 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    readonly: boolean | string;\r\n\r\n    /**\r\n     * @en Data checking mechanism.\r\n     * - 1. Pass in a string including expressions to judge whether it meets the conditions of the expression. If it meets the conditions, it needs to return an error message.\r\n     * - 2. Usage example: \"if(value == data.a) return 'Cannot be the same as the value of a'\"\r\n     * Where value is the value entered by the user for this property, data is the object data of the current component, data.a is the a property value in the current component\r\n     * @zh 数据检查机制。\r\n     * - 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\r\n     * - 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\r\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\r\n     */\r\n    validator: string;\r\n\r\n    /**\r\n     * @en Whether to allow the data to be empty.\r\n     * Can use expressions to return true or false results.\r\n     * @zh 是否允许数据为空值。\r\n     * 可以用表达式，返回true或者false的结果。\r\n     */\r\n    required: boolean | string;\r\n\r\n    /**\r\n     * @en Whether to serialize\r\n     * @zh 是否序列化\r\n     */\r\n    serializable: boolean;\r\n\r\n    /**\r\n     * @en When the property does not participate in serialization, if its data may be affected by other serializable properties, fill in the names of other properties here. This is usually used to determine whether prefab properties are overridden.\r\n     * @zh 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。\r\n     */\r\n    affectBy: string;\r\n\r\n    /**\r\n     * @en Whether it's multi-line text input\r\n     * @zh 是否多行文本输入\r\n     */\r\n    multiline: boolean;\r\n\r\n    /**\r\n     * @en Whether it's password input\r\n     * @zh 是否密码输入\r\n     */\r\n    password: boolean;\r\n\r\n    /**\r\n     * @en If true or default, text input is submitted every time; otherwise, it's only submitted when losing focus\r\n     * @zh 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交\r\n     */\r\n    submitOnTyping: boolean;\r\n\r\n    /**\r\n     * @en If it's a text type, it's the prompt information for input text; if it's a boolean type, it's the title of the checkbox.\r\n     * @zh 如果是文本类型，是输入文本的提示信息；如果是布尔类型，是多选框的标题。\r\n     */\r\n    prompt: string;\r\n\r\n    /**\r\n     * @en Define enumeration\r\n     * @zh 定义枚举\r\n     */\r\n    enumSource: FEnumDescriptor;\r\n\r\n    /**\r\n     * @en Hide this property when the data source is empty\r\n     * @zh 当数据源为空时，隐藏这个属性\r\n     */\r\n    hideIfEnumSourceEmpty: boolean;\r\n\r\n    /**\r\n     * @en Whether to invert the boolean value. For example, when the property value is true, the checkbox is displayed as unchecked.\r\n     * @zh 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。\r\n     */\r\n    reverseBool: boolean;\r\n\r\n    /**\r\n     * @en Whether to allow null values. Default is true.\r\n     * @zh 是否允许null值。默认为true。\r\n     */\r\n    nullable: boolean;\r\n\r\n    /**\r\n     * @en Minimum value for numbers\r\n     * @zh 数字的最小值\r\n     */\r\n    min: number,\r\n\r\n    /**\r\n     * @en Maximum value for numbers\r\n     * @zh 数字的最大值\r\n     */\r\n    max: number,\r\n\r\n    /**\r\n     * @en Value range, equivalent to setting min and max at once.\r\n     * @zh 数值范围，等同于一次性设置min和max。\r\n     */\r\n    range: [number, number];\r\n\r\n    /**\r\n     * @en The magnitude of value change each time when changing the value by dragging.\r\n     * @zh 拖动方式改变数值时，每次数值改变的幅度。\r\n     */\r\n    step: number;\r\n\r\n    /**\r\n     * @en Number of decimal places\r\n     * @zh 小数点后的位数\r\n     */\r\n    fractionDigits: number;\r\n\r\n    /**\r\n     * @en Display as percentage\r\n     * @zh 显示为百分比\r\n     */\r\n    percentage: boolean;\r\n\r\n    /**\r\n     * @en Applicable to array type properties. Indicates that the array is of fixed length and not allowed to be modified.\r\n     * @zh 对数组类型属性适用。表示数组是固定长度，不允许修改。\r\n     */\r\n    fixedLength: boolean;\r\n\r\n    /**\r\n     * @en Applicable to array type properties. If not provided, it means the array allows all operations, if provided, only the listed operations are allowed.\r\n     * @zh 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。\r\n     */\r\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\r\n\r\n    /**\r\n     * @en Applicable to array type properties. Here you can define the properties of array elements\r\n     * @zh 对数组类型属性适用。这里可以定义数组元素的属性\r\n     */\r\n    elementProps: Partial<FPropertyDescriptor>;\r\n\r\n    /**\r\n     * @en Applicable to color type properties. Indicates whether to provide modification of the transparency a value.\r\n     * @zh 对颜色类型属性适用。表示是否提供透明度a值的修改。\r\n     */\r\n    showAlpha: boolean;\r\n\r\n    /**\r\n     * @en Applicable to color type properties. It differs from the default value in that when default is null, defaultColor can define a non-null default value.\r\n     * @zh 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。\r\n     */\r\n    defaultColor: any;\r\n\r\n    /**\r\n     * @en Applicable to color type properties. Allows displaying a checkbox to determine whether the color is null.\r\n     * @zh 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。\r\n     */\r\n    colorNullable: boolean;\r\n\r\n    /**\r\n     * @en Applicable to object type properties. If true, hide the object's title, and the display indentation of the properties under the object will be reduced by one level.\r\n     * @zh 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。\r\n     */\r\n    hideHeader: boolean;\r\n\r\n    /**\r\n     * @en Applicable to object type properties. When creating an object, you can select a type from a dropdown menu. If explicitly set to null, the menu is disabled. By default, a menu for creating the base class is displayed.\r\n     * @zh 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。\r\n     */\r\n    createObjectMenu: Array<string>;\r\n\r\n    /**\r\n     * @en Applicable to object type properties. Indicates that this property type has struct-like behavior characteristics, that is, it is always used as a whole.\r\n     * For example, if the value of property b of object obj is a1, a1 is an instance of type T, and the structLike of type T is true, then when the properties of a1 change, the editor will simultaneously call obj.b = a1.\r\n     * Default is false.\r\n     * @zh 对对象类型属性适用。表示这个属性类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n\r\n    /**\r\n     * @en Indicates that this property is a reference to a resource\r\n     * @zh 说明此属性是引用一个资源\r\n     */\r\n    isAsset: boolean;\r\n\r\n    /**\r\n     * @en Applicable to resource type properties. Multiple resource types are separated by commas, for example \"Image,Audio\".\r\n     * @zh 对资源类型的属性适用。多个资源类型用逗号分隔，例如\"Image,Audio\"。\r\n     */\r\n    assetTypeFilter: string;\r\n\r\n    /**\r\n     * @en If the property type is string, and when selecting a resource, this option determines whether the property value is the original path of the resource or in the format of res://uuid. If true, it's the original path of the resource. Default is false.\r\n     * @zh 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。\r\n     */\r\n    useAssetPath: boolean;\r\n\r\n    /**\r\n     * @en Applicable to resource type properties. Whether to allow selection of internal resources when choosing a resource\r\n     * @zh 对资源类型的属性适用。选择资源时是否允许选择内部资源\r\n     */\r\n    allowInternalAssets: boolean;\r\n\r\n    /**\r\n     * @en Applicable to resource type properties. You can set a custom filter. The filter needs to be registered first through EditorEnv.assetMgr.customAssetFilters.\r\n     * @zh 对资源类型的属性适用。可以设置一个自定义的过滤器。过滤器需要先通过EditorEnv.assetMgr.customAssetFilters注册。\r\n     */\r\n    customAssetFilter: string;\r\n\r\n    /**\r\n     * @en Applicable to properties of type Node or Component. If not null, when deserialization is performed in the actual runtime environment, the referenced object is no longer instantiated, but its serialized data is saved as-is to the specified property.\r\n     * @zh 对类型是Node或者Component的属性适用。如果不为null，当在实际运行环境里执行反序列化时，引用对象不再实例化，而是将它的序列化数据原样保存到指定的属性中。\r\n     */\r\n    toTemplate: string;\r\n\r\n    /**\r\n     * @en Display position. Syntax: before xxx/after xxx/first/last.\r\n     * @zh 显示位置。语法：before xxx/after xxx/first/last。\r\n     */\r\n    position: string;\r\n\r\n    /**\r\n     * @en Increase indentation, unit is level, not pixels.\r\n     * @zh 增加缩进，单位是层级，不是像素。\r\n     */\r\n    addIndent?: number;\r\n\r\n    /**\r\n     * @en Default collapsed state of sub-properties\r\n     * @zh 子属性默认折叠状态\r\n     */\r\n    collapsed?: boolean;\r\n\r\n    /**\r\n     * @en Indicates that the property is a private property. Private properties will not be displayed in the Inspector, but will be serialized and saved.\r\n     * @zh 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。\r\n     */\r\n    \"private\": boolean;\r\n\r\n    /**\r\n     * @en Indicates whether the property is allowed to be edited in multiple selection situations. Default is true.\r\n     * @zh 表示属性是否允许多选情况下编辑。默认true。\r\n     */\r\n    allowMultipleObjects: boolean;\r\n\r\n    /**\r\n     * @en Indicates that the property is not displayed in the property table of derived classes\r\n     * @zh 表示属性不显示在派生类的属性表中\r\n     */\r\n    hideInDeriveType: boolean;\r\n\r\n    /**\r\n     * @en When the property changes, additionally call a function of the object, this is the function name.\r\n     * The function prototype is func(key?:string). Where key is passed when changing internal properties of members.\r\n     * For example, when changing the internal properties of an element of the data, key is the index of this element.\r\n     * @zh 属性改变时额外调用对象的一个函数，这里是函数名称。\r\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\r\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。\r\n     */\r\n    onChange: string;\r\n\r\n    /**\r\n     * @en Additional options\r\n     * @zh 额外的选项\r\n     */\r\n    options: Record<string, any>;\r\n}\r\n\r\nexport interface FTypeDescriptor {\r\n    /**\r\n     * @en Title. If not provided, the name will be used.\r\n     * @zh 标题。如果不提供，则使用name。\r\n     */\r\n    caption: string;\r\n\r\n    /**\r\n     * @en URL of the help documentation.\r\n     * @zh 帮助文档url地址。\r\n     */\r\n    help: string;\r\n\r\n    /**\r\n     * @en Add to the component menu.\r\n     * @zh 添加到组件菜单。\r\n     */\r\n    menu: string;\r\n\r\n    /**\r\n     * @en Icon.\r\n     * @zh 图标。\r\n     */\r\n    icon: string;\r\n\r\n    /**\r\n     * @en Whether it's a resource type.\r\n     * @zh 是否资源类型。\r\n     */\r\n    isAsset: boolean;\r\n\r\n    /**\r\n     * @en Applicable to properties of resource types. Multiple resource types are separated by commas, e.g., \"Image,Audio\".\r\n     * Available values can be found in editor/public/IAssetInfo.ts.\r\n     * @zh 对资源类型的属性适用。多个资源类型用逗号分隔，例如\"Image,Audio\"。\r\n     * 可用值参考editor/public/IAssetInfo.ts。\r\n     */\r\n    assetTypeFilter: string;\r\n\r\n    /**\r\n     * @en Indicates that this type has struct-like behavior, i.e., it's always used as a whole.\r\n     * For example, if the value of property b of object obj is a1, a1 is an instance of type T, \r\n     * and T's structLike is true, then when a1's properties change, the editor will also call obj.b = a1.\r\n     * Default is false.\r\n     * @zh 表示这个类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，\r\n     * 那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n\r\n    /**\r\n     * @en Initial value. This value is only used in the panel, it specifies the initial value \r\n     * given to the property when creating an object from the interface.\r\n     * @zh 初始值。这个值只在面板中使用，它指从界面上创建对象时赋予属性的初始值。\r\n     */\r\n    init: any;\r\n\r\n    /**\r\n     * @en List of properties.\r\n     * @zh 属性列表。\r\n     */\r\n    properties: Array<Partial<FPropertyDescriptor>>;\r\n\r\n    /**\r\n     * @en Control for editing instances of this class.\r\n     * @zh 编辑这个类实例的控件。\r\n     */\r\n    inspector: string;\r\n\r\n    /**\r\n     * @en Applicable to Components, indicates the type of node this component can be mounted on. Default is null.\r\n     * @zh 对Component使用，表示这个组件允许挂载的节点类型。默认null。\r\n     */\r\n    worldType: \"2d\" | \"3d\" | null;\r\n\r\n    /** \r\n     * @en Applicable to Components, when AddComponent, add dependent Components at the same time.\r\n     * @zh 对Component适用，当AddComponent时同时添加依赖的Component。\r\n     */\r\n    requireComponents?: Array<string>;\r\n\r\n    /** \r\n     * @en When creating a new node or adding a component, the dependent engine library is automatically added for Node and Component. For example: [\"laya. physicals3D\"]\r\n     * @zh 对Node和Component使用，当新建Node或者添加Component时，自动添加依赖的引擎库。例如：[\"laya.physics3D\"]\r\n     */\r\n    requireEngineLibs?: Array<string>;\r\n\r\n    /**\r\n     * @en Used for Component, if true and menu property is defined, this component will also \r\n     * be displayed in the new object menu of the hierarchy panel.\r\n     * @zh 对Component使用，如果为true，并且定义了menu属性，则这个组件还会显示在层级面板的新建对象菜单上。\r\n     */\r\n    inHierarchyMenu: boolean;\r\n\r\n    /**\r\n     * @en Additional options.\r\n     * @zh 额外的选项。\r\n     */\r\n    options: Record<string, any>;\r\n}\r\nfunction dummy() { }\r\n\r\n/**\r\n * @en Register a class so it can be automatically saved and loaded by the serialization system.\r\n * @param assetId The asset ID for the class.\r\n * @zh 注册一个类型，注册后才能被序列化系统自动保存和载入。\r\n * @param assetId 类型的资源ID。\r\n */\r\nexport function regClass(assetId?: string): any {\r\n    return function (constructor: Function) {\r\n        ClassUtils.regClass(assetId, constructor);\r\n    };\r\n}\r\n\r\n/**\r\n * @en Set additional information for a class type.\r\n * @param info Additional information for the class type.\r\n * @zh 设置类型的额外信息。\r\n * @param info 类型的额外信息。\r\n */\r\nexport function classInfo(info?: Partial<FTypeDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * @en Set the component to execute a complete lifecycle in the editor environment.\r\n * @param constructor The constructor of the component.\r\n * @zh 设置组件可以在编辑器环境中执行完整生命周期。\r\n * @param constructor 组件的构造函数。\r\n */\r\nexport function runInEditor(constructor: Function): void { }\r\n\r\n/**\r\n * @en Allow multiple instances of the component to be added to the same node.\r\n * @param constructor The constructor of the component.\r\n * @zh 设置组件可以添加多个实例到同一个节点上。\r\n * @param constructor 组件的构造函数。\r\n */\r\nexport function allowMultiple(constructor: Function): void {\r\n    constructor.prototype._$singleton = false;\r\n}\r\n\r\n/**\r\n * @en Use this decorator to make a property visible in the editor's property panel and serializable.\r\n * @param info The type of the property, such as Number, \"number\", [Number], [\"Record\", Number], etc. \r\n * Or pass an object describing detailed information, e.g., { type: \"string\", multiline: true }.\r\n * @zh 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\r\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。\r\n * 或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\r\n */\r\nexport function property(info: FPropertyType | Partial<FPropertyDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * @en Register a resource loader.\r\n * @param fileExtensions File extensions that this loader can handle.\r\n * @param type Type identifier. If this resource needs to support identification without extension, \r\n * or if one extension corresponds to multiple resource types, specifying the type parameter is a best practice.\r\n * @param hotReloadable Whether it supports hot reloading.\r\n * @zh 注册一种资源装载器。\r\n * @param fileExtensions 扩展名。\r\n * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，\r\n * 或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n * @param hotReloadable 是否支持热重载。\r\n */\r\nexport function regLoader(fileExtensions: string[], type?: string, hotReloadable?: boolean) {\r\n    return function (constructor: Function) {\r\n        Loader.registerLoader(fileExtensions, <any>constructor, type, hotReloadable);\r\n    };\r\n}\r\n","/**\r\n * @private\r\n * 静态常量集合\r\n */\r\nexport class Const {\r\n    static ENUM_TEXTALIGN_DEFAULT = 0;\r\n    static ENUM_TEXTALIGN_CENTER = 1;\r\n    static ENUM_TEXTALIGN_RIGHT = 2;\r\n\r\n    static INDEX_BYTES = 2;\r\n\r\n    static MAX_CLIP_SIZE = 99999999;\r\n}\r\n\r\n/**\r\n * 节点标志\r\n */\r\nexport class NodeFlags {\r\n    static NOT_ACTIVE = 0x01;\r\n    static ACTIVE_INHIERARCHY = 0x02;\r\n    static AWAKED = 0x04;\r\n    static NOT_READY = 0x08;\r\n    static DISPLAY = 0x10;\r\n    static HAS_ZORDER = 0x20;\r\n    static HAS_MOUSE = 0x40;\r\n    static DISPLAYED_INSTAGE = 0x80;\r\n    static DRAWCALL_OPTIMIZE = 0x100;\r\n    static PROCESS_COLLISIONS = 0x200;\r\n    static PROCESS_TRIGGERS = 0x400;\r\n    static HAS_SCRIPT = 0x800;\r\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\r\n    static DISABLE_INNER_CLIPPING = 0x2000;\r\n    static DISABLE_OUTER_CLIPPING = 0x4000;\r\n    static DISABLE_VISIBILITY = 0x8000;\r\n    static EDITING_NODE = 0x10000;\r\n    static HIDE_BY_EDITOR = 0x20000;\r\n    static LOCK_BY_EDITOR = 0x40000;\r\n}\r\n\r\nexport class HideFlags {\r\n    static HideInHierarchy = 0x1;\r\n    static HideInInspector = 0x2;\r\n    static DontSave = 0x4;\r\n    static HideAndDontSave = 0x7;\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * @en The Component class is used to create the base class for components.\r\n * @zh Component 类用于创建组件的基类。\r\n */\r\nexport class Component {\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Unique identifier for the component.\r\n     * @zh 组件的唯一标识。\r\n     */\r\n    _id: number;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n    /**@private */\r\n    private _enableState: boolean;\r\n    /** @internal */\r\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\r\n\r\n    /**\r\n     * @en Gets the owner Node to which the component belongs.\r\n     * @zh 获取组件所属的 Node 节点。\r\n     */\r\n    owner: Node;\r\n    /** @internal */\r\n    _enabled: boolean = true;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Whether the component is a singleton, meaning only one instance of this type of script can be added to the same node.\r\n     * @zh 是否为单例，即同一个节点只能添加此类型的脚本一次。\r\n     */\r\n    _singleton: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Whether the script can run in the IDE environment.\r\n     * @zh 是否可以在 IDE 环境中运行。\r\n     */\r\n    runInEditor: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @en The path of the script file.\r\n     * @zh 脚本文件的路径。\r\n     */\r\n    scriptPath: string;\r\n\r\n    /**\r\n     * @en Extra data of the node.\r\n     * @zh 组件的额外数据。IDE内部使用。\r\n     */\r\n    _extra: IComponentExtra;\r\n\r\n    /**\r\n     * @en The hide flags that determine the hiding behavior of the component.\r\n     * @zh 确定组件隐藏行为的标志。\r\n     */\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * @en Constructor method of Component.\r\n     * @zh 组件的构造方法\r\n     */\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n        this._singleton = Object.getPrototypeOf(this)._$singleton ?? true;\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en used in IDE\r\n     * @zh 在IDE中使用。\r\n     * */\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the component has a specific hide flag set.\r\n     * @param flag The hide flag to check for.\r\n     * @zh 检查组件是否设置了特定的隐藏标志。\r\n     * @param flag 要检查的隐藏标志。\r\n     */\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * @en The unique identifier for the component.\r\n     * @zh 组件的唯一标识。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en whether the component is enabled.\r\n     * @zh 是否启用组件。\r\n     */\r\n    get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner)\r\n                this._setActive(value && this.owner.activeInHierarchy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en whether the component has been awakened.\r\n     * @zh 组件是否已经被唤醒。\r\n     */\r\n    get awaked(): boolean {\r\n        return this._status > 0;\r\n    }\r\n\r\n    /**\r\n     * @en whether the component has been destroyed.\r\n     * @zh 组件是否已经被销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._status == 4;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _isScript(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _resetComp(): void {\r\n        this._enabled = true;\r\n        this._status = 0;\r\n        this._enableState = false;\r\n        this.owner = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Sets the owner Node of the component.\r\n     * @param node The Node that now owns the component.\r\n     * @zh 设置组件所属的 Node 节点。\r\n     * @param node 现在拥有该组件的 Node。\r\n     */\r\n    _setOwner(node: Node) {\r\n        if (this._status != 0) {\r\n            throw 'reuse a destroyed component';\r\n        }\r\n        this.owner = node;\r\n\r\n        if (this._isScript())\r\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\r\n\r\n        this._onAdded();\r\n        this.onAdded();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 被添加到节点后调用，可根据需要重写此方法\r\n     */\r\n    protected _onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 被激活后调用，可根据需要重写此方法\r\n     */\r\n    protected _onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 被激活后调用，可根据需要重写此方法\r\n     */\r\n    protected _onEnable(): void {\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 被禁用时调用，可根据需要重写此方法\r\n     * 销毁组件\r\n     */\r\n    protected _onDisable(): void {\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 被销毁时调用，可根据需要重写此方法\r\n     */\r\n    protected _onDestroy(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, interactMap: any = null): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parseInteractive(data: any = null, spriteMap: any = null) {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _cloneTo(dest: Component): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setActive(value: boolean): void {\r\n        if (value) {\r\n            if (this._status == 0) {\r\n                this._status = 1;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    this._onAwake();\r\n                    this.onAwake();\r\n                }\r\n            }\r\n            if (this._enabled && !this._enableState) {\r\n                this._enableState = true;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                    driver.add(this);\r\n\r\n                    if (LayaEnv.isPlaying && this._isScript())\r\n                        this.setupScript();\r\n\r\n                    this._onEnable();\r\n                }\r\n            }\r\n        } else if (this._enableState) {\r\n            this._enableState = false;\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                driver.remove(this);\r\n\r\n                ILaya.stage.offAllCaller(this);\r\n\r\n                this._onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected setupScript() {\r\n    }\r\n\r\n    /**\r\n     * @en Destroy components\r\n     * @zh 销毁组件\r\n     */\r\n    destroy(): void {\r\n        if (this._status == 4)\r\n            return;\r\n\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n        else if (!this.destroyed)\r\n            this._destroy(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroy(second?: boolean): void {\r\n        if (second) {\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                this._onDestroy();\r\n                this.onDestroy();\r\n\r\n                if (this.onReset) {\r\n                    this.onReset();\r\n                    this._resetComp();\r\n                    Pool.recoverByClass(this);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._setActive(false);\r\n        this._status = 4;\r\n\r\n        if (LayaEnv.isPlaying || this.runInEditor) {\r\n            let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n            driver._toDestroys.add(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Called after the component is added to a node. Unlike Awake, onAdded is called even if the node is not active.\r\n     * @zh 组件被添加到节点后调用，与 onAwake 不同的是，即使节点未激活也会调用 onAdded。\r\n     */\r\n    onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Resets the component's parameters to their default values. If this function is implemented, the component will be reset and automatically recycled for future use.\r\n     * If not reset, it will not be recycled for reuse.\r\n     * @zh 将组件的参数重置为默认值。如果实现了这个函数，组件将被重置并自动回收到对象池，方便下次复用。\r\n     * 如果没有重置，则不会进行回收复用。\r\n     */\r\n    onReset?(): void;\r\n\r\n    /**\r\n     * @en Executed after the component is activated. At this point, all nodes and components have been created. This method is executed only once.\r\n     * @zh 组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次。\r\n     */\r\n    onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Executed after the component is enabled, such as when the node is added to the stage.\r\n     * @zh 组件被启用后执行，比如节点被添加到舞台后。\r\n     */\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Executed once, before the first update.\r\n     * @zh 在第一次执行 update 之前执行，只会执行一次。\r\n     */\r\n    onStart?(): void;\r\n\r\n    /**\r\n     * @en Executed every frame during the update phase. Avoid writing complex loop logic or using the getComponent method here.\r\n     * @zh 每帧更新时执行，在 update 阶段。尽量不要在这里写大循环逻辑或使用 getComponent 方法。\r\n     */\r\n    onUpdate?(): void;\r\n\r\n    /**\r\n     * @en Executed every frame during the late update phase, after the update phase.\r\n     * @zh 每帧更新时执行，在 late update 阶段，update 阶段之后。\r\n     */\r\n    onLateUpdate?(): void;\r\n\r\n    /**\r\n     * @en Executed before rendering.\r\n     * @zh 渲染之前执行。\r\n     */\r\n    onPreRender?(): void;\r\n\r\n    /**\r\n     * @en Executed after rendering.\r\n     * @zh 渲染之后执行。\r\n     */\r\n    onPostRender?(): void;\r\n\r\n    /**\r\n     * @en Executed when the component is disabled, such as when the node is removed from the stage.\r\n     * @zh 组件被禁用时执行，比如从节点从舞台移除后。\r\n     */\r\n    onDisable(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Executed when the node is destroyed manually.\r\n     * @zh 手动调用节点销毁时执行。\r\n     */\r\n    onDestroy(): void {\r\n    }\r\n}\r\n\r\nexport interface IComponentExtra { }","export enum RenderParams{\r\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\r\n    Max_Uniform_Count,//最大Uniform数量\r\n    Max_AnisoLevel_Count,//最大各向异性数量\r\n    MAX_Texture_Size,//Shader中的最大纹理\r\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\r\n    SHADER_CAPAILITY_LEVEL,//Shader质量\r\n    FLOAT,\r\n    UNSIGNED_BYTE,\r\n    BYTE,\r\n    UNSIGNED_SHORT,\r\n}","/**\r\n * 渲染统计数据\r\n */\r\nexport enum GPUEngineStatisticsInfo {\r\n    C_UniformBufferUploadCount,\r\n    //buffer change count\r\n    C_GeometryBufferUploadCount,\r\n    //triangle count\r\n    C_TriangleCount,\r\n    //drawCall\r\n    C_SetRenderPassCount,\r\n    C_DrawCallCount,\r\n    C_Instancing_DrawCallCount,\r\n    //shader compile\r\n    C_ShaderCompile,\r\n    T_ShaderCompile,\r\n\r\n    FrameClearCount,//frame clear flag 需要每帧统计的数据写道上面\r\n    //Memory\r\n    M_GPUMemory,\r\n    M_GPUBuffer,\r\n    M_VertexBuffer,\r\n    M_IndexBuffer,\r\n    M_UniformBlockBuffer,//Webgl TODO\r\n    RC_GPUBuffer,\r\n    RC_VertexBuffer,\r\n    RC_IndexBuffer,\r\n    RC_UniformBlockBuffer,\r\n    //Texture\r\n    M_ALLTexture,\r\n    M_Texture2D,\r\n    M_TextureCube,\r\n    M_Texture3D,\r\n    M_Texture2DArray,\r\n    RC_ALLTexture,\r\n    RC_Texture2D,\r\n    RC_TextureCube,\r\n    RC_Texture3D,\r\n    RC_Texture2DArray,\r\n    M_ALLRenderTexture,\r\n    RC_ALLRenderTexture,\r\n    Count\r\n}\r\n\r\n\r\n/**\r\n * 渲染流程统计数据\r\n */\r\nexport enum RenderPassStatisticsInfo {\r\n    T_CameraRender,\r\n    T_Render_OpaqueRender,\r\n    T_Render_TransparentRender,\r\n    T_Render_PostProcess,\r\n    T_Render_CameraEventCMD,\r\n    T_Render_ShadowPassMode,\r\n    T_Render_CameraOtherDest,\r\n    T_RenderPreUpdate,\r\n    T_OtherRender,//除了meshrender,skinRender，T_OnlyShurikenParticleRender\r\n    T_OnlyMeshRender,\r\n    T_OnlySkinnedMeshRender,\r\n    T_OnlyShurikenParticleRender,\r\n    T_CameraMainCull,\r\n    T_ShadowMapCull,\r\n    RenderPassStatisticCount\r\n}","export enum BufferTargetType{\r\n    ARRAY_BUFFER,//顶点\r\n    ELEMENT_ARRAY_BUFFER,//索引\r\n    //WebGL2.0 UniformBuffer\r\n    UNIFORM_BUFFER,//UBO\r\n    COPY_READ_BUFFER,//TODO\r\n    COPY_WRITE_BUFFER,//TODO\r\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\r\n}\r\n\r\n\r\n/**\r\n * Buffer usage.\r\n */\r\n export enum BufferUsage {\r\n    /** The buffer content are intended to be specified once, and used many times */\r\n    Static,\r\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\r\n    Dynamic,\r\n    /** The buffer contents are intended to be specified once, and used at most a few times */\r\n    Stream\r\n  }","export enum DrawType {\r\n    DrawArray,\r\n    DrawArrayInstance,\r\n    DrawElement,\r\n    DrawElementInstance\r\n}","export enum IndexFormat {\r\n    /** 8 位无符号整型索引格式。*/\r\n    UInt8,\r\n    /** 16 位无符号整型索引格式。*/\r\n    UInt16,\r\n    /** 32 位无符号整型索引格式。*/\r\n    UInt32\r\n}","/**\r\n * Mesh topology.\r\n */\r\n export enum MeshTopology {\r\n    /** Draws a single dot */\r\n    Points,\r\n    /** Draws a line between a pair of vertices */\r\n    Lines,\r\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\r\n    LineLoop,\r\n    /** Draws a straight line to the next vertex. */\r\n    LineStrip,\r\n    /** Draws a triangle for a group of three vertices */\r\n    Triangles,\r\n    /** Draws a triangle strip */\r\n    TriangleStrip,\r\n    /** Draws a triangle fan */\r\n    TriangleFan\r\n  }\r\n  ","export enum BlendEquationSeparate{\r\n    ADD,//source + destination (default value)\r\n    SUBTRACT,// source - destination\r\n    REVERSE_SUBTRACT,//destination - source\r\n    //TODO:\r\n    MIN,//Minimum of source and destination\r\n    MAX,//Maximum of source and destination\r\n}","export enum BlendFactor {\r\n    /** (0, 0, 0, 0)*/\r\n    Zero,\r\n    /** (1, 1, 1, 1)*/\r\n    One,\r\n    /** (Rs, Gs, Bs, As) */\r\n    SourceColor,\r\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\r\n    OneMinusSourceColor,\r\n    /** (Rd, Gd, Bd, Ad)*/\r\n    DestinationColor,\r\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\r\n    OneMinusDestinationColor,\r\n    /** (As, As, As, As)*/\r\n    SourceAlpha,\r\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\r\n    OneMinusSourceAlpha,\r\n    /** (Ad, Ad, Ad, Ad)*/\r\n    DestinationAlpha,\r\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\r\n    OneMinusDestinationAlpha,\r\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\r\n    SourceAlphaSaturate,\r\n    /** (Rc, Gc, Bc, Ac)*/\r\n    BlendColor,\r\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\r\n    OneMinusBlendColor\r\n  }","export enum BlendType{\r\n    /**混合枚举_禁用。*/\r\n\tBLEND_DISABLE = 0,\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tBLEND_ENABLE_ALL = 1,\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tBLEND_ENABLE_SEPERATE = 2\r\n}","export enum CompareFunction {\r\n    /** never pass. */\r\n    Never,\r\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\r\n    Less,\r\n    /** pass if the incoming value equals the depth/stencil buffer value. */\r\n    Equal,\r\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\r\n    LessEqual,\r\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\r\n    Greater,\r\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\r\n    NotEqual,\r\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\r\n    GreaterEqual,\r\n    /** always pass. */\r\n    Always,\r\n    /** off */\r\n    Off,\r\n}\r\n","export enum CullMode {\r\n    /** Disable culling. */\r\n    Off = 0,\r\n    /** cut the front-face of the polygons. */\r\n    Front = 1,\r\n    /** cut the back-face of the polygons. */\r\n    Back = 2\r\n  }\r\n\r\n  export enum FrontFace{\r\n    /** Clockwise front faces. */\r\n    CW = 0,\r\n    /** Counter-clockwise front faces. */\r\n    CCW = 1\r\n  }\r\n  ","export enum StencilOperation {\r\n    /** Keeps the current value. */\r\n    Keep,\r\n    /** Sets the stencil buffer value to 0. */\r\n    Zero,\r\n    /** Sets the stencil buffer value to the reference value. */\r\n    Replace,\r\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\r\n    IncrementSaturate,\r\n    /** Decrements the current stencil buffer value. Clamps to 0. */\r\n    DecrementSaturate,\r\n    /** Inverts the current stencil buffer value bitwise. */\r\n    Invert,\r\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\r\n    IncrementWrap,\r\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\r\n    DecrementWrap\r\n  }\r\n  ","import { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 类用来定义顶点元素格式\r\n */\r\nexport class VertexElementFormat {\r\n\t/**单精度浮点数 */\r\n\tstatic Single: string = \"single\";\r\n\t/**vec2 数据*/\r\n\tstatic Vector2: string = \"vector2\";\r\n\t/**vec3 数据*/\r\n\tstatic Vector3: string = \"vector3\";\r\n\t/**vec4 数据 */\r\n\tstatic Vector4: string = \"vector4\";\r\n\t/**颜色 */\r\n\tstatic Color: string = \"color\";\r\n\t/**字节数组4 */\r\n\tstatic Byte4: string = \"byte4\";\r\n\t/**字节数组3 */\r\n\tstatic Byte3: string = \"byte3\";\r\n\t/**字节数组2 */\r\n\tstatic Byte2: string = \"byte2\";\r\n\t/**字节数组1 */\r\n\tstatic ByteOne: string = \"byte\";\r\n\t/**半精度浮点数数组2 */\r\n\tstatic Short2: string = \"short2\";\r\n\t/**半精度浮点数数组4 */\r\n\tstatic Short4: string = \"short4\";\r\n\t/**归一化半精度浮点数组2 */\r\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\r\n\t/**归一化半精度浮点数组4 */\r\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\r\n\t/**@internal */\r\n\tstatic HalfVector2: string = \"halfvector2\";\r\n\t/**@internal */\r\n\tstatic HalfVector4: string = \"halfvector4\";\r\n\t/**@internal */\r\n\tstatic NorByte4: string = \"nbyte4\";\r\n\t/**@internal */\r\n\tstatic NorUByte4: string = \"ubyte4\";\r\n\r\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\r\n\tprivate static _elementInfos: any;\r\n\t/**@internal */\r\n\tstatic __init__(): void {\r\n\t\tVertexElementFormat._elementInfos = {\r\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte3\": [3, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte\": [1, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"short2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"nbyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.BYTE), 1],\r\n\t\t\t\"ubyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 1],\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点元素格式信息。\r\n\t * @param element 元素名称\r\n\t * @returns 返回顶点元素信息\r\n\t */\r\n\tstatic getElementInfos(element: string): any[] {\r\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\r\n\t\tif (info)\r\n\t\t\treturn info;\r\n\t\telse\r\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\r\n\t}\r\n}\r\n\r\n","import { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\nimport { VAElement } from \"./VertexAttributeLayout\"\r\nexport class VertexStateContext{\r\n    elementCount:number;//0-4\r\n    elementType:number;//LayaGL.renderEngine.getParams(RenderParams.FLOAT)\r\n    normalized:number;//0 or 1\r\n    vertexStride:number;\r\n    elementOffset:number;\r\n    elementString:string;\r\n}\r\n/**\r\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\r\n */\r\nexport class VertexDeclaration {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 1;\r\n\r\n    /**@internal */\r\n    private _id: number;\r\n    /**@internal */\r\n    private _vertexStride: number;\r\n    /**@internal */\r\n    private _vertexElementsDic: { [key: string]: VertexElement };\r\n    /**@internal */\r\n    _shaderValues: { [key: number]: VertexStateContext };//[{shaderlocationName}：{0:元素数，1：元素描述（Uint、byte等等），2：是否归一化，3:顶点字节跨度，4：顶点元素字节偏移}]\r\n\r\n    /**@internal [只读]*/\r\n    _vertexElements: Array<VertexElement>;\r\n    /**@internal */\r\n    _VAElements: Array<VAElement>;\r\n    /**\r\n     * 获取唯一标识ID(通常用于优化或识别)。\r\n     * @return 唯一标识ID\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 顶点跨度，以字节为单位。\r\n     */\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    /**\r\n     * 顶点元素的数量。\r\n     */\r\n    get vertexElementCount(): number {\r\n        return this._vertexElements.length;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>VertexDeclaration</code> 实例。\r\n     * @param\tvertexStride 顶点跨度。\r\n     * @param\tvertexElements 顶点元素集合。\r\n     */\r\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\r\n        this._id = ++VertexDeclaration._uniqueIDCounter;\r\n        this._vertexElementsDic = {};\r\n        this._vertexStride = vertexStride;\r\n        this._vertexElements = vertexElements;\r\n        this._VAElements = [];\r\n        var count: number = vertexElements.length;\r\n        this._shaderValues = {};\r\n\r\n        for (var j: number = 0; j < count; j++) {\r\n            var vertexElement: VertexElement = vertexElements[j];\r\n            var name: number = vertexElement._elementUsage;\r\n            this._vertexElementsDic[name] = vertexElement;\r\n            var value: VertexStateContext = new VertexStateContext();\r\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\r\n            value.elementString = vertexElement._elementFormat;\r\n            value.elementCount = elmentInfo[0];\r\n            value.elementType = elmentInfo[1];\r\n            value.normalized = elmentInfo[2];\r\n            value.vertexStride = this._vertexStride;\r\n            value.elementOffset = vertexElement._offset;\r\n            this._shaderValues[name] = value;\r\n\r\n            //VAElement\r\n            this._VAElements.push({ format: vertexElement._elementFormat, stride: vertexElement._offset, shaderLocation: name })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取顶点元素。\r\n     * @param index 索引。\r\n     */\r\n    getVertexElementByIndex(index: number): VertexElement {\r\n        return this._vertexElements[index];\r\n    }\r\n\r\n    /**\r\n     * get vertexElement by usage\r\n     */\r\n    getVertexElementByUsage(usage: number): VertexElement {\r\n        return this._vertexElementsDic[usage];\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n* <code>VertexElement</code> 类用于创建顶点结构分配。\r\n*/\r\nexport class VertexElement {\r\n    /**@internal */\r\n    _offset: number;\r\n    /**@internal */\r\n    _elementFormat: string;\r\n    /**@internal */\r\n    _elementUsage: number;\r\n    //usageIndex:int;//TODO:待确定是否添加\r\n\r\n    /**\r\n     * 顶点偏移\r\n     */\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n    /**\r\n     * 顶点信息名称\r\n     */\r\n    get elementFormat(): string {\r\n        return this._elementFormat;\r\n    }\r\n\r\n    /**\r\n     * 顶点宏标记\r\n     */\r\n    get elementUsage(): number {\r\n        return this._elementUsage;\r\n    }\r\n\r\n    /**\r\n     * 创建顶点结构分配实例\r\n     * @param offset 顶点偏移\r\n     * @param elementFormat 顶点数据格式名称\r\n     * @param elementUsage 顶点宏标记\r\n     */\r\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\r\n        this._offset = offset;\r\n        this._elementFormat = elementFormat;\r\n        this._elementUsage = elementUsage;\r\n        //this.usageIndex = usageIndex;\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { ISprite2DGeometry } from \"../../renders/Render2D\";\r\n\r\n/**\r\n * Mesh2d只是保存数据。描述attribute用的。本身没有webgl数据。\r\n */\r\nexport abstract class Sprite2DGeometry implements ISprite2DGeometry {\r\n    //顶点结构大小。每个mesh的顶点结构是固定的。\r\n    protected _stride = 0;\r\n    //当前的顶点的个数。对外只读\t\t\r\n    protected _vertNum = 0;\r\n    //实际index 个数。对外只读。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\r\n    protected _indexNum = 0;\r\n\r\n    protected _VBBuff: ArrayBuffer;\r\n    protected _IBBuff: ArrayBuffer;\r\n\r\n    /**\r\n     * @param\tstride\r\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\r\n     * @param\tiballoc\r\n     */\r\n    constructor(stride: number, vballoc: number, iballoc: number) {\r\n        this._stride = stride;\r\n        this._VBBuff = new ArrayBuffer(vballoc || 32);\r\n        this._IBBuff = new ArrayBuffer(iballoc || 8)\r\n        this.onVBRealloc(this._VBBuff);\r\n        this.onIBRealloc(this._IBBuff);\r\n    }\r\n\r\n    get vbBuffer(): ArrayBuffer {\r\n        return this._VBBuff;\r\n    }\r\n    get ibBuffer(): ArrayBuffer {\r\n        return this._IBBuff;\r\n    }\r\n\r\n    get indexNum() {\r\n        return this._indexNum\r\n    }\r\n\r\n    get vertexNum() {\r\n        return this._vertNum\r\n    }\r\n\r\n    abstract get vertexDeclarition(): VertexDeclaration;\r\n\r\n    clearMesh() {\r\n        this._vertNum = 0;\r\n        this._indexNum = 0;\r\n    }\r\n\r\n    protected abstract onVBRealloc(buff: ArrayBuffer): void;\r\n    protected abstract onIBRealloc(buff: ArrayBuffer): void;\r\n\r\n    /**\r\n    * 在当前的基础上需要多大空间，单位是byte\r\n    * @param\tsz\r\n    */\r\n    protected expVBSize(len: number) {\r\n        if (len) {\r\n            let curLen = this._vertNum * this._stride;\r\n            if (curLen + len > this._VBBuff.byteLength) {\r\n                let old = this._VBBuff;\r\n                this._VBBuff = new ArrayBuffer(curLen + len * 8);\r\n                (new Uint8Array(this._VBBuff, 0, curLen)).set(new Uint8Array(old, 0, curLen));\r\n                this.onVBRealloc(this._VBBuff);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected expIBSize(len: number) {\r\n        if (len) {\r\n            let curlen = this._indexNum * 2;\r\n            if (curlen + len > this._IBBuff.byteLength) {\r\n                let old = this._IBBuff;\r\n                this._IBBuff = new ArrayBuffer(curlen + len * 8);\r\n                (new Uint8Array(this._IBBuff, 0, curlen)).set(new Uint8Array(old, 0, curlen));\r\n                this.onIBRealloc(this._IBBuff);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { Sprite2DGeometry } from \"./Sprite2DGeometry\";\r\n\r\n/**\r\n * 直接创建一个固定的ib。按照固定四边形的索引。\r\n * @param\tvar QuadNum\r\n */\r\nfunction createQuadIB(quadNum: number) {\r\n\tlet ibbuf = new Byte(quadNum * 6 * 2);\r\n\tlet ib = new Uint16Array(ibbuf.buffer);\r\n\tvar idx = 0;\r\n\tvar curvert = 0;\r\n\tfor (var i = 0; i < quadNum; i++) {\r\n\t\tib[idx++] = curvert;\r\n\t\tib[idx++] = curvert + 2;\r\n\t\tib[idx++] = curvert + 1;\r\n\t\tib[idx++] = curvert;\r\n\t\tib[idx++] = curvert + 3;\r\n\t\tib[idx++] = curvert + 2;\r\n\t\tcurvert += 4;\r\n\t}\r\n\treturn ib;\r\n}\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshQuadTexture extends Sprite2DGeometry {\r\n\tstatic const_stride = 48;// 48;  24是不带clip的\r\n\tprivate static _fixib: Uint16Array;\r\n\tprivate static _maxIB = 16 * 1024;\r\n\tstatic VertexDeclarition: VertexDeclaration;\r\n\t//操作vb的buffer\r\n\t//private _vbUin32Array:Uint32Array;\t//注意不要赋值，因为super会给这个赋值，如果再设置null就会冲掉\r\n\tprivate _vbFloat32Array: Float32Array;\r\n\tprivate _curVBPos = 0;\r\n\r\n\tstatic __int__(): void {\r\n\t\tMeshQuadTexture._fixib = createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\r\n\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(48, [\r\n\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, 1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, 2),\r\n\t\t])\r\n\t}\r\n\r\n\tconstructor(vballoc = 4) {\r\n\t\tsuper(MeshQuadTexture.const_stride, vballoc, 4);\t//x,y,u,v,rgba\r\n\t}\r\n\r\n\tprotected onVBRealloc(buff: ArrayBuffer): void {\r\n\t\t//this._vbUin32Array = new Uint32Array(buff);\r\n\t\tthis._vbFloat32Array = new Float32Array(buff);\r\n\t}\r\n\tprotected onIBRealloc(buff: ArrayBuffer): void {\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * \r\n\t * @param pos 顶点坐标\r\n\t * @param uv 纹理坐标\r\n\t * @param color 顶点颜色\r\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\r\n\t */\r\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\r\n\t\tthis.expVBSize(MeshQuadTexture.const_stride);\r\n\t\t//x,y,u,v,rgba\r\n\t\tvar vbdata = this._vbFloat32Array;\r\n\t\t//var vbu32Arr = this._vbUin32Array;\r\n\t\tlet r = ((color >>> 16) & 0xff) / 255.0;\r\n\t\tlet g = ((color >>> 8) & 0xff) / 255.0;\r\n\t\tlet b = (color & 0xff) / 255.0;\r\n\t\tlet a = (color >>> 24) / 255.0;\r\n\t\tvar cpos = this._curVBPos;\r\n\t\tvar useTexVal = useTex ? 1 : 0;\r\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1];\r\n\t\tvbdata[cpos++] = b; vbdata[cpos++] = g; vbdata[cpos++] = r; vbdata[cpos++] = a;\r\n\t\tvbdata[cpos++] = useTexVal; cpos += 3;\r\n\r\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3];\r\n\t\tvbdata[cpos++] = b; vbdata[cpos++] = g; vbdata[cpos++] = r; vbdata[cpos++] = a;\r\n\t\tvbdata[cpos++] = useTexVal; cpos += 3;\r\n\r\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5];\r\n\t\tvbdata[cpos++] = b; vbdata[cpos++] = g; vbdata[cpos++] = r; vbdata[cpos++] = a;\r\n\t\tvbdata[cpos++] = useTexVal; cpos += 3;\r\n\r\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7];\r\n\t\tvbdata[cpos++] = b; vbdata[cpos++] = g; vbdata[cpos++] = r; vbdata[cpos++] = a;\r\n\t\tvbdata[cpos++] = useTexVal; cpos += 3;\r\n\r\n\t\tthis._curVBPos = cpos;\r\n\t\tthis._vertNum += 4;\r\n\t\tthis._indexNum += 6;\r\n\t}\r\n\r\n\tclearMesh(): void {\r\n\t\tsuper.clearMesh();\r\n\t\tthis._curVBPos = 0;\r\n\t}\r\n\r\n\tget ibBuffer(): ArrayBuffer {\r\n\t\treturn MeshQuadTexture._fixib.buffer;\r\n\t}\r\n\r\n\tget vertexDeclarition(): VertexDeclaration {\r\n\t\treturn MeshQuadTexture.VertexDeclarition;\r\n\t}\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Context } from \"../renders/Context\";\r\nimport { Render2D } from \"../renders/Render2D\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { IFilter } from \"./IFilter\";\r\n\r\n/**\r\n * @en The `Filter` class is the base class for filters. Filters are post-processing operations on nodes, so they inevitably operate on a renderTexture.\r\n * @zh Filter 是滤镜基类。滤镜是针对节点的后处理过程，所以必然操作一个rendertexture\r\n */\r\nexport abstract class Filter extends EventDispatcher implements IFilter {\r\n    /**\r\n     * @private \r\n     * @en color filter\r\n     * @zh 颜色滤镜。\r\n     */\r\n    static COLOR = 0x20;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * @en The coordinate of the result origin, relative to the original origin of the sprite. If extended, left and top may be negative.\r\n     * @zh 结果原点的坐标，相对于sprite的原始原点。如果进行了扩展，left 和 top 可能是负值。\r\n     */\r\n    protected left = 0;\r\n    protected top = 0;\r\n    /**\r\n     * @en The size of the rendering result.\r\n     * @zh 渲染结果的大小。\r\n     */\r\n    protected width = 0;\r\n    protected height = 0;\r\n    protected texture: RenderTexture2D;  //TODO 创建 优化\r\n    protected _render2D: Render2D;\r\n    \r\n    /**\r\n     * @en event：some parameter changed\r\n     * @zh 参数改变事件\r\n     */\r\n    static EVENT_CHANGE='change';\r\n\r\n    /**\r\n     * @en Current usage\r\n     * @zh 当前使用的\r\n     */\r\n    protected _rectMesh: MeshQuadTexture;\r\n    protected _rectMeshVB: Float32Array;\r\n\r\n    /**\r\n     * @en Version with normal UV coordinates\r\n     * @zh uv坐标正常的版本\r\n     */\r\n    private _rectMeshNormY: MeshQuadTexture;\r\n    private _rectMeshVBNormY: Float32Array;\r\n    /**\r\n     * @en Version of UV coordinate flipping\r\n     * @zh uv坐标翻转的版本\r\n     */\r\n    private _rectMeshInvY: MeshQuadTexture;\r\n    private _rectMeshVBInvY: Float32Array;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    constructor() {\r\n        super();\r\n        let rect1 = this._rectMeshNormY = new MeshQuadTexture();\r\n        rect1.addQuad([0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1], 0xffffffff, true)\r\n        this._rectMeshVBNormY = new Float32Array(rect1.vbBuffer);\r\n\r\n        let rectInvY = this._rectMeshInvY = new MeshQuadTexture();\r\n        rectInvY.addQuad([0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0], 0xffffffff, true)\r\n        this._rectMeshVBInvY = new Float32Array(rectInvY.vbBuffer);\r\n        this.useFlipY(false);\r\n    }\r\n\r\n    protected onChange(){\r\n        this.event(Filter.EVENT_CHANGE);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the mesh and vertex buffer to use based on whether Y-flip is needed.\r\n     * @zh 根据是否需要翻转 Y 坐标来设置使用的网格和顶点缓冲区。\r\n     */\r\n    useFlipY(b: boolean) {\r\n        this._rectMesh = b ? this._rectMeshInvY : this._rectMeshNormY;\r\n        this._rectMeshVB = b ? this._rectMeshVBInvY : this._rectMeshVBNormY;\r\n    }\r\n\r\n    /**\r\n     * @en The setter for the Render2D object used for rendering.\r\n     * @zh 用于设置渲染用的 Render2D 对象。\r\n     */\r\n    set render2D(r: Render2D) {\r\n        this._render2D = r;\r\n    }\r\n    /**\r\n     * @en No location required\r\n     * @zh 不需要位置\r\n     * @param texture \r\n     * @param width \r\n     * @param height \r\n     */\r\n    abstract render(texture: RenderTexture2D, width: number, height: number): void;\r\n\r\n    /**\r\n     * @private\r\n     * @en Gets the type of the filter.\r\n     * @zh 获取滤镜类型。\r\n     */\r\n    get type(): number { return -1 }\r\n\r\n    /**\r\n     * @en Applies multiple filters to a sprite within the given context.\r\n     * @param this The context in which this function is executed, typically a RenderSprite instance.\r\n     * @param sprite The sprite to which the filters are applied.\r\n     * @param context The current rendering context.\r\n     * @param x The x-coordinate at which the sprite is being rendered.\r\n     * @param y The y-coordinate at which the sprite is being rendered.\r\n     * @zh 在给定的上下文中为精灵应用多个滤镜。\r\n     * @param this 执行此函数的上下文，通常是 RenderSprite 实例。\r\n     * @param sprite 应用滤镜的精灵。\r\n     * @param context 当前的渲染上下文。\r\n     * @param x 精灵正在渲染的 x 坐标。\r\n     * @param y 精灵正在渲染的 y 坐标。\r\n     */\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var next = this._next;\r\n        if (!next) return;\r\n\r\n        var filters = sprite.filters, len = filters.length;\r\n        //如果只有一个滤镜，那么还用原来的方式\r\n        if (len == 1 && (filters[0].type == Filter.COLOR)) {\r\n            context.save();\r\n            context.setColorFilter(filters[0] as ColorFilter);\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.restore();\r\n            return;\r\n        }\r\n\r\n        let cache = sprite._getCacheStyle();\r\n        // 先把节点渲染到一个贴图上\r\n        //if(RenderSprite.RenderToCacheTexture(sprite,context,x,y)){\r\n        //多个滤镜off会累加，例如blur一次导致偏移50，两次就是100\r\n        let rtOffX = 0, rtOffY = 0;\r\n        if (this._renderNextToCacheRT(sprite, context)) {\r\n            let src = cache.renderTexture;\r\n            let dst = src;\r\n            let width = src.width;// cache.cacheRect.width;     不能用cacheRect,因为可能有空白，而src补充了这个空白\r\n            let height = src.height; //cache.cacheRect.height;\r\n            let lastRT = context.render2D.out;\r\n            // 针对这个贴图，依次应用filter\r\n            for (let i = 0; i < len; i++) {\r\n                src = dst;\r\n                var filter = filters[i];\r\n                filter._render2D = context.render2D;\r\n                filter.useFlipY(i != 0);\r\n                filter.render(src, width, height);\r\n                width = filter.width;\r\n                height = filter.height;\r\n                dst = filter.texture;\r\n                rtOffX += filter.left;\r\n                rtOffY += filter.top;\r\n            }\r\n            context.render2D.setRenderTarget(lastRT);\r\n            //context.render2D.out=lastRT;\r\n            // 把最终结果保存到cache\r\n            cache.renderTexture = dst;\r\n            cache.renderTexOffx = rtOffX;\r\n            cache.renderTexOffy = rtOffY;\r\n        }\r\n        //直接使用缓存的\r\n        cache.renderTexture && context._drawRenderTexture(cache.renderTexture,\r\n            x + cache.renderTexOffx - sprite.anchorX*sprite.width,\r\n            y + cache.renderTexOffy - sprite.anchorY*sprite.height,\r\n            cache.renderTexture.width,\r\n            cache.renderTexture.height,\r\n            null, 1.0, RenderTexture2D.defuv);\r\n    }\r\n}","import { Point } from \"./Point\";\r\nimport { Utils } from \"../utils/Utils\"\r\n\r\n/**\r\n * @private\r\n * @en Graham Scan algorithm for convex hull calculation.\r\n * @zh 凸包算法。\r\n */\r\nexport class GrahamScan {\r\n\r\n    private static _mPointList: any[];\r\n    private static _tempPointList: any[] = [];\r\n    private static _temPList: any[] = [];\r\n    private static _temArr: any[] = [];\r\n\r\n    /**\r\n     * @en Calculate the cross product of two two-dimensional vectors.\r\n     * @param p1 End point 1.\r\n     * @param p2 End point 2.\r\n     * @param p0 Start point.\r\n     * @returns The cross product value.\r\n     * @zh 计算两个二维向量的叉积。\r\n     * @param p1 终点1。\r\n     * @param p2 终点2。\r\n     * @param p0 起点。\r\n     * @returns 叉积的值。\r\n     */\r\n    static multiply(p1: Point, p2: Point, p0: Point): number {\r\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the squared distance between two points.\r\n     * @param p1 The Start point.\r\n     * @param p2 The End point.\r\n     * @returns The squared distance.\r\n     * @zh 计算两个点距离的平方。\r\n     * @param p1 起点\r\n     * @param p2 终点\r\n     * @returns 距离的平方。\r\n     */\r\n    static dis(p1: Point, p2: Point): number {\r\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n    }\r\n\r\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[] | null = null): any[] {\r\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\r\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\r\n        if (!rst) rst = [];\r\n        rst.length = 0;\r\n        if (tempUse) {\r\n            //\t\t\t\trst=_mPointList.slice(0,count);\r\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\r\n        } else {\r\n            //\t\t\t\trst=_mPointList.splice(0,count);\r\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Take cout items from the src array at index 0 and add them to the tail of the tst array.\r\n     * @param rst The original array is used to add new child elements.\r\n     * @param src An array used to retrieve child elements.\r\n     * @param count The number of child elements to add.\r\n     * @returns Add the RST object of the child elements.\r\n     * @zh 将数组src从索引0位置，依次取cout个项添加至tst数组的尾部。\r\n     * @param rst 原始数组，用于添加新的子元素。\r\n     * @param src 用于取子元素的数组。\r\n     * @param count 需要取得子元素个数。\r\n     * @returns 添加完子元素的 rst 对象。\r\n     */\r\n    static getFrom(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src[i]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Take cout items from the end index position to the head index position of the src array and add them to the tail of the tst array.\r\n     * @param rst The original array is used to add new child elements.\r\n     * @param src An array used to retrieve child elements.\r\n     * @param count The number of child elements to add.\r\n     * @returns Add the RST object of the child elements.\r\n     * @zh 将数组src从末尾索引位置往头部索引位置方向，依次取cout个项添加至tst数组的尾部。\r\n     * @param rst 原始数组，用于添加新的子元素。\r\n     * @param src 用于取子元素的数组。\r\n     * @param count 需要取得子元素个数。\r\n     * @returns 添加完子元素的 rst 对象。\r\n     */\r\n    static getFromR(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src.pop());\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Convert a list of [x,y...] to a list of Points.\r\n     * @param pList The Point list.\r\n     * @param tempUse Whether to use temporary storage.\r\n     * @returns A list of [x,y...].\r\n     * @zh 将 [x,y...] 列表转换为 Point 列表。\r\n     * @param pList Point列表。\r\n     * @param tempUse 是否使用临时存储。\r\n     * @returns [x,y...]列表\r\n     */\r\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\r\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\r\n        for (i = 0; i < len; i++) {\r\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Convert a list of Points to a [x,y...] list.\r\n     * @param pointList The list of Points.\r\n     * @returns The [x,y...] list.\r\n     * @zh 将 Point 列表转换为 [x,y...] 列表。\r\n     * @param pointList Point列表\r\n     * @returns [x,y...]列表\r\n     */\r\n    static pointListToPlist(pointList: any[]): any[] {\r\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\r\n        rst.length = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tPoint = pointList[i];\r\n            rst.push(tPoint.x, tPoint.y);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Find the minimum polygon vertex set that includes all points.\r\n     * @param pList The [x,y...] list.\r\n     * @returns The minimum polygon vertex set.\r\n     * @zh 寻找包括所有点的最小多边形顶点集合。\r\n     * @param pList 形如[x0,y0,x1,y1...]的点列表。\r\n     * @returns  最小多边形顶点集合。\r\n     */\r\n    static scanPList(pList: any[]): any[] {\r\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\r\n    }\r\n\r\n    /**\r\n     * @en Find the minimum polygon vertex set that includes all points.\r\n     * @param PointSet The Point list.\r\n     * @returns The minimum polygon vertex set.\r\n     * @zh 寻找包括所有点的最小多边形顶点集合。\r\n     * @param PointSet Point列表\r\n     * @return 最小多边形顶点集合\r\n     */\r\n    static scan(PointSet: any[]): any[] {\r\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\r\n        var _tmpDic: any = {};\r\n        var key: string;\r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        n = PointSet.length;\r\n        for (i = n - 1; i >= 0; i--) {\r\n            tmp = PointSet[i];\r\n            key = tmp.x + \"_\" + tmp.y;\r\n            if (!(key in _tmpDic)) {\r\n                _tmpDic[key] = true;\r\n                ch.push(tmp);\r\n            }\r\n        }\r\n        n = ch.length;\r\n        Utils.copyArray(PointSet, ch);\r\n        //\t\t\tPointSet=ch;\r\n        //\t\t\tn=PointSet.length;\r\n        //找到最下且偏左的那个点  \r\n        for (i = 1; i < n; i++)\r\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\r\n                k = i;\r\n        //将这个点指定为PointSet[0]  \r\n        tmp = PointSet[0];\r\n        PointSet[0] = PointSet[k];\r\n        PointSet[k] = tmp;\r\n        //按极角从小到大,距离偏短进行排序  \r\n        for (i = 1; i < n - 1; i++) {\r\n            k = i;\r\n            for (j = i + 1; j < n; j++)\r\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\r\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \r\n            tmp = PointSet[i];\r\n            PointSet[i] = PointSet[k];\r\n            PointSet[k] = tmp;\r\n        }\r\n        //第三个点先入栈  \r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\r\n        if (PointSet.length < 3) {\r\n            return Utils.copyArray(ch, PointSet);\r\n        }\r\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\r\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\r\n        //判断与其余所有点的关系  \r\n        for (i = 3; i < n; i++) {\r\n            //不满足向左转的关系,栈顶元素出栈  \r\n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\r\n            //当前点与栈内所有点满足向左关系,因此入栈.  \r\n            PointSet[i] && ch.push(PointSet[i]);\r\n        }\r\n        return ch;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class SpriteConst {\r\n    /** @private */\r\n    static ALPHA = 0x01;\r\n    /** @private */\r\n    static TRANSFORM = 0x02;\r\n    /** @private */\r\n    static BLEND = 0x04;\r\n    /** @private */\r\n    static CANVAS = 0x08;\r\n    /** @private */\r\n    static FILTERS = 0x10;\r\n    /** @private */\r\n    static MASK = 0x20;\r\n    /** @private */\r\n    static CLIP = 0x40;\r\n    /** @private */\r\n    static TEXTURE = 0x80;\r\n    /** @private */\r\n    static GRAPHICS = 0x100;\r\n    /** @private */\r\n    static RENDERNODE2D = 0x200;\r\n    /** @private */\r\n    static CUSTOM = 0x400;\r\n    /** @private */\r\n    static HITAREA = 0x800;\r\n    /** @private */\r\n    static CHILDS = 0x1000;\r\n\r\n    /** @private */\r\n    static REPAINT_NONE = 0;\r\n    /** @private */\r\n    static REPAINT_NODE = 0x01;\r\n    /** @private */\r\n    static REPAINT_CACHE = 0x02;\r\n    /** @private */\r\n    static REPAINT_ALL = 0x03;\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { GPUEngineStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Browser } from \"./Browser\";\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\r\n\r\n/**\r\n * @en The Stat class is a performance statistics panel that provides real-time updates on various performance metrics.\r\n * The performance metrics included in the statistics are updated approximately every 1 second and are as follows:\r\n * - FPS: Frames per second (FPS). The higher and more stable the value, the smoother the display.\r\n * - Sprite: The count of all rendering nodes (including containers). Its size affects the efficiency of the engine's node traversal, data organization, and rendering. The smaller the value, the higher the game's operational efficiency.\r\n * - DrawCall: This value is a crucial indicator of performance; the smaller the number, the higher the game's operational efficiency. It represents the approximate number of rendering batches submitted per second. Each preparation of data and notification to the GPU for rendering is called one DrawCall. Besides the time-consuming process of notifying the GPU to render, switching materials and shaders are also very time-consuming operations during each DrawCall.\r\n * - CurMem: Represents memory and video memory usage; the smaller the value, the better.\r\n * - Shader: indicating the number of Shader submissions per second. The smaller the value, the better.\r\n * - Canvas: Composed of three values, which are only present after setting CacheAs, with a default of 0/0/0. From left to right, the meanings of the values are: the number of canvases redrawn per frame / the number of canvases with \"normal\" cache type / the number of canvases with \"bitmap\" cache type.\r\n * @zh Stat是一个性能统计面板，可以实时更新相关的性能参数。参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：\r\n * - FPS(WebGL)：每秒显示的帧数。值越高且越稳定，画面越流畅。\r\n * - Sprite：统计所有渲染节点（包括容器）的数量。这个数值的大小会影响引擎在节点遍历、数据组织和渲染方面的效率。数值越小，游戏运行效率越高。\r\n * - DrawCall：此值是决定性能的重要指标，数值越小，游戏运行效率越高。表示大约每1秒的渲染提交批次。每次准备数据并通知 GPU 进行渲染的过程称为1次 DrawCall。在每次 DrawCall 中，除了通知 GPU 渲染比较耗时外，切换材质与 shader 也是非常耗时的操作。\r\n * - CurMem：表示内存与显存的占用，数值越小越好。\r\n * - Shader：表示每大约1秒 Shader 提交次数。数值越小越好。\r\n * - Canvas：由三个数值组成，仅在设置了 CacheAs 之后才会有数值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"的画布数量 / 缓存类型为\"bitmap\"的画布数量。\r\n */\r\nexport class Stat {\r\n    /**\r\n     * @en The current frame rate.\r\n     * @zh 当前帧率\r\n     */\r\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\r\n    /**\r\n     * @en Node nums\r\n     * @zh 节点数量\r\n     */\r\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    /**\r\n     * @en Sprite3D nums\r\n     * @zh 3D精灵数量\r\n     */\r\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    /**\r\n     * @en DrawCall\r\n     * @zh 渲染提交批次\r\n     */\r\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    /**\r\n     * @en triangleFace\r\n     * @zh 三角形面数量\r\n     */\r\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    /**\r\n     * @en RenderNoe\r\n     * @zh 渲染节点数量\r\n     */\r\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    /**\r\n     * @en SkinRenderNode\r\n     * @zh 蒙皮（骨骼动画）渲染节点数量\r\n     */\r\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    /**\r\n     * @en ParticleRenderNode\r\n     * @zh 粒子渲染节点数量\r\n     */\r\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" }\r\n    /**\r\n     * @en FrustumCulling\r\n     * @zh 视锥体剔除\r\n     */\r\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en uniformUpload\r\n     * @zh uniform上传\r\n     */\r\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en OpaqueDrawCall\r\n     * @zh 不透明物体渲染提交批次\r\n     */\r\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en TransformDrawCall\r\n     * @zh 透明物体渲染提交批次\r\n     */\r\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en DepthCastDrawCall\r\n     * @zh 深度投射渲染提交批次\r\n     */\r\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n    * @en TransformDrawCall\r\n    * @zh 透明物体渲染提交批次\r\n    */\r\n    public static ShadowDrawCall: StatUIParams = { title: \"ShadowDrawCall\", value: \"shadowMapDrawCall\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en InstanceDrawCall\r\n     * @zh 实例绘制渲染提交批次\r\n     */\r\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" }\r\n    /**\r\n     * @en CMDDrawCall\r\n     * @zh CMD渲染提交批次\r\n     */\r\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    /**\r\n     * @en BlitDrawCall\r\n     * @zh 位块渲染提交批次\r\n     */\r\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    /**\r\n     * @en GPU memory\r\n     * @zh GPU 显存\r\n     */\r\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    /**\r\n     * @en Texture2D memory\r\n     * @zh 2D纹理内存\r\n     */\r\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    /**\r\n     * @en RenderTexture memory\r\n     * @zh 渲染纹理内存\r\n     */\r\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    /**\r\n     * @en BufferMemory\r\n     * @zh Buffer内存\r\n     */\r\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    /**\r\n     * @en upload Uniform\r\n     * @zh Uniform上传数量\r\n     */\r\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    /**\r\n     * @en All Show\r\n     * @zh 所有显示\r\n     */\r\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\r\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.ShadowDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\r\n    /**\r\n     * @en Memory Show\r\n     * @zh 内存显示\r\n     */\r\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\r\n    /**\r\n     * @en Rendering Show\r\n     * @zh 渲染显示\r\n     */\r\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.ShadowDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable shadows\r\n     * @zh 开启关闭阴影 \r\n     */\r\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Turn on and off multiple light sources\r\n     * @zh 开启关闭多光源 \r\n     */\r\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Turn on and off the light source\r\n     * @zh 开启关闭光源 \r\n     */\r\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable post-processing\r\n     * @zh 开启关闭后期处理\r\n     */\r\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable animation updates\r\n     * @zh 开启关闭动画更新\r\n     */\r\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable physical updates\r\n     * @zh 开启关闭物理更新\r\n     */\r\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable skin rendering\r\n     * @zh 开启关闭蒙皮渲染 \r\n     */\r\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable transparent rendering\r\n     * @zh 开启关闭透明渲染 \r\n     */\r\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Turn on/off particles\r\n     * @zh 开启关闭粒子\r\n     */\r\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Turn on and off MSAA\r\n     * @zh 开启关闭MSAA\r\n     */\r\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable CMD\r\n     * @zh 开启关闭CMD \r\n     */\r\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\r\n    /**\r\n     * @internal \r\n     * @en Enable/disable rendering of non transparent objects\r\n     * @zh 启关闭非透明物体渲染\r\n     */\r\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\r\n    /**\r\n     * @en AllToggle\r\n     * @zh 所有开关\r\n     */\r\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    /**\r\n     * @en Render Mode Toggle\r\n     * @zh 渲染开关\r\n     */\r\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\r\n    /**\r\n     * @en Render Func Toggle\r\n     * @zh 功能开关\r\n     */\r\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    /**\r\n     * @en Current frames per second (FPS).\r\n     * @zh 当前每秒帧数（FPS）。\r\n     */\r\n    public static FPS: number = 0;\r\n    /**\r\n     * @en Count of rendering loops of the main stage Stage.\r\n     * @zh 主舞台 Stage 的渲染次数计数。\r\n     */\r\n    public static loopCount: number = 0;\r\n    /**\r\n     * @en Number of Sprites that use cache for rendering.\r\n     * @zh 精灵渲染使用缓存 Sprite 的数量。\r\n     */\r\n    public static spriteRenderUseCacheCount: number = 0;\r\n    /**\r\n     * @en Number of times the canvas has used standard rendering.\r\n     * @zh 画布 canvas 使用标准渲染的次数。\r\n     */\r\n    static canvasNormal: number = 0;\r\n    /**\r\n     * @en Number of times the canvas has used bitmap rendering.\r\n     * @zh 画布 canvas 使用位图渲染的次数。\r\n     */\r\n    static canvasBitmap: number = 0;\r\n    /**\r\n     * @en Number of times the canvas buffer has been repainted.\r\n     * @zh 画布 canvas 缓冲区重绘次数。\r\n     */\r\n    static canvasReCache: number = 0;\r\n    /**\r\n     * @en Indicates whether the current rendering mode is slow.\r\n     * @zh 表示当前使用的是否为慢渲染模式。\r\n     */\r\n    static renderSlow: boolean = false;\r\n    /**\r\n     * @en Accumulated memory managed by the resource manager, in bytes.\r\n     * @zh 资源管理器所管理资源的累计内存，以字节为单位。\r\n     */\r\n    //static gpuMemory: number;\r\n    static cpuMemory: number;\r\n\r\n    /**@internal */\r\n    public static _timer: number = 0;\r\n    /**@internal */\r\n    public static _count: number = 0;\r\n\r\n    /**@internal */\r\n    public static _fpsStr: string = \"\";\r\n    /**@internal */\r\n    public static spriteCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static sprite3DCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static drawCall: number = 0;\r\n    public static draw2D = 0;\r\n    /**@internal */\r\n    public static trianglesFaces: number = 0;\r\n    /**@internal */\r\n    public static renderNode: number = 0;\r\n    /**@internal */\r\n    public static meshRenderNode: number = 0;\r\n    /**@internal */\r\n    public static skinRenderNode: number = 0;\r\n    /**@internal */\r\n    public static particleRenderNode: number = 0;\r\n    /**@internal 视锥剔除次数。*/\r\n    public static frustumCulling: number = 0;\r\n    /**@internal */\r\n    public static uniformUpload: number = 0;\r\n    /**@internal */\r\n    public static opaqueDrawCall: number = 0;\r\n    /**@internal */\r\n    public static transDrawCall: number = 0;\r\n    /**@internal */\r\n    public static depthCastDrawCall: number = 0;\r\n    /**@internal */\r\n    public static shadowMapDrawCall: number = 0;\r\n    /**@internal */\r\n    public static instanceDrawCall: number = 0;\r\n    /**@internal */\r\n    public static cmdDrawCall: number = 0;\r\n\r\n    public static blitDrawCall: number = 0;\r\n\r\n    public static renderPassStatArray: number[] = [];\r\n    //是否开启渲染流程统计，会将一些消耗较多的统计放入事件中,在最开始的时候设置最准确\r\n    public static enableRenderPassStatArray: boolean = false;\r\n\r\n    /**\r\n     * @en The cumulative memory of the resources managed by the resource manager, in bytes. \r\n     * @zh 资源管理器所管理资源的累计内存，以字节为单位。\r\n     */\r\n    public static gpuMemory: number;\r\n    /**@internal */\r\n    public static textureMemory: number = 0;\r\n    /**@internal */\r\n    public static renderTextureMemory: number = 0;\r\n    /**@interanl */\r\n    public static bufferMemory: number = 0;\r\n    /**@internal */\r\n    public static uploadUniform: number = 0;\r\n\r\n    /**\r\n     * @en The count of dynamic rigid bodies in the physics system.\r\n     * @zh 物理系统中动态刚体的数量。\r\n     */\r\n    public static physics_dynamicRigidBodyCount: number;\r\n\r\n    /**\r\n     * @en The count of static rigid bodies in the physics system.\r\n     * @zh 物理系统中静态刚体的数量。\r\n     */\r\n    public static physics_staticRigidBodyCount: number;\r\n\r\n    /**\r\n     * @en The count of kinematic rigid bodies in the physics system.\r\n     * @zh 物理系统中运动学刚体的数量。\r\n     */\r\n    public static phyiscs_KinematicRigidBodyCount: number;\r\n\r\n    /**\r\n     * @en The count of character controllers in the physics system.\r\n     * @zh 物理系统中角色控制器的数量。\r\n     */\r\n    public static physics_CharacterControllerCount: number;\r\n\r\n    /**\r\n     * @en The count of joints in the physics system.\r\n     * @zh 物理系统中关节的数量。\r\n     */\r\n    public static physics_jointCount: number;\r\n\r\n    /**\r\n     * @en The count of physics events.\r\n     * @zh 物理事件的数量。\r\n     */\r\n    public static phyiscs_EventCount: number\r\n\r\n    //Toggle\r\n    /**\r\n     * @en Enables or disables shadows.\r\n     * @zh 开启或关闭阴影效果。\r\n     */\r\n    public static enableShadow: boolean = true;\r\n    /**\r\n     * @en Enables or disables multiple light sources.\r\n     * @zh 开启或关闭多光源效果。\r\n     */\r\n    public static enableMulLight: boolean = true;\r\n    /**\r\n     * @en Enables or disables light sources.\r\n     * @zh 开启或关闭光源效果。\r\n     */\r\n    public static enableLight: boolean = true;\r\n    /**\r\n     * @en Enables or disables CMD.\r\n     * @zh 开启或关闭CMD。\r\n     */\r\n    public static enableCameraCMD: boolean = true;\r\n    /**\r\n     * @en Enables or disables post-processing effects.\r\n     * @zh 开启或关闭后期处理效果。\r\n     */\r\n    public static enablePostprocess: boolean = true;\r\n    /**\r\n     * @en Enables or disables skin rendering.\r\n     * @zh 开启或关闭skin渲染。\r\n     */\r\n    public static enableSkin: boolean = true;\r\n    /**\r\n     * @en Enables or disables transparent rendering.\r\n     * @zh 开启或关闭透明渲染。\r\n     */\r\n    public static enableTransparent: boolean = true;\r\n    /**\r\n     * @en Enables or disables particle rendering.\r\n     * @zh 开启或关闭粒子渲染。\r\n     */\r\n    public static enableParticle: boolean = true;\r\n    /**\r\n     * @en Enables or disables animation updates.\r\n     * @zh 开启或关闭动画更新。\r\n     */\r\n    public static enableAnimatorUpdate: boolean = true;\r\n    /**\r\n     * @en Enables or disables physics updates.\r\n     * @zh 开启或关闭物理更新。\r\n     */\r\n    public static enablePhysicsUpdate: boolean = true;\r\n    /**\r\n     * @en Enables or disables MSAA.\r\n     * @zh 开启或关闭 MSAA。\r\n     */\r\n    public static enablemsaa: boolean = true;\r\n    /**\r\n     * @en Enables or disables rendering of opaque objects.\r\n     * @zh 开启或关闭不透明物体渲染。\r\n     */\r\n    public static enableOpaque: boolean = true;\r\n\r\n    static _statUI: IStatUI;\r\n\r\n    /**@internal */\r\n    private static _currentShowArray: Array<StatUIParams>;\r\n    /**@internal */\r\n    private static _currentToggleArray: Array<StatToggleUIParams>;\r\n    /**@internal */\r\n    private static _show: boolean;\r\n\r\n    /**\r\n     * @en Displays performance statistics information on the screen.\r\n     * To be effective, it should be called at the very beginning of the application.\r\n     * @param x The X-coordinate position where the statistics should be displayed.\r\n     * @param y The Y-coordinate position where the statistics should be displayed.\r\n     * @param views An optional array of StatUIParams that defines which statistics to display.\r\n     * @zh 在屏幕上显示性能统计信息。\r\n     * 为了有效，它应该在应用程序最开始时调用。\r\n     * @param x 统计信息显示的 X 轴坐标位置。\r\n     * @param y 统计信息显示的 Y 轴坐标位置。\r\n     * @param views 可选的 StatUIParams 数组，定义要显示哪些统计信息。\r\n     */\r\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        LayaGL.renderEngine._enableStatistics = true;\r\n        Stat._currentShowArray = views || Stat.AllShow;\r\n        Stat._statUI.show(x, y, Stat._currentShowArray);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n        ILaya.timer.frameLoop(1, null, Stat.clear);\r\n    }\r\n\r\n    /**\r\n     * @en Shows the performance statistics information with toggle functionality.\r\n     * @param x The x-coordinate of the display position. Optional.\r\n     * @param y The y-coordinate of the display position. Optional.\r\n     * @param views An array of StatToggleUIParams objects defining the toggle views to display. Optional.\r\n     * @zh 显示带有切换功能的性能统计信息。\r\n     * @param x 显示位置的 x 坐标。可选。\r\n     * @param y 显示位置的 y 坐标。可选。\r\n     * @param views 定义要显示的切换视图的 StatToggleUIParams 对象数组。可选。\r\n     */\r\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentToggleArray = views;\r\n        Stat._statUI.showToggle(x, y, views);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n        ILaya.timer.frameLoop(1, null, Stat.clear);\r\n    }\r\n\r\n    private static checkUI() {\r\n        if (!Stat._statUI) {\r\n            let cls = ClassUtils.getClass(\"StatUI\");\r\n            if (!cls) {\r\n                console.error(\"StatUI not found\");\r\n                return false;\r\n            }\r\n            Stat._statUI = new cls();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en Hides the performance statistics information from the screen.\r\n     * @zh 从屏幕上隐藏性能统计信息。\r\n     */\r\n    static hide(): void {\r\n        if (!Stat._show)\r\n            return;\r\n\r\n        Stat._show = false;\r\n        Stat._currentShowArray = null;\r\n        Stat._currentToggleArray = null;\r\n        ILaya.timer.clear(null, Stat.loop);\r\n        ILaya.timer.clear(null, Stat.clear);\r\n        if (Stat._statUI)\r\n            Stat._statUI.hide();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Performance statistics parameter calculation loop processing function.\r\n     * @zh 性能统计参数计算循环处理函数。\r\n     */\r\n    static loop(): void {\r\n        Stat._count++;\r\n        let timer: number = Browser.now();\r\n        if (timer - Stat._timer < 1000) return;\r\n\r\n        let count: number = Stat._count;\r\n        //计算更精确的FPS值\r\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\r\n\r\n        if (Stat._show) {\r\n            Stat.updateEngineData();\r\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\r\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\r\n            Stat._statUI.update();\r\n            // Stat.clear();\r\n        }\r\n\r\n        Stat._count = 0;\r\n        Stat._timer = timer;\r\n    }\r\n\r\n    /**\r\n     * @en Updates the engine data for statistics such as triangle count, draw call count, and memory usage.\r\n     * @zh 更新引擎数据，包括三角形数量、绘制调用计数和内存使用情况等统计信息。\r\n     */\r\n    static updateEngineData(): void {\r\n        Stat.trianglesFaces += LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount);\r\n        Stat.drawCall += LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount);\r\n        Stat.instanceDrawCall += LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount);\r\n\r\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory);\r\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.M_ALLTexture);\r\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.M_ALLRenderTexture);\r\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Resets the performance statistics calculation related data to zero.\r\n     * @zh 清零性能统计计算相关的数据。\r\n     */\r\n    static clear(): void {\r\n        if (!Stat._currentShowArray || Stat._count)\r\n            return;\r\n        Stat._currentShowArray.forEach(element => {\r\n            if (element.mode == \"average\")\r\n                (Stat as any)[element.value] = 0;\r\n        });\r\n        LayaGL.renderEngine.clearStatisticsInfo();\r\n        Stat.renderPassStatArray.fill(0);\r\n    }\r\n\r\n    static render(ctx: any, x: number, y: number) {\r\n        if (Stat._show)\r\n            Stat._statUI.render(ctx, x, y);\r\n    }\r\n}\r\n\r\n(window as any).Stat = Stat;\r\n","import { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\n\r\nexport class RenderState2D {\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n\r\n    static worldMatrix = new Matrix();\r\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\r\n    static worldAlpha = 1.0;\r\n\r\n    static worldScissorTest = false;\r\n\r\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\r\n    static worldShaderDefines: ShaderDefines2D;\r\n    static worldFilters: ColorFilter[];\r\n\r\n    static width = 0;\r\n    static height = 0;\r\n\r\n    static InvertY = false;\r\n\r\n    static restoreTempArray(): void {\r\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\r\n    }\r\n\r\n    static clear(): void {\r\n        RenderState2D.worldAlpha = 1;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { IRenderContext2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderContext2D\";\r\nimport { IRenderElement2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderElement2D\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DrawType } from \"../RenderEngine/RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { VertexDeclaration } from \"../RenderEngine/VertexDeclaration\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\n\r\nexport interface ISprite2DGeometry {\r\n    readonly vertexDeclarition: VertexDeclaration;\r\n    vbBuffer: ArrayBuffer;\r\n    ibBuffer: ArrayBuffer;\r\n}\r\n\r\nexport abstract class Render2D {\r\n\r\n    protected _renderTexture: RenderTexture2D = null;\r\n    //外部设置渲染结果。默认为null,null则渲染到canvas上\r\n    constructor(out: RenderTexture2D = null) {\r\n        this._renderTexture = out;\r\n    }\r\n    setRenderTarget(rt: RenderTexture2D) { };//临时\r\n    abstract clone(out: RenderTexture2D): Render2D;\r\n    //可以随时设置rt\r\n    // set out(out: RenderTexture2D) {\r\n    //     this._renderTexture = out;\r\n    // }\r\n    get out() {\r\n        return this._renderTexture;\r\n    }\r\n    //output:RenderTexture2D;\r\n    abstract renderStart(clear: boolean, clearColor: Color): void;\r\n    // 有vb是外部提供的，因此，顶点描述也要由外部提供\r\n    //abstract setVertexDecl(decl:VertexDeclaration):void;\r\n    //shaderdata放到mtl中。之所以传内存buffer是为了给后面合并subdata机会，以便提高效率\r\n    abstract draw(mesh: ISprite2DGeometry, vboff: number, vblen: number, iboff: number, iblen: number, mtl: Value2D, customMaterial: Material): void;\r\n    abstract drawMesh(mesh: IRenderGeometryElement, mtl: Material): void;\r\n    abstract drawElement(ele: IRenderElement2D): void;\r\n\r\n    abstract renderEnd(): void;\r\n}\r\n\r\n/**\r\n * 直接渲染，不攒submit\r\n */\r\nexport class Render2DSimple extends Render2D {\r\n    static rendercontext2D: IRenderContext2D;\r\n    //private geo: IRenderGeometryElement;\r\n    private _renderElement: IRenderElement2D;\r\n    private static _geoMap:{[key:number]:IRenderGeometryElement}={}\r\n\r\n    constructor(out: RenderTexture2D = null) {\r\n        super(out);\r\n        if (!Render2DSimple.rendercontext2D) {\r\n            Render2DSimple.rendercontext2D = LayaGL.render2DRenderPassFactory.createRenderContext2D();\r\n        }\r\n        this._renderElement = LayaGL.render2DRenderPassFactory.createRenderElement2D();\r\n    }\r\n\r\n    clone(out: RenderTexture2D): Render2D {\r\n        return new Render2DSimple(out);\r\n    }\r\n\r\n    private _createMesh(decl: VertexDeclaration) {\r\n        let geo = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElement);\r\n        let mesh = LayaGL.renderDeviceFactory.createBufferState();\r\n        geo.bufferState = mesh;\r\n        let vb = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\r\n        vb.vertexDeclaration = decl;\r\n        let ib = LayaGL.renderDeviceFactory.createIndexBuffer(BufferUsage.Dynamic);\r\n        mesh.applyState([vb], ib)\r\n        geo.indexFormat = IndexFormat.UInt16;\r\n        return geo;\r\n    }\r\n\r\n    private getGeo(decl: VertexDeclaration){\r\n        let geo = Render2DSimple._geoMap[decl.id];\r\n        if(geo==undefined){\r\n            geo = this._createMesh(decl);\r\n            Render2DSimple._geoMap[decl.id]=geo;\r\n        }\r\n        return geo;\r\n    }\r\n\r\n    renderStart(clear: boolean, clearColor: Color): void {\r\n        //分层\r\n        // if (this._renderTexture) {\r\n        //     this._renderTexture.start();\r\n        //     this._renderTexture.clear(0, 0, 0, 0);\r\n        // }\r\n        if (this._renderTexture) {\r\n            Render2DSimple.rendercontext2D.invertY = this._renderTexture._invertY;\r\n            Render2DSimple.rendercontext2D.setRenderTarget(this._renderTexture._renderTarget, clear, clearColor);\r\n        } else {\r\n            Render2DSimple.rendercontext2D.invertY = false;\r\n            Render2DSimple.rendercontext2D.setOffscreenView(RenderState2D.width, RenderState2D.height);\r\n            Render2DSimple.rendercontext2D.setRenderTarget(null, clear, clearColor);\r\n        }\r\n        RenderTexture2D._clear = false;\r\n    }\r\n\r\n    //临时。恢复rt用，以后要做到没有rt的嵌套\r\n    override setRenderTarget(rt: RenderTexture2D) {\r\n        Render2DSimple.rendercontext2D.setRenderTarget(rt?._renderTarget, false, RenderTexture2D._clearColor);\r\n    }\r\n\r\n    drawMesh(geo: IRenderGeometryElement, mtl: Material) {\r\n        Stat.draw2D++;\r\n        //Material??\r\n        this._renderElement.geometry = geo;\r\n        //this._renderElement.material = mtl;\r\n        this._renderElement.value2DShaderData = mtl.shaderData;\r\n        this._renderElement.subShader = mtl._shader.getSubShaderAt(0);\r\n        this._renderElement.materialShaderData = mtl.shaderData;\r\n        //blendState TODO\r\n        Render2DSimple.rendercontext2D.drawRenderElementOne(this._renderElement);\r\n    }\r\n\r\n    drawElement(ele: IRenderElement2D) {\r\n        Render2DSimple.rendercontext2D.drawRenderElementOne(ele);\r\n    }\r\n\r\n    draw(mesh2d: ISprite2DGeometry, vboff: number, vblen: number, iboff: number, iblen: number, mtl: Value2D, customMaterial: Material): void {\r\n        Stat.draw2D++;\r\n        let geo = this.getGeo(mesh2d.vertexDeclarition);\r\n        let mesh = geo.bufferState\r\n        let vb = mesh._vertexBuffers[0];\r\n        let ib = mesh._bindedIndexBuffer;\r\n        vb.setDataLength(vblen);\r\n        vb.setData(mesh2d.vbBuffer, vboff, 0, vblen)\r\n        ib._setIndexDataLength(iblen)\r\n        ib._setIndexData(new Uint16Array(mesh2d.ibBuffer, iboff, iblen / 2), 0)\r\n        geo.clearRenderParams();\r\n        geo.setDrawElemenParams(iblen / 2, 0);\r\n\r\n        //Material??\r\n        let mat: Material = customMaterial;\r\n        this._renderElement.geometry = geo;\r\n        //this._renderElement.material = mtl;\r\n        this._renderElement.value2DShaderData = mtl.shaderData;\r\n        if (mat)//有Material Shader是Material的shader  没有是默认的Shader\r\n        {\r\n            this._renderElement.subShader = mat._shader.getSubShaderAt(0);\r\n            this._renderElement.materialShaderData = mat.shaderData;\r\n        } else {\r\n            this._renderElement.subShader = mtl._defaultShader.getSubShaderAt(0);\r\n            this._renderElement.materialShaderData = null;\r\n        }\r\n        //blendState TODO\r\n        Render2DSimple.rendercontext2D.drawRenderElementOne(this._renderElement);\r\n    }\r\n\r\n    renderEnd(): void {\r\n        //分层\r\n        // if (this._renderTexture) {\r\n        //     this._renderTexture.end();\r\n        //     this._renderTexture.restore();\r\n        // }\r\n    }\r\n\r\n}\r\n","\r\n/**\r\n * @en The `SingletonList` class is designed to implement a singleton queue.\r\n * @zh SingletonList 类用于实现单例队列。\r\n */\r\nexport class SingletonList<T> {\r\n    /**\r\n     * @internal\r\n     * @en [Read-only] The array storing the elements of the queue.\r\n     * @zh [只读] 存储队列元素的数组。\r\n     */\r\n    elements: Array<T> = [];\r\n    /**\r\n     * @internal\r\n     * @en [Read-only] The current length of the queue.\r\n     * @zh [只读] 队列的当前长度。\r\n     */\r\n    length: number = 0;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _add(element: T): void {\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Adds an element to the list if it is not already present.\r\n     * @param element The element to add.\r\n     * @zh 如果元素尚未存在于列表中，则添加该元素。\r\n     * @param element 要添加的元素。\r\n     */\r\n    add(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\r\n            return;\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n        this.length++;\r\n    }\r\n\r\n    /**\r\n     * @en Finds the index of an element in the list.\r\n     * @param element The element to find.\r\n     * @zh 在列表中查找元素的索引。\r\n     * @param element 要查找的元素。\r\n     */\r\n    indexof(element: T) {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length)\r\n            return index;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Removes an element from the list.\r\n     * @param element The element to remove.\r\n     * @zh 从列表中移除一个元素。\r\n     * @param element 要移除的元素。\r\n     */\r\n    remove(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length) {\r\n            this.elements[index] = this.elements[this.length - 1];\r\n            this.elements[this.length - 1] = null;//去掉引用\r\n            this.length--;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Clears the list, removing all elements.\r\n     * @zh 清除列表，移除所有元素。\r\n     */\r\n    clear() {\r\n        this.elements = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Trims the elements array to match the current length of the list.\r\n     * @zh 将元素数组的长度调整为与列表的当前长度相匹配。\r\n     */\r\n    clean() {\r\n        this.elements.length = this.length;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the list by nullifying the elements array.\r\n     * @zh 通过将元素数组置为 null 来销毁列表。\r\n     */\r\n    destroy() {\r\n        this.elements = null;\r\n    }\r\n}\r\n\r\nexport class FastSinglelist<T> extends SingletonList<T> {\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        this._add(element);\r\n        this.length++;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { IRenderContext2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderContext2D\";\r\nimport { IRenderElement2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderElement2D\";\r\nimport { Render2DSimple } from \"../renders/Render2D\";\r\nimport { FastSinglelist } from \"../utils/SingletonList\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BaseRenderNode2D } from \"./BaseRenderNode2D\";\r\n\r\nexport interface IBatch2DRender {\r\n    /**合批范围，合批的RenderElement2D直接add进list中 */\r\n    batchRenderElement(list: FastSinglelist<IRenderElement2D>, start: number, length: number): void;\r\n\r\n    recover():void;\r\n}\r\n\r\nexport class Batch2DInfo {\r\n    batchFun: IBatch2DRender = null;\r\n    batch: boolean = false;\r\n    indexStart: number = -1;\r\n    elementLenth: number = 0;\r\n    constructor() {\r\n    }\r\n\r\n    static _pool: Batch2DInfo[] = [];\r\n    static create(): Batch2DInfo {\r\n        if (this._pool.length != 0) {\r\n            return this._pool.pop();\r\n        } else\r\n            return new Batch2DInfo();\r\n    }\r\n    static recover(info: Batch2DInfo) {\r\n        this._pool.push(info);\r\n    }\r\n}\r\nexport class RenderManager2D {\r\n\r\n    /**\r\n     * 根据不同的RenderNode注册合批方式，来优化性能\r\n     */\r\n    private static _batchMapManager: { [key: number]: IBatch2DRender } = {};\r\n\r\n    /**\r\n     * 注册渲染节点之间的合批\r\n     * @param firstRenderElementType \r\n     * @param lastRenderElementType \r\n     * @param batch \r\n     */\r\n    static regisBatch(renderElementType: number, batch: IBatch2DRender): void {\r\n        if (RenderManager2D._batchMapManager[renderElementType])\r\n            throw \"Overlapping batch optimization\";\r\n        else\r\n            RenderManager2D._batchMapManager[renderElementType] = batch;\r\n\r\n    }\r\n\r\n    private _lastRenderNodeType: number = -1;\r\n    private _lastbatch2DInfo: Batch2DInfo\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _list: FastSinglelist<BaseRenderNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderElementList: FastSinglelist<IRenderElement2D>;\r\n\r\n\r\n    _batchInfoList: FastSinglelist<Batch2DInfo>;\r\n\r\n    /**\r\n     * 渲染结束标签\r\n     */\r\n    _renderEnd: boolean = true;\r\n\r\n    /**\r\n    * RenderList\r\n    */\r\n    get list(): FastSinglelist<BaseRenderNode2D> {\r\n        return this._list;\r\n    }\r\n\r\n    set list(value: FastSinglelist<BaseRenderNode2D>) {\r\n        this._list = value;\r\n    }\r\n\r\n    constructor() {\r\n        this.list = new FastSinglelist<BaseRenderNode2D>();\r\n        this._renderElementList = new FastSinglelist<IRenderElement2D>();\r\n        this._batchInfoList = new FastSinglelist<Batch2DInfo>();\r\n    }\r\n\r\n    /**\r\n    * add Render Node\r\n    * @param object \r\n    */\r\n    addRenderObject(object: BaseRenderNode2D): void {\r\n        this.list.add(object);\r\n    }\r\n\r\n    /**\r\n     * remove Render Node\r\n     * @param object \r\n     */\r\n    removeRenderObject(object: BaseRenderNode2D): void {\r\n        this.list.remove(object);\r\n    }\r\n\r\n    /**\r\n     * clear list\r\n     */\r\n    clearList() {\r\n        this._list.clear();\r\n        this._renderElementList.clear();\r\n        for (var i = 0, n = this._batchInfoList.length; i < n; i++) {\r\n            let element = this._batchInfoList.elements[i];\r\n            if (element.batch) {\r\n                element.batchFun.recover();\r\n            }\r\n            Batch2DInfo.recover(element);\r\n        }\r\n        this._batchInfoList.clear();\r\n    }\r\n\r\n\r\n    /**\r\n     * 帧更新\r\n     */\r\n    renderUpdate(): void {\r\n        var context: IRenderContext2D = Render2DSimple.rendercontext2D;\r\n        let lists = this._list.elements;\r\n        for (let i = 0, n = this._list.length; i < n; i++) {\r\n            let render = lists[i];\r\n            if (render.renderUpdate && render._renderUpdateMask != Stat.loopCount) {\r\n                render.renderUpdate(context);\r\n                render._renderUpdateMask = Stat.loopCount;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染\r\n     * @param context \r\n     */\r\n    render(context: IRenderContext2D) {\r\n        this.renderUpdate();\r\n        for (var i = 0, n = this._list.length; i < n; i++) {\r\n            this._cull(this._list.elements[i], context);\r\n        }\r\n        this._batch();\r\n        context.drawRenderElementList(this._renderElementList);\r\n        this.endRender();\r\n    }\r\n\r\n    private _cull(renderNode: BaseRenderNode2D, context: IRenderContext2D) {\r\n        if (false) {\r\n            //没有camera和layer的代码 暂时先保留\r\n            //Cull TODO\r\n            return;\r\n        } else {\r\n            //cull 通过\r\n            if (renderNode.preRenderUpdate)\r\n                renderNode.preRenderUpdate(context);\r\n            let n = renderNode._renderElements.length;\r\n            if (n == 1) {\r\n                this._batchStart(renderNode._renderType, 1);\r\n                this._renderElementList.add(renderNode._renderElements[0]);\r\n            } else {\r\n                this._batchStart(renderNode._renderType, n);\r\n                for (var i = 0; i < n; i++) {\r\n                    this._renderElementList.add(renderNode._renderElements[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 合批总循环\r\n     */\r\n    private _batch() {\r\n        this._batchInfoList.add(this._lastbatch2DInfo);\r\n        this._renderElementList.length = 0;\r\n        for (var i = 0, n = this._batchInfoList.length; i < n; i++) {\r\n            let info = this._batchInfoList.elements[i];\r\n            if (info.batch) {\r\n                info.batchFun.batchRenderElement(this._renderElementList, info.indexStart, info.elementLenth);\r\n            } else {\r\n                for (let j = info.indexStart, m = info.elementLenth + info.indexStart; j < m; j++)\r\n                    this._renderElementList.add(this._renderElementList.elements[j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开启一个Batch\r\n     */\r\n    private _batchStart(renderNodeType: number, elementLength: number) {\r\n        if (this._lastRenderNodeType == -1) {\r\n            this._lastbatch2DInfo = Batch2DInfo.create();\r\n            //first renderNode\r\n            this._lastbatch2DInfo.batch = false;\r\n            this._lastbatch2DInfo.batchFun = RenderManager2D._batchMapManager[renderNodeType];\r\n            this._lastbatch2DInfo.indexStart = 0;\r\n            this._lastbatch2DInfo.elementLenth = elementLength;\r\n            this._lastRenderNodeType = renderNodeType;\r\n            return;\r\n        }\r\n        if (this._lastRenderNodeType == renderNodeType) {\r\n            this._lastbatch2DInfo.batch = !!(this._lastbatch2DInfo.batchFun);\r\n            this._lastbatch2DInfo.elementLenth += elementLength;\r\n        } else {\r\n            this._batchInfoList.add(this._lastbatch2DInfo);\r\n            this._lastbatch2DInfo = Batch2DInfo.create();\r\n            this._lastbatch2DInfo.batch = false;\r\n            this._lastbatch2DInfo.batchFun = RenderManager2D._batchMapManager[renderNodeType];\r\n            this._lastbatch2DInfo.indexStart = this._renderElementList.length;\r\n            this._lastbatch2DInfo.elementLenth = elementLength;\r\n            this._lastRenderNodeType = renderNodeType;\r\n        }\r\n    }\r\n\r\n    endRender() {\r\n        this.clearList();\r\n        this._renderEnd = true;//结束Render\r\n        this._lastRenderNodeType = -1;\r\n    }\r\n\r\n}","/**\r\n * @en The MathUtils3D class is used to create mathematical utilities.\r\n * @zh MathUtils3D 类用于创建数学工具。\r\n */\r\nexport class MathUtils3D {\r\n    /**\r\n     * @en Tolerance for single-precision floating-point (float) zero.\r\n     * @zh 单精度浮点(float)零的容差。\r\n     */\r\n    static zeroTolerance: number = 1e-6;\r\n    /**\r\n     * @en Default maximum value for floating-point numbers.\r\n     * @zh 浮点数默认最大值。\r\n     */\r\n    static MaxValue: number = 3.40282347e+38;\r\n    /**\r\n     * @en Default minimum value for floating-point numbers.\r\n     * @zh 浮点数默认最小值。\r\n     */\r\n    static MinValue: number = -3.40282347e+38;\r\n    /**\r\n     * @en Coefficient for converting degrees to radians.\r\n     * @zh 角度转弧度系数。\r\n     */\r\n    static Deg2Rad: number = Math.PI / 180;\r\n    /**\r\n     * @en Constructor of MathUtils3D.\r\n     * @zh MathUtils3D 的构造函数。\r\n     */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Determines if a value is approximately zero within the tolerance range.\r\n     * @param v The value to be checked.\r\n     * @returns Whether the value is approximately zero.\r\n     * @zh 是否在容差的范围内近似于0。\r\n     * @param v 要判断的值。\r\n     * @returns 是否近似于0。\r\n     */\r\n    static isZero(v: number): boolean {\r\n        return Math.abs(v) < MathUtils3D.zeroTolerance;\r\n    }\r\n\r\n    /**\r\n     * @en Determines if two values are approximately equal within the tolerance range.\r\n     * @param n1 The first value to compare.\r\n     * @param n2 The second value to compare.\r\n     * @returns Whether the two values are approximately equal.\r\n     * @zh 两个值是否在容差的范围内近似相等Sqr Magnitude。\r\n     * @param n1 要比较的第一个值。\r\n     * @param n2 要比较的第二个值。\r\n     * @returns 两个值是否近似相等。\r\n     */\r\n    static nearEqual(n1: number, n2: number): boolean {\r\n        if (MathUtils3D.isZero(n1 - n2))\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the reciprocal of the square root of a non-zero number.\r\n     * @param value The input value.\r\n     * @returns The reciprocal of the square root of the input value.\r\n     * @zh 计算一个非0数的平方根的倒数。\r\n     * @param value 输入值。\r\n     * @returns 输入值的平方根倒数。\r\n     */\r\n    static fastInvSqrt(value: number): number {\r\n        if (MathUtils3D.isZero(value))\r\n            return value;\r\n        return 1.0 / Math.sqrt(value);\r\n    }\r\n}\r\n\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * @en The `Vector4` class is used to create four-dimensional vectors.\r\n * @zh `Vector4` 类用于创建四维向量。\r\n */\r\nexport class Vector4 implements IClone {\r\n\r\n    /**\r\n     * @en Zero vector (0, 0, 0, 0).\r\n     * @zh 零向量 (0, 0, 0, 0)。\r\n     */\r\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\r\n\r\n    /**\r\n     * @en One vector (1, 1, 1, 1).\r\n     * @zh 一向量 (1, 1, 1, 1)。\r\n     */\r\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    /**\r\n     * @en Unit X vector (1, 0, 0, 0).\r\n     * @zh X 单位向量 (1, 0, 0, 0)。\r\n     */\r\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n\r\n    /**\r\n     * @en Unit Y vector (0, 1, 0, 0).\r\n     * @zh Y 单位向量 (0, 1, 0, 0)。\r\n     */\r\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\r\n\r\n    /**\r\n     * @en Unit Z vector (0, 0, 1, 0).\r\n     * @zh Z 单位向量 (0, 0, 1, 0)。\r\n     */\r\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\r\n\r\n    /**\r\n     * @en Unit W vector (0, 0, 0, 1).\r\n     * @zh W 单位向量 (0, 0, 0, 1)。\r\n     */\r\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /** @internal */\r\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    /**\r\n     * @en X coordinate.\r\n     * @zh X 轴坐标。\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * @en Y coordinate.\r\n     * @zh Y 轴坐标。\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en Z coordinate.\r\n     * @zh Z 轴坐标。\r\n     */\r\n    z: number;\r\n\r\n    /**\r\n     * @en W coordinate.\r\n     * @zh W 轴坐标。\r\n     */\r\n    w: number;\r\n\r\n    /**\r\n     * @en Constructor method, initializes the vector4.\r\n     * @param x X coordinate. Default is 0.\r\n     * @param y Y coordinate. Default is 0.\r\n     * @param z Z coordinate. Default is 0.\r\n     * @param w W coordinate. Default is 0.\r\n     * @zh 构造方法，初始化四维向量。\r\n     * @param x X 轴坐标。默认为 0。\r\n     * @param y Y 轴坐标。默认为 0。\r\n     * @param z Z 轴坐标。默认为 0。\r\n     * @param w W 轴坐标。默认为 0。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the x, y, z, and w values of the vector.\r\n     * @param x The x value.\r\n     * @param y The y value.\r\n     * @param z The z value.\r\n     * @param w The w value.\r\n     * @zh 设置向量的 x、y、z 和 w 值。\r\n     * @param x X值。\r\n     * @param y Y值。\r\n     * @param z Z值。\r\n     * @param w W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * @en Copies values from an array.\r\n     * @param arr The source array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 从数组中拷贝值。\r\n     * @param arr 源数组。\r\n     * @param offset 数组偏移。默认值为 0。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n        this.w = arr[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * @en Converts the vector to an array.\r\n     * @returns An array containing the vector components [x, y, z, w].\r\n     * @zh 将向量转换为数组。\r\n     * @returns 包含向量分量的数组 [x, y, z, w]。\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    /**\r\n     * @en Writes the vector values to a Float32Array.\r\n     * @param arr The target Float32Array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 将向量值写入 Float32Array 数组。\r\n     * @zh arr 目标 Float32Array 数组。\r\n     * @zh offset 数组偏移。默认值为 0。\r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n        arr[offset + 3] = this.w;\r\n    }\r\n\r\n    /**\r\n     * @en Clones this vector to another object.\r\n     * @param destObject The destination object to clone to.\r\n     * @zh 将当前向量克隆到目标对象。\r\n     * @param destObject 克隆的目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector4: Vector4 = (<Vector4>destObject);\r\n        destVector4.x = this.x;\r\n        destVector4.y = this.y;\r\n        destVector4.z = this.z;\r\n        destVector4.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * @en Creates a clone of this vector.\r\n     * @returns A new Vector4 object with the same values as this vector.\r\n     * @zh 创建当前向量的克隆。\r\n     * @returns 返回一个新的 Vector4 对象，其值与当前向量相同。\r\n     */\r\n    clone(): any {\r\n        var destVector4: Vector4 = new Vector4();\r\n        this.cloneTo(destVector4);\r\n        return destVector4;\r\n    }\r\n\r\n    /**\r\n     * @en Performs a linear interpolation between two vectors.\r\n     * @param a The first vector.\r\n     * @param b The second vector.\r\n     * @param t The interpolation coefficient.\r\n     * @param out The output vector.\r\n     * @zh 在两个向量之间进行线性插值。\r\n     * @param a 起始向量。\r\n     * @param b 目标向量。\r\n     * @param t 插值系数。\r\n     * @param out 输出向量。\r\n     */\r\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n        out.w = aw + t * (b.w - aw);\r\n    }\r\n\r\n    /**\r\n     * @en Transforms a Vector4 by a 4x4 matrix.\r\n     * @param vector4 The vector to transform.\r\n     * @param m4x4 The transformation matrix.\r\n     * @param out The output vector.\r\n     * @zh 通过 4x4 矩阵转换一个四维向量。\r\n     * @param vector4 待转换的四维向量。\r\n     * @param m4x4 4x4 变换矩阵。\r\n     * @param out 转换后的四维向量。\r\n     */\r\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\r\n        var vx: number = vector4.x;\r\n        var vy: number = vector4.y;\r\n        var vz: number = vector4.z;\r\n        var vw: number = vector4.w;\r\n\r\n        var me: Float32Array = m4x4.elements;\r\n\r\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\r\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\r\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\r\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether two Vector4 objects are equal.\r\n     * @param a The first Vector4.\r\n     * @param b The second Vector4.\r\n     * @returns True if the vectors are equal, false otherwise.\r\n     * @zh 判断两个四维向量是否相等。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @returns 如果向量相等则返回 true，否则返回 false。\r\n     */\r\n    static equals(a: Vector4, b: Vector4): boolean {\r\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether this vector is equal to another vector.\r\n     * @param value The vector to compare with.\r\n     * @returns True if the vectors are equal, false otherwise.\r\n     * @zh 判断当前向量是否与另一个向量相等。\r\n     * @param value 用于比较的向量。\r\n     * @returns 如果向量相等则返回 true，否则返回 false。\r\n     */\r\n    equal(value: Vector4) {\r\n        return Vector4.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the vector4.\r\n     * @returns The length of the vector4.\r\n     * @zh 计算四维向量的长度。\r\n     * @return  四维向量的长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the vector4.\r\n     * @returns The squared length of the vector4.\r\n     * @zh 计算四维向量长度的平方。\r\n     * @returns 返回四维向量长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize a vector4.\r\n     * @param s Source vector4.\r\n     * @param out Output vector4.\r\n     * @zh 归一化四维向量。\r\n     * @param s 源四维向量。\r\n     * @param out 输出四维向量。\r\n     */\r\n    static normalize(s: Vector4, out: Vector4): void {\r\n        var len: number = s.length();\r\n        if (len > 0) {\r\n            var inverse: number = 1.0 / len;\r\n            out.x = s.x * inverse;\r\n            out.y = s.y * inverse;\r\n            out.z = s.z * inverse;\r\n            out.w = s.w * inverse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the sum of two four-dimensional vectors.\r\n     * @param a First vector4.\r\n     * @param b Second vector4.\r\n     * @param out Output vector.\r\n     * @zh 求两个四维向量的和。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @param out 输出向量。\r\n     */\r\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the difference between two four-dimensional vectors.\r\n     * @param a First vector4.\r\n     * @param b Second vector4.\r\n     * @param out Output vector.\r\n     * @zh 求两个四维向量的差。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @param out 输出向量。\r\n     */\r\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the product of two four-dimensional vectors.\r\n     * @param a First vector4.\r\n     * @param b Second vector4.\r\n     * @param out Output vector.\r\n     * @zh 计算两个四维向量的乘积。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @param out 输出向量。\r\n     */\r\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * @en Scale a four-dimensional vector.\r\n     * @param a Source vector4.\r\n     * @param b Scale value.\r\n     * @param out Output vector4.\r\n     * @zh 缩放四维向量。\r\n     * @param a 源四维向量。\r\n     * @param b 缩放值。\r\n     * @param out 输出四维向量。\r\n     */\r\n    static scale(a: Vector4, b: number, out: Vector4): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n    }\r\n\r\n    /**\r\n     * @en Clamp a four-dimensional vector within a specified range.\r\n     * @param value Vector to be clamped.\r\n     * @param min Minimum values.\r\n     * @param max Maximum values.\r\n     * @param out Output vector.\r\n     * @zh 将四维向量限制在指定的范围内。\r\n     * @param value 要限制的向量。\r\n     * @param min 最小值。\r\n     * @param max 最大值。\r\n     * @param out 输出向量。\r\n     */\r\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n        var w: number = value.w;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n        var mineW: number = min.w;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n        var maxeW: number = max.w;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        w = (w > maxeW) ? maxeW : w;\r\n        w = (w < mineW) ? mineW : w;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the squared distance between two four-dimensional vectors.\r\n     * @param value1 The first vector4.\r\n     * @param value2 The second vector4.\r\n     * @returns The squared distance.\r\n     * @zh 计算两个四维向量之间距离的平方。\r\n     * @param value1 第一个四维向量。\r\n     * @param value2 第二个四维向量。\r\n     * @returns 距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the distance between two four-dimensional vectors.\r\n     * @param value1 The first vector.\r\n     * @param value2 The second vector.\r\n     * @returns The distance.\r\n     * @zh 计算两个四维向量之间的距离。\r\n     * @param value1 第一个向量。\r\n     * @param value2 第二个向量。\r\n     * @returns 距离。\r\n     */\r\n    static distance(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the dot product of two four-dimensional vectors.\r\n     * @param a The first vector.\r\n     * @param b The second vector.\r\n     * @returns The dot product.\r\n     * @zh 计算两个四维向量的点积。\r\n     * @param a 第一个向量。\r\n     * @param b 第二个向量。\r\n     * @returns 点积。\r\n     */\r\n    static dot(a: Vector4, b: Vector4): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a new four-dimensional vector using the minimum values of x, y, z, and w from two vectors.\r\n     * @param a The first vector4.\r\n     * @param b The second vector4.\r\n     * @param out The resulting vector4.\r\n     * @zh 分别取两个四维向量x、y、z、w的最小值计算新的四维向量。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @param out 结果四维向量。\r\n     */\r\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n        out.w = Math.min(a.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a new four-dimensional vector using the maximum values of x, y, z, and w from two vectors.\r\n     * @param a The first vector4.\r\n     * @param b The second vector4.\r\n     * @param out The resulting vector4.\r\n     * @zh 分别取两个四维向量x、y、z、w的最大值计算新的四维向量。\r\n     * @param a 第一个四维向量。\r\n     * @param b 第二个四维向量。\r\n     * @param out 结果四维向量。\r\n     */\r\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n        out.w = Math.max(a.w, b.w);\r\n    }\r\n}\r\n\r\n","import { Vector4 } from \"./Vector4\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\n/**\r\n * @en The `Vector3` class is used to create three-dimensional vectors.\r\n * @zh `Vector3` 类用于创建三维向量。\r\n */\r\nexport class Vector3 implements IClone {\r\n    /**@internal*/\r\n    static _tempVector4 = new Vector4();\r\n    /**@internal*/\r\n    static _tempVector3 = new Vector3();\r\n\r\n    /**\r\n     * @en Zero vector (0, 0, 0).\r\n     * @zh 零向量 (0, 0, 0)。\r\n     */\r\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\r\n    /**\r\n     * @en One vector (1, 1, 1).\r\n     * @zh 单位向量 (1, 1, 1)。\r\n     */\r\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\r\n    /**\r\n     * @en Negative X axis (-1, 0, 0).\r\n     * @zh 负X轴 (-1, 0, 0)。\r\n     */\r\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\r\n    /**\r\n     * @en Positive X axis (1, 0, 0).\r\n     * @zh 正X轴 (1, 0, 0)。\r\n     */\r\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\r\n    /**\r\n     * @en Positive Y axis (0, 1, 0).\r\n     * @zh 正Y轴 (0, 1, 0)。\r\n     */\r\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n    /**\r\n     * @en Positive Z axis (0, 0, 1).\r\n     * @zh 正Z轴 (0, 0, 1)。\r\n     */\r\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    /**\r\n     * @en Forward vector in right-handed coordinate system (0, 0, -1).\r\n     * @zh 右手坐标系中的前向量 (0, 0, -1)。\r\n     */\r\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\r\n    /**\r\n     * @en Forward vector in left-handed coordinate system (0, 0, 1).\r\n     * @zh 左手坐标系中的前向量 (0, 0, 1)。\r\n     */\r\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    /**\r\n     * @en Up vector (0, 1, 0).\r\n     * @zh 上向量 (0, 1, 0)。\r\n     */\r\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n\r\n    /**\r\n     * @en Calculates the squared distance between two three-dimensional vectors.\r\n     * @param value1 The first vector.\r\n     * @param value2 The second vector.\r\n     * @returns The squared distance.\r\n     * @zh 计算两个三维向量之间距离的平方。\r\n     * @param value1 第一个向量。\r\n     * @param value2 第二个向量。\r\n     * @returns 距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the distance between two three-dimensional vectors.\r\n     * @param value1 The first vector.\r\n     * @param value2 The second vector.\r\n     * @returns The distance.\r\n     * @zh 计算两个三维向量之间的距离。\r\n     * @param value1 第一个向量。\r\n     * @param value2 第二个向量。\r\n     * @returns 距离。\r\n     */\r\n    static distance(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return Math.sqrt((x * x) + (y * y) + (z * z));\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a new three-dimensional vector by taking the minimum of x, y, and z from two vectors.\r\n     * @param a The first Vector3.\r\n     * @param b The second Vector3.\r\n     * @param out The resulting Vector3.\r\n     * @zh 通过取两个三维向量的 x、y、z 的最小值计算新的三维向量。\r\n     * @param a 第一个三维向量。\r\n     * @param b 第二个三维向量。\r\n     * @param out 结果三维向量。\r\n     */\r\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a new three-dimensional vector by taking the maximum of x, y, and z from two vectors.\r\n     * @param a The first Vector3.\r\n     * @param b The second Vector3.\r\n     * @param out The resulting Vector3.\r\n     * @zh 通过取两个三维向量的 x、y、z 的最大值计算新的三维向量。\r\n     * @param a 第一个三维向量。\r\n     * @param b 第二个三维向量。\r\n     * @param out 结果三维向量。\r\n     */\r\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * @en Rotates a three-dimensional vector by a quaternion.\r\n     * @param source The source vector3 to be rotated.\r\n     * @param rotation The rotation quaternion.\r\n     * @param out The output vector3.\r\n     * @zh 根据四元数旋转三维向量。\r\n     * @param source 要旋转的源三维向量。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 输出三维向量。\r\n     */\r\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\r\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\r\n\r\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\r\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the scalar length of a vector.\r\n     * @param a The source vector.\r\n     * @returns The scalar length.\r\n     * @zh 计算向量的标量长度。\r\n     * @param a 源向量。\r\n     * @returns 标量长度。\r\n     */\r\n    static scalarLength(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared scalar length of a vector.\r\n     * @param a The source three-dimensional vector.\r\n     * @returns The squared scalar length.\r\n     * @zh 计算标量长度的平方。\r\n     * @param a 源三维向量。\r\n     * @returns 标量长度的平方。\r\n     */\r\n    static scalarLengthSquared(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * @en Normalizes a three-dimensional vector.\r\n     * @param s The source vector to be normalized.\r\n     * @param out The output normalized vector.\r\n     * @zh 归一化三维向量。\r\n     * @param s 要归一化的源向量。\r\n     * @param out 输出的归一化向量。\r\n     */\r\n    static normalize(s: Vector3, out: Vector3): void {\r\n        var x: number = s.x, y: number = s.y, z: number = s.z;\r\n        var len: number = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @en Calculates the product of two three-dimensional vectors.\r\n     * @param a The left vector3.\r\n     * @param b The right vector3.\r\n     * @param out The output vector3.\r\n     * @zh 计算两个三维向量的乘积。\r\n     * @param a 左侧三维向量。\r\n     * @param b 右侧三维向量。\r\n     * @param out 输出三维向量。\r\n     */\r\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * @en Scales a three-dimensional vector.\r\n     * @param a The source vector3 to be scaled.\r\n     * @param b The scaling factor.\r\n     * @param out The output scaled vector3.\r\n     * @zh 缩放三维向量。\r\n     * @param a 要缩放的源三维向量。\r\n     * @param b 缩放因子。\r\n     * @param out 输出的缩放后的三维向量。\r\n     */\r\n    static scale(a: Vector3, b: number, out: Vector3): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n    }\r\n\r\n    /**\r\n     * @en Performs a linear interpolation between two three-dimensional vectors.\r\n     * @param a The starting vector.\r\n     * @param b The ending vector.\r\n     * @param t The interpolation coefficient in the range [0, 1].\r\n     * @param out The output interpolated vector.\r\n     * @zh 在两个三维向量之间进行线性插值。\r\n     * @param a 起始向量。\r\n     * @param b 结束向量。\r\n     * @param t 插值系数，范围为 [0, 1]。\r\n     * @param out 输出的插值向量。\r\n     */\r\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n    }\r\n\r\n    /**\r\n     * @en Transforms a three-dimensional vector to another three-dimensional vector using a matrix.\r\n     * @param vector The source vector3.\r\n     * @param transform The transformation matrix.\r\n     * @param result The output transformed vector3.\r\n     * @zh 使用矩阵将一个三维向量转换为另一个三维向量。\r\n     * @param vector 源三维向量。\r\n     * @param transform 变换矩阵。\r\n     * @param result 输出的转换后的三维向量。\r\n     */\r\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var intermediate: Vector4 = Vector3._tempVector4;\r\n        Vector3.transformV3ToV4(vector, transform, intermediate);\r\n        result.x = intermediate.x;\r\n        result.y = intermediate.y;\r\n        result.z = intermediate.z;\r\n    }\r\n\r\n    /**\r\n     * @en Transforms a three-dimensional vector to a four-dimensional vector using a matrix.\r\n     * @param vector The source vector3.\r\n     * @param transform The transformation matrix.\r\n     * @param result The output vector4.\r\n     * @zh 使用矩阵将三维向量转换为四维向量。\r\n     * @param vector 源三维向量。\r\n     * @param transform 变换矩阵。\r\n     * @param result 输出的四维向量。\r\n     */\r\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\r\n        var vectorX: number = vector.x;\r\n        var vectorY: number = vector.y;\r\n        var vectorZ: number = vector.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\r\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\r\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\r\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\r\n    }\r\n\r\n    /**\r\n     * @en Transforms a normal three-dimensional vector to another three-dimensional vector using a normal transformation matrix.\r\n     * @param normal The source normal vector3.\r\n     * @param transform The normal transformation matrix.\r\n     * @param result The output transformed normal vector3.\r\n     * @zh 使用法线变换矩阵将法线三维向量转换为另一个三维向量。\r\n     * @param normal 源法线三维向量。\r\n     * @param transform 法线变换矩阵。\r\n     * @param result 输出转换后的法线三维向量。\r\n     */\r\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var normalX: number = normal.x;\r\n        var normalY: number = normal.y;\r\n        var normalZ: number = normal.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\r\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\r\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\r\n    }\r\n\r\n    /**\r\n     * @en Transforms a three-dimensional vector to another normalized three-dimensional vector using a matrix.\r\n     * @param coordinate The source three-dimensional vector.\r\n     * @param transform The transformation matrix.\r\n     * @param result The output normalized three-dimensional vector.\r\n     * @zh 使用矩阵将三维向量转换为另一个归一化的三维向量。\r\n     * @param coordinate 源三维向量。\r\n     * @param transform 变换矩阵。\r\n     * @param result 输出的归一化三维向量。\r\n     */\r\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var coordinateX: number = coordinate.x;\r\n        var coordinateY: number = coordinate.y;\r\n        var coordinateZ: number = coordinate.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\r\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\r\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\r\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\r\n    }\r\n\r\n    /**\r\n     * @en Clamps a vector within a specified range.\r\n     * @param value The vector to be clamped.\r\n     * @param min The minimum values for each component.\r\n     * @param max The maximum values for each component.\r\n     * @param out The output clamped vector.\r\n     * @zh 将向量限制在指定范围内。\r\n     * @param value 要限制的向量。\r\n     * @param min 每个分量的最小值。\r\n     * @param max 每个分量的最大值。\r\n     * @param out 输出的限制后的向量。\r\n     */\r\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the sum of two three-dimensional vectors.\r\n     * @param a The left vector3.\r\n     * @param b The right vector3.\r\n     * @param out The output vector3.\r\n     * @zh 计算两个三维向量的和。\r\n     * @param a 左侧三维向量。\r\n     * @param b 右侧三维向量。\r\n     * @param out 输出向量。\r\n     */\r\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the difference between two three-dimensional vectors.\r\n     * @param a The left vector3.\r\n     * @param b The right vector3.\r\n     * @param o The output vector3.\r\n     * @zh 计算两个三维向量的差。\r\n     * @param a 左侧三维向量。\r\n     * @param b 右侧三维向量。\r\n     * @param o 输出向量。\r\n     */\r\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\r\n        o.x = a.x - b.x;\r\n        o.y = a.y - b.y;\r\n        o.z = a.z - b.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product of two three-dimensional vectors.\r\n     * @param a The left vector3.\r\n     * @param b The right vector3.\r\n     * @param o The output vector3.\r\n     * @zh 计算两个三维向量的叉乘。\r\n     * @param a 左侧三维向量。\r\n     * @param b 右侧三维向量。\r\n     * @param o 输出三维向量。\r\n     */\r\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of two three-dimensional vectors.\r\n     * @param a The left vector3.\r\n     * @param b The right vector3.\r\n     * @returns The dot product.\r\n     * @zh 计算两个三维向量的点积。\r\n     * @param a 左侧向量。\r\n     * @param b 右侧向量。\r\n     * @returns 点积。\r\n     */\r\n    static dot(a: Vector3, b: Vector3): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether two three-dimensional vectors are equal.\r\n     * @param a The first vector3.\r\n     * @param b The second vector3.\r\n     * @returns Whether the vectors are equal.\r\n     * @zh 判断两个三维向量是否相等。\r\n     * @param a 第一个三维向量。\r\n     * @param b 第二个三维向量。\r\n     * @returns 是否相等。\r\n     */\r\n    static equals(a: Vector3, b: Vector3): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * @en X-axis coordinate\r\n     * @zh X轴坐标\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * @en Y-axis coordinate\r\n     * @zh Y轴坐标\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en Z-axis coordinate\r\n     * @zh Z轴坐标\r\n     */\r\n    z: number;\r\n\r\n    /**\r\n     * @en Constructor method, 3D vector initialization.\r\n     * @param x X-axis coordinate.\r\n     * @param y Y-axis coordinate.\r\n     * @param z Z-axis coordinate.\r\n     * @zh 构造方法，初始化三维向量。\r\n     * @param x X轴坐标。\r\n     * @param y Y轴坐标。\r\n     * @param z Z轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether the three-dimensional vector is equal to another vector.\r\n     * @param value The vector to compare with.\r\n     * @returns Returns true if the vectors are equal, false otherwise.\r\n     * @zh 判断三维向量是否与另一个向量相等。\r\n     * @param value 对比值\r\n     * @returns 如果向量相等则返回 true，否则返回 false。\r\n     */\r\n    equal(value: Vector3) {\r\n        return Vector3.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the x, y, and z values of the vector.\r\n     * @param x The x value.\r\n     * @param y The y value.\r\n     * @param z The z value.\r\n     * @zh 设置向量的 x、y 和 z 值。\r\n     * @param x X值。\r\n     * @param y Y值。\r\n     * @param z Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number): Vector3 {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the x, y, and z values of the vector.\r\n     * @param x The x value.\r\n     * @param y The y value.\r\n     * @param z The z value.\r\n     * @zh 设置向量的 x、y 和 z 值。\r\n     * @param x X值。\r\n     * @param y Y值。\r\n     * @param z Z值。\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Copies values from an array.\r\n     * @param arr The source array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 从数组中拷贝值。\r\n     * @param arr 源数组。\r\n     * @param offset 数组偏移。默认值为 0。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n    }\r\n\r\n    /**\r\n     * @en Converts the vector to an array.\r\n     * @zh 将向量转换为数组。\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    /**\r\n     * @en Writes the vector values to an array.\r\n     * @param arr The target array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 将向量值写入数组。\r\n     * @param arr 目标数组。\r\n     * @param offset 数组偏移。默认值为 0。\r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the length of the vector.\r\n     * @zh 计算向量的长度。\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the vector.\r\n     * @zh 计算向量长度的平方。\r\n     */\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    /**\r\n     * @en Subtracts a vector from this vector.\r\n     * @param b The vector to subtract.\r\n     * @param out The output vector.\r\n     * @returns The resulting vector.\r\n     * @zh 向量相减\r\n     * @param b 被减向量。\r\n     * @param out 输出向量。\r\n     * @returns 相减后的结果向量。\r\n     */\r\n    vsub(b: Vector3, out: Vector3) {\r\n        out.x = this.x - b.x;\r\n        out.y = this.y - b.y;\r\n        out.z = this.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a vector to this vector.\r\n     * @param b The vector to add.\r\n     * @param out The output vector.\r\n     * @returns The resulting vector.\r\n     * @zh 向量相加。\r\n     * @param b 加向量。\r\n     * @param out 输出向量。\r\n     * @returns returns 相加后的结果向量。\r\n     */\r\n    vadd(b: Vector3, out: Vector3) {\r\n        out.x = this.x + b.x;\r\n        out.y = this.y + b.y;\r\n        out.z = this.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Scales this vector by a scalar value.\r\n     * @param s The scalar value.\r\n     * @param out The output vector.\r\n     * @returns The scaled vector.\r\n     * @zh 缩放向量。\r\n     * @param s 缩放值。\r\n     * @param out 输出向量。\r\n     * @returns 缩放后的向量。\r\n     */\r\n    scale(s: number, out: Vector3) {\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        out.z = this.z * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Normalizes this vector.\r\n     * @returns The normalized vector.\r\n     * @zh 归一化向量。\r\n     * @returns 归一化后的向量。\r\n     */\r\n    normalize() {\r\n        let x = this.x, y = this.y, z = this.z;\r\n        var len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of this vector with another vector.\r\n     * @param b The vector to dot product with.\r\n     * @returns The dot product.\r\n     * @zh 计算向量点乘。\r\n     * @param b 点乘向量。\r\n     * @returns 点乘结果。\r\n     */\r\n    dot(b: Vector3): number {\r\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the cross product of this vector with another vector.\r\n     * @param b The vector to cross product with.\r\n     * @param o The output vector.\r\n     * @returns The resulting cross product vector.\r\n     * @zh 计算向量叉乘。\r\n     * @param b 叉乘向量。\r\n     * @param o 输出向量。\r\n     * @returns 叉乘结果向量。\r\n     */\r\n    cross(b: Vector3, o: Vector3): Vector3 {\r\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * @en Clones this vector to another object.\r\n     * @param destObject The destination object to clone to.\r\n     * @zh 将当前向量克隆到目标对象。\r\n     * @param destObject 克隆的目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector3: Vector3 = (<Vector3>destObject);\r\n        destVector3.x = this.x;\r\n        destVector3.y = this.y;\r\n        destVector3.z = this.z;\r\n    }\r\n\r\n    /**\r\n     * @en Creates a clone of this vector.\r\n     * @returns A new Vector3 object with the same values as this vector.\r\n     * @zh 创建当前向量的克隆。\r\n     * @returns 返回一个新的 Vector3 对象，其值与当前向量相同。\r\n     */\r\n    clone(): any {\r\n        var destVector3: Vector3 = new Vector3();\r\n        this.cloneTo(destVector3);\r\n        return destVector3;\r\n    }\r\n\r\n    /**\r\n     * @en Sets this vector to its default value (0, 0, 0).\r\n     * @zh 将当前向量设置为默认值 (0, 0, 0)。\r\n     */\r\n    toDefault(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\n\r\n","import { BlendEquationSeparate } from \"../../../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../../../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\n\r\n/**\r\n * <code>RenderState</code> 类用于控制渲染状态。\r\n */\r\nexport class RenderState {\r\n\t/**剔除枚举_不剔除。*/\r\n\tstatic CULL_NONE: number = CullMode.Off;\r\n\t/**剔除枚举_剔除正面。*/\r\n\tstatic CULL_FRONT: number = CullMode.Front;\r\n\t/**剔除枚举_剔除背面。*/\r\n\tstatic CULL_BACK: number = CullMode.Back;\r\n\r\n\t/**混合枚举_禁用。*/\r\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\r\n\r\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\r\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\r\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\r\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\r\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\r\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\r\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\r\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\r\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\r\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\r\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\r\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\r\n\t/**混合参数枚举_混合设置颜色 */\r\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\r\n\t/**很合参数枚举_混合颜色取反 */\r\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\r\n\r\n\t/**混合方程枚举_加法,例：source + destination*/\r\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\r\n\t/**混合方程枚举_减法，例：source - destination*/\r\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\r\n\t/**混合方程枚举_反序减法，例：destination - source*/\r\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\r\n\t/**混合方程枚举_取最小 TODO */\r\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\r\n\t/**混合方程枚举_取最大 TODO*/\r\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\r\n\r\n\t/**深度测试函数枚举_关闭深度测试。*/\r\n\tstatic DEPTHTEST_OFF: number = CompareFunction.Off;/*WebGLContext.NEVER*/;//TODO:什么鬼\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\r\n\r\n\tstatic STENCILTEST_OFF: number = CompareFunction.Off;\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\t/**保持当前值*/\r\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\r\n\t/**将模板缓冲区值设置为0*/\r\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\r\n\t/**将模具缓冲区值设置为指定的参考值*/\r\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\r\n\t/**增加当前模具缓冲区值+1 */\r\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\r\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\r\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\r\n\t/**递减当前模板缓冲区的值*/\r\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\r\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\r\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\r\n\t/**按位反转当前的模板缓冲区的值*/\r\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\r\n\r\n\t/** @internal */\r\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\r\n\r\n\t/**渲染剔除状态。*/\r\n\tprivate _cull: number;\r\n\tpublic get cull(): number {\r\n\t\treturn this._cull;\r\n\t}\r\n\tpublic set cull(value: number) {\r\n\t\tthis._cull = value;\r\n\t}\r\n\t/**透明混合。*/\r\n\tprivate _blend: number;\r\n\tpublic get blend(): number {\r\n\t\treturn this._blend;\r\n\t}\r\n\tpublic set blend(value: number) {\r\n\t\tthis._blend = value;\r\n\t}\r\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tprivate _srcBlend: number;\r\n\tpublic get srcBlend(): number {\r\n\t\treturn this._srcBlend;\r\n\t}\r\n\tpublic set srcBlend(value: number) {\r\n\t\tthis._srcBlend = value;\r\n\t}\r\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tprivate _dstBlend: number;\r\n\tpublic get dstBlend(): number {\r\n\t\treturn this._dstBlend;\r\n\t}\r\n\tpublic set dstBlend(value: number) {\r\n\t\tthis._dstBlend = value;\r\n\t}\r\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tprivate _srcBlendRGB: number;\r\n\tpublic get srcBlendRGB(): number {\r\n\t\treturn this._srcBlendRGB;\r\n\t}\r\n\tpublic set srcBlendRGB(value: number) {\r\n\t\tthis._srcBlendRGB = value;\r\n\t}\r\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tprivate _dstBlendRGB: number;\r\n\tpublic get dstBlendRGB(): number {\r\n\t\treturn this._dstBlendRGB;\r\n\t}\r\n\tpublic set dstBlendRGB(value: number) {\r\n\t\tthis._dstBlendRGB = value;\r\n\t}\r\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tprivate _srcBlendAlpha: number;\r\n\tpublic get srcBlendAlpha(): number {\r\n\t\treturn this._srcBlendAlpha;\r\n\t}\r\n\tpublic set srcBlendAlpha(value: number) {\r\n\t\tthis._srcBlendAlpha = value;\r\n\t}\r\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tprivate _dstBlendAlpha: number;\r\n\tpublic get dstBlendAlpha(): number {\r\n\t\treturn this._dstBlendAlpha;\r\n\t}\r\n\tpublic set dstBlendAlpha(value: number) {\r\n\t\tthis._dstBlendAlpha = value;\r\n\t}\r\n\t/**混合方程。*/\r\n\tprivate _blendEquation: number;\r\n\tpublic get blendEquation(): number {\r\n\t\treturn this._blendEquation;\r\n\t}\r\n\tpublic set blendEquation(value: number) {\r\n\t\tthis._blendEquation = value;\r\n\t}\r\n\t/**RGB混合方程。*/\r\n\tprivate _blendEquationRGB: number;\r\n\tpublic get blendEquationRGB(): number {\r\n\t\treturn this._blendEquationRGB;\r\n\t}\r\n\tpublic set blendEquationRGB(value: number) {\r\n\t\tthis._blendEquationRGB = value;\r\n\t}\r\n\t/**Alpha混合方程。*/\r\n\tprivate _blendEquationAlpha: number;\r\n\tpublic get blendEquationAlpha(): number {\r\n\t\treturn this._blendEquationAlpha;\r\n\t}\r\n\tpublic set blendEquationAlpha(value: number) {\r\n\t\tthis._blendEquationAlpha = value;\r\n\t}\r\n\t/**深度测试函数。*/\r\n\tprivate _depthTest: number;\r\n\tpublic get depthTest(): number {\r\n\t\treturn this._depthTest;\r\n\t}\r\n\tpublic set depthTest(value: number) {\r\n\t\tthis._depthTest = value;\r\n\t}\r\n\t/**是否深度测试。*/\r\n\tprivate _depthWrite: boolean;\r\n\tpublic get depthWrite(): boolean {\r\n\t\treturn this._depthWrite;\r\n\t}\r\n\tpublic set depthWrite(value: boolean) {\r\n\t\tthis._depthWrite = value;\r\n\t}\r\n\t/**是否模板写入 */\r\n\tprivate _stencilWrite: boolean;\r\n\tpublic get stencilWrite(): boolean {\r\n\t\treturn this._stencilWrite;\r\n\t}\r\n\tpublic set stencilWrite(value: boolean) {\r\n\t\tthis._stencilWrite = value;\r\n\t}\r\n\t/**是否开启模板测试 */\r\n\tprivate _stencilTest: number;\r\n\tpublic get stencilTest(): number {\r\n\t\treturn this._stencilTest;\r\n\t}\r\n\tpublic set stencilTest(value: number) {\r\n\t\tthis._stencilTest = value;\r\n\t}\r\n\t/**模板值 一般会在0-255*/\r\n\tprivate _stencilRef: number;\r\n\tpublic get stencilRef(): number {\r\n\t\treturn this._stencilRef;\r\n\t}\r\n\tpublic set stencilRef(value: number) {\r\n\t\tthis._stencilRef = value;\r\n\t}\r\n\t/**模板设置值 */\r\n\tprivate _stencilOp: Vector3 = new Vector3();\r\n\tpublic get stencilOp(): Vector3 {\r\n\t\treturn this._stencilOp;\r\n\t}\r\n\tpublic set stencilOp(value: Vector3) {\r\n\t\tthis._stencilOp = value;\r\n\t}\r\n\r\n\tprotected createObj(){\r\n\t\t//native TODO 历史包袱\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>RenderState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.createObj();\r\n\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n\t\tthis.depthWrite = true;\r\n\t\tthis.stencilRef = 1;\r\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\r\n\t\tthis.stencilWrite = false;\r\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tsetNull() {\r\n\r\n\t\tthis.cull = null;\r\n\t\tthis.blend = null;\r\n\t\tthis.srcBlend = null;\r\n\t\tthis.dstBlend = null;\r\n\t\tthis.srcBlendRGB = null;\r\n\t\tthis.dstBlendRGB = null;\r\n\t\tthis.srcBlendAlpha = null;\r\n\t\tthis.dstBlendAlpha = null;\r\n\t\tthis.blendEquation = null;\r\n\t\tthis.blendEquationRGB = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.depthTest = null;\r\n\t\tthis.depthWrite = null;\r\n\t\tthis.stencilRef = null;\r\n\t\tthis.stencilTest = null;\r\n\t\tthis.stencilWrite = null;\r\n\t\tthis.stencilOp.set(null, null, null);\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆\r\n\t * @param dest \r\n\t */\r\n\tcloneTo(dest: RenderState) {\r\n\t\tdest.cull = this.cull;\r\n\t\tdest.blend = this.blend;\r\n\t\tdest.srcBlend = this.srcBlend;\r\n\t\tdest.dstBlend = this.dstBlend;\r\n\t\tdest.srcBlendRGB = this.srcBlendRGB;\r\n\t\tdest.dstBlendRGB = this.dstBlendRGB;\r\n\t\tdest.srcBlendAlpha = this.srcBlendAlpha;\r\n\t\tdest.dstBlendAlpha = this.dstBlendAlpha;\r\n\t\tdest.blendEquation = this.blendEquation;\r\n\t\tdest.blendEquationRGB = this.blendEquationRGB;\r\n\t\tdest.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tdest.depthTest = this.depthTest;\r\n\t\tdest.depthWrite = this.depthWrite;\r\n\t\tdest.stencilRef = this.stencilRef;\r\n\t\tdest.stencilTest = this.stencilTest;\r\n\t\tdest.stencilWrite = this.stencilWrite;\r\n\t\tthis.stencilOp.cloneTo(dest.stencilOp);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): RenderState {\r\n\t\tvar dest: RenderState = new RenderState();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { ShaderCompile } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class IncludeFile {\r\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\r\n        var out: any[] = [];\r\n        /*\r\n           var words:Array = str.split(_splitToWordExps);\r\n           trace(str);\r\n           trace(words);\r\n         */\r\n        var c: string;\r\n        var ofs: number = -1;\r\n        var word: string;\r\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2: number = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0) ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n\r\n\r\n    script: string;\r\n    codes: any = {};\r\n    funs: any = {};\r\n    curUseID: number = -1;\r\n    funnames: string = \"\";\r\n\r\n    constructor(txt: string) {\r\n        this.script = txt;\r\n        var begin: number = 0, ofs: number, end: number;\r\n        while (true) {\r\n            begin = txt.indexOf(\"#begin\", begin);\r\n            if (begin < 0) break;\r\n\r\n            end = begin + 5;\r\n            while (true) {\r\n                end = txt.indexOf(\"#end\", end);\r\n                if (end < 0) break;\r\n                if (txt.charAt(end + 4) === 'i')\r\n                    end += 5;\r\n                else break;\r\n            }\r\n\r\n            if (end < 0) {\r\n                throw \"add include err,no #end:\" + txt;\r\n            }\r\n\r\n            ofs = txt.indexOf('\\n', begin);\r\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\r\n            if (words[1] == 'code') {\r\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\r\n            } else if (words[1] == 'function')//#begin function void test()\r\n            {\r\n                ofs = txt.indexOf(\"function\", begin);\r\n                ofs += \"function\".length;\r\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\r\n                this.funnames += words[3] + \";\";\r\n            }\r\n\r\n            begin = end + 1;\r\n        }\r\n    }\r\n\r\n    getWith(name: string | null = null): string {\r\n        var r: string = name ? this.codes[name] : this.script;\r\n        if (!r) {\r\n            throw \"get with error:\" + name;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getFunsScript(funsdef: string): string {\r\n        var r: string = \"\";\r\n        for (var i in this.funs) {\r\n            if (funsdef.indexOf(i + \";\") >= 0) {\r\n                r += this.funs[i];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class ShaderNode {\r\n    private static __id: number = 1;\r\n    //是否删除无用代码\r\n    private static __noCompileEnable = true;\r\n\r\n    childs: any[] = [];\r\n    text: string = \"\";\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string = \"\";\r\n    z: number = 0;\r\n    src: string;\r\n\r\n    constructor(includefiles: any[]) {\r\n        this.includefiles = includefiles;\r\n    }\r\n\r\n    setParent(parent: ShaderNode): void {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n\r\n    setCondition(condition: string, type: number): void {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function (): boolean {\r\n                return (this as any)[condition];\r\n            }\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n\r\n    toscript(def: any, out: any[]): any[] {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n\r\n    private _toscript(def: any, out: any[], id: number): any[] {\r\n        if (this.childs.length < 1 && !this.text) return out;\r\n        var outIndex: number = out.length;\r\n        if (this.condition) {\r\n            var ifdef: boolean = !!this.condition.call(def);\r\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\r\n        }\r\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\r\n            o._toscript(def, out, id);\r\n        });\r\n\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode: string;\r\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\r\n                //如果已经加入了，就不要再加\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../../ILaya\";\r\nimport { RenderState } from \"../../RenderDriver/RenderModuleData/Design/RenderState\";\r\nimport { BlendEquationSeparate } from \"../../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IncludeFile } from \"./IncludeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport interface IShaderCompiledObj {\r\n    vsNode: ShaderNode;\r\n    psNode: ShaderNode;\r\n    includeNames: Set<string>;\r\n    defs: Set<string>;\r\n};\r\n\r\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\r\n\r\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\r\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n\r\nconst CullStateMap: Record<string, CullMode> = {\r\n    \"Back\": CullMode.Back,\r\n    \"Front\": CullMode.Front,\r\n    \"Off\": CullMode.Off\r\n}\r\nconst BlendStateMap: Record<string, BlendType> = {\r\n    \"Disable\": BlendType.BLEND_DISABLE,\r\n    \"All\": BlendType.BLEND_ENABLE_ALL,\r\n    \"Seperate\": BlendType.BLEND_ENABLE_SEPERATE\r\n}\r\nconst BlendFactorMap: Record<string, BlendFactor> = {\r\n    \"Zero\": BlendFactor.Zero,\r\n    \"One\": BlendFactor.One,\r\n    \"SourceColor\": BlendFactor.SourceColor,\r\n    \"OneMinusSourceColor\": BlendFactor.OneMinusSourceColor,\r\n    \"DestinationColor\": BlendFactor.DestinationColor,\r\n    \"OneMinusDestinationColor\": BlendFactor.OneMinusDestinationColor,\r\n    \"SourceAlpha\": BlendFactor.SourceAlpha,\r\n    \"OneMinusSourceAlpha\": BlendFactor.OneMinusSourceAlpha,\r\n    \"DestinationAlpha\": BlendFactor.DestinationAlpha,\r\n    \"OneMinusDestinationAlpha\": BlendFactor.OneMinusDestinationAlpha,\r\n    \"SourceAlphaSaturate\": BlendFactor.SourceAlphaSaturate,\r\n    \"BlendColor\": BlendFactor.BlendColor,\r\n    \"OneMinusBlendColor\": BlendFactor.OneMinusBlendColor,\r\n}\r\nconst BlendEquationMap: Record<string, BlendEquationSeparate> = {\r\n    \"Add\": BlendEquationSeparate.ADD,\r\n    \"Subtract\": BlendEquationSeparate.SUBTRACT,\r\n    \"Reverse_substract\": BlendEquationSeparate.REVERSE_SUBTRACT,\r\n    \"Min\": BlendEquationSeparate.MIN,\r\n    \"Max\": BlendEquationSeparate.MAX\r\n}\r\n\r\nconst CompareFunctionMap: Record<string, CompareFunction> = {\r\n    \"Never\": CompareFunction.Never,\r\n    \"Less\": CompareFunction.Less,\r\n    \"Equal\": CompareFunction.Equal,\r\n    \"LessEqual\": CompareFunction.LessEqual,\r\n    \"Greater\": CompareFunction.Greater,\r\n    \"NotEqual\": CompareFunction.NotEqual,\r\n    \"GreaterEqual\": CompareFunction.GreaterEqual,\r\n    \"Always\": CompareFunction.Always,\r\n    \"Off\": CompareFunction.Off,\r\n}\r\n\r\nconst StencilOperationMap: Record<string, StencilOperation> = {\r\n    \"Keep\": StencilOperation.Keep,\r\n    \"Zero\": StencilOperation.Zero,\r\n    \"Replace\": StencilOperation.Replace,\r\n    \"IncrementSaturate\": StencilOperation.IncrementSaturate,\r\n    \"DecrementSaturate\": StencilOperation.DecrementSaturate,\r\n    \"Invert\": StencilOperation.Invert,\r\n    \"IncrementWrap\": StencilOperation.IncrementWrap,\r\n    \"DecrementWrap\": StencilOperation.DecrementWrap,\r\n}\r\n\r\n/**\r\n * @private\r\n * <code>ShaderCompile</code> 类用于实现Shader编译。\r\n */\r\nexport class ShaderCompile {\r\n    static IFDEF_NO: number = 0;\r\n    static IFDEF_YES: number = 1;\r\n    static IFDEF_ELSE: number = 2;\r\n    static IFDEF_PARENT: number = 3;\r\n\r\n    static includes: Record<string, IncludeFile> = {};\r\n\r\n    static loadIncludeFileSync: (fileName: string) => void;\r\n\r\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\r\n        if (!txt || txt.length === 0) {\r\n            console.error(\"shader include file err:\" + fileName);\r\n            return null;\r\n        }\r\n\r\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\r\n            console.warn(\"shader include file already exists:\" + fileName);\r\n            return ShaderCompile.includes[fileName];\r\n        }\r\n\r\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        let file = new IncludeFile(txt);\r\n        ShaderCompile.includes[fileName] = file;\r\n        return file;\r\n    }\r\n\r\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        for (let inc of includes) {\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else\r\n                console.warn(`ShaderCompile missing file ${inc.name}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        return this._loadIncludesDeep(result, includes, 0);\r\n    }\r\n\r\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\r\n        let toLoad: Array<IncludeItem>;\r\n        let includesCnt = includes.length;\r\n        for (let i = index; i < includesCnt; i++) {\r\n            let inc = includes[i];\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else {\r\n                if (!toLoad) toLoad = [];\r\n                toLoad.push(inc);\r\n            }\r\n        }\r\n\r\n        if (!toLoad)\r\n            return Promise.resolve(result);\r\n\r\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\r\n            let cnt = toLoad.length;\r\n            for (let i = 0; i < cnt; i++) {\r\n                let inc = toLoad[i];\r\n                let file = files[i];\r\n                if (!file) {\r\n                    let childs = inc.node.parent.childs;\r\n                    childs.splice(childs.indexOf(inc.node), 1);\r\n                }\r\n                else {\r\n                    result.includeNames.add(inc.name);\r\n\r\n                    let text = file.getWith(inc.codeName);\r\n                    if (inc.node.condition)\r\n                        inc.node.text = text;\r\n                    else {\r\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\r\n                        inc.node.text = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (includes.length > includesCnt)\r\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\r\n            else\r\n                return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\r\n        let node: ShaderNode, preNode: ShaderNode;\r\n        let text: string, name: string, fname: string;\r\n        let ofs: number, words: any[];\r\n        let i: number, n: number, j: number;\r\n        let lines = script.split(\"\\n\");\r\n\r\n        for (i = 0; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1) continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0) continue;\r\n            if (ofs >= 0) text = text.substr(0, ofs);\r\n\r\n            if ((ofs = text.indexOf(\"#\")) < 0) {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                let includefiles = parent.includefiles;\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n\r\n                node = new ShaderNode(includefiles);\r\n                node.text = text;\r\n                node.noCompile = true;\r\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\r\n                node.setParent(parent);\r\n                continue;\r\n            }\r\n\r\n            node = new ShaderNode(parent.includefiles);\r\n            node.text = text;\r\n            node.noCompile = true;\r\n\r\n            name = \"#\";\r\n            for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                let c: string = text.charAt(j);\r\n                if (c === ' ' || c === '\\t' || c === '?') break;\r\n                name += c;\r\n            }\r\n            node.name = name;\r\n            switch (name) {\r\n                case \"#ifdef\":\r\n                case \"#ifndef\":\r\n                    node.src = text;\r\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                    if (!node.noCompile) {\r\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                        node.text = node.text;\r\n                    } else {\r\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#if\":\r\n                case \"#elif\":\r\n                    node.src = text;\r\n                    node.noCompile = true;\r\n                    if (name == \"#elif\") {\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        //匹配\"#ifdef\"\r\n                        preNode.text = preNode.src;\r\n                        preNode.noCompile = true;\r\n                        preNode.condition = null;\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && text != \"defined\" && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#else\":\r\n                    node.src = text;\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.condition = preNode.condition;\r\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                    }\r\n                    //递归节点树\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n                    break;\r\n\r\n                case \"#endif\":\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.text = node.text;\r\n                    }\r\n                    node.setParent(parent);\r\n                    break;\r\n\r\n                case \"#include\"://这里有问题,主要是空格\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    let includeName: string = words[1];\r\n                    let includeFile: IncludeFile;\r\n                    if (includeName.startsWith(\".\"))\r\n                        includeName = URL.join(basePath, includeName);\r\n                    else if (includeName.startsWith(\"/\"))\r\n                        includeName = URL.formatURL(includeName.substring(1));\r\n                    else {\r\n                        //check if builtin\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                        if (!includeFile)\r\n                            includeName = \"internal/\" + includeName;\r\n                    }\r\n                    includeFile = ShaderCompile.includes[includeName];\r\n\r\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\r\n                        ShaderCompile.loadIncludeFileSync(includeName);\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                    }\r\n\r\n                    let codeName = words[2] == 'with' ? words[3] : null;\r\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\r\n                    node.setParent(parent);\r\n\r\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                        if (includeFile) {\r\n                            text = includeFile.getWith(codeName);\r\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\r\n                        }\r\n                        node.text = \"\";\r\n                    }\r\n                    else {\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n\r\n                        if (includeFile)\r\n                            node.text = includeFile.getWith(codeName);\r\n                    }\r\n                    break;\r\n\r\n                case \"#import\":\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    fname = words[1];\r\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                    break;\r\n\r\n                default:\r\n                    node.setParent(parent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRenderState(obj: Record<string, string | boolean | number | string[]>, renderState: RenderState) {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n\r\n        renderState.cull = CullStateMap[<string>obj.cull];\r\n        renderState.blend = BlendStateMap[<string>obj.blend];\r\n        renderState.srcBlend = BlendFactorMap[<string>obj.srcBlend];\r\n        renderState.dstBlend = BlendFactorMap[<string>obj.dstBlend];\r\n        renderState.srcBlendRGB = BlendFactorMap[<string>obj.srcBlendRGB];\r\n        renderState.dstBlendRGB = BlendFactorMap[<string>obj.dstBlendRGB];\r\n        renderState.srcBlendAlpha = BlendFactorMap[<string>obj.srcBlendAlpha];\r\n        renderState.dstBlendAlpha = BlendFactorMap[<string>obj.dstBlendAlpha];\r\n        renderState.blendEquation = BlendEquationMap[<string>obj.blendEquation];\r\n        renderState.blendEquationRGB = BlendEquationMap[<string>obj.blendEquationRGB];\r\n        renderState.blendEquationAlpha = BlendEquationMap[<string>obj.blendEquationAlpha];\r\n        renderState.depthTest = CompareFunctionMap[<string>obj.depthTest];\r\n        renderState.depthWrite = <boolean>obj.depthWrite;\r\n        renderState.stencilRef = <number>obj.stencilRef;\r\n        renderState.stencilTest = CompareFunctionMap[<string>obj.stencilTest];\r\n        renderState.stencilWrite = <boolean>obj.stencilWrite;\r\n        let stencilOp = <string[]>obj.stencilOp;\r\n        let stencilFail = stencilOp ? stencilOp[0] : null;\r\n        let stencilZFail = stencilOp ? stencilOp[1] : null;\r\n        let stencilZPass = stencilOp ? stencilOp[2] : null;\r\n        renderState.stencilOp.x = StencilOperationMap[stencilFail];\r\n        renderState.stencilOp.y = StencilOperationMap[stencilZFail];\r\n        renderState.stencilOp.z = StencilOperationMap[stencilZPass];\r\n\r\n        return;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\nconst _tempV30 = new Vector3();\r\nconst _tempV31 = new Vector3();\r\nconst _tempV32 = new Vector3();\r\n\r\n/**\r\n * @en The Matrix3x3 class is used to create a 3x3 matrix.\r\n * @zh Matrix3x3 类用于创建 3x3 矩阵。\r\n */\r\nexport class Matrix3x3 implements IClone {\r\n    /**\r\n     * @en Default value\r\n     * @zh 默认值\r\n     */\r\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\r\n    /**\r\n     * @en Temporary variable\r\n     * @zh 临时变量\r\n     */\r\n    static Temp: Matrix3x3 = new Matrix3x3();\r\n    /**\r\n     * @en Create a rotation matrix from a quaternion.\r\n     * @param rotation The rotation quaternion.\r\n     * @param out The output rotation matrix.\r\n     * @zh 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 输出的旋转矩阵。\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\r\n        var rotX: number = rotation.x;\r\n        var rotY: number = rotation.y;\r\n        var rotZ: number = rotation.z;\r\n        var rotW: number = rotation.w;\r\n\r\n        var xx: number = rotX * rotX;\r\n        var yy: number = rotY * rotY;\r\n        var zz: number = rotZ * rotZ;\r\n        var xy: number = rotX * rotY;\r\n        var zw: number = rotZ * rotW;\r\n        var zx: number = rotZ * rotX;\r\n        var yw: number = rotY * rotW;\r\n        var yz: number = rotY * rotZ;\r\n        var xw: number = rotX * rotW;\r\n\r\n        var resultE: Float32Array = out.elements;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[3] = 2.0 * (xy - zw);\r\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[5] = 2.0 * (yz + xw);\r\n        resultE[6] = 2.0 * (zx + yw);\r\n        resultE[7] = 2.0 * (yz - xw);\r\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * @en Generate a 3x3 matrix based on the specified translation.\r\n     * @param trans The translation vector.\r\n     * @param out The output matrix.\r\n     * @zh 根据指定平移生成 3x3 矩阵。\r\n     * @param trans 平移向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = trans.x;\r\n        e[7] = trans.y;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Generate a 3x3 matrix based on the specified rotation.\r\n     * @param rad The rotation value.\r\n     * @param out The output matrix.\r\n     * @zh 根据指定旋转生成 3x3 矩阵。\r\n     * @param rad 旋转值。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createFromRotation(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        e[0] = c;\r\n        e[1] = s;\r\n        e[2] = 0;\r\n\r\n        e[3] = -s;\r\n        e[4] = c;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Generate a 3x3 matrix based on the specified scaling.\r\n     * @param scale The scaling vector.\r\n     * @param out The output matrix.\r\n     * @zh 根据指定缩放生成 3x3 矩阵。\r\n     * @param scale 缩放向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        e[0] = scale.x;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n\r\n        e[3] = 0;\r\n        e[4] = scale.y;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = scale.z;\r\n    }\r\n\r\n    /**\r\n     * @en Convert a 4x4 matrix to a 3x3 matrix (upper-left principle, ignoring the fourth row and column).\r\n     * @param sou The source 4x4 matrix.\r\n     * @param out The output 3x3 matrix.\r\n     * @zh 从 4x4 矩阵转换为一个 3x3 的矩阵（原则为 upper-left，忽略第四行四列）。\r\n     * @param sou 4x4 源矩阵。\r\n     * @param out 3x3 输出矩阵。\r\n     */\r\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\r\n        var souE: Float32Array = sou.elements;\r\n        var outE: Float32Array = out.elements;\r\n        outE[0] = souE[0];\r\n        outE[1] = souE[1];\r\n        outE[2] = souE[2];\r\n        outE[3] = souE[4];\r\n        outE[4] = souE[5];\r\n        outE[5] = souE[6];\r\n        outE[6] = souE[8];\r\n        outE[7] = souE[9];\r\n        outE[8] = souE[10];\r\n    }\r\n\r\n    /**\r\n     * @en Multiply two 3x3 matrices.\r\n     * @param left The left matrix.\r\n     * @param right The right matrix.\r\n     * @param out The output matrix.\r\n     * @zh 两个 3x3 矩阵的相乘。\r\n     * @param left 左矩阵。\r\n     * @param right 右矩阵。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\r\n        var l: Float32Array = left.elements;\r\n        var r: Float32Array = right.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\r\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\r\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\r\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\r\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\r\n\r\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\r\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\r\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\r\n\r\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\r\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\r\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\r\n\r\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\r\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\r\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\r\n    }\r\n\r\n    /**\r\n     * @en Matrix element array\r\n     * @zh 矩阵元素数组\r\n     */\r\n    elements: Float32Array;\r\n\r\n    constructor(createElement: boolean = true) {\r\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix by array.\r\n     * @param destObject The target array to clone to.\r\n     * @zh 通过数组克隆矩阵。\r\n     * @param destObject 克隆目标数组。\r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the determinant of the 3x3 matrix.\r\n     * @returns The determinant of the matrix.\r\n     * @zh 计算 3x3 矩阵的行列式。\r\n     * @returns 返回矩阵的行列式。\r\n     */\r\n    determinant(): number {\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * @en Transform the 3x3 matrix by a two-dimensional vector.\r\n     * @param trans The translation vector.\r\n     * @param out The output matrix.\r\n     * @zh 通过一个二维向量转换 3x3 矩阵。\r\n     * @param trans 转换向量。\r\n     * @paramh out 输出矩阵。\r\n     */\r\n    translate(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n        var x: number = trans.x, y: number = trans.y;\r\n\r\n        e[0] = a00;\r\n        e[1] = a01;\r\n        e[2] = a02;\r\n\r\n        e[3] = a10;\r\n        e[4] = a11;\r\n        e[5] = a12;\r\n\r\n        e[6] = x * a00 + y * a10 + a20;\r\n        e[7] = x * a01 + y * a11 + a21;\r\n        e[8] = x * a02 + y * a12 + a22;\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the 3x3 matrix by a specified angle.\r\n     * @param rad The rotation angle in radians.\r\n     * @param out The output matrix.\r\n     * @zh 根据指定角度旋转 3x3 矩阵。\r\n     * @param rad 旋转角度（弧度）。\r\n     * @param out 输出矩阵。\r\n     */\r\n    rotate(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        var s: number = Math.sin(rad);\r\n        var c: number = Math.cos(rad);\r\n\r\n        e[0] = c * a00 + s * a10;\r\n        e[1] = c * a01 + s * a11;\r\n        e[2] = c * a02 + s * a12;\r\n\r\n        e[3] = c * a10 - s * a00;\r\n        e[4] = c * a11 - s * a01;\r\n        e[5] = c * a12 - s * a02;\r\n\r\n        e[6] = a20;\r\n        e[7] = a21;\r\n        e[8] = a22;\r\n    }\r\n\r\n    /**\r\n     * @en Scale the 3x3 matrix by a specified value.\r\n     * @param scale The scaling vector.\r\n     * @param out The output matrix.\r\n     * @zh 根据指定缩放值缩放 3x3 矩阵。\r\n     * @param scale 缩放向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    scale(scale: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var x: number = scale.x, y: number = scale.y;\r\n\r\n        e[0] = x * f[0];\r\n        e[1] = x * f[1];\r\n        e[2] = x * f[2];\r\n\r\n        e[3] = y * f[3];\r\n        e[4] = y * f[4];\r\n        e[5] = y * f[5];\r\n\r\n        e[6] = f[6];\r\n        e[7] = f[7];\r\n        e[8] = f[8];\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the inverse of the 3x3 matrix.\r\n     * @param out The output inverse matrix.\r\n     * @zh 计算 3x3 矩阵的逆矩阵。\r\n     * @param out 输出的逆矩阵。\r\n     */\r\n    invert(out: Matrix3x3): void {\r\n        var e = out.elements;\r\n        var f = this.elements;\r\n\r\n        var a00 = f[0], a01 = f[1], a02 = f[2];\r\n        var a10 = f[3], a11 = f[4], a12 = f[5];\r\n        var a20 = f[6], a21 = f[7], a22 = f[8];\r\n\r\n        var b01: number = a22 * a11 - a12 * a21;\r\n        var b11: number = -a22 * a10 + a12 * a20;\r\n        var b21: number = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        e[0] = b01 * det;\r\n        e[1] = (-a22 * a01 + a02 * a21) * det;\r\n        e[2] = (a12 * a01 - a02 * a11) * det;\r\n        e[3] = b11 * det;\r\n        e[4] = (a22 * a00 - a02 * a20) * det;\r\n        e[5] = (-a12 * a00 + a02 * a10) * det;\r\n        e[6] = b21 * det;\r\n        e[7] = (-a21 * a00 + a01 * a20) * det;\r\n        e[8] = (a11 * a00 - a01 * a10) * det;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the transpose of the 3x3 matrix.\r\n     * @param out The output matrix.\r\n     * @zh 计算 3x3 矩阵的转置矩阵。\r\n     * @param  out 输出矩阵。\r\n     */\r\n    transpose(out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        if (out === this) {\r\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = a01;\r\n            e[5] = f[7];\r\n            e[6] = a02;\r\n            e[7] = a12;\r\n        } else {\r\n            e[0] = f[0];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = f[1];\r\n            e[4] = f[4];\r\n            e[5] = f[7];\r\n            e[6] = f[2];\r\n            e[7] = f[5];\r\n            e[8] = f[8];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set the existing matrix to an identity matrix.\r\n     * @zh 设置已有的矩阵为单位矩阵。\r\n     */\r\n    identity(): void {\r\n        this.elements.set(_DEFAULTELEMENTS);\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;*/\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix.\r\n     * @param destObject The clone target.\r\n     * @zh 克隆矩阵。\r\n     * @param destObject 克隆目标。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        d.set(s);\r\n        /*\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix.\r\n     * @returns A clone of the matrix.\r\n     * @zh 克隆矩阵。\r\n     * @returns 矩阵的克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix3x3 = new Matrix3x3(false);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the 3x3 view matrix.\r\n     * @param eye The position of the observer.\r\n     * @param target The position of the target.\r\n     * @param up The up vector.\r\n     * @param out The output 3x3 matrix.\r\n     * @zh 计算观察3x3矩阵。\r\n     * @param eye 观察者位置。\r\n     * @param target 目标位置。\r\n     * @param up 上向量。\r\n     * @param out 输出3x3矩阵。\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\r\n        Vector3.normalize(_tempV30, _tempV30);\r\n\r\n        Vector3.cross(up, _tempV30, _tempV31);\r\n        Vector3.normalize(_tempV31, _tempV31);\r\n\r\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\r\n\r\n        var v0: Vector3 = _tempV30;\r\n        var v1: Vector3 = _tempV31;\r\n        var v2: Vector3 = _tempV32;\r\n\r\n        var me: Float32Array = out.elements;\r\n        me[0] = v1.x;\r\n        me[3] = v1.y;\r\n        me[6] = v1.z;\r\n\r\n        me[1] = v2.x;\r\n        me[4] = v2.y;\r\n        me[7] = v2.z;\r\n\r\n        me[2] = v0.x;\r\n        me[5] = v0.y;\r\n        me[8] = v0.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the 3x3 view matrix with forward direction looking at target. Forward is defined as the z-axis here.\r\n     * @param eye The starting point.\r\n     * @param target The target point.\r\n     * @param up The up vector.\r\n     * @param out The output matrix.\r\n     * @zh 计算前向看向目标的3x3观察矩阵。这里规定前向为z轴。\r\n     * @param eye 起始点。\r\n     * @param target 目标点。\r\n     * @param up 向上轴。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        var vx = _tempV31;\r\n        var vy = _tempV32;\r\n        var vz = _tempV30;\r\n\r\n        target.vsub(eye, vz).normalize();\r\n        up.cross(vz, vx).normalize();\r\n        vz.cross(vx, vy);\r\n\r\n        var m = out.elements;\r\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\r\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\r\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Matrix3x3 } from \"./Matrix3x3\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**@internal */\r\nconst TEMPVector30 = new Vector3();\r\n/**@internal */\r\nconst TEMPVector31 = new Vector3();\r\n/**@internal */\r\nconst TEMPVector32 = new Vector3();\r\n/**@internal */\r\nconst TEMPVector33 = new Vector3();\r\n/**@internal */\r\nconst _tempMatrix3x3 = new Matrix3x3();\r\n\r\n/**\r\n * @en The `Quaternion` class is used to create quaternions.\r\n * @zh `Quaternion` 类用于创建四元数。\r\n */\r\nexport class Quaternion implements IClone {\r\n\r\n    /**@internal */\r\n    static TEMP = new Quaternion();\r\n\r\n    /**\r\n     * @en Default quaternion, read-only.\r\n     * @zh 默认四元数，只读。\r\n     */\r\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\r\n    /**\r\n     * @en Invalid quaternion, read-only.\r\n     * @zh 无效四元数，只读。\r\n     */\r\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\r\n\r\n    /**\r\n     * @en Generate a quaternion from Euler angles (order is Yaw, Pitch, Roll)\r\n     * @param yaw The yaw value\r\n     * @param pitch The pitch value\r\n     * @param roll The roll value\r\n     * @param out The output quaternion\r\n     * @zh 从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\r\n     * @param yaw yaw值\r\n     * @param pitch pitch值\r\n     * @param roll roll值\r\n     * @param out 输出四元数\r\n     */\r\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\r\n        var halfRoll: number = roll * 0.5;\r\n        var halfPitch: number = pitch * 0.5;\r\n        var halfYaw: number = yaw * 0.5;\r\n\r\n        var sinRoll: number = Math.sin(halfRoll);\r\n        var cosRoll: number = Math.cos(halfRoll);\r\n        var sinPitch: number = Math.sin(halfPitch);\r\n        var cosPitch: number = Math.cos(halfPitch);\r\n        var sinYaw: number = Math.sin(halfYaw);\r\n        var cosYaw: number = Math.cos(halfYaw);\r\n\r\n\r\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    }\r\n\r\n    /**\r\n     * @en Multiply two quaternions\r\n     * @param left The left quaternion\r\n     * @param right The right quaternion\r\n     * @param out The output quaternion\r\n     * @zh 计算两个四元数相乘\r\n     * @param left left四元数\r\n     * @param right right四元数\r\n     * @param out 输出四元数\r\n     */\r\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        var lx: number = left.x;\r\n        var ly: number = left.y;\r\n        var lz: number = left.z;\r\n        var lw: number = left.w;\r\n        var rx: number = right.x;\r\n        var ry: number = right.y;\r\n        var rz: number = right.z;\r\n        var rw: number = right.w;\r\n        var a: number = (ly * rz - lz * ry);\r\n        var b: number = (lz * rx - lx * rz);\r\n        var c: number = (lx * ry - ly * rx);\r\n        var d: number = (lx * rx + ly * ry + lz * rz);\r\n        out.x = (lx * rw + rx * lw) + a;\r\n        out.y = (ly * rw + ry * lw) + b;\r\n        out.z = (lz * rw + rz * lw) + c;\r\n        out.w = lw * rw - d;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a quaternion that rotates around an arbitrary axis.\r\n     * @param axis The rotation axis\r\n     * @param rad The rotation angle in radians\r\n     * @param out The output quaternion after rotation\r\n     * @zh 计算绕任意轴旋转的四元数。\r\n     * @param axis 旋转轴\r\n     * @param rad 旋转角度（以弧度为单位）\r\n     * @param out 旋转后的输出四元数\r\n     */\r\n    static rotationAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        const normalAxis = Vector3._tempVector3\r\n        Vector3.normalize(axis, normalAxis);\r\n        rad *= 0.5;\r\n        const s = Math.sin(rad);\r\n        out.x = normalAxis.x * s;\r\n        out.y = normalAxis.y * s;\r\n        out.z = normalAxis.z * s;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n    private static arcTanAngle(x: number, y: number): number {\r\n        if (x == 0) {\r\n            if (y == 1)\r\n                return Math.PI / 2;\r\n            return -Math.PI / 2;\r\n        }\r\n        if (x > 0)\r\n            return Math.atan(y / x);\r\n        if (x < 0) {\r\n            if (y > 0)\r\n                return Math.atan(y / x) + Math.PI;\r\n            return Math.atan(y / x) - Math.PI;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\r\n        Vector3.subtract(location, from, TEMPVector30);\r\n        Vector3.normalize(TEMPVector30, TEMPVector30);\r\n\r\n        angle.x = Math.asin(TEMPVector30.y);\r\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a quaternion from the specified axis and angle.\r\n     * @param axis The axis vector.\r\n     * @param rad The angle in radians.\r\n     * @param out The output quaternion.\r\n     * @zh 从指定的轴和角度计算四元数。\r\n     * @param axis 轴向量。\r\n     * @param rad 角度（以弧度为单位）。\r\n     * @param out 输出的四元数。\r\n     */\r\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        rad = rad * 0.5;\r\n        var s: number = Math.sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a quaternion from a rotation matrix.\r\n     * @param mat The rotation matrix.\r\n     * @param out The output quaternion.\r\n     * @zh 从旋转矩阵计算四元数。\r\n     * @param mat 旋转矩阵。\r\n     * @param out 输出的四元数。\r\n     */\r\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\r\n        var me: Float32Array = mat.elements;\r\n\r\n        var sqrt: number;\r\n        var half: number;\r\n        var scale: number = me[0] + me[5] + me[10];\r\n\r\n        if (scale > 0.0) {\r\n            sqrt = Math.sqrt(scale + 1.0);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (me[6] - me[9]) * sqrt;\r\n            out.y = (me[8] - me[2]) * sqrt;\r\n            out.z = (me[1] - me[4]) * sqrt;\r\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\r\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (me[1] + me[4]) * half;\r\n            out.z = (me[2] + me[8]) * half;\r\n            out.w = (me[6] - me[9]) * half;\r\n        } else if (me[5] > me[10]) {\r\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[4] + me[1]) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (me[9] + me[6]) * half;\r\n            out.w = (me[8] - me[2]) * half;\r\n        } else {\r\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[8] + me[2]) * half;\r\n            out.y = (me[9] + me[6]) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (me[1] - me[4]) * half;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Spherical linear interpolation between two quaternions.\r\n     * @param left The left quaternion.\r\n     * @param right The right quaternion.\r\n     * @param t The interpolation factor, ranging from 0 to 1.\r\n     * @param out The output quaternion.\r\n     * @returns The output quaternion.\r\n     * @zh 两个四元数之间的球面线性插值。\r\n     * @param left 左侧四元数。\r\n     * @param right 右侧四元数。\r\n     * @param t 插值因子，范围从0到1。\r\n     * @param out 输出的四元数。\r\n     * @returns 输出的四元数。\r\n     */\r\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\r\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out.x = scale0 * ax + scale1 * bx;\r\n        out.y = scale0 * ay + scale1 * by;\r\n        out.z = scale0 * az + scale1 * bz;\r\n        out.w = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the linear interpolation between two quaternions.\r\n     * @param left The left quaternion.\r\n     * @param right The right quaternion.\r\n     * @param amount The interpolation factor, ranging from 0 to 1.\r\n     * @param out The output quaternion.\r\n     * @zh 计算两个四元数的线性插值。\r\n     * @param left 左侧四元数。\r\n     * @param right 右侧四元数。\r\n     * @param amount 插值因子，范围从0到1。\r\n     * @param out 输出的四元数。\r\n     */\r\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\r\n        var inverse: number = 1.0 - amount;\r\n        if (Quaternion.dot(left, right) >= 0) {\r\n            out.x = (inverse * left.x) + (amount * right.x);\r\n            out.y = (inverse * left.y) + (amount * right.y);\r\n            out.z = (inverse * left.z) + (amount * right.z);\r\n            out.w = (inverse * left.w) + (amount * right.w);\r\n        } else {\r\n            out.x = (inverse * left.x) - (amount * right.x);\r\n            out.y = (inverse * left.y) - (amount * right.y);\r\n            out.z = (inverse * left.z) - (amount * right.z);\r\n            out.w = (inverse * left.w) - (amount * right.w);\r\n        }\r\n        out.normalize(out);\r\n    }\r\n    /**\r\n     * @en Calculate the sum of two quaternions.\r\n     * @param left The left quaternion.\r\n     * @param right The right quaternion.\r\n     * @param out The output quaternion.\r\n     * @zh 计算两个四元数的和。\r\n     * @param left 左侧四元数。\r\n     * @param right 右侧四元数。\r\n     * @param out 输出的四元数。\r\n     */\r\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        out.x = left.x + right.x;\r\n        out.y = left.y + right.y;\r\n        out.z = left.z + right.z;\r\n        out.w = left.w + right.w;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the dot product of two quaternions.\r\n     * @param left The left quaternion.\r\n     * @param right The right quaternion.\r\n     * @returns The dot product.\r\n     * @zh 计算两个四元数的点积。\r\n     * @param left 左侧四元数。\r\n     * @param right 右侧四元数。\r\n     * @returns 点积结果。\r\n     */\r\n    static dot(left: Quaternion, right: Quaternion): number {\r\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n    }\r\n\r\n    /**\r\n     * @en X-axis coordinate.\r\n     * @zh X轴坐标。\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * @en Y-axis coordinate.\r\n     * @zh Y轴坐标。\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en Z-axis coordinate.\r\n     * @zh Z轴坐标。\r\n     */\r\n    z: number;\r\n\r\n    /**\r\n     * @en W-axis coordinate.\r\n     * @zh W轴坐标。\r\n     */\r\n    w: number;\r\n\r\n    /**\r\n     * @en Constructor method, initializes the default value.\r\n     * @param x The x value of the quaternion. Default is 0.\r\n     * @param y The y value of the quaternion. Default is 0.\r\n     * @param z The z value of the quaternion. Default is 0.\r\n     * @param w The w value of the quaternion. Default is 1.\r\n     * @zh 构造方法,初始化为默认值。\r\n     * @param x 四元数的x值。默认为0。\r\n     * @param y 四元数的y值。默认为0。\r\n     * @param z 四元数的z值。默认为0。\r\n     * @param w 四元数的w值。默认为1。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * @en Set the values of the quaternion.\r\n     * @param x The X value.\r\n     * @param y The Y value.\r\n     * @param z The Z value.\r\n     * @param w The W value.\r\n     * @zh 设置四元数的值。\r\n     * @param x X值。\r\n     * @param y Y值。\r\n     * @param z Z值。\r\n     * @param w W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n\r\n    /**\r\n     * @en Set the values of the quaternion and return itself.\r\n     * @param x The X value.\r\n     * @param y The Y value.\r\n     * @param z The Z value.\r\n     * @param w The W value.\r\n     * @returns The quaternion itself.\r\n     * @zh 设置四元数的值并返回自身。\r\n     * @param x X值。\r\n     * @param y Y值。\r\n     * @param z Z值。\r\n     * @param w W值。\r\n     * @returns 四元数自身。\r\n     */\r\n    set(x: number, y: number, z: number, w: number) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Scale the quaternion by a scalar value.\r\n     * @param scaling The scalar value to scale by.\r\n     * @param out The output quaternion.\r\n     * @zh 根据缩放值缩放四元数。\r\n     * @param scaling 缩放值。\r\n     * @param out 输出的四元数。\r\n     */\r\n    scaling(scaling: number, out: Quaternion): void {\r\n        out.x = this.x * scaling;\r\n        out.y = this.y * scaling;\r\n        out.z = this.z * scaling;\r\n        out.w = this.w * scaling;\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the quaternion.\r\n     * @param out The output normalized quaternion.\r\n     * @zh 归一化四元数。\r\n     * @param out 输出的归一化四元数。\r\n     */\r\n    normalize(out: Quaternion): void {\r\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = this.x * len;\r\n            out.y = this.y * len;\r\n            out.z = this.z * len;\r\n            out.w = this.w * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the length of the quaternion.\r\n     * @returns The length of the quaternion.\r\n     * @zh 计算四元数的长度。\r\n     * @returns 四元数的长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the quaternion around the X axis.\r\n     * @param rad The angle of rotation.\r\n     * @param out The output rotated quaternion.\r\n     * @zh 根据绕X轴的角度旋转四元数。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出的旋转后的四元数。\r\n     */\r\n    rotateX(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.w * bx;\r\n        out.y = this.y * bw + this.z * bx;\r\n        out.z = this.z * bw - this.y * bx;\r\n        out.w = this.w * bw - this.x * bx;\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the quaternion around the Y axis by a specified angle.\r\n     * @param rad The angle of rotation.\r\n     * @param out The output rotated quaternion.\r\n     * @zh 根据绕Y轴的指定角度旋转四元数。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出的旋转后的四元数。\r\n     */\r\n    rotateY(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw - this.z * by;\r\n        out.y = this.y * bw + this.w * by;\r\n        out.z = this.z * bw + this.x * by;\r\n        out.w = this.w * bw - this.y * by;\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the quaternion around the Z axis by a specified angle.\r\n     * @param rad The angle of rotation.\r\n     * @param out The output rotated quaternion.\r\n     * @zh 根据绕Z轴的指定角度旋转四元数。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出的旋转后的四元数。\r\n     */\r\n    rotateZ(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.y * bz;\r\n        out.y = this.y * bw - this.x * bz;\r\n        out.z = this.z * bw + this.w * bz;\r\n        out.w = this.w * bw - this.z * bz;\r\n    }\r\n\r\n    /**\r\n     * @en Decompose the quaternion into Euler angles (in the order of Yaw, Pitch, Roll).\r\n     * Note: This method may produce sudden flips when rotating around the X axis beyond ±90 degrees.\r\n     * @param out The output Vector3 to store the Euler angles.\r\n     * @zh 将四元数分解为欧拉角（按Yaw、Pitch、Roll的顺序）。\r\n     * 注意：当绕X轴旋转超过±90度时，此方法可能会产生突然的翻转。\r\n     * @param out 用于存储欧拉角的输出Vector3。\r\n     */\r\n    getYawPitchRoll(out: Vector3): void {\r\n\r\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\r\n\r\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\r\n        var upe: Vector3 = TEMPVector32;\r\n\r\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\r\n        var angle: Vector3 = TEMPVector33;\r\n\r\n        if (angle.x == Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\r\n            angle.z = 0;\r\n        } else if (angle.x == -Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\r\n            angle.z = 0;\r\n        } else {\r\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\r\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\r\n\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\r\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\r\n        }\r\n\r\n        // Special cases.\r\n        if (angle.y <= -Math.PI)\r\n            angle.y = Math.PI;\r\n        if (angle.z <= -Math.PI)\r\n            angle.z = Math.PI;\r\n\r\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\r\n            angle.y = 0;\r\n            angle.z = 0;\r\n            angle.x = Math.PI - angle.x;\r\n        }\r\n\r\n        var oe: Vector3 = out;\r\n        oe.x = angle.y;\r\n        oe.y = angle.x;\r\n        oe.z = angle.z;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the inverse of the quaternion.\r\n     * @param out The output inverted quaternion.\r\n     * @zh 计算四元数的逆。\r\n     * @param out 输出的逆四元数。\r\n     */\r\n    invert(out: Quaternion): void {\r\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\r\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        var invDot: number = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n        out.x = -a0 * invDot;\r\n        out.y = -a1 * invDot;\r\n        out.z = -a2 * invDot;\r\n        out.w = a3 * invDot;\r\n    }\r\n\r\n    /**\r\n     * @en Set the quaternion to identity quaternion.\r\n     * @zh 将四元数设置为单位四元数。\r\n     */\r\n    identity(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Copy values from an array.\r\n     * @param array The source array.\r\n     * @param offset The start offset in the array. Default is 0.\r\n     * @zh 从数组中拷贝值。\r\n     * @param array 源数组。\r\n     * @param offset 数组中的起始偏移量。默认为0。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * @en Clone the quaternion to a destination object.\r\n     * @param destObject The destination object.\r\n     * @zh 克隆四元数到目标对象。\r\n     * @param destObject 目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        if (this === destObject) {\r\n            return;\r\n        }\r\n        destObject.x = this.x;\r\n        destObject.y = this.y;\r\n        destObject.z = this.z;\r\n        destObject.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * @en Clone the quaternion.\r\n     * @returns A new quaternion with the same values as this one.\r\n     * @zh 克隆四元数。\r\n     * @returns 一个与当前四元数值相同的新四元数。\r\n     */\r\n    clone(): any {\r\n        var dest: Quaternion = new Quaternion();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * @en Determines if two quaternions are equal.\r\n     * @param b The quaternion to compare with.\r\n     * @zh 如果四元数相等则返回true，否则返回false。\r\n     * @param b 对比四元数\r\n     */\r\n    equals(b: Quaternion): boolean {\r\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a rotation quaternion to look at a direction.\r\n     * @param forward The forward direction.\r\n     * @param up The up vector.\r\n     * @param out The output quaternion.\r\n     * @zh 计算旋转观察四元数。\r\n     * @param\tforward 方向\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\r\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a look-at quaternion (suitable for Camera and Light).\r\n     * @param eye The position of the observer.\r\n     * @param target The target position to look at.\r\n     * @param up The up vector.\r\n     * @param out The output quaternion.\r\n     * @zh 计算观察四元数（适用于相机和灯光）。\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates a look-at quaternion (suitable for GameObject).\r\n     * @param eye The position of the observer.\r\n     * @param target The target position to look at.\r\n     * @param up The up vector.\r\n     * @param out The output quaternion.\r\n     * @zh 计算观察四元数（适用于游戏对象）。\r\n     * @param eye 观察者位置\r\n     * @param target 目标位置\r\n     * @param up 上向量\r\n     * @param out 输出四元数\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the squared length of the quaternion.\r\n     * @returns The squared length of the quaternion.\r\n     * @zh 计算四元数长度的平方。\r\n     * @returns 四元数长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the inverse of a quaternion.\r\n     * @param value The input quaternion.\r\n     * @param out The output inverse quaternion.\r\n     * @zh 计算四元数的逆四元数。\r\n     * @param\tvalue 四元数。\r\n     * @param\tout 逆四元数。\r\n     */\r\n    static invert(value: Quaternion, out: Quaternion): void {\r\n        var lengthSq: number = value.lengthSquared();\r\n        if (!MathUtils3D.isZero(lengthSq)) {\r\n            lengthSq = 1.0 / lengthSq;\r\n\r\n            out.x = -value.x * lengthSq;\r\n            out.y = -value.y * lengthSq;\r\n            out.z = -value.z * lengthSq;\r\n            out.w = value.w * lengthSq;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Creates a quaternion from a 3x3 rotation matrix.\r\n     * @param matrix3x3 The 3x3 rotation matrix.\r\n     * @param out The output quaternion.\r\n     * @zh 通过一个3x3旋转矩阵创建一个四元数。\r\n     * @param\tmatrix3x3  3x3矩阵\r\n     * @param\tout        四元数\r\n     */\r\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\r\n        var me: Float32Array = matrix3x3.elements;\r\n        var m11: number = me[0];\r\n        var m12: number = me[1];\r\n        var m13: number = me[2];\r\n        var m21: number = me[3];\r\n        var m22: number = me[4];\r\n        var m23: number = me[5];\r\n        var m31: number = me[6];\r\n        var m32: number = me[7];\r\n        var m33: number = me[8];\r\n\r\n        var sqrt: number, half: number;\r\n        var scale: number = m11 + m22 + m33;\r\n\r\n        if (scale > 0) {\r\n\r\n            sqrt = Math.sqrt(scale + 1);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (m23 - m32) * sqrt;\r\n            out.y = (m31 - m13) * sqrt;\r\n            out.z = (m12 - m21) * sqrt;\r\n\r\n        } else if ((m11 >= m22) && (m11 >= m33)) {\r\n\r\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (m12 + m21) * half;\r\n            out.z = (m13 + m31) * half;\r\n            out.w = (m23 - m32) * half;\r\n        } else if (m22 > m33) {\r\n\r\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m21 + m12) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (m32 + m23) * half;\r\n            out.w = (m31 - m13) * half;\r\n        } else {\r\n\r\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m31 + m13) * half;\r\n            out.y = (m32 + m23) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (m12 - m21) * half;\r\n        }\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _tempVector0 = new Vector3();\r\nconst _tempVector1 = new Vector3();\r\nconst _tempVector2 = new Vector3();\r\nconst _tempVector3 = new Vector3();\r\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n/**\r\n * @en The `Matrix4x4` class is used to create 4x4 matrices.\r\n * @zh `Matrix4x4` 类用于创建4x4矩阵。\r\n */\r\nexport class Matrix4x4 implements IClone {\r\n    /**\r\n     * @internal\r\n     * @en Temporary matrix for internal calculations.\r\n     * @zh 用于内部计算的临时矩阵。\r\n     */\r\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\r\n    /**\r\n     * @internal\r\n     * @en Another temporary matrix for internal calculations.\r\n     * @zh 另一个用于内部计算的临时矩阵。\r\n     */\r\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**\r\n     * @en Default matrix. Do not modify.\r\n     * @zh 默认矩阵，禁止修改。\r\n     */\r\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\r\n    /**\r\n     * @en Inverse of the default matrix. Do not modify.\r\n     * @zh 默认值的逆矩阵，禁止修改。\r\n     */\r\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    /**\r\n     * @en Default matrix. Do not modify.\r\n     * @zh 默认矩阵，禁止修改。\r\n     */\r\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n    /**\r\n     * @en Create a rotation matrix around the X axis.\r\n     * @param rad The rotation angle.\r\n     * @param out The output matrix.\r\n     * @zh 创建绕X轴旋转的矩阵。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createRotationX(rad: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[0] = oe[15] = 1;\r\n        oe[5] = oe[10] = c;\r\n        oe[6] = s;\r\n        oe[9] = -s;\r\n    }\r\n\r\n    /**\r\n     * @en Create a rotation matrix around the Y axis.\r\n     * @param rad The rotation angle.\r\n     * @param out The output matrix.\r\n     * @zh 创建绕Y轴旋转的矩阵。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createRotationY(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[5] = oe[15] = 1;\r\n        oe[0] = oe[10] = c;\r\n        oe[2] = -s;\r\n        oe[8] = s;\r\n    }\r\n\r\n    /**\r\n     * @en Create a rotation matrix around the Z axis.\r\n     * @param rad The rotation angle.\r\n     * @param out The output matrix.\r\n     * @zh 创建绕Z轴旋转的矩阵。\r\n     * @param rad 旋转角度。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createRotationZ(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[10] = oe[15] = 1;\r\n        oe[0] = oe[5] = c;\r\n        oe[1] = s;\r\n        oe[4] = -s;\r\n    }\r\n\r\n    /**\r\n     * @en Create a rotation matrix from yaw, pitch, and roll angles.\r\n     * @param yaw The rotation angle around the vertical axis (Y-axis).\r\n     * @param pitch The rotation angle around the transverse axis (X-axis).\r\n     * @param roll The rotation angle around the longitudinal axis (Z-axis).\r\n     * @param result The output result matrix.\r\n     * @zh 通过yaw、pitch、roll角度创建旋转矩阵。\r\n     * @param yaw 绕垂直轴（Y轴）的旋转角度。\r\n     * @param pitch 绕横向轴（X轴）的旋转角度。\r\n     * @param roll 绕纵向轴（Z轴）的旋转角度。\r\n     * @param result 输出结果矩阵。\r\n     */\r\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\r\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\r\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\r\n    }\r\n\r\n    /**\r\n     * @en Create a rotation matrix from an axis and an angle.\r\n     * @param axis The rotation axis, assumed to be normalized.\r\n     * @param angle The rotation angle.\r\n     * @param result The output result matrix.\r\n     * @zh 通过旋转轴和旋转角度计算旋转矩阵。\r\n     * @param axis 旋转轴，假定已经归一化。\r\n     * @param angle 旋转角度。\r\n     * @param result 输出结果矩阵。\r\n     */\r\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\r\n        var x: number = axis.x;\r\n        var y: number = axis.y;\r\n        var z: number = axis.z;\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var xx: number = x * x;\r\n        var yy: number = y * y;\r\n        var zz: number = z * z;\r\n        var xy: number = x * y;\r\n        var xz: number = x * z;\r\n        var yz: number = y * z;\r\n\r\n        var resultE: Float32Array = result.elements;\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = xx + (cos * (1.0 - xx));\r\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\r\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\r\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\r\n        resultE[5] = yy + (cos * (1.0 - yy));\r\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\r\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\r\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\r\n        resultE[10] = zz + (cos * (1.0 - zz));\r\n    }\r\n\r\n    /**\r\n     * @en Create a rotation matrix from a quaternion.\r\n     * @param rotation The rotation quaternion.\r\n     * @param result The output rotation matrix.\r\n     * @zh 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param result 输出旋转矩阵。\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\r\n        var resultE: Float32Array = result.elements;\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[4] = 2.0 * (xy - zw);\r\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[6] = 2.0 * (yz + xw);\r\n        resultE[8] = 2.0 * (zx + yw);\r\n        resultE[9] = 2.0 * (yz - xw);\r\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * @en Create a translation matrix.\r\n     * @param trans The translation vector.\r\n     * @param out The output matrix.\r\n     * @zh 根据平移向量创建平移矩阵。\r\n     * @param trans 平移向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n    }\r\n\r\n    /**\r\n     * @en Create a scaling matrix.\r\n     * @param scale The scaling values.\r\n     * @param out The output matrix.\r\n     * @zh 根据缩放值创建缩放矩阵。\r\n     * @param scale 缩放值。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = scale.x;\r\n        oe[5] = scale.y;\r\n        oe[10] = scale.z;\r\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Multiply two matrices.\r\n     * @param left The left matrix.\r\n     * @param right The right matrix.\r\n     * @param out The output matrix.\r\n     * @zh 计算两个矩阵的乘法。\r\n     * @param left 左矩阵。\r\n     * @param right 右矩阵。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\r\n        var l: Float32Array = right.elements;\r\n        var r: Float32Array = left.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\r\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\r\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\r\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\r\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\r\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\r\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\r\n\r\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\r\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\r\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\r\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\r\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\r\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\r\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\r\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\r\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\r\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\r\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\r\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\r\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\r\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\r\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\r\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the rotation matrix from a quaternion.\r\n     * @param rotation The input quaternion.\r\n     * @param out The output matrix.\r\n     * @zh 从四元数计算旋转矩阵。\r\n     * @param rotation 输入的四元数。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\r\n        var e: Float32Array = out.elements;\r\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\r\n        var x2: number = x + x;\r\n        var y2: number = y + y;\r\n        var z2: number = z + z;\r\n\r\n        var xx: number = x * x2;\r\n        var yx: number = y * x2;\r\n        var yy: number = y * y2;\r\n        var zx: number = z * x2;\r\n        var zy: number = z * y2;\r\n        var zz: number = z * z2;\r\n        var wx: number = w * x2;\r\n        var wy: number = w * y2;\r\n        var wz: number = w * z2;\r\n\r\n        e[0] = 1 - yy - zz;\r\n        e[1] = yx + wz;\r\n        e[2] = zx - wy;\r\n        e[3] = 0;\r\n\r\n        e[4] = yx - wz;\r\n        e[5] = 1 - xx - zz;\r\n        e[6] = zy + wx;\r\n        e[7] = 0;\r\n\r\n        e[8] = zx + wy;\r\n        e[9] = zy - wx;\r\n        e[10] = 1 - xx - yy;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the affine transformation matrix.\r\n     * @param trans The translation vector.\r\n     * @param rot The rotation quaternion.\r\n     * @param scale The scale vector.\r\n     * @param out The output matrix.\r\n     * @zh 计算仿射变换矩阵。\r\n     * @param trans 平移向量。\r\n     * @param rot 旋转四元数。\r\n     * @param scale 缩放向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n\r\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\r\n\r\n        oe[0] = (1 - (yy + zz)) * sx;\r\n        oe[1] = (xy + wz) * sx;\r\n        oe[2] = (xz - wy) * sx;\r\n        oe[3] = 0;\r\n        oe[4] = (xy - wz) * sy;\r\n        oe[5] = (1 - (xx + zz)) * sy;\r\n        oe[6] = (yz + wx) * sy;\r\n        oe[7] = 0;\r\n        oe[8] = (xz + wy) * sz;\r\n        oe[9] = (yz - wx) * sz;\r\n        oe[10] = (1 - (xx + yy)) * sz;\r\n        oe[11] = 0;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the view matrix.\r\n     * @param eye The position of the viewer's eye.\r\n     * @param target The position of the target point.\r\n     * @param up The up vector.\r\n     * @param out The output matrix.\r\n     * @zh 计算观察矩阵。\r\n     * @param eye 视点位置。\r\n     * @param target 视点目标。\r\n     * @param up 向上向量。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\r\n        var oE: Float32Array = out.elements;\r\n        var xaxis: Vector3 = _tempVector0;\r\n        var yaxis: Vector3 = _tempVector1;\r\n        var zaxis: Vector3 = _tempVector2;\r\n        Vector3.subtract(eye, target, zaxis);\r\n        Vector3.normalize(zaxis, zaxis);\r\n        Vector3.cross(up, zaxis, xaxis);\r\n        Vector3.normalize(xaxis, xaxis);\r\n        Vector3.cross(zaxis, xaxis, yaxis);\r\n\r\n        oE[3] = oE[7] = oE[11] = 0;\r\n        oE[15] = 1;\r\n        oE[0] = xaxis.x;\r\n        oE[4] = xaxis.y;\r\n        oE[8] = xaxis.z;\r\n        oE[1] = yaxis.x;\r\n        oE[5] = yaxis.y;\r\n        oE[9] = yaxis.z;\r\n        oE[2] = zaxis.x;\r\n        oE[6] = zaxis.y;\r\n        oE[10] = zaxis.z;\r\n\r\n        oE[12] = -Vector3.dot(xaxis, eye);\r\n        oE[13] = -Vector3.dot(yaxis, eye);\r\n        oE[14] = -Vector3.dot(zaxis, eye);\r\n    }\r\n\r\n    /**\r\n     * @en Create a perspective projection matrix using FOV.\r\n     * @param fov The field of view in radians.\r\n     * @param aspect The aspect ratio (width / height).\r\n     * @param near The near clipping plane.\r\n     * @param far The far clipping plane.\r\n     * @param out The output matrix.\r\n     * @zh 通过FOV创建透视投影矩阵。\r\n     * @param fov 视角（以弧度为单位）。\r\n     * @param aspect 横纵比（宽/高）。\r\n     * @param near 近裁面。\r\n     * @param far 远裁面。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\r\n        var xScale: number = yScale / aspect;\r\n\r\n        var halfWidth: number = znear / xScale;\r\n        var halfHeight: number = znear / yScale;\r\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\r\n    }\r\n\r\n    /**\r\n     * @en Create a perspective projection matrix.\r\n     * @param left The left boundary of the frustum.\r\n     * @param right The right boundary of the frustum.\r\n     * @param bottom The bottom boundary of the frustum.\r\n     * @param top The top boundary of the frustum.\r\n     * @param znear The near boundary of the frustum.\r\n     * @param zfar The far boundary of the frustum.\r\n     * @param out The output matrix.\r\n     * @zh 创建透视投影矩阵。\r\n     * @param left 视椎左边界。\r\n     * @param right 视椎右边界。\r\n     * @param bottom 视椎底边界。\r\n     * @param top 视椎顶边界。\r\n     * @param znear 视椎近边界。\r\n     * @param zfar 视椎远边界。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = zfar / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\r\n        oe[0] = 2.0 * znear / (right - left);\r\n        oe[5] = 2.0 * znear / (top - bottom);\r\n        oe[8] = (left + right) / (right - left);\r\n        oe[9] = (top + bottom) / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[11] = -1.0;\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the orthographic projection matrix.\r\n     * @param left The left boundary of the frustum.\r\n     * @param right The right boundary of the frustum.\r\n     * @param bottom The bottom boundary of the frustum.\r\n     * @param top The top boundary of the frustum.\r\n     * @param near The near boundary of the frustum.\r\n     * @param far The far boundary of the frustum.\r\n     * @param out The output matrix.\r\n     * @zh 计算正交投影矩阵。\r\n     * @param left 视椎左边界。\r\n     * @param right 视椎右边界。\r\n     * @param bottom 视椎底边界。\r\n     * @param top 视椎顶边界。\r\n     * @param near 视椎近边界。\r\n     * @param far 视椎远边界。\r\n     * @param out 输出矩阵。\r\n     */\r\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = 1.0 / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\r\n        oe[15] = 1;\r\n        oe[0] = 2.0 / (right - left);\r\n        oe[5] = 2.0 / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[12] = (left + right) / (left - right);\r\n        oe[13] = (top + bottom) / (bottom - top);\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * @en Matrix elements array.\r\n     * @zh 矩阵元素数组。\r\n     */\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @param Elements Elements of a 4x4 matrix\r\n     * @zh 构造方法\r\n     * @param Elements 4x4矩阵的各元素\r\n     */\r\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\r\n        if (arguments.length == 0) {\r\n            this.elements = DEFAULTARRAY.slice();\r\n            return;\r\n        }\r\n        if (arguments.length === 1 && arguments[0] === null)\r\n            return;\r\n\r\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\r\n        e[0] = m11;\r\n        e[1] = m12;\r\n        e[2] = m13;\r\n        e[3] = m14;\r\n        e[4] = m21;\r\n        e[5] = m22;\r\n        e[6] = m23;\r\n        e[7] = m24;\r\n        e[8] = m31;\r\n        e[9] = m32;\r\n        e[10] = m33;\r\n        e[11] = m34;\r\n        e[12] = m41;\r\n        e[13] = m42;\r\n        e[14] = m43;\r\n        e[15] = m44;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the element of the matrix by row and column.\r\n     * @param row The row index (0-3).\r\n     * @param column The column index (0-3).\r\n     * @returns The value of the element.\r\n     * @zh 通过行和列获取矩阵元素。\r\n     * @param row 行索引（0-3）。\r\n     * @param column 列索引（0-3）。\r\n     * @returns 元素的值。\r\n     */\r\n    getElementByRowColumn(row: number, column: number): number {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        return this.elements[(row * 4) + column];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the element of the matrix by row and column.\r\n     * @param row The row index (0-3).\r\n     * @param column The column index (0-3).\r\n     * @param value The value to set.\r\n     * @zh 通过行和列设置矩阵元素。\r\n     * @param row 行索引（0-3）。\r\n     * @param column 列索引（0-3）。\r\n     * @param value 要设置的值。\r\n     */\r\n    setElementByRowColumn(row: number, column: number, value: number): void {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        this.elements[(row * 4) + column] = value;\r\n    }\r\n\r\n    /**\r\n     * @en Generate matrix from quaternion.\r\n     * @param rotation The rotation quaternion.\r\n     * @zh 从四元数生成矩阵。\r\n     * @param rotation 旋转四元数。\r\n     */\r\n    setRotation(rotation: Quaternion): void {\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1.0 - (2.0 * (yy + zz));\r\n        e[1] = 2.0 * (xy + zw);\r\n        e[2] = 2.0 * (zx - yw);\r\n        e[4] = 2.0 * (xy - zw);\r\n        e[5] = 1.0 - (2.0 * (zz + xx));\r\n        e[6] = 2.0 * (yz + xw);\r\n        e[8] = 2.0 * (zx + yw);\r\n        e[9] = 2.0 * (yz - xw);\r\n        e[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * @en Set the position of the matrix.\r\n     * @param position The position vector.\r\n     * @zh 设置矩阵的位置。\r\n     * @param position 位置向量。\r\n     */\r\n    setPosition(position: Vector3): void {\r\n        var e: Float32Array = this.elements;\r\n        e[12] = position.x;\r\n        e[13] = position.y;\r\n        e[14] = position.z;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Determine if two 4x4 matrices have equal values.\r\n     * @param other The other 4x4 matrix to compare.\r\n     * @returns True if the matrices are equal, false otherwise.\r\n     * @zh 判断两个4x4矩阵的值是否相等。\r\n     * @param other 要比较的另一个4x4矩阵。\r\n     * @returns 如果矩阵相等则返回true，否则返回false。\r\n     */\r\n    equalsOtherMatrix(other: Matrix4x4): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var oe: Float32Array = other.elements;\r\n\r\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\r\n    }\r\n\r\n    /**\r\n     * @en Decompose the matrix into translation vector, rotation quaternion, and scale vector.\r\n     * @param translation The translation vector.\r\n     * @param rotation The rotation quaternion.\r\n     * @param scale The scale vector.\r\n     * @returns Whether the decomposition was successful.\r\n     * @zh 分解矩阵为平移向量、旋转四元数、缩放向量。\r\n     * @param translation 平移向量。\r\n     * @param rotation 旋转四元数。\r\n     * @param scale 缩放向量。\r\n     * @returns 是否分解成功。\r\n     */\r\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\r\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\r\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\r\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\r\n            return true;\r\n        } else {\r\n            rotation.identity();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Decompose the matrix into translation vector, rotation matrix, and scale vector.\r\n     * @param translation The translation vector.\r\n     * @param rotationMatrix The rotation matrix.\r\n     * @param scale The scale vector.\r\n     * @returns Whether the decomposition was successful.\r\n     * @zh 分解矩阵为平移向量、旋转矩阵、缩放向量。\r\n     * @param translation 平移向量。\r\n     * @param rotationMatrix 旋转矩阵。\r\n     * @param scale 缩放向量。\r\n     * @returns 是否分解成功。\r\n     */\r\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var te: Vector3 = translation;\r\n        var re: Float32Array = rotationMatrix.elements;\r\n        var se: Vector3 = scale;\r\n\r\n        //Get the translation. \r\n        te.x = e[12];\r\n        te.y = e[13];\r\n        te.z = e[14];\r\n\r\n        //Scaling is the length of the rows. \r\n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\r\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\r\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\r\n\r\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\r\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\r\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\r\n\r\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \r\n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\r\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\r\n            re[0] = re[5] = re[10] = re[15] = 1;\r\n            return false;\r\n        }\r\n\r\n        // Calculate an perfect orthonormal matrix (no reflections)\r\n        var at: Vector3 = _tempVector0;\r\n        at.x = m31 / sZ;\r\n        at.y = m32 / sZ;\r\n        at.z = m33 / sZ;\r\n        var tempRight: Vector3 = _tempVector1;\r\n        tempRight.x = m11 / sX;\r\n        tempRight.y = m12 / sX;\r\n        tempRight.z = m13 / sX;\r\n        var up: Vector3 = _tempVector2;\r\n        Vector3.cross(at, tempRight, up);\r\n        var right: Vector3 = _tempVector1;\r\n        Vector3.cross(up, at, right);\r\n\r\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\r\n        re[15] = 1;\r\n        re[0] = right.x;\r\n        re[1] = right.y;\r\n        re[2] = right.z;\r\n\r\n        re[4] = up.x;\r\n        re[5] = up.y;\r\n        re[6] = up.z;\r\n\r\n        re[8] = at.x;\r\n        re[9] = at.y;\r\n        re[10] = at.z;\r\n\r\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\r\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\r\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\r\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @en Decompose the rotation matrix into Yaw-Pitch-Roll Euler angles.\r\n     * @param yawPitchRoll Vector3 to store the resulting Euler angles (in radians).\r\n     * @zh 分解旋转矩阵为Yaw-Pitch-Roll欧拉角。\r\n     * @param yawPitchRoll 用于存储结果欧拉角的Vector3（单位为弧度）。\r\n     */\r\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\r\n        var pitch: number = Math.asin(-this.elements[9]);\r\n        yawPitchRoll.y = pitch;\r\n        // Hardcoded constant - burn him, he's a witch\r\n        // double threshold = 0.001; \r\n        var test: number = Math.cos(pitch);\r\n        if (test > MathUtils3D.zeroTolerance) {\r\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\r\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\r\n        } else {\r\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\r\n            yawPitchRoll.x = 0.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Normalize the matrix.\r\n     * @zh 归一化矩阵。\r\n     */\r\n    normalize(): void {\r\n        var v: Float32Array = this.elements;\r\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1)\r\n                return;\r\n        } else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the transpose of the matrix.\r\n     * @returns The transposed matrix.\r\n     * @zh 计算矩阵的转置矩阵。\r\n     * @returns 转置后的矩阵。\r\n     */\r\n    transpose(): Matrix4x4 {\r\n        var e: Float32Array, t: number;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the inverse of a matrix.\r\n     * @param out The output matrix to store the result.\r\n     * @zh 计算矩阵的逆矩阵。\r\n     * @param out 用于存储结果的输出矩阵。\r\n     */\r\n    invert(out: Matrix4x4): void {\r\n\r\n        var ae: Float32Array = this.elements;\r\n        var oe: Float32Array = out.elements;\r\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\r\n\r\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant \r\n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (Math.abs(det) === 0.0) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n    }\r\n\r\n    /**\r\n     * @en Calculate the Billboard matrix\r\n     * @param objectPosition The position of the object\r\n     * @param cameraPosition The position of the camera\r\n     * @param cameraUp The up vector of the camera\r\n     * @param cameraForward The forward vector of the camera\r\n     * @param mat The transformation matrix to store the result\r\n     * @zh 计算Billboard矩阵\r\n     * @param objectPosition 物体位置\r\n     * @param cameraPosition 相机位置\r\n     * @param cameraUp 相机上向量\r\n     * @param cameraForward 相机前向量\r\n     * @param mat 用于存储结果的变换矩阵\r\n     */\r\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\r\n\r\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\r\n\r\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\r\n\r\n        if (MathUtils3D.isZero(lengthSq)) {\r\n            Vector3.scale(cameraForward, -1, _tempVector1);\r\n            _tempVector1.cloneTo(_tempVector0);\r\n        } else {\r\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\r\n        }\r\n\r\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\r\n        Vector3.normalize(_tempVector2, _tempVector2);\r\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\r\n\r\n        var crosse: Vector3 = _tempVector2;\r\n        var finale: Vector3 = _tempVector3;\r\n        var diffee: Vector3 = _tempVector0;\r\n        var obpose: Vector3 = objectPosition;\r\n\r\n        var mate: Float32Array = mat.elements;\r\n        mate[0] = crosse.x;\r\n        mate[1] = crosse.y;\r\n        mate[2] = crosse.z;\r\n        mate[3] = 0.0;\r\n        mate[4] = finale.x;\r\n        mate[5] = finale.y;\r\n        mate[6] = finale.z;\r\n        mate[7] = 0.0;\r\n        mate[8] = diffee.x;\r\n        mate[9] = diffee.y;\r\n        mate[10] = diffee.z;\r\n        mate[11] = 0.0;\r\n        mate[12] = obpose.x;\r\n        mate[13] = obpose.y;\r\n        mate[14] = obpose.z;\r\n        mate[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * @en Normalization\r\n     * @zh 归一化\r\n     */\r\n    identity(): void {\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\r\n        e[0] = e[5] = e[10] = e[15] = 1;\r\n        */\r\n        this.elements.set(DEFAULTARRAY);\r\n    }\r\n\r\n    /**\r\n     * @en Check if the matrix is an identity matrix\r\n     * @zh 判断是否是单位矩阵\r\n     */\r\n    isIdentity(): boolean {\r\n        let delty = function (num0: number, num1: number) {\r\n            return Math.abs(num0 - num1) < 1e-7;\r\n        }\r\n        let e = this.elements;\r\n        let defined = Matrix4x4.DEFAULT.elements;\r\n        for (let i = 0, n = e.length; i < n; i++) {\r\n            if (!delty(e[i], defined[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix to another object\r\n     * @param destObject Clone Source\r\n     * @zh 克隆矩阵到另一个对象\r\n     * @param destObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        destObject.elements.set(this.elements);\r\n        /*for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix from a Float32Array\r\n     * @param destObject The Float32Array to clone from\r\n     * @zh 从Float32Array克隆矩阵\r\n     * @param destObject 要克隆的Float32Array\r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * @en Clone the matrix\r\n     * @returns A new Matrix4x4 object with the same values\r\n     * @zh 克隆矩阵\r\n     * @returns 一个具有相同值的新Matrix4x4对象\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix4x4 = new Matrix4x4(null);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * @en Convert a coordinate matrix\r\n     * @param v3 Coordinate points\r\n     * @param out The output matrix\r\n     * @zh 转换一个坐标位矩阵\r\n     * @param v3 坐标点\r\n     * @param out 输出矩阵\r\n     */\r\n    static translation(v3: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = v3.x;\r\n        oe[13] = v3.y;\r\n        oe[14] = v3.z;\r\n    }\r\n\r\n    /**\r\n     * @en Get the translation vector from the matrix\r\n     * @param out The output vector to store the translation\r\n     * @zh 获取矩阵中的平移向量\r\n     * @param out 用于存储平移向量的输出向量\r\n     */\r\n    getTranslationVector(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = me[12];\r\n        out.y = me[13];\r\n        out.z = me[14];\r\n    }\r\n\r\n    /**\r\n     * @en Set the translation vector of the matrix\r\n     * @param translate The vector representing the translation\r\n     * @zh 设置矩阵的平移向量\r\n     * @param translate 表示平移的向量\r\n     */\r\n    setTranslationVector(translate: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        var ve: Vector3 = translate;\r\n        me[12] = ve.x;\r\n        me[13] = ve.y;\r\n        me[14] = ve.z;\r\n    }\r\n\r\n    /**\r\n     * @en Get the forward vector from the matrix\r\n     * @param out The output vector to store the forward vector\r\n     * @zh 获取矩阵的前向量\r\n     * @param out 用于存储前向量的输出向量\r\n     */\r\n    getForward(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = -me[8];\r\n        out.y = -me[9];\r\n        out.z = -me[10];\r\n    }\r\n\r\n    /**\r\n     * @en Set the forward vector of the matrix\r\n     * @param forward The vector representing the forward direction\r\n     * @zh 设置矩阵的前向量\r\n     * @param forward 表示前向方向的向量\r\n     */\r\n    setForward(forward: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        me[8] = -forward.x;\r\n        me[9] = -forward.y;\r\n        me[10] = -forward.z;\r\n    }\r\n\r\n    /**\r\n     * @en Determine if this matrix is an inverted matrix\r\n     * @returns True if the matrix is inverted, false otherwise\r\n     * @zh 判断此矩阵是否是反向矩阵\r\n     * @returns 如果矩阵是反向的返回true，否则返回false\r\n     */\r\n    getInvertFront(): boolean {\r\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\r\n        var scale: Vector3 = _tempVector1;\r\n        var isInvert: boolean = scale.x < 0;\r\n        (scale.y < 0) && (isInvert = !isInvert);\r\n        (scale.z < 0) && (isInvert = !isInvert);\r\n        return isInvert;\r\n    }\r\n}\r\n\r\nconst _tempMatrix4x4 = new Matrix4x4();","import { IClone } from \"../utils/IClone\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\n\r\nexport interface IV2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * @en The `Vector2` class is used to create two-dimensional vectors.\r\n * @zh `Vector2` 类用于创建二维向量。\r\n */\r\nexport class Vector2 implements IClone {\r\n    /**\r\n     * @en Zero vector, read-only.\r\n     * @zh 零向量，只读。\r\n     */\r\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\r\n    /**\r\n     * @en One vector, read-only.\r\n     * @zh 单位向量，只读。\r\n     */\r\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\r\n    /**\r\n     * @en Temporary Vector2 for calculations.\r\n     * @zh 用于计算的临时 Vector2。\r\n     */\r\n    static TempVector2 = new Vector2();\r\n    /**\r\n     * @en X-axis coordinate.\r\n     * @zh X 轴坐标。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis coordinate.\r\n     * @zh Y 轴坐标。\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @param x X-axis coordinate.\r\n     * @param y Y-axis coordinate.\r\n     * @zh 构造方法\r\n     * @param x X 轴坐标。\r\n     * @param y Y 轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the x and y values of the vector.\r\n     * @param x The x value to set.\r\n     * @param y The y value to set.\r\n     * @zh 设置向量的 x 和 y 值。\r\n     * @param x 要设置的 X 值。\r\n     * @param y 要设置的 Y 值。\r\n     */\r\n    setValue(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * @en Scales a two-dimensional vector.\r\n     * @param a Source two-dimensional vector.\r\n     * @param b Scale value.\r\n     * @param out Output two-dimensional vector.\r\n     * @zh 缩放二维向量。\r\n     * @param a 源二维向量。\r\n     * @param b 缩放值。\r\n     * @param out 输出二维向量。\r\n     */\r\n    static scale(a: Vector2, b: number, out: Vector2): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether two two-dimensional vectors are equal.\r\n     * @param a First two-dimensional vector.\r\n     * @param b Second two-dimensional vector.\r\n     * @returns Whether the vectors are equal.\r\n     * @zh 判断两个二维向量是否相等。\r\n     * @param a 第一个二维向量。\r\n     * @param b 第二个二维向量。\r\n     * @returns 是否相等。\r\n     */\r\n    static equals(a: Vector2, b: Vector2): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\r\n    }\r\n\r\n    /**\r\n     * @en Copies values from an array.\r\n     * @param array The source array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 从数组中拷贝值。\r\n     * @param array 源数组。\r\n     * @param offset 数组偏移。默认值为 0。\r\n     */\r\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n    }\r\n\r\n    /**\r\n     * @en Converts the vector to an array.\r\n     * @returns An array representation of the vector.\r\n     * @zh 将向量转换为数组。\r\n     * @returns 表示向量的数组。\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    /**\r\n     * @en Writes the vector to a Float32Array.\r\n     * @param array The target Float32Array.\r\n     * @param offset The offset in the array. Default is 0.\r\n     * @zh 将向量写入 Float32Array 数组。\r\n     * @param array 目标 Float32Array 数组。\r\n     * @param offset 数组偏移。默认值为 0。\r\n     */\r\n    writeTo(array: Float32Array, offset: number = 0): void {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n    }\r\n\r\n    /**\r\n     * @en Clones the vector to another object.\r\n     * @param destObject The destination object to clone to.\r\n     * @zh 将向量克隆到另一个对象。\r\n     * @param destObject 克隆的目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector2: Vector2 = (<Vector2>destObject);\r\n        destVector2.x = this.x;\r\n        destVector2.y = this.y;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the dot product of two 2D vectors.\r\n     * @param a The left vector.\r\n     * @param b The right vector.\r\n     * @returns The dot product.\r\n     * @zh 计算两个二维向量的点积。\r\n     * @param a 左向量。\r\n     * @param b 右向量。\r\n     * @returns 点积。\r\n     */\r\n    static dot(a: Vector2, b: Vector2): number {\r\n        return (a.x * b.x) + (a.y * b.y);\r\n    }\r\n\r\n    /**\r\n     * @en Normalizes a 2D vector.\r\n     * @param s The source 2D vector.\r\n     * @param out The output normalized 2D vector.\r\n     * @zh 归一化二维向量。\r\n     * @param s 源二维向量。\r\n     * @param out 输出的归一化二维向量。\r\n     */\r\n    static normalize(s: Vector2, out: Vector2): void {\r\n        var x: number = s.x, y: number = s.y;\r\n        var len: number = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the scalar length of a 2D vector.\r\n     * @param a The source 2D vector.\r\n     * @returns The scalar length.\r\n     * @zh 计算二维向量的标量长度。\r\n     * @param a 源二维向量。\r\n     * @returns 标量长度。\r\n     */\r\n    static scalarLength(a: Vector2): number {\r\n        var x: number = a.x, y: number = a.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * @en Creates a clone of this Vector2.\r\n     * @returns Cloned copy of Vector2.\r\n     * @zh 创建此Vector2的克隆。\r\n     * @returns 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector2: Vector2 = new Vector2();\r\n        this.cloneTo(destVector2);\r\n        return destVector2;\r\n    }\r\n\r\n}\r\n\r\n","import { UnifromBufferData } from \"../../../RenderEngine/UniformBufferData\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Resource } from \"../../../resource/Resource\";\r\nimport { IClone } from \"../../../utils/IClone\";\r\nimport { IDefineDatas } from \"../../RenderModuleData/Design/IDefineDatas\";\r\nimport { ShaderDefine } from \"../../RenderModuleData/Design/ShaderDefine\";\r\nimport { InternalTexture } from \"./InternalTexture\";\r\n\r\nexport type uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\r\nexport enum ShaderDataType {\r\n    None,\r\n    Int,\r\n    Bool,\r\n    Float,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Color,\r\n    Matrix4x4,\r\n    Texture2D,\r\n    Texture3D,\r\n    TextureCube,\r\n    Buffer,\r\n    Matrix3x3,\r\n    Texture2DArray\r\n}\r\n\r\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array | Matrix3x3;\r\n\r\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return 0;\r\n        case ShaderDataType.Bool:\r\n            return false;\r\n        case ShaderDataType.Float:\r\n            return 0;\r\n        case ShaderDataType.Vector2:\r\n            return Vector2.ZERO;\r\n        case ShaderDataType.Vector3:\r\n            return Vector3.ZERO;\r\n        case ShaderDataType.Vector4:\r\n            return Vector4.ZERO;\r\n        case ShaderDataType.Color:\r\n            return Color.BLACK;\r\n        case ShaderDataType.Matrix4x4:\r\n            return Matrix4x4.DEFAULT;\r\n        case ShaderDataType.Matrix3x3:\r\n            return Matrix3x3.DEFAULT;\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * 着色器数据类。\r\n */\r\nexport class ShaderData implements IClone {\r\n    /**@internal */\r\n    readonly _ownerResource: Resource;\r\n\r\n    /**\r\n     * @internal\t\r\n     */\r\n    constructor(ownerResource: Resource = null) {\r\n        this._ownerResource = ownerResource;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 增加一个UBO Block\r\n     * @param key \r\n     * @param ubo \r\n     * @param uboData \r\n     */\r\n    _addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    _releaseUBOData() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n    getDefineData(): IDefineDatas {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    getData(): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 增加Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    addDefine(define: ShaderDefine): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    addDefines(define: IDefineDatas): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 移除Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    removeDefine(define: ShaderDefine): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 是否包含Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    hasDefine(define: ShaderDefine): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 清空宏定义。\r\n     */\r\n    clearDefine(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取布尔。\r\n     * @param\tindex shader索引。\r\n     * @return  布尔。\r\n     */\r\n    getBool(index: number): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置布尔。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 布尔。\r\n     */\r\n    setBool(index: number, value: boolean): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取整形。\r\n     * @param\tindex shader索引。\r\n     * @return  整形。\r\n     */\r\n    getInt(index: number): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置整型。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 整形。\r\n     */\r\n    setInt(index: number, value: number): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取浮点。\r\n     * @param\tindex shader索引。\r\n     * @return\t浮点。\r\n     */\r\n    getNumber(index: number): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置浮点。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 浮点。\r\n     */\r\n    setNumber(index: number, value: number): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取Vector2向量。\r\n     * @param\tindex shader索引。\r\n     * @return Vector2向量。\r\n     */\r\n    getVector2(index: number): Vector2 {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector2向量。\r\n     */\r\n    setVector2(index: number, value: Vector2): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取Vector3向量。\r\n     * @param\tindex shader索引。\r\n     * @return Vector3向量。\r\n     */\r\n    getVector3(index: number): Vector3 {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector3向量。\r\n     */\r\n    setVector3(index: number, value: Vector3): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取颜色。\r\n     * @param \tindex shader索引。\r\n     * @return  向量。\r\n     */\r\n    getVector(index: number): Vector4 {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 向量。\r\n     */\r\n    setVector(index: number, value: Vector4): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取颜色\r\n     * @param index 索引\r\n     * @returns 颜色\r\n     */\r\n    getColor(index: number): Color {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置颜色\r\n     * @param index 索引\r\n     * @param value 颜色值\r\n     */\r\n    setColor(index: number, value: Color): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取矩阵。\r\n     * @param\tindex shader索引。\r\n     * @return  矩阵。\r\n     */\r\n    getMatrix4x4(index: number): Matrix4x4 {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  矩阵。\r\n     */\r\n    setMatrix4x4(index: number, value: Matrix4x4): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取矩阵\r\n     * @param index \r\n     * @returns \r\n     */\r\n    getMatrix3x3(index: number): Matrix3x3 {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵。\r\n     * @param index \r\n     * @param value \r\n     */\r\n    setMatrix3x3(index: number, value: Matrix3x3): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取Buffer。\r\n     * @param\tindex shader索引。\r\n     * @return\r\n     */\r\n    getBuffer(index: number): Float32Array {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  buffer数据。\r\n     */\r\n    setBuffer(index: number, value: Float32Array): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 设置纹理。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 纹理。\r\n     */\r\n    setTexture(index: number, value: BaseTexture): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 获取纹理。\r\n     * @param\tindex shader索引。\r\n     * @return  纹理。\r\n     */\r\n    getTexture(index: number): BaseTexture {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index \r\n     * @param value \r\n     */\r\n    setUniformBuffer(index: number, value: UniformBufferObject) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getUniformBuffer(index: number): UniformBufferObject {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n                this.setInt(uniformIndex, <number>value);\r\n                break;\r\n            case ShaderDataType.Bool:\r\n                this.setBool(uniformIndex, <boolean>value);\r\n                break;\r\n            case ShaderDataType.Float:\r\n                this.setNumber(uniformIndex, <number>value);\r\n                break;\r\n            case ShaderDataType.Vector2:\r\n                this.setVector2(uniformIndex, <Vector2>value);\r\n                break;\r\n            case ShaderDataType.Vector3:\r\n                this.setVector3(uniformIndex, <Vector3>value);\r\n                break;\r\n            case ShaderDataType.Vector4:\r\n                this.setVector(uniformIndex, <Vector4>value);\r\n                break;\r\n            case ShaderDataType.Color:\r\n                this.setColor(uniformIndex, <Color>value);\r\n                break;\r\n            case ShaderDataType.Matrix4x4:\r\n                this.setMatrix4x4(uniformIndex, <Matrix4x4>value);\r\n                break;\r\n            case ShaderDataType.Matrix3x3:\r\n                this.setMatrix3x3(uniformIndex, <Matrix3x3>value);\r\n                break;\r\n            case ShaderDataType.Texture2D:\r\n            case ShaderDataType.TextureCube:\r\n                this.setTexture(uniformIndex, <BaseTexture>value);\r\n                break;\r\n            case ShaderDataType.Buffer:\r\n                this.setBuffer(uniformIndex, <Float32Array>value);\r\n                break;\r\n            default:\r\n                throw new Error(`unkown shader data type: ${type}`);\r\n        }\r\n    }\r\n\r\n    getShaderData(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n                return this.getInt(uniformIndex);\r\n            case ShaderDataType.Bool:\r\n                return this.getBool(uniformIndex);\r\n            case ShaderDataType.Float:\r\n                return this.getNumber(uniformIndex);\r\n            case ShaderDataType.Vector2:\r\n                return this.getVector2(uniformIndex);\r\n            case ShaderDataType.Vector3:\r\n                return this.getVector3(uniformIndex);\r\n            case ShaderDataType.Vector4:\r\n                return this.getVector(uniformIndex);\r\n            case ShaderDataType.Color:\r\n                return this.getColor(uniformIndex);\r\n            case ShaderDataType.Matrix4x4:\r\n                return this.getMatrix4x4(uniformIndex);\r\n            case ShaderDataType.Texture2D:\r\n            case ShaderDataType.TextureCube:\r\n                return this.getTexture(uniformIndex);\r\n            case ShaderDataType.Buffer:\r\n                return this.getBuffer(uniformIndex);\r\n            case ShaderDataType.Matrix3x3:\r\n                return this.getMatrix3x3(uniformIndex);\r\n            case ShaderDataType.Matrix4x4:\r\n                return this.getMatrix4x4(uniformIndex);\r\n            default:\r\n                throw \"unkone shader data type.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _setInternalTexture(index: number, value: InternalTexture): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: ShaderData): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * clone UBO Data\r\n     * @internal\r\n     * @param uboDatas \r\n     */\r\n    _cloneUBO(uboDatas: Map<string, uboParams>) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    reset() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\n","import { Color } from \"../maths/Color\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Shader3D } from \"./RenderShader/Shader3D\";\r\n\r\n/**\r\n *描述UniformBuffer参数类型\r\n */\r\nexport enum UniformBufferParamsType {\r\n    Number,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\r\n    MatrixArray\r\n}\r\n\r\n/**\r\n * 实例化UniformBuffer数据\r\n * 注：要与glsl中Uniform block结构相同\r\n */\r\nexport class UnifromBufferData {\r\n\r\n    /**\r\n     * @internal\r\n     * key: UniformID,value: x:offset y:length z:\r\n     */\r\n    protected _layoutMap: any;\r\n\r\n    /**\r\n     * @internal\r\n     * data length\r\n     */\r\n    protected _bytelength: number;\r\n\r\n    /**\r\n     * @internal\r\n     * params describe\r\n     */\r\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\r\n\r\n    /**\r\n     * @internal\r\n     * update frome x to max,x:min,y:max\r\n     */\r\n    _updateFlag: Vector2;\r\n\r\n    /**\r\n     * Buffer Data\r\n     */\r\n    _buffer: Float32Array;\r\n\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\r\n        // todo 后面改掉 不用map 初始化\r\n        this._uniformParamsState = new Map(uniformParamsStat);\r\n        this._createBuffer();\r\n        this._updateFlag = new Vector2();\r\n        this._resetUpdateFlag();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * createBuffer\r\n     */\r\n    protected _createBuffer() {\r\n        var dataPos = 0;\r\n        this._layoutMap = {};\r\n        const elementSize = 4;\r\n        this._uniformParamsState.forEach((key, value) => {\r\n            dataPos += this._addUniformParams(value, key, dataPos);\r\n        });\r\n        //这里需要对手机平台做兼容\r\n        //this._bytelength = dataPos * elementSize;\r\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\r\n        this._buffer = new Float32Array(dataPos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _getArraySize(key: string) {\r\n        let left = key.indexOf(\"[\");\r\n        let right = key.indexOf(\"]\");\r\n        if (left != -1 && right != -1 && left < right) {\r\n            return parseFloat(key.substring(left + 1, right));\r\n        } else\r\n            throw key + \" is illegal \"\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * layout UniformBuffer pitch std140\r\n     */\r\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\r\n        let size: number = 0;\r\n        let posAdd: number = 0;\r\n        let posG = offset % 4;\r\n        let offsetadd;\r\n        switch (value) {\r\n            case UniformBufferParamsType.Number:\r\n                size = 1;\r\n                posAdd = 1;\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                size = 2;\r\n                switch (posG) {\r\n                    case 0:\r\n                    case 2:\r\n                        posAdd = 2;\r\n                        break;\r\n                    case 1:\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                size = 3;\r\n                posAdd = 3;\r\n                switch (posG) {\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                        offset += (4 - posG);\r\n                        posAdd = (4 - posG) + 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                //case UniformBufferParamsType.Color:\r\n                size = 4;\r\n                switch (posG) {\r\n                    case 0:\r\n                        posAdd = 4;\r\n                        break;\r\n                    case 1:\r\n                        offset += 3;\r\n                        posAdd = 7;\r\n                        break;\r\n                    case 2:\r\n                        offset += 2;\r\n                        posAdd = 6;\r\n                        break;\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 5;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                size = 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            default:\r\n                throw \"Unifrom Buffer Params Type is illegal \"\r\n        }\r\n        const paramsInfo = new Vector2(offset, size);\r\n        this._layoutMap[uniformID] = paramsInfo;\r\n        return posAdd;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getParamsInfo(key: number): Vector2 {\r\n        return this._layoutMap[key];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set upload range\r\n     */\r\n    private _setUpdateFlag(min: number, max: number) {\r\n        if (min < this._updateFlag.x)\r\n            this._updateFlag.x = min;\r\n        if (max > this._updateFlag.y)\r\n            this._updateFlag.y = max;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        delete this._buffer;\r\n        this._uniformParamsState.clear();\r\n        this._uniformParamsState = null;\r\n        this._layoutMap = null;\r\n        this._updateFlag = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetUpdateFlag() {\r\n        this._updateFlag.setValue(this._buffer.length, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param uniformID \r\n     * @returns \r\n     */\r\n    _has(uniformID: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        return !!info;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set buffer params Data\r\n     */\r\n    _setData(uniformID: number, value: any) {\r\n\r\n        let uniformType = this._uniformParamsState.get(uniformID);\r\n\r\n        switch (uniformType) {\r\n            case UniformBufferParamsType.Number:\r\n                this.setNumberbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                this.setVector2byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                this.setVector3byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                this.setVector4byIndex(uniformID, value);\r\n                break;\r\n            // case UniformBufferParamsType.Color:\r\n            //     this.setColorbyIndex(uniformID, value);\r\n            //     break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                this.setMatrixbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                this.setVector4ArraybyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                this.setMatrixArraybyIndex(uniformID, value);\r\n                break;\r\n            // todo\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Buffer byte length\r\n     * @returns \r\n     */\r\n    getbyteLength(): number {\r\n        return this._bytelength;\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsName\r\n     * @param name uniform params name\r\n     * @param value vector4Array data\r\n     */\r\n    setVector4Array(name: string, value: Vector4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4ArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value vector4Array data\r\n     * @returns \r\n     */\r\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let vec = value[i];\r\n            this._buffer[pos++] = vec.x;\r\n            this._buffer[pos++] = vec.y;\r\n            this._buffer[pos++] = vec.z;\r\n            this._buffer[pos++] = vec.w;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsName\r\n     * @param name uniform params name\r\n     * @param value MatrixArray data\r\n     */\r\n    setMatrixArray(name: string, value: Matrix4x4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value MatrixArray data\r\n     * @returns \r\n     */\r\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let mat = value[i];\r\n            this._buffer.set(mat.elements, pos);\r\n            pos += 16;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsName\r\n     * @param name uniform params name\r\n     * @param value Number data\r\n     */\r\n    setNumber(name: string, value: number) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setNumberbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Number data\r\n     * @returns \r\n     */\r\n    setNumberbyIndex(uniformID: number, value: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector2 data\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector2byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector2 data\r\n     * @returns \r\n     */\r\n    setVector2byIndex(uniformID: number, value: Vector2) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector3 data\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector3byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by uniformID\r\n     * @param uniformID uniform params index\r\n     * @param value Vector3 data\r\n     * @returns \r\n     */\r\n    setVector3byIndex(uniformID: number, value: Vector3) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector4 data\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector4 data\r\n     * @returns \r\n     */\r\n    setVector4byIndex(uniformID: number, value: Vector4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._buffer[pos++] = value.w;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Color by paramsName\r\n     * @param name uniform params name\r\n     * @param value Color data\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setColorbyIndex(uniformID, value);\r\n    }\r\n\r\n    setColorbyIndex(uniformID: number, value: Color) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\r\n        this._setUpdateFlag(info.x, pos);\r\n\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsName\r\n     * @param name uniform params name\r\n     * @param value Matrix data\r\n     */\r\n    setMatrix(name: string, value: Matrix4x4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Matrix data\r\n     * @returns \r\n     */\r\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer.set(value.elements, pos);\r\n        pos += 16;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n\r\n    clone(): UnifromBufferData {\r\n        // todo clone 更改\r\n        let ubd = new UnifromBufferData(this._uniformParamsState);\r\n        this.cloneTo(ubd);\r\n        return ubd\r\n    }\r\n\r\n    cloneTo(destObject: UnifromBufferData) {\r\n        if (destObject._bytelength == this._bytelength) {\r\n            destObject._buffer = Float32Array.from(this._buffer);\r\n            this._updateFlag.setValue(0, this._buffer.length);\r\n        }\r\n    }\r\n}","import { IDefineDatas } from \"../../RenderDriver/RenderModuleData/Design/IDefineDatas\";\r\nimport { ShaderDefine } from \"../../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\nexport interface IShaderObjStructor {\r\n    name: string,\r\n    enableInstancing: boolean,\r\n    supportReflectionProbe: boolean,\r\n    surportVolumetricGI: boolean,\r\n    attributeMap: any;\r\n    uniformMap: any;\r\n    defaultValue: any;\r\n    shaderPass: Array<any>;\r\n}\r\n\r\nexport interface IShaderpassStructor {\r\n    VS?: string,\r\n    FS?: string,\r\n    VSPath?: string,//TODO\r\n    FSPath?: string,//TODO\r\n    pipeline?: string,\r\n    statefirst?: boolean;\r\n    renderState?: Record<string, string | boolean | number | string[]>\r\n\r\n}\r\n\r\nexport enum ShaderFeatureType {\r\n    DEFAULT,\r\n    D3,\r\n    D2,\r\n    PostProcess,\r\n    Sky,\r\n    Effect\r\n}\r\n\r\n/**\r\n * <code>Shader3D</code> 类用于创建Shader3D。\r\n */\r\nexport class Shader3D {\r\n    static _configDefineValues: IDefineDatas;\r\n    /**@internal */\r\n    private static _compileDefineDatas: IDefineDatas;\r\n    /**渲染状态_剔除。*/\r\n    static CULL: number;\r\n    /**渲染状态_混合。*/\r\n    static BLEND: number;\r\n    /**渲染状态_混合源。*/\r\n    static BLEND_SRC: number;\r\n    /**渲染状态_混合目标。*/\r\n    static BLEND_DST: number;\r\n    /**渲染状态_混合源RGB。*/\r\n    static BLEND_SRC_RGB: number;\r\n    /**渲染状态_混合目标RGB。*/\r\n    static BLEND_DST_RGB: number;\r\n    /**渲染状态_混合源ALPHA。*/\r\n    static BLEND_SRC_ALPHA: number;\r\n    /**渲染状态_混合目标ALPHA。*/\r\n    static BLEND_DST_ALPHA: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION_RGB: number;\r\n    /**渲染状态_ALPHA混合方程。*/\r\n    static BLEND_EQUATION_ALPHA: number;\r\n    /**渲染状态_深度测试。*/\r\n    static DEPTH_TEST: number;\r\n    /**渲染状态_深度写入。*/\r\n    static DEPTH_WRITE: number;\r\n    /**渲染状态_模板测试。*/\r\n    static STENCIL_TEST: number;\r\n    /**渲染状态_模板写入 */\r\n    static STENCIL_WRITE: number;\r\n    /**渲染状态_模板写入值 */\r\n    static STENCIL_Ref: number;\r\n    /**渲染状态_模板写入设置 */\r\n    static STENCIL_Op: number;\r\n\r\n    /**shader变量提交周期，自定义。*/\r\n    static PERIOD_CUSTOM: number = 0;\r\n    /**shader变量提交周期，逐材质。*/\r\n    static PERIOD_MATERIAL: number = 1;\r\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\r\n    static PERIOD_SPRITE: number = 2;\r\n    /**shader变量提交周期，逐相机。*/\r\n    static PERIOD_CAMERA: number = 3;\r\n    /**shader变量提交周期，逐场景。*/\r\n    static PERIOD_SCENE: number = 4;\r\n\r\n    /**@internal */\r\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\r\n    /**@internal 图形数据传输使用UniformBlock的方式 */\r\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\r\n    /**@internal WebGPU等平台坐标系Y翻转 */\r\n    static SHADERDEFINE_BLITSCREEN_INVERTY: ShaderDefine;\r\n    /**@internal opengl webgl 需要重新映射深度值 */\r\n    static SHADERDEFINE_REMAP_POSITIONZ: ShaderDefine;\r\n    /**@internal 是否支持指定LOD的贴图采样 */\r\n    static SHADERDEFINE_LOD_TEXTURE_SAMPLE: ShaderDefine;\r\n    /**@internal 是否支持动态中断贴图采样 */\r\n    static SHADERDEFINE_BREAK_TEXTURE_SAMPLE: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private static _propertyNameCounter: number = 0;\r\n\r\n    /**@internal */\r\n    static _preCompileShader: { [key: string]: Shader3D } = {};\r\n    /**@internal */\r\n    static _debugShaderVariantInfo: any;\r\n    /**是否开启调试模式。 */\r\n    static debugMode: boolean = false;\r\n\r\n    static init() {\r\n        Shader3D._configDefineValues = LayaGL.unitRenderModuleDataFactory.createDefineDatas();\r\n        Shader3D.SHADERDEFINE_BLITSCREEN_INVERTY = Shader3D.getDefineByName(\"BLITSCREEN_INVERTY\");\r\n        Shader3D.SHADERDEFINE_REMAP_POSITIONZ = Shader3D.getDefineByName(\"REMAP_Z\");\r\n        Shader3D.SHADERDEFINE_LOD_TEXTURE_SAMPLE = Shader3D.getDefineByName(\"LOD_TEXTURE_SAMPLE\");\r\n        Shader3D.SHADERDEFINE_BREAK_TEXTURE_SAMPLE = Shader3D.getDefineByName(\"BREAK_TEXTURE_SAMPLE\");\r\n        if (LayaGL.renderEngine._remapZ)\r\n            Shader3D._configDefineValues.add(Shader3D.SHADERDEFINE_REMAP_POSITIONZ);\r\n        if (LayaGL.renderEngine._screenInvertY && false)\r\n            Shader3D._configDefineValues.add(Shader3D.SHADERDEFINE_BLITSCREEN_INVERTY);\r\n        if (LayaGL.renderEngine._lodTextureSample)\r\n            Shader3D._configDefineValues.add(Shader3D.SHADERDEFINE_LOD_TEXTURE_SAMPLE);\r\n        if (LayaGL.renderEngine._breakTextureSample)\r\n            Shader3D._configDefineValues.add(Shader3D.SHADERDEFINE_BREAK_TEXTURE_SAMPLE);\r\n\r\n        Shader3D._compileDefineDatas = LayaGL.unitRenderModuleDataFactory.createDefineDatas();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getNamesByDefineData(defineData: IDefineDatas, out: Array<string>) {\r\n        LayaGL.renderEngine.getNamesByDefineData(defineData, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 注册宏定义。\r\n     * @param name \r\n     */\r\n    static getDefineByName(name: string): ShaderDefine {\r\n        return LayaGL.renderEngine.getDefineByName(name);\r\n    }\r\n\r\n    /**\r\n     * 通过Shader属性名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static propertyNameToID(name: string): number {\r\n        return LayaGL.renderEngine.propertyNameToID(name);\r\n    }\r\n\r\n    static propertyIDToName(id: number): string {\r\n        return LayaGL.renderEngine.propertyIDToName(id);\r\n    }\r\n\r\n    /**\r\n     * 添加函数库引用。\r\n     * @param fileName 文件名字。\r\n     * @param txt 文件内容\r\n     */\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 通过宏定义名字编译shader。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineNames 宏定义名字集合。\r\n     */\r\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[], nodeCommonMap: string[]): boolean {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                pass.nodeCommonMap = nodeCommonMap;\r\n                if (pass) {\r\n                    var compileDefineDatas = Shader3D._compileDefineDatas;\r\n                    Shader3D._configDefineValues.cloneTo(compileDefineDatas);\r\n                    for (let n of defineNames)\r\n                        compileDefineDatas.add(Shader3D.getDefineByName(n));\r\n                    pass.withCompile(compileDefineDatas);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 添加预编译shader文件，主要是处理宏定义\r\n     */\r\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\r\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\r\n    }\r\n\r\n    /**\r\n     * 获取ShaderCompile3D。\r\n     * @param\tname\r\n     * @return ShaderCompile3D。\r\n     */\r\n    static find(name: string): Shader3D {\r\n        return Shader3D._preCompileShader[name];\r\n    }\r\n\r\n    static parse(data: IShaderObjStructor, basePath: string) {\r\n        if (!data.name)\r\n            console.warn(\"shader name is empty\", data);\r\n        if (!data.uniformMap)\r\n            console.warn(`${data.name}: uniformMap is empty`);\r\n\r\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\r\n        shader._surportVolumetricGI = data.surportVolumetricGI;\r\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\r\n        shader.addSubShader(subshader);\r\n        let passDataArray = data.shaderPass;\r\n        for (var i in passDataArray) {\r\n            let passData = passDataArray[i] as IShaderpassStructor;\r\n            if (!passData.VS) {\r\n                console.warn(`${data.name}: VS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n            if (!passData.FS) {\r\n                console.warn(`${data.name}: FS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n\r\n            let shaderPass = subshader._addShaderPass(ShaderCompile.compile(passData.VS, passData.FS, basePath), passData.pipeline);\r\n\r\n            shaderPass.statefirst = passData.statefirst ?? false;\r\n\r\n            ShaderCompile.getRenderState(passData.renderState, shaderPass.renderState);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**@internal */\r\n    _name: string;\r\n    /**@internal */\r\n    _enableInstancing: boolean = false;\r\n    /**@internal */\r\n    _supportReflectionProbe: boolean = false;\r\n    /**@internal */\r\n    _surportVolumetricGI: boolean = false;\r\n    /**@internal */\r\n    _subShaders: SubShader[] = [];\r\n\r\n    shaderType: ShaderFeatureType;\r\n    /**\r\n     * 名字。\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Shader3D</code> 实例。\r\n     */\r\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\r\n        this._name = name;\r\n        this._enableInstancing = enableInstancing;\r\n        this._supportReflectionProbe = supportReflectionProbe;\r\n    }\r\n\r\n    /**\r\n     * 添加子着色器。\r\n     * @param 子着色器。\r\n     */\r\n    addSubShader(subShader: SubShader): void {\r\n        this._subShaders.push(subShader);\r\n        subShader._owner = this;\r\n        subShader.moduleData.enableInstance = this._enableInstancing;\r\n    }\r\n\r\n    /**\r\n     * 在特定索引获取子着色器。\r\n     * @param\tindex 索引。\r\n     * @return 子着色器。\r\n     */\r\n    getSubShaderAt(index: number): SubShader {\r\n        return this._subShaders[index];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { IShaderInstance } from \"../../RenderDriver/DriverDesign/RenderDevice/IShaderInstance\";\r\nimport { IDefineDatas } from \"../../RenderDriver/RenderModuleData/Design/IDefineDatas\";\r\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader, UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport class ShaderProcessInfo {\r\n    defineString: string[];\r\n    vs: ShaderNode;\r\n    ps: ShaderNode;\r\n    attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    uniformMap: UniformMapType;\r\n    is2D: boolean;\r\n    //....其他数据\r\n};\r\nexport class ShaderCompileDefineBase {\r\n    /** @internal */\r\n    static _defineStrings: Array<string> = [];\r\n    /** @internal */\r\n    public _VS: ShaderNode;\r\n    /** @internal */\r\n    public _PS: ShaderNode;\r\n    /** @internal */\r\n    _defs: Set<string>;\r\n    /** @internal */\r\n    _validDefine: IDefineDatas;\r\n\r\n    /** @internal */\r\n    _owner: SubShader;\r\n    /** @internal */\r\n    name: string;\r\n\r\n    nodeCommonMap: Array<string>;\r\n\r\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\r\n        this._owner = owner;\r\n        this.name = name;\r\n        this._VS = compiledObj.vsNode;\r\n        this._PS = compiledObj.psNode;\r\n        this._defs = compiledObj.defs;\r\n        this._validDefine = LayaGL.unitRenderModuleDataFactory.createDefineDatas();\r\n        for (let k of compiledObj.defs)\r\n            this._validDefine.add(Shader3D.getDefineByName(k));\r\n    }\r\n\r\n   \r\n    /**\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: IDefineDatas): IShaderInstance {\r\n        return null;\r\n    }\r\n}","import { IDefineDatas } from \"../../RenderDriver/RenderModuleData/Design/IDefineDatas\";\r\nimport { Shader3D } from \"./Shader3D\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\n/**\r\n * 着色器变种。\r\n */\r\nexport class ShaderVariant {\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _subShaderIndex: number = 0;\r\n    /** @internal */\r\n    _passIndex: number = 0;\r\n    /** @internal */\r\n    _defineNames: string[];\r\n\r\n    /**\r\n     * 着色器。\r\n     */\r\n    public get shader(): Shader3D {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * 子着色器索引。\r\n     */\r\n    public get subShaderIndex(): number {\r\n        return this._subShaderIndex;\r\n    }\r\n\r\n    /**\r\n     * 通道索引。\r\n     */\r\n    public get passIndex(): number {\r\n        return this._passIndex;\r\n    }\r\n\r\n    /**\r\n     * 宏定义集合。\r\n     */\r\n    public get defineNames(): Readonly<string[]> {\r\n        return this._defineNames;\r\n    }\r\n\r\n    /**\r\n     * 创建着色器变种。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defines 宏定义集合\r\n     */\r\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\r\n        this.setValue(shader, subShaderIndex, passIndex, defines);\r\n    }\r\n\r\n    /**\r\n     * 给着色器变种赋值。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defineNames 宏定义集合\r\n     */\r\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var validDefine: IDefineDatas = pass._validDefine;\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\r\n                        var defname: string = defineNames[i];\r\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\r\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\r\n                    }\r\n                }\r\n                else {\r\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\r\n                }\r\n            }\r\n            else {\r\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\r\n            }\r\n        }\r\n        else {\r\n            throw `ShaderVariantInfo:Shader can't be null.`;\r\n        }\r\n        this._shader = shader;\r\n        this._subShaderIndex = subShaderIndex;\r\n        this._passIndex = passIndex;\r\n        this._defineNames = defineNames;\r\n    }\r\n\r\n    /**\r\n     * 是否相等。\r\n     * @param other 其它着色器变种\r\n     * @return 是否相等。\r\n     */\r\n    equal(other: ShaderVariant): boolean {\r\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\r\n            return false;\r\n\r\n        var defines: string[] = this._defineNames;\r\n        var otherDefines: string[] = other._defineNames;\r\n        if (defines.length !== otherDefines.length)\r\n            return false;\r\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\r\n            if (defines[i] !== otherDefines[i])\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return 着色器变种。 \r\n     */\r\n    clone(): ShaderVariant {\r\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\r\n        return dest;\r\n    }\r\n}\r\n\r\nexport interface IShaderVariant {\r\n    subShaderIndex: number;\r\n    passIndex: number;\r\n    defines: string[];\r\n    nodeCommonMap: string[];\r\n}\r\n\r\n/**\r\n * 着色器变种集合。\r\n */\r\nexport class ShaderVariantCollection {\r\n    static active: ShaderVariantCollection = new ShaderVariantCollection();\r\n\r\n    items: Record<string, IShaderVariant[]>;\r\n\r\n    constructor(items?: Record<string, IShaderVariant[]>) {\r\n        this.items = items || {};\r\n    }\r\n\r\n    add(shaderPass: ShaderPass, defines: ReadonlyArray<string>) {\r\n        let shader = shaderPass._owner._owner;\r\n        let subShaderIndex = shader._subShaders.indexOf(shaderPass._owner);\r\n        let passIndex = shaderPass._owner._passes.indexOf(shaderPass);\r\n        let nodeCommonMap = shaderPass.nodeCommonMap;\r\n        if (!nodeCommonMap) return; //兼容WGSL\r\n        defines = defines.filter((v) => !Shader3D._configDefineValues.has(Shader3D.getDefineByName(v)));\r\n\r\n        let col = this.items[shader._name];\r\n        if (!col) {\r\n            col = [];\r\n            this.items[shader._name] = col;\r\n        }\r\n\r\n        // Check if the variant already exists in the collection\r\n        if (col.some(v => {\r\n            return (\r\n                v.subShaderIndex === subShaderIndex &&\r\n                v.passIndex === passIndex &&\r\n                v.defines.length === defines.length &&\r\n                v.defines.every((name, index) => name === defines[index]) &&\r\n                v.nodeCommonMap.length === nodeCommonMap.length &&\r\n                v.nodeCommonMap.every((name, index) => name === nodeCommonMap[index])\r\n            );\r\n        }))\r\n            return;\r\n\r\n        // If the variant does not exist, add it to the collection\r\n        col.push({\r\n            subShaderIndex: subShaderIndex,\r\n            passIndex: passIndex,\r\n            defines: <any>defines,\r\n            nodeCommonMap: nodeCommonMap\r\n        });\r\n\r\n        console.debug(`Shader variant: ${shader._name}/${subShaderIndex}/${passIndex}/${defines.join(\",\")}/${nodeCommonMap ? nodeCommonMap.join(\",\") : \"\"}`);\r\n    }\r\n\r\n    compileAll() {\r\n        let items = this.items;\r\n        for (let shaderName in items) {\r\n            let variants = items[shaderName];\r\n            for (let variant of variants) {\r\n                let suc = Shader3D.compileShaderByDefineNames(shaderName, variant.subShaderIndex, variant.passIndex, variant.defines, variant.nodeCommonMap);\r\n                let msg = `${shaderName}/${variant.subShaderIndex}/${variant.passIndex}/${variant.defines.join(\",\")}/${variant.nodeCommonMap ? variant.nodeCommonMap.join(\",\") : \"\"}`;\r\n                if (suc)\r\n                    console.debug(\"Warm up\", msg);\r\n                else\r\n                    console.warn(\"Warm up failed!\", msg);\r\n            }\r\n        }\r\n    }\r\n}","import { SubShader } from \"./SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderVariantCollection } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\r\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderState } from \"../../RenderDriver/RenderModuleData/Design/RenderState\";\r\nimport { IDefineDatas } from \"../../RenderDriver/RenderModuleData/Design/IDefineDatas\";\r\nimport { Laya3DRender } from \"../../d3/RenderObjs/Laya3DRender\";\r\nimport { IShaderInstance } from \"../../RenderDriver/DriverDesign/RenderDevice/IShaderInstance\";\r\nimport { IShaderPassData } from \"../../RenderDriver/RenderModuleData/Design/IShaderPassData\";\r\n\r\n\r\n/**\r\n * <code>ShaderPass</code> 类用于实现ShaderPass。\r\n */\r\nexport class ShaderPass extends ShaderCompileDefineBase {\r\n    /** @internal */\r\n    private static _debugDefineStrings: string[] = [];\r\n    /** @internal */\r\n    private static _debugDefineMasks: number[] = [];\r\n    // /** @internal */\r\n    // private _renderState: RenderState;\r\n    /** @internal */\r\n    private _pipelineMode: string;\r\n    public get pipelineMode(): string {\r\n        return this._pipelineMode;\r\n    }\r\n    public set pipelineMode(value: string) {\r\n        this._pipelineMode = value;\r\n        this.moduleData.pipelineMode = value;\r\n    }\r\n    /**@internal */\r\n    _nodeUniformCommonMap: Array<string>;\r\n    /** 优先 ShaderPass 渲染状态 */\r\n    private _statefirst: boolean = false;\r\n    public get statefirst(): boolean {\r\n        return this._statefirst;\r\n    }\r\n    public set statefirst(value: boolean) {\r\n        this._statefirst = value;\r\n        this.moduleData.statefirst = value;\r\n    }\r\n\r\n    moduleData: IShaderPassData;\r\n\r\n    /**\r\n     * 渲染状态。\r\n     */\r\n    get renderState(): RenderState {\r\n        return this.moduleData.renderState;\r\n    }\r\n\r\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\r\n        super(owner, null, compiledObj);\r\n        this.moduleData = LayaGL.unitRenderModuleDataFactory.createShaderPass(this);\r\n        this.moduleData.validDefine = this._validDefine;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param IS2d \r\n     * @param compileDefine \r\n     * @returns \r\n     */\r\n    static createShaderInstance(shaderpass: ShaderPass, IS2d: boolean, compileDefine: IDefineDatas): IShaderInstance {\r\n        var shader: IShaderInstance;\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = IS2d;\r\n        shaderProcessInfo.vs = shaderpass._VS;\r\n        shaderProcessInfo.ps = shaderpass._PS;\r\n        shaderProcessInfo.attributeMap = shaderpass._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = shaderpass._owner._uniformMap;\r\n        var defines: string[] = ShaderCompileDefineBase._defineStrings;\r\n        defines.length = 0;\r\n        Shader3D._getNamesByDefineData(compileDefine, defines);\r\n        shaderProcessInfo.defineString = defines;\r\n        shader = LayaGL.renderDeviceFactory.createShaderInstance(shaderProcessInfo, shaderpass);\r\n\r\n        \r\n\r\n        if (Shader3D.debugMode)\r\n            ShaderVariantCollection.active.add(shaderpass, defines);\r\n\r\n        return shader;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: IDefineDatas, IS2d: boolean = false): IShaderInstance {\r\n        var shader: IShaderInstance = this.moduleData.getCacheShader(compileDefine);\r\n        if (shader)\r\n            return shader;\r\n        shader = ShaderPass.createShaderInstance(this, IS2d, compileDefine);\r\n        this.moduleData.setCacheShader(compileDefine, shader);\r\n        return shader;\r\n    }\r\n}","import { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexDeclaration } from \"../VertexDeclaration\";\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class VertexMesh {\r\n\t/**顶点位置数据 */\r\n\tstatic MESH_POSITION0: number = 0;\r\n\t/**顶点顶点色数据 */\r\n\tstatic MESH_COLOR0: number = 1;\r\n\t/**顶点UV0数据 */\r\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\r\n\t/**顶点法线数据 */\r\n\tstatic MESH_NORMAL0: number = 3;\r\n\t/**顶点切线数据 */\r\n\tstatic MESH_TANGENT0: number = 4;\r\n\t/**顶点骨骼索引数据 */\r\n\tstatic MESH_BLENDINDICES0: number = 5;\r\n\t/**顶点骨骼权重数据 */\r\n\tstatic MESH_BLENDWEIGHT0: number = 6;\r\n\t/**顶点UV1数据 */\r\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\r\n\t/**顶点世界矩阵数据Row0 */\r\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\r\n\t/**顶点世界矩阵数据Row1 */\r\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\r\n\t/**顶点世界矩阵数据Row2 */\r\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\r\n\t/**顶点世界矩阵数据Row3 */\r\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\r\n\r\n\r\n\t//TODO：location不够\r\n\t/**简单数据动画数据 */\r\n\tstatic MESH_SIMPLEANIMATOR: number = 12;\r\n\r\n\t/**光照贴图的缩放和偏移 */\r\n\tstatic MESH_LIGHTMAPSCALEOFFSET: number = 13;\r\n\t/**instanceworld顶点描述 */\r\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\r\n\t/**instanceSimple动画数据顶点描述 */\r\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\r\n\t/**instanceLightMap光照贴图的缩放和偏移顶点描述 */\r\n\tstatic instanceLightMapScaleOffsetDeclaration: VertexDeclaration;\r\n\r\n\r\n\t/**自定义attribute instance 预留位*/\r\n\t/**顶点自定义数据0 */\r\n\tstatic MESH_CUSTOME0: number = 12;\r\n\t/**顶点自定义数据1 */\r\n\tstatic MESH_CUSTOME1: number = 13;\r\n\t/**顶点自定义数据2 */\r\n\tstatic MESH_CUSTOME2: number = 14;\r\n\t/**顶点自定义数据3 */\r\n\tstatic MESH_CUSTOME3: number = 15;\r\n\r\n\r\n\r\n\r\n\t/**@internal */\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\r\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\r\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\r\n\r\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_SIMPLEANIMATOR)]);\r\n\t\tVertexMesh.instanceLightMapScaleOffsetDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_LIGHTMAPSCALEOFFSET)]);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL_BYTE\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}\r\n\r\n\r\n","import { ShaderDataType, ShaderDataItem } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { ISubshaderData } from \"../../RenderDriver/RenderModuleData/Design/ISubShaderData\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { VertexMesh } from \"./VertexMesh\";\r\n\r\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\r\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\r\n\r\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\r\n\r\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\r\n\r\n/**\r\n * <code>SubShader</code> 类用于创建SubShader。\r\n */\r\nexport class SubShader {\r\n    public static IncludeUniformMap: any = {};\r\n\r\n    /**\r\n     * 注册glsl所用到的Uniform\r\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\r\n     * @param includeName \r\n     * @param uniformInfo \r\n     * @param defaultUniformData \r\n     */\r\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\r\n        let obj: any = {};\r\n        let data: any = obj[includeName] = {};\r\n        data[\"uniformMap\"] = uniformMap;\r\n        data[\"defaultValue\"] = defaultValue;\r\n        Object.assign(SubShader.IncludeUniformMap, obj);\r\n    }\r\n\r\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\r\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\r\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\r\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\r\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\r\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\r\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\r\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\r\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\r\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector4],\r\n        'a_LightmapScaleOffset': [VertexMesh.MESH_LIGHTMAPSCALEOFFSET, ShaderDataType.Vector4]\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _attributeMap: AttributeMapType;\r\n\r\n    /**@internal */\r\n    _uniformMap: UniformMapType;\r\n\r\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\r\n    /**\r\n     * @internal\r\n     * uniform 默认值\r\n     */\r\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\r\n    /**\r\n     * @internal\r\n     * uniform 数据类型\r\n     */\r\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\r\n\r\n    /**@internal */\r\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\r\n\r\n    /**@internal */\r\n    _owner: Shader3D;\r\n    /**@internal */\r\n    _flags: any = {};\r\n\r\n    moduleData: ISubshaderData;\r\n    /**@internal */\r\n    _passes: ShaderPass[] = [];\r\n\r\n    /**\r\n     * 创建一个 <code>SubShader</code> 实例。\r\n     * @param\tattributeMap  顶点属性表。\r\n     * @param\tuniformMap  uniform属性表。\r\n     */\r\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\r\n        this.moduleData = LayaGL.unitRenderModuleDataFactory.createSubShader();\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = uniformMap;\r\n        this._uniformDefaultValue = uniformDefaultValue;\r\n        this._uniformTypeMap = new Map();\r\n        for (const key in uniformMap) {\r\n            if (typeof uniformMap[key] == \"object\") {\r\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\r\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\r\n                for (const uniformName in block) {\r\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\r\n                    blockUniformMap.set(uniformName, uniformType);\r\n\r\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\r\n                }\r\n\r\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\r\n                blockUniformMap.forEach((value, key) => {\r\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\r\n                });\r\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\r\n                this._uniformBufferDataMap.set(key, blockData);\r\n            }\r\n            else {\r\n                let unifromType = <ShaderDataType>uniformMap[key];\r\n                this._uniformTypeMap.set(key, unifromType);\r\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube || unifromType == ShaderDataType.Texture3D || unifromType == ShaderDataType.Texture2DArray) {\r\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\r\n                    let uniformIndex = Shader3D.propertyNameToID(key);\r\n                    LayaGL.renderEngine.addTexGammaDefine(uniformIndex, textureGammaDefine);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加着色器Pass\r\n     * @param vs \r\n     * @param ps \r\n     * @param stateMap \r\n     * @param pipelineMode 渲染管线模式。 \r\n     */\r\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\r\n    }\r\n\r\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\r\n        shaderPass.pipelineMode = pipelineMode;\r\n        this._passes.push(shaderPass);\r\n        this.moduleData.addShaderPass(shaderPass.moduleData);\r\n        this._addIncludeUniform(compiledObj.includeNames);\r\n        return shaderPass;\r\n    }\r\n\r\n    private _addIncludeUniform(includemap: Set<string>) {\r\n        for (let ele of includemap) {\r\n            if (SubShader.IncludeUniformMap[ele]) {\r\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\r\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\r\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\r\n                for (var i in bindtypeMap) {\r\n                    if (!this._uniformTypeMap.has(i)) {\r\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\r\n                        this._uniformMap[i] = bindtypeMap[i];\r\n                    }\r\n                }\r\n                for (var i in bindDefaultValue) {\r\n                    if (!this._uniformDefaultValue[i]) {\r\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\r\n\r\n    switch (shaderDataType) {\r\n        case ShaderDataType.Float:\r\n            return UniformBufferParamsType.Number;\r\n        case ShaderDataType.Vector2:\r\n            return UniformBufferParamsType.Vector2;\r\n        case ShaderDataType.Vector3:\r\n            return UniformBufferParamsType.Vector3;\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return UniformBufferParamsType.Vector4;\r\n        case ShaderDataType.Matrix4x4:\r\n            return UniformBufferParamsType.Matrix4x4;\r\n        default:\r\n            throw \"ShaderDataType can not be in UniformBuffer.\";\r\n    }\r\n\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n\r\n/**\r\n * @private\r\n * @en Utility class for calculating Bezier curves.\r\n * @zh 计算贝塞尔曲线的工具类。\r\n */\r\nexport class Bezier {\r\n\r\n    /**\r\n     * @en Singleton instance of the utility class\r\n     * @zh 工具类单例\r\n     */\r\n    static I: Bezier = new Bezier();\r\n    /** @private */\r\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\r\n    /** @private */\r\n    private _calFun: Function = this.getPoint2;\r\n\r\n    /** @private */\r\n    private _switchPoint(x: number, y: number): void {\r\n        var tPoint: Point = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate quadratic Bezier point.\r\n     * @param t The parameter in the range [0, 1]\r\n     * @param rst The array to store the result\r\n     * @zh 计算二次贝塞尔点。\r\n     * @param t 用于计算的参数，范围[0, 1]\r\n     * @param rst 用于存结果的数组\r\n     */\r\n    getPoint2(t: number, rst: any[]): void {\r\n        //二次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate cubic Bezier point\r\n     * @param t The parameter in the range [0, 1]\r\n     * @param rst The array to store the result\r\n     * @zh 计算三次贝塞尔点\r\n     * @param t 用于计算的参数，范围[0, 1]\r\n     * @param rst 用于存结果的数组\r\n     */\r\n    getPoint3(t: number, rst: any[]): void {\r\n        //三次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var p4: Point = this._controlPoints[3];\r\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * @en Calculate a sequence of Bezier points\r\n     * @param count The number of points to insert\r\n     * @param rst The array to store the result\r\n     * @zh 计算贝塞尔点序列\r\n     * @param count 输入的点的数量\r\n     * @param rst 用于存结果的数组\r\n     */\r\n    insertPoints(count: number, rst: any[]): void {\r\n        var i: number;\r\n        count = count > 0 ? count : 5;\r\n        var dLen: number;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get points on the Bezier curve.\r\n     * @param pList Control points [x0,y0,x1,y1...]\r\n     * @param inSertCount The number of interpolation points for each curve segment\r\n     * @param count The order of the Bezier curve (2 for quadratic, 3 for cubic)\r\n     * @returns An array of points on the Bezier curve\r\n     * @zh 获取贝塞尔曲线上的点。\r\n     * @param pList 控制点[x0,y0,x1,y1...]\r\n     * @param inSertCount 每次曲线的插值数量\r\n     * @param count 贝塞尔曲线的阶数（2表示二次曲线，3表示三次曲线）\r\n     * @returns 贝塞尔曲线上的点组成的数组\r\n     */\r\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\r\n        var i: number, len: number;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2) return [];\r\n        var rst: any[] = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\n","import { WebGLEngine } from \"../RenderDriver/WebGLDriver/RenderDevice/WebGLEngine\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * @private\r\n */\r\nexport class RenderStateContext {\r\n    /**@internal */\r\n    static mainContext: any;\r\n    // /**@internal */\r\n    // static DepthTestCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static DepthMaskCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static DepthFuncCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static StencilTestCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static StencilMaskCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static StencilFuncCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static stencilOpCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static BlendCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static BlendEquationCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static BlendEquationSeparateCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static BlendFuncCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static BlendFuncSeperateCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static CullFaceCMD: RenderStateCommand;\r\n    // /**@internal */\r\n    // static FrontFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilFuncArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blendEquationSeparateArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blenfunArray = new Array(2);\r\n    /**@internal */\r\n    static blendFuncSeperateArray = new Array(4);\r\n    /**@internal */\r\n    static stencilOpArray = new Array<number>(3);\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        // RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        // RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthFunc(value: CompareFunction): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param gl \r\n     * @param value \r\n     */\r\n    static setStencilMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlend(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setCullFace(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setFrontFace(value: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\r\n    }\r\n}\r\n\r\n\r\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\r\nexport class BlendMode {\r\n    static activeBlendFunction: Function = null;\r\n    /** @internal 这个不直接暴露给开发者*/\r\n    static NAMES = [\r\n        \"normal\",\r\n        \"add\",\r\n        \"multiply\",\r\n        \"screen\",\r\n        \"overlay\",\r\n        \"light\",\r\n        \"mask\",\r\n        \"destination-out\",\r\n        \"add_old\"];\r\n\r\n    /** @internal */\r\n    static TOINT: { [key: string]: number } = {\r\n        \"normal\": 0,\r\n        \"add\": 1,\r\n        \"multiply\": 2,\r\n        \"screen\": 3,\r\n        \"overlay\": 4,\r\n        \"light\": 5,\r\n        \"mask\": 6,\r\n        \"destination-out\": 7,\r\n        \"lighter\": 1,\r\n        \"lighter_old\": 8,\r\n        \"add_old\": 8\r\n    };\r\n\r\n    static NORMAL = \"normal\";\t\t\t\t\t//0\r\n    static MASK = \"mask\";\t\t\t\t\t//6\r\n    static LIGHTER = \"lighter\";\t\t\t\t\t//1  \r\n\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    /**@internal */\r\n    static _init_(): void {\r\n        BlendMode.fns = [\r\n            BlendMode.BlendNormal,      //0\r\n            BlendMode.BlendAdd,         //1\r\n            BlendMode.BlendMultiply,    //2\r\n            BlendMode.BlendScreen,      //3\r\n            BlendMode.BlendOverlay,     //4\r\n            BlendMode.BlendLight,       //5\r\n            BlendMode.BlendMask,        //6\r\n            BlendMode.BlendDestinationOut,   //7\r\n            BlendMode.BlendAddOld,         //8\r\n            BlendMode.BlendSourceAlpha,            //9\r\n        ];\r\n\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,    //0\r\n            BlendMode.BlendAddTarget,       //1\r\n            BlendMode.BlendMultiplyTarget,  //2\r\n            BlendMode.BlendScreenTarget,    //3\r\n            BlendMode.BlendOverlayTarget,   //4\r\n            BlendMode.BlendLightTarget,     //5\r\n            BlendMode.BlendMask,            //6\r\n            BlendMode.BlendDestinationOut,  //7\r\n            BlendMode.BlendAddTargetOld,    //8\r\n            BlendMode.BlendSourceAlpha             //9\r\n        ];\r\n    }\r\n\r\n    static BlendNormal(): void {\r\n        //为了避免黑边，和canvas作为贴图的黑边\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n\r\n    }\r\n\r\n    /**@internal 这个add感觉不合理，所以改成old了 */\r\n    static BlendAddOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n\r\n    static BlendAdd(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiply(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreen(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlay(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendLight(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendNormalTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    /**@internal add不应该是1+dst_α 所以改成old */\r\n    static BlendAddTargetOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n    static BlendAddTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiplyTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreenTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlayTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\r\n    }\r\n\r\n    static BlendLightTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMask(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\r\n    }\r\n\r\n    static BlendDestinationOut(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\r\n    }\r\n    static BlendSourceAlpha(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.SourceAlpha, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\"\r\n\r\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\n\r\n/**\r\n * @private\r\n * @en The ColorUtils is a class for color value processing.\r\n * @zh ColorUtils 是一个用于处理颜色值的类。\r\n */\r\nexport class ColorUtils {\r\n    /**@private */\r\n    static _SAVE: any = {};\r\n    /**@private */\r\n    static _SAVE_SIZE: number = 0;\r\n    /**@private */\r\n\r\n    /**@private */\r\n    private static _DEFAULT: any = ColorUtils._initDefault();\r\n\r\n    /**\r\n     * @en An array representing the color in RGBA format, Value range 0-1\r\n     * @zh 以 RGBA 格式表示颜色的数组，取值范围0-1\r\n     */\r\n    //TODO:delete？\r\n    arrColor: any[] = [];\r\n    /**\r\n     * @en The string representation of the color value.\r\n     * @zh 字符串型颜色值。\r\n     */\r\n    strColor: string;\r\n    /**\r\n     * @en The uint representation of the color value.\r\n     * @zh uint 型颜色值。\r\n     */\r\n    numColor: number;\r\n    /**@internal TODO:*/\r\n    _drawStyle: any;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @param value The color value, which can be a string (e.g., \"#ff0000\") or a hexadecimal color (e.g., 0xff0000).\r\n     * @zh 构造方法\r\n     * @param value 颜色值，可以是字符串（例如 \"#ff0000\"）或16进制颜色值（例如 0xff0000）。\r\n     */\r\n    constructor(value: any) {\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n\r\n        let color: number;\r\n        if (typeof (value) == 'string') {\r\n            color = Utils.fromStringColor(value);\r\n            this.strColor = value;\r\n        } else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            //color:0xrrggbbaa numColor此时为负数\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\r\n        } else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static _initDefault(): any {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Clears the cache if it gets too large.\r\n     * @zh 如果缓存太大，则清理缓存。\r\n     */\r\n    static _initSaveMap(): void {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * @en Creates and returns an instance of the Color class based on the specified color value.\r\n     * @param value The color value, which can be a string (e.g., \"#ff0000\") or a hexadecimal color (e.g., 0xff0000).\r\n     * @returns An instance of the Color class.\r\n     * @zh 根据指定的颜色值创建并返回一个 Color 类的实例，可以是字符串（例如 \"#ff0000\"）或16进制颜色值（例如 0xff0000）。\r\n     * @param value 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     * @returns Color 类的一个实例。\r\n     */\r\n    static create(value: any): ColorUtils {\r\n        let key: string = value + \"\";\r\n        let color: ColorUtils = ColorUtils._SAVE[key];\r\n        if (color != null) return color;\r\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\r\n        ColorUtils._SAVE_SIZE++;\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\n\r\n","import { ColorUtils } from \"../../utils/ColorUtils\"\r\n\r\nexport class DrawStyle {\r\n    static DEFAULT: DrawStyle;\r\n    static _Defaultinit() {\r\n        DrawStyle.DEFAULT = new DrawStyle(\"#000000\");\r\n    }\r\n\r\n    _color: ColorUtils;\r\n\r\n    static create(value: ColorUtils|string): DrawStyle {\r\n        if (value) {\r\n            var color = (value instanceof ColorUtils) ? value : ColorUtils.create(value);\r\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\r\n        }\r\n        return DrawStyle.DEFAULT;\r\n    }\r\n\r\n    constructor(value: any) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (value) {\r\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n        }\r\n        else this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    reset(): void {\r\n        this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    toInt(): number {\r\n        return this._color.numColor;\r\n    }\r\n\r\n    equal(value: any): boolean {\r\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\r\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\r\n        return false;\r\n    }\r\n\r\n    toColorStr(): string {\r\n        return this._color.strColor;\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class Path {\r\n\r\n    //public var _rect:Rectangle;\r\n    /**@internal */\r\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\r\n    /**@internal */\r\n    _lastOriY: number = 0;\r\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\r\n    private _curPath: renderPath = null;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    beginPath(convex: boolean): void {\r\n        this.paths.length = 1;\r\n        this._curPath = this.paths[0] = new renderPath();\r\n        this._curPath.convex = convex;\r\n        //_curPath.path = [];\r\n    }\r\n\r\n    closePath(): void {\r\n        this._curPath.loop = true;\r\n    }\r\n\r\n    newPath(): void {\r\n        this._curPath = new renderPath();\r\n        this.paths.push(this._curPath);\r\n    }\r\n\r\n    addPoint(pointX: number, pointY: number): void {\r\n        //tempArray.push(pointX, pointY);\r\n        this._curPath.path.push(pointX, pointY);\r\n    }\r\n\r\n    //直接添加一个完整的path\r\n    push(points: any[], convex: boolean): void {\r\n        if (!this._curPath) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        } else if (this._curPath.path.length > 0) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        }\r\n        var rp: renderPath = this._curPath;\r\n        rp.path = points.slice();//TODO 这个可能多次slice了\r\n        rp.convex = convex;\r\n    }\r\n\r\n    reset(): void {\r\n        this.paths.length = 0;//TODO 复用\r\n    }\r\n}\r\n\r\n\r\n\r\nclass renderPath {\r\n    path: any[] = []; //[x,y,x,y,....]的数组\r\n    loop: boolean = false;\r\n    convex: boolean = false;\r\n}\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { Context } from \"../../../renders/Context\"\r\nimport { SubmitBase } from \"../../submit/SubmitBase\"\r\n\r\nexport class SaveBase implements ISaveData {\r\n    static TYPE_ALPHA = 0x1;\r\n    static TYPE_FILESTYLE = 0x2;\r\n    static TYPE_FONT = 0x8;\r\n    static TYPE_LINEWIDTH = 0x100;\r\n    static TYPE_STROKESTYLE = 0x200;\r\n    static TYPE_MARK = 0x400;\r\n    static TYPE_TRANSFORM = 0x800;\r\n    static TYPE_TRANSLATE = 0x1000;\r\n    static TYPE_ENABLEMERGE = 0x2000;\r\n\r\n    static TYPE_TEXTBASELINE = 0x4000;\r\n    static TYPE_TEXTALIGN = 0x8000;\r\n    static TYPE_GLOBALCOMPOSITEOPERATION = 0x10000;\r\n    static TYPE_CLIPRECT = 0x20000;\r\n    static TYPE_CLIPRECT_STENCIL = 0x40000;\r\n    static TYPE_IBVB = 0x80000;\r\n    static TYPE_SHADER = 0x100000;\r\n    static TYPE_FILTERS = 0x200000;\r\n    static TYPE_FILTERS_TYPE = 0x400000;\r\n    static TYPE_COLORFILTER = 0x800000;\r\n    private static POOL: any = SaveBase._createArray();\r\n    private static _namemap: any = SaveBase._init();\r\n    private _valueName: string;\r\n    private _value: any;\r\n    private _dataObj: any;\r\n    private _newSubmit: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /**@internal */\r\n    static _createArray(): any[] {\r\n        var value: any = [];\r\n        value._length = 0;\r\n        return value;\r\n    }\r\n    /**@internal */\r\n    static _init() {\r\n        var namemap: any = SaveBase._namemap = {};\r\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\r\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\r\n        namemap[SaveBase.TYPE_FONT] = \"font\";\r\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\r\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\r\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\r\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\r\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\r\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\r\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\r\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\r\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\r\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\r\n        return namemap;\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._dataObj[this._valueName] = this._value;\r\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\r\n        this._newSubmit && (context.stopMerge = true);\r\n    }\r\n\r\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\r\n        if ((context._saveMark._saveuse & type) !== type) {\r\n            context._saveMark._saveuse |= type;\r\n            var cache: any = SaveBase.POOL;\r\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\r\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\r\n            o._dataObj = dataObj;\r\n            o._newSubmit = newSubmit;\r\n            var _save: any = context._save;\r\n            _save[_save._length++] = o;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Rectangle } from \"../../../maths/Rectangle\"\r\nimport { Context } from \"../../../renders/Context\"\r\n\r\nexport class SaveClipRect implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n\r\n    _globalClipMatrix: Matrix = new Matrix();\r\n    _clipInfoID: number = -1;\r\n    _clipRect: Rectangle = new Rectangle();\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\r\n        this._clipRect.clone(context._clipRect);\r\n        context._clipInfoID = this._clipInfoID;\r\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\r\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\r\n        var cache: any = SaveClipRect.POOL;\r\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\r\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\r\n        context._clipRect.clone(o._clipRect);\r\n        o._clipInfoID = context._clipInfoID;\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../../renders/Context\";\r\nimport { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\n\r\nexport class SaveMark implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _saveuse: number = 0;\r\n    /**@internal */\r\n    _preSaveMark: SaveMark;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean {\r\n        return true;\r\n    }\r\n\r\n    restore(context: Context): void {\r\n        context._saveMark = this._preSaveMark;\r\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\r\n    }\r\n\r\n    static Create(context: Context): SaveMark {\r\n        var no: any = SaveMark.POOL;\r\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\r\n        o._saveuse = 0;\r\n        o._preSaveMark = context._saveMark;\r\n        context._saveMark = o;\r\n        return o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../renders/Context\"\r\n\r\nexport class SaveTransform implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _savematrix: Matrix;\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        context._curMat = this._savematrix;\r\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var _saveMark: any = context._saveMark;\r\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\r\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\r\n        var no: any = SaveTransform.POOL;\r\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\r\n        o._savematrix = context._curMat;\r\n        context._curMat = context._curMat.copyTo(o._matrix);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../renders/Context\"\r\n\r\nexport class SaveTranslate implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _mat: Matrix = new Matrix();\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._mat.copyTo(context._curMat);\r\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var no: any = SaveTranslate.POOL;\r\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\r\n        context._curMat.copyTo(o._mat);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","#define SHADER_NAME PrimitiveFS2D\r\nprecision mediump float;\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main(){\r\n\tclip();\r\n\tgl_FragColor = getGlColor(v_color);\r\n\tgl_FragColor.rgb*=gl_FragColor.a;\r\n}","import { Const } from \"../../../../Const\"\r\nimport { ShaderData } from \"../../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\"\r\nimport { IDefineDatas } from \"../../../../RenderDriver/RenderModuleData/Design/IDefineDatas\"\r\nimport { RenderState } from \"../../../../RenderDriver/RenderModuleData/Design/RenderState\"\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\"\r\nimport { ColorFilter } from \"../../../../filters/ColorFilter\"\r\nimport { LayaGL } from \"../../../../layagl/LayaGL\"\r\nimport { Matrix } from \"../../../../maths/Matrix\"\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\"\r\nimport { Vector2 } from \"../../../../maths/Vector2\"\r\nimport { Vector4 } from \"../../../../maths/Vector4\"\r\nimport { BaseTexture } from \"../../../../resource/BaseTexture\"\r\nimport { Material } from \"../../../../resource/Material\"\r\nimport { Texture } from \"../../../../resource/Texture\"\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\n\r\nexport enum RenderSpriteData {\r\n    Zero,\r\n    Texture2D,\r\n    Primitive\r\n}\r\n\r\n//系统自带渲染数据，不可忽视，如果不设置自定义Shader，将调用引擎本身的Shader\r\nexport class Value2D {\r\n    static globalShaderData: ShaderData;\r\n    protected static _cache: any[] = [];\r\n    protected static _typeClass: any = [];\r\n    static _compileDefine: IDefineDatas;\r\n\r\n    //释放的时候用来去重的，\r\n    _needRelease = false;\r\n\r\n    shaderData: ShaderData;\r\n\r\n    _defaultShader: Shader3D;\r\n\r\n    private mainID = RenderSpriteData.Zero;\r\n    private ref = 1;\r\n\r\n    private _cacheID = 0;\r\n\r\n    filters: any[];\r\n    private _textureHost: Texture | BaseTexture\r\n\r\n    constructor(mainID: RenderSpriteData) {\r\n        this.mainID = mainID;\r\n        //这个prototype是为了防止调用到子的initialize\r\n        Value2D.prototype.initialize.call(this);\r\n    }\r\n\r\n    //为了方便复用\r\n    protected initialize() {\r\n        let mainID = this.mainID;\r\n        this.shaderData = this.shaderData || LayaGL.renderDeviceFactory.createShaderData(null);\r\n        if (this.mainID == RenderSpriteData.Texture2D) {\r\n            this.shaderData.addDefine(ShaderDefines2D.TEXTURESHADER);\r\n        }\r\n        if (this.mainID == RenderSpriteData.Primitive) {\r\n            this.shaderData.addDefine(ShaderDefines2D.PRIMITIVESHADER);\r\n        }\r\n        this.textureHost = null;\r\n\r\n        this.clipMatDir = new Vector4(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE);;\r\n        this.clipMatPos = new Vector2();\r\n        this._cacheID = mainID;\r\n        let cache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !cache) {\r\n            cache = Value2D._cache[this._cacheID] = [];\r\n            cache._length = 0;\r\n        }\r\n\r\n        //\r\n        this.shaderData.setBool(Shader3D.DEPTH_WRITE, false);\r\n        this.shaderData.setInt(Shader3D.DEPTH_TEST, RenderState.DEPTHTEST_OFF);\r\n        this.shaderData.setInt(Shader3D.BLEND, RenderState.BLEND_ENABLE_ALL);\r\n        this.shaderData.setInt(Shader3D.BLEND_EQUATION, RenderState.BLENDEQUATION_ADD);\r\n        this.shaderData.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n        this.shaderData.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n        this.shaderData.setNumber(ShaderDefines2D.UNIFORM_VERTALPHA, 1.0);\r\n        this.shaderData.setInt(Shader3D.CULL,RenderState.CULL_NONE);\r\n    }\r\n\r\n    reinit() {\r\n        this.initialize();\r\n    }\r\n\r\n    public static _initone(type: number, classT: any): void {\r\n        Value2D._compileDefine = LayaGL.unitRenderModuleDataFactory.createDefineDatas();\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n        Value2D.globalShaderData = LayaGL.renderDeviceFactory.createShaderData(null);\r\n    }\r\n\r\n    /**\r\n     * 对象池概念\r\n     * @param mainType \r\n     * @returns \r\n     */\r\n    static create(mainType: RenderSpriteData): Value2D {\r\n        var types: any = Value2D._cache[mainType] ? Value2D._cache[mainType] : [];\r\n        if (types._length) {\r\n            let sv = types[--types._length];\r\n            sv.reinit();\r\n            return sv;\r\n        }\r\n        else\r\n            return new Value2D._typeClass[mainType]();\r\n    }\r\n\r\n    /**@internal */\r\n    set size(value: Vector2) {\r\n        this.shaderData.setVector2(ShaderDefines2D.UNIFORM_SIZE, value);\r\n    }\r\n\r\n    get size() {\r\n        return this.shaderData.getVector2(ShaderDefines2D.UNIFORM_SIZE);\r\n    }\r\n\r\n    set vertAlpha(value: number) {\r\n        this.shaderData.setNumber(ShaderDefines2D.UNIFORM_VERTALPHA, value);\r\n    }\r\n\r\n    get vertAlpha() {\r\n        return this.shaderData.getNumber(ShaderDefines2D.UNIFORM_VERTALPHA);\r\n    }\r\n\r\n    /**@internal */\r\n    set mmat(value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(ShaderDefines2D.UNIFORM_MMAT, value);\r\n    }\r\n\r\n    /**@internal */\r\n    get mmat() {\r\n        return this.shaderData.getMatrix4x4(ShaderDefines2D.UNIFORM_MMAT);\r\n    }\r\n\r\n    /**@internal */\r\n    set u_MvpMatrix(value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix, value);\r\n    }\r\n\r\n    get u_MvpMatrix() {\r\n        return this.shaderData.getMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix);\r\n    }\r\n\r\n    public get textureHost(): Texture | BaseTexture {\r\n        return this._textureHost\r\n    }\r\n    public set textureHost(value: Texture | BaseTexture) {\r\n        this._textureHost = value;\r\n        let textrueReadGamma: boolean = false;\r\n        if (this.textureHost) {\r\n            if (this.textureHost instanceof BaseTexture) {\r\n                textrueReadGamma = (this.textureHost as BaseTexture).gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof Texture && (this.textureHost as Texture).bitmap) {\r\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\r\n            }\r\n        }\r\n\r\n        if (textrueReadGamma) {\r\n            this.shaderData.addDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        } else {\r\n            this.shaderData.removeDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        }\r\n        let tex;\r\n        if (value instanceof Texture) {\r\n            tex = value.bitmap;\r\n        } else {\r\n            tex = value;\r\n        }\r\n        this.shaderData.setTexture(ShaderDefines2D.UNIFORM_SPRITETEXTURE, tex);\r\n\r\n    }\r\n\r\n    set color(value: Vector4) {\r\n        value && this.shaderData.setVector(ShaderDefines2D.UNIFORM_COLOR, value);\r\n    }\r\n\r\n    get color() {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_COLOR);\r\n    }\r\n\r\n    set colorAdd(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_COLORADD, value);\r\n    }\r\n\r\n    get colorAdd() {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_COLORADD);\r\n    }\r\n\r\n    set clipMatDir(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, value);\r\n    }\r\n\r\n    get clipMatDir() {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_CLIPMATDIR);\r\n    }\r\n\r\n    set clipMatPos(value: Vector2) {\r\n        this.shaderData.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, value);\r\n    }\r\n\r\n    get clipMatPos() {\r\n        return this.shaderData.getVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS);\r\n    }\r\n\r\n    upload(material: Material | null, shaderData: ShaderData): void {\r\n        //this._size.setValue(RenderState2D.width, RenderState2D.height)\r\n        //this.size = this._size;\r\n        //update owner ShaderData\r\n        //this.updateShaderData();\r\n        // if (material) {\r\n        //     //Custom Shader\r\n        //     var shaderPass = material._shader._subShaders[0]._passes;\r\n\r\n        //     var pass;\r\n        //     for (var j = 0, m = shaderPass.length; j < m; j++) {\r\n        //         pass = shaderPass[j];\r\n        //         //NOTE:this will cause maybe a shader not render but do prepare before，but the developer can avoide this manual,for example shaderCaster=false.\r\n        //         if (pass.pipelineMode == \"Forward\")\r\n        //             break;\r\n        //     }\r\n        //     var comDef = Value2D._compileDefine;\r\n        //     shaderData.getDefineData().cloneTo(Value2D._compileDefine);\r\n        //     //mateiral Define\r\n        //     Value2D._compileDefine.addDefineDatas(material._defineDatas);\r\n        //     //Global Define\r\n        //     Value2D._compileDefine.addDefineDatas(Value2D.globalShaderData.getDefineData());\r\n        //     var shaderIns = pass.withCompile(Value2D._compileDefine, true) as WebGLShaderInstance;\r\n        //     shaderIns.bind();\r\n        //     shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, shaderData as any, true);\r\n        //     shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, Value2D.globalShaderData as any, true);\r\n        //     shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, material.shaderData as any, true);\r\n        // } else {\r\n        //     //default pass\r\n        //     var shaderPass = this._defaultShader._subShaders[0]._passes;\r\n\r\n        //     if (shaderPass.length >= 1) {\r\n        //         pass = shaderPass[0];\r\n        //         //var comDef: DefineDatas = Value2D._compileDefine;\r\n        //         var shaderIns = pass.withCompile(shaderData.getDefineData(), true) as unknown as WebGLShaderInstance;\r\n        //         shaderIns.bind();\r\n        //         shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, shaderData as any, true);\r\n        //         shaderIns.uploadRenderStateBlendDepth(shaderData)\r\n        //     } else {\r\n        //         //TODO 多pass情况\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setFilter(value: ColorFilter): void {\r\n        if (!value)\r\n            return;\r\n\r\n        this.shaderData.addDefine(value.typeDefine);//搬到setValue中\r\n    }\r\n\r\n    clear(): void {\r\n        if(this.shaderData){\r\n            this.shaderData.clearDefine();\r\n            //this.shaderData.destroy();\r\n        }\r\n    }\r\n\r\n    //\r\n    blendNormal() {\r\n        this.shaderData.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_SRC_ALPHA);\r\n        this.shaderData.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n    }\r\n\r\n    blendPremulAlpha() {\r\n        this.shaderData.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n        this.shaderData.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n    }\r\n\r\n    blendAdd() {\r\n        this.shaderData.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n        this.shaderData.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE);\r\n    }\r\n\r\n    blendMask() {\r\n        this.shaderData.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ZERO);\r\n        this.shaderData.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_SRC_ALPHA);\r\n    }\r\n\r\n    release(): void {\r\n        if ((--this.ref) < 1) {\r\n            let cache = Value2D._cache[this._cacheID];\r\n            cache && (cache[cache._length++] = this);\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Value2DManager {\r\n\r\n}","\r\nimport prime_ps from './files/primitive.ps.glsl';\r\nimport prime_vs from './files/primitive.vs.glsl';\r\nimport texture_ps from './files/texture.ps.glsl';\r\nimport texture_vs from './files/texture.vs.glsl';\r\n\r\nimport Sprite2DFrag from './NewShader/Sprite2DFrag.glsl';\r\nimport Sprite2DShaderInfo from './NewShader/Sprite2DShaderInfo.glsl';\r\nimport Sprite2DVertex from './NewShader/Sprite2DVertex.glsl';\r\n\r\nimport { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\r\nimport { Material } from \"../../../resource/Material\";\r\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\n\r\nexport class Shader2D {\r\n    /**@internal */\r\n    static textureShader: Shader3D;\r\n    /**@internal */\r\n    static primitiveShader: Shader3D;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy(): void {\r\n    }\r\n\r\n    /**\r\n     * primitive Mesh Descript\r\n     */\r\n    public static readonly primitiveAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_position': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n    }\r\n\r\n    /**\r\n     * TextureSV Mesh Descript\r\n     */\r\n    public static readonly textureAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_posuv': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n        'a_attribFlags': [2, ShaderDataType.Vector4]\r\n    }\r\n\r\n    /**\r\n     * init 2D internal Shader\r\n     */\r\n    static __init__(): void {\r\n        Shader3D.addInclude(\"Sprite2DFrag.glsl\", Sprite2DFrag);\r\n        Shader3D.addInclude(\"Sprite2DVertex.glsl\", Sprite2DVertex);\r\n        Shader3D.addInclude(\"Sprite2DShaderInfo.glsl\", Sprite2DShaderInfo);\r\n\r\n        //textureShader\r\n        Shader2D.textureShader = Shader3D.add(\"Sprite2DTexture\", false, false);\r\n        Shader2D.textureShader.shaderType = ShaderFeatureType.D2;\r\n        let subShader = new SubShader(Shader2D.textureAttribute, {}, {});\r\n        Shader2D.textureShader.addSubShader(subShader);\r\n        subShader.addShaderPass(texture_vs, texture_ps);\r\n\r\n        //primitiveShader\r\n        Shader2D.primitiveShader = Shader3D.add(\"Sprite2DPrimitive\", false, false);\r\n        Shader2D.primitiveShader.shaderType = ShaderFeatureType.D2;\r\n        subShader = new SubShader(Shader2D.primitiveAttribute, {}, {});\r\n        Shader2D.primitiveShader.addSubShader(subShader);\r\n        subShader.addShaderPass(prime_vs, prime_ps);\r\n    }\r\n}\r\n\r\n","vec3 gammaToLinear(in vec3 value)\r\n{\r\n    return pow((value + 0.055) / 1.055, vec3(2.4));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvec3 linearToGamma(in vec3 value)\r\n{\r\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\r\n\r\n    // return pow(value, vec3(1.0 / 2.2));\r\n    // return pow(value, vec3(0.455));\r\n}\r\n\r\nvec4 linearToGamma(in vec4 value)\r\n{\r\n    return vec4(linearToGamma(value.rgb), value.a);\r\n}\r\n\r\nvec4 transspaceColor(vec4 color)\r\n{\r\n     \r\n #ifndef GAMMATEXTURE\r\n     //是linear数据\r\n     #ifdef GAMMASPACE\r\n         color.xyz = linearToGamma(color.xyz);    \r\n     #endif\r\n #else\r\n     //gamma数据\r\n     #ifndef GAMMASPACE\r\n         color.xyz = gammaToLinear(color.xyz);\r\n     #endif\r\n #endif\r\n     return color;\r\n }\r\n\r\n#if defined(PRIMITIVEMESH)\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n  \r\n\r\n    vec4 getGlColor(vec4 color){\r\n        #ifdef GAMMASPACE\r\n            return color;\r\n        #else\r\n            return gammaToLinear(color);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n    \r\n    //uniform\r\n    uniform sampler2D u_spriteTexture;\r\n\r\n    #ifdef BLUR_FILTER\r\n        uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n        uniform vec2 u_blurInfo;\r\n        #define PI 3.141593\r\n    #endif\r\n\r\n    #ifdef COLOR_FILTER\r\n        uniform vec4 u_colorAlpha;\r\n        uniform mat4 u_colorMat;\r\n    #endif\r\n\r\n    #ifdef GLOW_FILTER\r\n        uniform vec4 u_color;\r\n        uniform vec4 u_blurInfo1;\r\n        uniform vec4 u_blurInfo2;\r\n    #endif\r\n\r\n    #ifdef COLOR_ADD\r\n        uniform vec4 u_colorAdd;\r\n    #endif\r\n\r\n    #ifdef FILLTEXTURE\r\n        uniform vec4 u_TexRange; // startu,startv,urange, vrange\r\n    #endif\r\n\r\n\r\n    #ifdef BLUR_FILTER\r\n        float getGaussian(float x, float y)\r\n        {\r\n            return u_strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / u_strength_sig2_2sig2_gauss1.z);\r\n        }\r\n\r\n        vec4 blur()\r\n        {\r\n            const float blurw = 9.0;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 halfsz = vec2(blurw, blurw) / 2.0 / u_blurInfo;\r\n            vec2 startpos = v_texcoordAlpha.xy - halfsz;\r\n            vec2 ctexcoord = startpos;\r\n            vec2 step = 1.0 / u_blurInfo; //每个像素\r\n\r\n            for (float y = 0.0; y <= blurw; ++y)\r\n            {\r\n                ctexcoord.x = startpos.x;\r\n                for (float x = 0.0; x <= blurw; ++x)\r\n                {\r\n                    // TODO 纹理坐标的固定偏移应该在vs中处理\r\n                    vec4Color +=transspaceColor(texture2D(u_spriteTexture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0));\r\n                    ctexcoord.x += step.x;\r\n                }\r\n                ctexcoord.y += step.y;\r\n            }\r\n            // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\r\n            return vec4Color;\r\n        }\r\n    #endif\r\n\r\n    vec4 getSpriteTextureColor(){\r\n        #ifdef FILLTEXTURE\r\n            vec4 color = texture2D(u_spriteTexture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\r\n        #else\r\n            vec4 color = texture2D(u_spriteTexture, v_texcoordAlpha.xy);\r\n        #endif\r\n        return transspaceColor(color);\r\n    }\r\n\r\n    void setglColor(in vec4 color){\r\n        if (v_useTex <= 0.)\r\n            color = vec4(1., 1., 1., 1.);\r\n\r\n        color.a *= v_color.w;\r\n        // color.rgb*=v_color.w;\r\n        vec4 transColor = v_color;\r\n        #ifndef GAMMASPACE\r\n            transColor = gammaToLinear(v_color);\r\n        #endif\r\n        color.rgb *= transColor.rgb;\r\n        gl_FragColor = color;\r\n\r\n        #ifdef COLOR_ADD\r\n            gl_FragColor = vec4(u_colorAdd.rgb, u_colorAdd.a * gl_FragColor.a);\r\n            gl_FragColor.xyz *= u_colorAdd.a;\r\n        #endif\r\n\r\n        #ifdef BLUR_FILTER\r\n            gl_FragColor = blur();\r\n            gl_FragColor.w *= v_color.w;\r\n        #endif\r\n\r\n        #ifdef COLOR_FILTER\r\n            mat4 alphaMat = u_colorMat;\r\n\r\n            alphaMat[0][3] *= gl_FragColor.a;\r\n            alphaMat[1][3] *= gl_FragColor.a;\r\n            alphaMat[2][3] *= gl_FragColor.a;\r\n\r\n            gl_FragColor = gl_FragColor * alphaMat;\r\n            gl_FragColor += u_colorAlpha / 255.0 * gl_FragColor.a;\r\n        #endif\r\n\r\n        #ifdef GLOW_FILTER\r\n            const float c_IterationTime = 10.0;\r\n            float floatIterationTotalTime = c_IterationTime * c_IterationTime;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 vec2FilterDir = vec2(-u_blurInfo1.z / u_blurInfo2.x, -u_blurInfo1.w / u_blurInfo2.y);\r\n            vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\r\n            float maxNum = u_blurInfo1.x * u_blurInfo1.y;\r\n            vec2 vec2Off = vec2(0.0, 0.0);\r\n            float floatOff = c_IterationTime / 2.0;\r\n            for (float i = 0.0; i <= c_IterationTime; ++i){\r\n                for (float j = 0.0; j <= c_IterationTime; ++j){\r\n                    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\r\n                    vec4Color += transspaceColor(texture2D(u_spriteTexture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off))  ;\r\n                }\r\n            }\r\n            vec4Color /= floatIterationTotalTime;\r\n            gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\r\n            gl_FragColor.rgb *= gl_FragColor.a;\r\n        #endif\r\n    }\r\n#endif\r\n\r\n\r\n\r\nvoid clip(){\r\n    if(v_cliped.x<0.) discard;\r\n    if(v_cliped.x>1.) discard;\r\n    if(v_cliped.y<0.) discard;\r\n    if(v_cliped.y>1.) discard;\r\n}","#include \"Sprite2DShaderInfo.glsl\";\r\nuniform vec4 u_clipMatDir;\r\nuniform vec2 u_clipMatPos;// 这个是全局的，不用再应用矩阵了。\r\nuniform vec2 u_size;\r\nuniform float u_VertAlpha;\r\nvarying vec2 v_cliped;\r\n#ifdef WORLDMAT\r\n    uniform mat4 u_mmat;\r\n    vec4 transedPos;\r\n#endif\r\nvarying vec4 v_color;\r\n\r\n\r\n#if defined(PRIMITIVEMESH)\r\n    // attribute vec4 a_position;\r\n    // attribute vec4 a_attribColor;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n        info.color = a_attribColor;\r\n        info.color.a*=u_VertAlpha;\r\n        float clipw = length(u_clipMatDir.xy);\r\n        float cliph = length(u_clipMatDir.zw);\r\n        #ifdef WORLDMAT\r\n            vec2 clippos = transedPos.xy - u_clipMatPos.xy;\r\n        #else\r\n        vec2 clippos = a_position.xy - u_clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        #endif\r\n\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\r\n            info.cliped =vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n    }\r\n\r\n    void getPosition(inout vec4 pos){\r\n        pos = vec4(a_position.xy,0.,1.);\r\n        #ifdef WORLDMAT\r\n            pos = u_mmat*pos;\r\n            transedPos=pos;\r\n            pos = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,pos.z,1.0);\r\n        #else\r\n            pos = vec4((a_position.x/u_size.x-0.5)*2.0,(0.5-a_position.y/u_size.y)*2.0,a_position.z,1.0);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n\t//texture和fillrect使用的。\r\n    // attribute vec4 a_posuv;\r\n    // attribute vec4 a_attribColor;\r\n    // attribute vec4 a_attribFlags;\r\n    #ifdef MVP3D\r\n        uniform mat4 u_MvpMatrix;\r\n    #endif\r\n\r\n    varying vec4 v_texcoordAlpha;\r\n    varying float v_useTex;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n       \t//texcoordAlpha\r\n        info.texcoordAlpha.xy = a_posuv.zw;\r\n        //color\r\n        info.color = a_attribColor;\r\n        info.color.a*=u_VertAlpha;\r\n\t    info.color.xyz*= info.color.w;//反正后面也要预乘\r\n        //useTex\r\n        info.useTex = a_attribFlags.r;\r\n\r\n        //clip\r\n    \tfloat clipw = length(u_clipMatDir.xy);\r\n    \tfloat cliph = length(u_clipMatDir.zw);\r\n\t    vec2 clpos = u_clipMatPos.xy;\r\n        #ifdef WORLDMAT\r\n            vec2 clippos = transedPos.xy - clpos;\r\n        #else\r\n        vec2 clippos = a_posuv.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        #endif\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\r\n            info.cliped = vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n    }\r\n\r\n    void getPosition(inout vec4 glPosition){\r\n        vec4 pos = vec4(a_posuv.xy,0.,1.);\r\n        #ifdef WORLDMAT\r\n            pos= u_mmat * pos;\r\n            transedPos=pos;//vec4(pos.x,pos.y,0.0,1.0);\r\n        #endif\r\n        vec4 pos1 = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,0.,1.0);\r\n        #ifdef MVP3D\r\n            glPosition = u_MvpMatrix * pos1;\r\n        #else\r\n            glPosition = pos1;\r\n        #endif\r\n        \r\n        #ifdef INVERTY\r\n            glPosition.y = -glPosition.y;\r\n        #endif\r\n    }\r\n\r\n#endif","\r\n#if defined(PRIMITIVEMESH)\r\n    struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n    };\r\n#elif defined(TEXTUREVS)\r\n   struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n        vec4 texcoordAlpha;\r\n        float useTex;\r\n    };\r\n#endif","#define SHADER_NAME TextureVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\nvoid main() {\r\n\tvec4 pos;\r\n\t//先计算位置，再做裁剪\r\n\tgetPosition(pos);\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\r\n\tv_cliped = info.cliped;\r\n\tv_texcoordAlpha = info.texcoordAlpha;\r\n\tv_useTex = info.useTex;\r\n\tv_color = info.color;\r\n\r\n\tgl_Position = pos;\r\n\r\n}\r\n","#define SHADER_NAME TextureFS2D\r\n//texture和fillrect使用的。\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main()\r\n{\r\n    clip();\r\n    vec4 color = getSpriteTextureColor();\r\n    setglColor(color);\r\n}\r\n","#define SHADER_NAME PrimitiveVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\n\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\n\r\nvoid main(){\r\n\tvec4 pos;\r\n\t//先计算位置，再做裁剪\r\n\tgetPosition(pos);\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\t\r\n\t//Update \r\n\tv_color = info.color;\r\n\tv_cliped = info.cliped;\r\n\t\r\n\tgl_Position = pos;\r\n}","import { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { ShaderDefine } from \"../../../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\nexport class ShaderDefines2D {\r\n    /**@internal */\r\n    static TEXTURE2D: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVE: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERGLOW: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERBLUR: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERCOLOR: ShaderDefine;\r\n    /**@internal */\r\n    static COLORADD: ShaderDefine;\r\n    /**@internal */\r\n    static WORLDMAT: ShaderDefine;\r\n    /**@internal */\r\n    static FILLTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SKINMESH: ShaderDefine;\r\n    /**@internal */\r\n    static MVP3D: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMASPACE: ShaderDefine;\r\n    /**@internal */\r\n    static INVERTY: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMATEXTURE: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static TEXTURESHADER: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVESHADER: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static UNIFORM_MMAT: number;// mat4 u_mmat\r\n    static UNIFORM_CLIPMATDIR: number;// uniform vec4 u_clipMatDir;\r\n    static UNIFORM_CLIPMATPOS: number;// uniform vec2 u_clipMatPos;\r\n    static UNIFORM_MMAT2: number;// uniform mat4 u_mmat2;\r\n    static UNIFORM_SIZE:number;\r\n    static UNIFORM_VERTALPHA: number;//顶点alpha，给cacheas normal用;\r\n    static UNIFORM_MVPMatrix: number;//uniform mat4 u_MvpMatrix;\r\n\r\n    static UNIFORM_SPRITETEXTURE: number;// uniform sampler2D u_spriteTexture;\r\n    static UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1: number;//uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n    static UNIFORM_BLURINFO: number; //uniform vec2 u_blurInfo;\r\n\r\n    static UNIFORM_COLORALPHA: number;// uniform vec4 u_colorAlpha;\r\n    static UNIFORM_COLORMAT: number; //uniform mat4 u_colorMat;\r\n    static UNIFORM_COLOR: number;//uniform vec4 u_color;\r\n    static UNIFORM_BLURINFO1: number//uniform vec4 u_blurInfo1;\r\n    static UNIFORM_BLURINFO2: number//uniform vec4 u_blurInfo2;\r\n    static UNIFORM_COLORADD: number;//uniform vec4 u_colorAdd;\r\n    static UNIFORM_TEXRANGE: number;//uniform vec4 u_TexRange;\r\n\r\n    //TODO?\r\n    //static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\r\n\r\n    static __init__(): void {\r\n        ShaderDefines2D.TEXTURE2D = Shader3D.getDefineByName(\"TEXTURE2D\");\r\n        ShaderDefines2D.PRIMITIVE = Shader3D.getDefineByName(\"PRIMITIVE\");\r\n\r\n        ShaderDefines2D.FILTERGLOW = Shader3D.getDefineByName(\"GLOW_FILTER\");\r\n        ShaderDefines2D.FILTERBLUR = Shader3D.getDefineByName(\"BLUR_FILTER\");\r\n        ShaderDefines2D.FILTERCOLOR = Shader3D.getDefineByName(\"COLOR_FILTER\");\r\n        ShaderDefines2D.COLORADD = Shader3D.getDefineByName(\"COLOR_ADD\");\r\n        ShaderDefines2D.WORLDMAT = Shader3D.getDefineByName(\"WORLDMAT\");\r\n        ShaderDefines2D.FILLTEXTURE = Shader3D.getDefineByName(\"FILLTEXTURE\");\r\n        ShaderDefines2D.MVP3D = Shader3D.getDefineByName('MVP3D');\r\n\r\n        ShaderDefines2D.GAMMASPACE = Shader3D.getDefineByName('GAMMASPACE');\r\n\r\n        ShaderDefines2D.INVERTY = Shader3D.getDefineByName('INVERTY');\r\n\r\n        ShaderDefines2D.GAMMATEXTURE = Shader3D.getDefineByName('GAMMATEXTURE');\r\n\r\n        ShaderDefines2D.TEXTURESHADER = Shader3D.getDefineByName(\"TEXTUREVS\");\r\n        ShaderDefines2D.PRIMITIVESHADER = Shader3D.getDefineByName(\"PRIMITIVEMESH\");\r\n\r\n        ShaderDefines2D.initSprite2DCommandEncoder();\r\n    }\r\n\r\n    static initSprite2DCommandEncoder() {\r\n        ShaderDefines2D.UNIFORM_MMAT = Shader3D.propertyNameToID(\"u_mmat\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATDIR = Shader3D.propertyNameToID(\"u_clipMatDir\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATPOS = Shader3D.propertyNameToID(\"u_clipMatPos\");\r\n        ShaderDefines2D.UNIFORM_MMAT2 = Shader3D.propertyNameToID(\"u_mmat2\");\r\n        ShaderDefines2D.UNIFORM_SIZE = Shader3D.propertyNameToID(\"u_size\");\r\n        ShaderDefines2D.UNIFORM_VERTALPHA = Shader3D.propertyNameToID(\"u_VertAlpha\");\r\n\r\n        ShaderDefines2D.UNIFORM_MVPMatrix = Shader3D.propertyNameToID(\"u_MvpMatrix\");\r\n        ShaderDefines2D.UNIFORM_SPRITETEXTURE = Shader3D.propertyNameToID(\"u_spriteTexture\");\r\n        ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1 = Shader3D.propertyNameToID(\"u_strength_sig2_2sig2_gauss1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO = Shader3D.propertyNameToID(\"u_blurInfo\");\r\n        ShaderDefines2D.UNIFORM_COLORALPHA = Shader3D.propertyNameToID(\"u_colorAlpha\");\r\n        ShaderDefines2D.UNIFORM_COLORMAT = Shader3D.propertyNameToID(\"u_colorMat\");\r\n\r\n        ShaderDefines2D.UNIFORM_COLOR = Shader3D.propertyNameToID(\"u_color\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO1 = Shader3D.propertyNameToID(\"u_blurInfo1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO2 = Shader3D.propertyNameToID(\"u_blurInfo2\");\r\n        ShaderDefines2D.UNIFORM_COLORADD = Shader3D.propertyNameToID(\"u_colorAdd\");\r\n        ShaderDefines2D.UNIFORM_TEXRANGE = Shader3D.propertyNameToID(\"u_TexRange\");\r\n\r\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Sprite2D\");\r\n\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT, \"u_mmat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATDIR, \"u_clipMatDir\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATPOS, \"u_clipMatPos\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT2, \"u_mmat2\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SIZE, \"u_size\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_VERTALPHA, \"u_VertAlpha\", ShaderDataType.Float);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MVPMatrix, \"u_MvpMatrix\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SPRITETEXTURE, \"u_spriteTexture\", ShaderDataType.Texture2D);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, \"u_strength_sig2_2sig2_gauss1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO, \"u_blurInfo\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORALPHA, \"u_colorAlpha\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORMAT, \"u_colorMat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLOR, \"u_color\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO1, \"u_blurInfo1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO2, \"u_blurInfo2\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORADD, \"u_colorAdd\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_TEXRANGE, \"u_TexRange\", ShaderDataType.Vector4);\r\n    }\r\n}\r\n\r\n\r\n","import { Vector2 } from \"../../maths/Vector2\";\r\n// 引入角度阈值，用于判断是否为尖角\r\nconst minAngle = 15 * Math.PI / 180; // 15度的弧度值\r\n/**\r\n * 精度\r\n */\r\nconst precision = 1e-13;\r\nexport class BasePoly {\r\n\r\n    private static tempData: any[] = new Array(256);\r\n    private static vec2: Vector2;\r\n    private static tempIndexs: any[] = new Array(4);\r\n\r\n    private static _checkMinAngle(p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number): boolean {\r\n        // 计算相邻线段的方向向量\r\n        const v1x = p2x - p1x;\r\n        const v1y = p2y - p1y;\r\n        const v2x = p3x - p2x;\r\n        const v2y = p3y - p2y;\r\n\r\n        // 计算方向向量的点积\r\n        const dot = v1x * v2x + v1y * v2y;\r\n        // const cross = v1x * v2y - v1y * v2x;\r\n\r\n        // 计算方向向量的长度\r\n        const len1 = Math.sqrt(v1x * v1x + v1y * v1y);\r\n        const len2 = Math.sqrt(v2x * v2x + v2y * v2y);\r\n\r\n        // 计算夹角的余弦值\r\n        const cosAngle = dot / (len1 * len2);\r\n        const angle = Math.acos(Math.abs(cosAngle));\r\n        return Math.abs(angle) < minAngle;\r\n    }\r\n\r\n\r\n    /**\r\n     * 构造线的三角形数据。根据一个位置数组生成vb和ib\r\n     * @param\tp\r\n     * @param\tindices\r\n     * @param\tlineWidth\r\n     * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\r\n     * @param\toutVertex\r\n     * @return\r\n     */\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\r\n\r\n        if (p.length < 4) return null;\r\n\tlet offset = indexBase;\r\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\r\n        points[0] = p[0]; points[1] = p[1];\r\n        /*\r\n        var points:Array = p.concat();\r\n        if (loop) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        */\r\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\r\n        var i: number = 0;\r\n        var length: number = p.length;\r\n        //先过滤一下太相近的点\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\r\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        //如果终点和起点没有重合，且要求loop的情况的处理\r\n        let delta=Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]);\r\n        if (loop && delta > 0) {\r\n            if(delta>precision){\r\n                points[newlen++] = p[0]; points[newlen++] = p[1];\r\n            }\r\n            else{\r\n                points[newlen-2] = p[0]; points[newlen-1] = p[1];\r\n            }\r\n        }\r\n\r\n        var result: any[] = outVertex;\r\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\r\n        var w: number = lineWidth / 2;\r\n\r\n        var p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\r\n\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n        // let startIndex = result.length;\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p1x - this.vec2.x, p1y - this.vec2.y, p1x + this.vec2.x, p1y + this.vec2.y);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n\r\n\r\n            indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n            indexBase += 2;\r\n            // 夹角小于阈值,视为尖角,使用线段的中点作为拐角处的顶点\r\n            indexBase += this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2, indices, indexBase);\r\n        }\r\n\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p2x - this.vec2.x, p2y - this.vec2.y, p2x + this.vec2.x, p2y + this.vec2.y);\r\n        indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n        if (p2x == points[0] && p2y == points[1]) {\r\n            p3x = points[2];\r\n            p3y = points[3];\r\n            let last = result.length / 2;\r\n            indexBase += 4;\r\n            let tempIndexs = BasePoly.tempIndexs;\r\n            tempIndexs[0] = offset + last - 2;\r\n            tempIndexs[1] = offset + last - 1;\r\n            tempIndexs[2] = offset;\r\n            tempIndexs[3] = offset + 1;\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2, indices, indexBase, tempIndexs);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static _setMiddleVertexs(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, w: number, vertexs: number[], out: Vector2, indices: number[], indexBase: number, edgeIndexArray: number[] = null): number {\r\n        this.getNormal(x1, y1, x2, y2, w, out);\r\n        let perpx = out.x;\r\n        let perpy = out.y;\r\n        this.getNormal(x2, y2, x3, y3, w, out);\r\n        let perp2x = out.x;\r\n        let perp2y = out.y;\r\n        if (this._checkMinAngle(x1, y1, x2, y2, x3, y3)) {\r\n            if (!edgeIndexArray) {\r\n                vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n                vertexs.push(x2 - perp2x, y2 - perp2y, x2 + perp2x, y2 + perp2y);\r\n                indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n            }\r\n            else {\r\n                indices.push(edgeIndexArray[0], edgeIndexArray[1], edgeIndexArray[3], edgeIndexArray[3], edgeIndexArray[2], edgeIndexArray[0]);\r\n            }\r\n            return 2;\r\n        }\r\n\r\n        let a1 = (-perpy + y1) - (-perpy + y2);\r\n        let b1 = (-perpx + x2) - (-perpx + x1);\r\n        let c1 = (-perpx + x1) * (-perpy + y2) - (-perpx + x2) * (-perpy + y1);\r\n        let a2 = (-perp2y + y3) - (-perp2y + y2);\r\n        let b2 = (-perp2x + x2) - (-perp2x + x3);\r\n        let c2 = (-perp2x + x3) * (-perp2y + y2) - (-perp2x + x2) * (-perp2y + y3);\r\n        let denom = a1 * b2 - a2 * b1;\r\n        denom = a1 * b2 - a2 * b1;\r\n        if (Math.abs(denom) < 0.1) {\r\n            denom += 10.1;\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            return 0;\r\n        }\r\n        let px = (b1 * c2 - b2 * c1) / denom;\r\n        let py = (a2 * c1 - a1 * c2) / denom;\r\n        if (!edgeIndexArray) {\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            if (denom > 0) {\r\n                vertexs.push(px, py, x2, y2);\r\n                indices.push(indexBase + 0, indexBase + 2, indexBase + 4);\r\n                indices.push(indexBase + 4, indexBase + 3, indexBase + 0);\r\n            }\r\n            else {\r\n                vertexs.push(x2 - (px - x2), y2 - (py - y2), x2, y2);\r\n                indices.push(indexBase + 1, indexBase + 2, indexBase + 5);\r\n                indices.push(indexBase + 5, indexBase + 3, indexBase + 1);\r\n            }\r\n            vertexs.push(x2 - perp2x, y2 - perp2y, x2 + perp2x, y2 + perp2y);\r\n        }\r\n        else {\r\n            if (denom > 0) {\r\n                vertexs.push(px, py, x2, y2);\r\n                indices.push(edgeIndexArray[0], indexBase + 0, edgeIndexArray[2]);\r\n                indices.push(edgeIndexArray[2], indexBase + 1, edgeIndexArray[0]);\r\n            }\r\n            else {\r\n                vertexs.push(x2 - (px - x2), y2 - (py - y2), x2, y2);\r\n                indices.push(edgeIndexArray[1], indexBase + 0, edgeIndexArray[3]);\r\n                indices.push(edgeIndexArray[3], indexBase + 1, edgeIndexArray[1]);\r\n            }\r\n        }\r\n        //vertexs.push(px, py, x2 - (px - x2), y2 - (py - y2));\r\n        return 4;\r\n    }\r\n\r\n    static getNormal(x1: number, y1: number, x2: number, y2: number, w: number, out?: Vector2) {\r\n        if (!out) {\r\n            out = new Vector2();\r\n        }\r\n\r\n        let perpx = y2 - y1;\r\n        let perpy = x1 - x2;\r\n        let dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        out.x = perpx / dist * w;\r\n        out.y = perpy / dist * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\r\n     * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\r\n     * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\r\n     * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\r\n     * 注意把重合的点去掉\r\n     * @param\tpath\r\n     * @param\tcolor\r\n     * @param\twidth\r\n     * @param\tloop\r\n     * @param\toutvb\r\n     * @param\tvbstride  顶点占用几个float,(bytelength/4)\r\n     * @param\toutib\r\n     * test:\r\n     * 横线\r\n     * [100,100, 400,100]\r\n     * 竖线\r\n     * [100,100, 100,400]\r\n     * 直角\r\n     * [100,100, 400,100, 400,400]\r\n     * 重合点\r\n     * [100,100,100,100,400,100]\r\n     * 同一直线上的点\r\n     * [100,100,100,200,100,3000]\r\n     * 像老式电视的左边不封闭的图形\r\n     * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\r\n\r\n        var points: any[] = path.slice();\r\n        var ptlen: number = points.length;\r\n        var p1x: number = points[0], p1y: number = points[1];\r\n        var p2x: number = points[2], p2y: number = points[2];\r\n        var len: number = 0;\r\n        var rp: number = 0;\r\n        var dx: number = 0, dy: number = 0;\r\n\r\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\r\n        //x,y,len,dx,dy,tx,ty,dot\r\n        //数组中每个都表示当前点开始的长度，方向\r\n        //x,y,dx,dy\r\n\r\n        var pointnum: number = ptlen / 2;\r\n        if (pointnum <= 1) return;\r\n        if (pointnum == 2) {\r\n            //TODO\r\n            return;\r\n        }\r\n\r\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\r\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\r\n        //var segNum:int = pointnum + (loop?1:0);\r\n        var ci: number = 0;\r\n        for (var i: number = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {//loop的话，需要取第一个点来算\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n\r\n        /**\r\n         * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\r\n         */\r\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\r\n\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\r\n\r\n        }\r\n        if (loop) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export class EarcutNode {\r\n    i: any;\r\n    x: any;\r\n    y: any;\r\n    prev: any;\r\n    next: any;\r\n    z: any;\r\n    prevZ: any;\r\n    nextZ: any;\r\n    steiner: any;\r\n    constructor(i: any, x: any, y: any) {\r\n        // vertice index in coordinates array\r\n        this.i = i;\r\n\r\n        // vertex coordinates\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // previous and next vertice nodes in a polygon ring\r\n        this.prev = null;\r\n        this.next = null;\r\n\r\n        // z-order curve value\r\n        this.z = null;\r\n\r\n        // previous and next nodes in z-order\r\n        this.prevZ = null;\r\n        this.nextZ = null;\r\n\r\n        // indicates whether this is a steiner point\r\n        this.steiner = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { EarcutNode } from \"./EarcutNode\";\r\nexport class Earcut {\r\n    static earcut(data: any, holeIndices: any, dim: any): any {\r\n\r\n        dim = dim || 2;\r\n\r\n        var hasHoles: any = holeIndices && holeIndices.length,\r\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\r\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\r\n            triangles: any = [];\r\n\r\n        if (!outerNode) return triangles;\r\n\r\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\r\n\r\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n        if (data.length > 80 * dim) {\r\n            minX = maxX = data[0];\r\n            minY = maxY = data[1];\r\n\r\n            for (var i: any = dim; i < outerLen; i += dim) {\r\n                x = data[i];\r\n                y = data[i + 1];\r\n                if (x < minX) minX = x;\r\n                if (y < minY) minY = y;\r\n                if (x > maxX) maxX = x;\r\n                if (y > maxY) maxY = y;\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n            invSize = Math.max(maxX - minX, maxY - minY);\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n        }\r\n\r\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\r\n        return triangles;\r\n    }\r\n\r\n    // create a circular doubly linked list from polygon points in the specified winding order\r\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\r\n        var i: any, last: any;\r\n\r\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\r\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        } else {\r\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        }\r\n\r\n        if (last && Earcut.equals(last, last.next)) {\r\n            Earcut.removeNode(last);\r\n            last = last.next;\r\n        }\r\n\r\n        return last;\r\n    }\r\n\r\n    // eliminate colinear or duplicate points\r\n    static filterPoints(start: any, end: any): any {\r\n        if (!start) return start;\r\n        if (!end) end = start;\r\n\r\n        var p: any = start,\r\n            again: any;\r\n        do {\r\n            again = false;\r\n\r\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\r\n                Earcut.removeNode(p);\r\n                p = end = p.prev;\r\n                if (p === p.next) break;\r\n                again = true;\r\n\r\n            } else {\r\n                p = p.next;\r\n            }\r\n        } while (again || p !== end);\r\n\r\n        return end;\r\n    }\r\n\r\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\r\n        if (!ear) return;\r\n\r\n        // interlink polygon nodes in z-order\r\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\r\n\r\n        var stop: any = ear,\r\n            prev: any, next: any;\r\n\r\n        // iterate through ears, slicing them one by one\r\n        while (ear.prev !== ear.next) {\r\n            prev = ear.prev;\r\n            next = ear.next;\r\n\r\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\r\n                // cut off the triangle\r\n                triangles.push(prev.i / dim);\r\n                triangles.push(ear.i / dim);\r\n                triangles.push(next.i / dim);\r\n\r\n                Earcut.removeNode(ear);\r\n\r\n                // skipping the next vertice leads to less sliver triangles\r\n                ear = next.next;\r\n                stop = next.next;\r\n\r\n                continue;\r\n            }\r\n\r\n            ear = next;\r\n\r\n            // if we looped through the whole remaining polygon and can't find any more ears\r\n            if (ear === stop) {\r\n                // try filtering points and slicing again\r\n                if (!pass) {\r\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\r\n\r\n                    // if this didn't work, try curing all small self-intersections locally\r\n                } else if (pass === 1) {\r\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\r\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n                    // as a last resort, try splitting the remaining polygon into two\r\n                } else if (pass === 2) {\r\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // check whether a polygon node forms a valid ear with adjacent nodes\r\n    static isEar(ear: any): any {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // now make sure we don't have other points inside the potential ear\r\n        var p: any = ear.next.next;\r\n\r\n        while (p !== ear.prev) {\r\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.next;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // triangle bbox; min & max are calculated like this for speed\r\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n        // z-order range for the current triangle bbox;\r\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\r\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\r\n        // first look for points inside the triangle in increasing z-order\r\n        var p: any = ear.nextZ;\r\n\r\n        while (p && p.z <= maxZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.nextZ;\r\n        }\r\n\r\n        // then look for points in decreasing z-order\r\n        p = ear.prevZ;\r\n\r\n        while (p && p.z >= minZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.prevZ;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // go through all polygon nodes and cure small local self-intersections\r\n    //TODO:coverage\r\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\r\n        var p: any = start;\r\n        do {\r\n            var a: any = p.prev,\r\n                b: any = p.next.next;\r\n\r\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\r\n\r\n                triangles.push(a.i / dim);\r\n                triangles.push(p.i / dim);\r\n                triangles.push(b.i / dim);\r\n\r\n                // remove two nodes involved\r\n                Earcut.removeNode(p);\r\n                Earcut.removeNode(p.next);\r\n\r\n                p = start = b;\r\n            }\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return p;\r\n    }\r\n\r\n    // try splitting polygon into two and triangulate them independently\r\n    //TODO:coverage\r\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\r\n        // look for a valid diagonal that divides the polygon into two\r\n        var a: any = start;\r\n        do {\r\n            var b: any = a.next.next;\r\n            while (b !== a.prev) {\r\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\r\n                    // split the polygon in two by the diagonal\r\n                    var c: any = Earcut.splitPolygon(a, b);\r\n\r\n                    // filter colinear points around the cuts\r\n                    a = Earcut.filterPoints(a, a.next);\r\n                    c = Earcut.filterPoints(c, c.next);\r\n\r\n                    // run earcut on each half\r\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n                    return;\r\n                }\r\n                b = b.next;\r\n            }\r\n            a = a.next;\r\n        } while (a !== start);\r\n    }\r\n\r\n    // link every hole into the outer loop, producing a single-ring polygon without holes\r\n    //TODO:coverage\r\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\r\n        var queue: any = [],\r\n            i: any, len: any, start: any, end: any, list: any;\r\n\r\n        for (i = 0, len = holeIndices.length; i < len; i++) {\r\n            start = holeIndices[i] * dim;\r\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            list = Earcut.linkedList(data, start, end, dim, false);\r\n            if (list === list.next) list.steiner = true;\r\n            queue.push(Earcut.getLeftmost(list));\r\n        }\r\n\r\n        queue.sort(Earcut.compareX);\r\n\r\n        // process holes from left to right\r\n        for (i = 0; i < queue.length; i++) {\r\n            Earcut.eliminateHole(queue[i], outerNode);\r\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\r\n        }\r\n\r\n        return outerNode;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static compareX(a: any, b: any): any {\r\n        return a.x - b.x;\r\n    }\r\n\r\n    // find a bridge between vertices that connects hole with an outer ring and and link it\r\n    //TODO:coverage\r\n    static eliminateHole(hole: any, outerNode: any): void {\r\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\r\n        if (outerNode) {\r\n            var b: any = Earcut.splitPolygon(outerNode, hole);\r\n            Earcut.filterPoints(b, b.next);\r\n        }\r\n    }\r\n\r\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n    //TODO:coverage\r\n    static findHoleBridge(hole: any, outerNode: any): any {\r\n        var p: any = outerNode,\r\n            hx: any = hole.x,\r\n            hy: any = hole.y,\r\n            qx: any = -Infinity,\r\n            m: any;\r\n\r\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n        // segment's endpoint with lesser x will be potential connection point\r\n        do {\r\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n                if (x <= hx && x > qx) {\r\n                    qx = x;\r\n                    if (x === hx) {\r\n                        if (hy === p.y) return p;\r\n                        if (hy === p.next.y) return p.next;\r\n                    }\r\n                    m = p.x < p.next.x ? p : p.next;\r\n                }\r\n            }\r\n            p = p.next;\r\n        } while (p !== outerNode);\r\n\r\n        if (!m) return null;\r\n\r\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n        // if there are no points found, we have a valid connection;\r\n        // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n        var stop: any = m,\r\n            mx: any = m.x,\r\n            my: any = m.y,\r\n            tanMin: any = Infinity,\r\n            tan: any;\r\n\r\n        p = m.next;\r\n\r\n        while (p !== stop) {\r\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\r\n                    m = p;\r\n                    tanMin = tan;\r\n                }\r\n            }\r\n\r\n            p = p.next;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // interlink polygon nodes in z-order\r\n    //TODO:coverage\r\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\r\n        var p: any = start;\r\n        do {\r\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\r\n            p.prevZ = p.prev;\r\n            p.nextZ = p.next;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        p.prevZ.nextZ = null;\r\n        p.prevZ = null;\r\n\r\n        Earcut.sortLinked(p);\r\n    }\r\n\r\n    // Simon Tatham's linked list merge sort algorithm\r\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n    //TODO:coverage\r\n    static sortLinked(list: any): any {\r\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\r\n            inSize: any = 1;\r\n\r\n        do {\r\n            p = list;\r\n            list = null;\r\n            tail = null;\r\n            numMerges = 0;\r\n\r\n            while (p) {\r\n                numMerges++;\r\n                q = p;\r\n                pSize = 0;\r\n                for (i = 0; i < inSize; i++) {\r\n                    pSize++;\r\n                    q = q.nextZ;\r\n                    if (!q) break;\r\n                }\r\n                qSize = inSize;\r\n\r\n                while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                        e = p;\r\n                        p = p.nextZ;\r\n                        pSize--;\r\n                    } else {\r\n                        e = q;\r\n                        q = q.nextZ;\r\n                        qSize--;\r\n                    }\r\n\r\n                    if (tail) tail.nextZ = e;\r\n                    else list = e;\r\n\r\n                    e.prevZ = tail;\r\n                    tail = e;\r\n                }\r\n\r\n                p = q;\r\n            }\r\n\r\n            tail.nextZ = null;\r\n            inSize *= 2;\r\n\r\n        } while (numMerges > 1);\r\n\r\n        return list;\r\n    }\r\n\r\n    // z-order of a point given coords and inverse of the longer side of data bbox\r\n    //TODO:coverage\r\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\r\n        // coords are transformed into non-negative 15-bit integer range\r\n        x = 32767 * (x - minX) * invSize;\r\n        y = 32767 * (y - minY) * invSize;\r\n\r\n        x = (x | (x << 8)) & 0x00FF00FF;\r\n        x = (x | (x << 4)) & 0x0F0F0F0F;\r\n        x = (x | (x << 2)) & 0x33333333;\r\n        x = (x | (x << 1)) & 0x55555555;\r\n\r\n        y = (y | (y << 8)) & 0x00FF00FF;\r\n        y = (y | (y << 4)) & 0x0F0F0F0F;\r\n        y = (y | (y << 2)) & 0x33333333;\r\n        y = (y | (y << 1)) & 0x55555555;\r\n\r\n        return x | (y << 1);\r\n    }\r\n\r\n    // find the leftmost node of a polygon ring\r\n    //TODO:coverage\r\n    static getLeftmost(start: any): any {\r\n        var p: any = start,\r\n            leftmost: any = start;\r\n        do {\r\n            if (p.x < leftmost.x) leftmost = p;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return leftmost;\r\n    }\r\n\r\n    // check if a point lies within a convex triangle\r\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\r\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n    }\r\n\r\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n    //TODO:coverage\r\n    static isValidDiagonal(a: any, b: any): boolean {\r\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\r\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\r\n    }\r\n\r\n    // signed area of a triangle\r\n    static area(p: any, q: any, r: any): any {\r\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n    }\r\n\r\n    // check if two points are equal\r\n    static equals(p1: any, p2: any): boolean {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n\r\n    // check if two segments intersect\r\n    //TODO:coverage\r\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\r\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\r\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\r\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\r\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\r\n    }\r\n\r\n    // check if a polygon diagonal intersects any polygon segments\r\n    //TODO:coverage\r\n    static intersectsPolygon(a: any, b: any): boolean {\r\n        var p: any = a;\r\n        do {\r\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                Earcut.intersects(p, p.next, a, b)) return true;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if a polygon diagonal is locally inside the polygon\r\n    //TODO:coverage\r\n    static locallyInside(a: any, b: any): boolean {\r\n        return Earcut.area(a.prev, a, a.next) < 0 ?\r\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\r\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\r\n    }\r\n\r\n    // check if the middle point of a polygon diagonal is inside the polygon\r\n    //TODO:coverage\r\n    static middleInside(a: any, b: any): boolean {\r\n        var p: any = a,\r\n            inside: any = false,\r\n            px: any = (a.x + b.x) / 2,\r\n            py: any = (a.y + b.y) / 2;\r\n        do {\r\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n                inside = !inside;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return inside;\r\n    }\r\n\r\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n    //TODO:coverage\r\n    static splitPolygon(a: any, b: any): any {\r\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\r\n            b2: any = new EarcutNode(b.i, b.x, b.y),\r\n            an: any = a.next,\r\n            bp: any = b.prev;\r\n\r\n        a.next = b;\r\n        b.prev = a;\r\n\r\n        a2.next = an;\r\n        an.prev = a2;\r\n\r\n        b2.next = a2;\r\n        a2.prev = b2;\r\n\r\n        bp.next = b2;\r\n        b2.prev = bp;\r\n\r\n        return b2;\r\n    }\r\n\r\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n    static insertNode(i: any, x: any, y: any, last: any): any {\r\n        var p: any = new EarcutNode(i, x, y);\r\n\r\n        if (!last) {\r\n            p.prev = p;\r\n            p.next = p;\r\n\r\n        } else {\r\n            p.next = last.next;\r\n            p.prev = last;\r\n            last.next.prev = p;\r\n            last.next = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    static removeNode(p: any): void {\r\n        p.next.prev = p.prev;\r\n        p.prev.next = p.next;\r\n\r\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n    }\r\n    // return a percentage difference between the polygon area and its triangulation area;\r\n    // used to verify correctness of triangulation\r\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\r\n        var hasHoles = holeIndices && holeIndices.length;\r\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n    \r\n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n        if (hasHoles) {\r\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n                var start = holeIndices[i] * dim;\r\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n            }\r\n        }\r\n    \r\n        var trianglesArea = 0;\r\n        for (i = 0; i < triangles.length; i += 3) {\r\n            var a = triangles[i] * dim;\r\n            var b = triangles[i + 1] * dim;\r\n            var c = triangles[i + 2] * dim;\r\n            trianglesArea += Math.abs(\r\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n        }\r\n    \r\n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n    };*/\r\n\r\n    static signedArea(data: any, start: any, end: any, dim: any): any {\r\n        var sum: any = 0;\r\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\r\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n            j = i;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\n    /*earcut.flatten = function (data) {\r\n        var dim = data[0][0].length,\r\n            result = {vertices: [], holes: [], dimensions: dim},\r\n            holeIndex = 0;\r\n    \r\n        for (var i = 0; i < data.length; i++) {\r\n            for (var j = 0; j < data[i].length; j++) {\r\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n            }\r\n            if (i > 0) {\r\n                holeIndex += data[i - 1].length;\r\n                result.holes.push(holeIndex);\r\n            }\r\n        }\r\n        return result;\r\n    };*/\r\n}\r\n\r\n","/**\r\n * ...\r\n * @author xie\r\n */\r\nexport class SubmitKey {\r\n    blendShader: number;\r\n    submitType: number;\r\n    other: number;\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.submitType = -1;\r\n        this.blendShader = this.other = 0;\r\n        //alpha = 1;\r\n    }\r\n}\r\n\r\n\r\n","import { Const } from \"../../Const\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { Context } from \"../../renders/Context\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Sprite2DGeometry } from \"../utils/Sprite2DGeometry\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\n\r\nexport class SubmitBase {\r\n    static KEY_ONCE = -1;\r\n    static KEY_FILLRECT = 1;\r\n    static KEY_DRAWTEXTURE = 2;\r\n    static KEY_VG = 3;\r\n    static KEY_TRIANGLES = 4;\r\n\r\n    static RENDERBASE: SubmitBase;\r\n    static ID = 1;\r\n\r\n    clipInfoID = -1;\t//用来比较clipinfo\r\n    blendType = -1;\r\n    protected _id = 0;\r\n    /**@internal */\r\n    _renderType = 0;\r\n    //渲染key，通过key判断是否是同一个\r\n    /**@internal */\r\n    _key = new SubmitKey();\r\n    _mesh: Sprite2DGeometry;\r\n    material: Material;\r\n\r\n    // 从VB中什么地方开始画，画到哪\r\n    /**@internal */\r\n    _startIdx = 0;\t\t//indexbuffer 的偏移，单位是byte\r\n    /**@internal */\r\n    _numEle = 0;\r\n\r\n    _colorFiler: ColorFilter = null;\r\n    shaderValue: Value2D = null;\r\n\r\n    constructor() {\r\n        this._id = ++SubmitBase.ID;\r\n    }\r\n\r\n    /*\r\n       create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Sprite2DGeometry, sv: Value2D): SubmitBase {\r\n        var o = new SubmitBase();\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\r\n        o._startIdx = mesh.indexNum * Const.INDEX_BYTES;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o.shaderValue = sv;\r\n        o.material = context._material;\r\n        //sv.setValue(context._shader2D);\r\n        o._colorFiler = context._colorFiler;\r\n        return o;\r\n    }\r\n}\r\n\r\nSubmitBase.RENDERBASE = new SubmitBase();\r\n\r\n","/**\r\n * \r\n * @author laya\r\n */\r\nexport class RenderInfo {\r\n    /**当前帧的开始时间 */\r\n    static loopStTm: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    static loopCount: number = 0;\r\n}","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\n/**\r\n * ...\r\n * @author laoxie\r\n */\r\nexport class CharSubmitCache {\r\n    private static __posPool: any[] = [];\r\n    private static __nPosPool: number = 0;\r\n\r\n    private _data: any[] = [];\r\n    private _ndata: number = 0;\r\n    private _tex: Texture;\r\n    private _imgId: number;\r\n    private _clipid: number = -1;\r\n    private _clipMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    _enable: boolean = false;\r\n    /**@internal */\r\n    _colorFiler: ColorFilter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n\r\n    getPos(): any[] {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n\r\n    enable(value: boolean, ctx: Context): void {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n\r\n    submit(ctx: Context): void {\r\n        var n = this._ndata;\r\n        if (!n)\r\n            return;\r\n\r\n        ctx.drawLeftData();\r\n        let shaderValue = Value2D.create(RenderSpriteData.Texture2D);\r\n        //@ts-ignore\r\n        ctx.fillShaderValue(shaderValue);\r\n        shaderValue.textureHost = this._tex;\r\n        //@ts-ignore\r\n        let _mesh = ctx._mesh = ctx._meshQuatTex\r\n        //@ts-ignore\r\n        let submit = ctx._curSubmit = SubmitBase.create(ctx, _mesh, shaderValue);\r\n        submit._key.other = this._imgId;\r\n        submit._colorFiler = this._colorFiler;\r\n        ctx._copyClipInfo(submit.shaderValue);\r\n        submit.clipInfoID = this._clipid;\r\n\r\n        for (var i = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n\r\n        this._ndata = 0;\r\n\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n        ctx.drawLeftData();\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { IAutoExpiringResource } from \"../../renders/ResNeedTouch\";\r\nimport { TextTexture } from \"./TextTexture\";\r\n/**\r\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\r\n */\r\nexport class CharRenderInfo implements IAutoExpiringResource{\r\n    isRandomTouch=true;\r\n    char = '';\t    \t\t\t// 调试用\r\n    texture: TextTexture;\r\n    deleted = false; \t        // 已经被删除了\r\n    uv: number[] = new Array(8);\r\n    pos = 0;\t\t\t\t\t//数组下标\r\n    width: number;\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\r\n    height: number; \t\t\t//字体高度。没有缩放\r\n    bmpWidth: number;\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\r\n    bmpHeight: number;\r\n    orix = 0;\t\t\t\t    // 原点位置，通常都是所在区域的左上角\r\n    oriy = 0;\r\n    touchTick = 0;\t\r\n    isSpace = false;\t\t    //是否是空格，如果是空格，则只有width有效\r\n    touch(): void {\r\n        var curLoop = RenderInfo.loopCount;\r\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\r\n            this.texture.touchRect(this, curLoop);\r\n            this.touchTick = curLoop;\r\n        }\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nimport { ICharRender } from \"./ICharRender\";\r\n\r\nexport interface IFontMeasure{\r\n    getFontSizeInfo(font: string, size:number): number;\r\n}\r\n\r\nvar pixelBBX = [0, 0, 0, 0];\r\nexport class MeasureFont implements IFontMeasure{\r\n    private bmpData32: Uint32Array;\r\n    private static tmpRI = new CharRenderInfo();\r\n    private charRender: ICharRender;\r\n    constructor(charRender:ICharRender){\r\n        this.charRender = charRender;\r\n    }\r\n\r\n    getFontSizeInfo(font: string, size:number): number {\r\n        let fontstr = 'bold ' + size + 'px ' + font;\r\n        // bbx初始大小\r\n        pixelBBX[0] = size / 2;// 16;\r\n        pixelBBX[1] = size / 2;// 16;\r\n        pixelBBX[2] = size;// 32;\r\n        pixelBBX[3] = size;// 32;\r\n\r\n        var orix = 16;\t\t// 左边留白，也就是x原点的位置\r\n        var oriy = 16;\r\n        var marginr = 16;\r\n        var marginb = 16;\r\n        this.charRender.scale(1, 1);\r\n        MeasureFont.tmpRI.height = size;\r\n        this.charRender.fontsz = size;\r\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, MeasureFont.tmpRI, orix, oriy, marginr, marginb);\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        //测量宽度是 tmpRI.width\r\n        this.updateBbx(bmpdt, pixelBBX, false);\r\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, MeasureFont.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        // 国字的宽度就用系统测量的，不再用像素检测\r\n        if (pixelBBX[2] < orix + MeasureFont.tmpRI.width)\r\n            pixelBBX[2] = orix + MeasureFont.tmpRI.width;\r\n        this.updateBbx(bmpdt, pixelBBX, false);//TODO 改成 true\r\n        // 原点在 16,16\r\n        var xoff = Math.max(orix - pixelBBX[0], 0);\r\n        var yoff = Math.max(oriy - pixelBBX[1], 0);\r\n        var bbxw = pixelBBX[2] - pixelBBX[0];\r\n        var bbxh = pixelBBX[3] - pixelBBX[1];\r\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\r\n        return sizeinfo;\r\n    }\r\n\r\n    /**\r\n     * 检查当前线是否存在数据\r\n     * @param\tdata\r\n     * @param\tl\r\n     * @param\tsx\r\n     * @param\tex\r\n     * @return\r\n     */\r\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\r\n        if (this.bmpData32.buffer != data.data.buffer) {\r\n            this.bmpData32 = new Uint32Array(data.data.buffer);\r\n        }\r\n        var stpos = data.width * l + sx;\r\n        for (var x = sx; x < ex; x++) {\r\n            if (this.bmpData32[stpos++] != 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 根据bmp数据和当前的包围盒，更新包围盒\r\n     * 由于选择的文字是连续的，所以可以用二分法\r\n     * @param\tdata\r\n     * @param\tcurbbx \t[l,t,r,b]\r\n     * @param   onlyH 不检查左右\r\n     */\r\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var x = 0;\r\n        // top\r\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\r\n        var ey = 0;\r\n        var y = sy;\r\n        if (this.checkBmpLine(data, sy, 0, w)) {\r\n            // 如果当前行有数据，就要往上找\r\n            while (true) {\r\n                y = (sy + ey) / 2 | 0;\t// 必须是int\r\n                if (y + 1 >= sy) {// \r\n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\r\n                    curbbx[1] = y;\r\n                    break;\r\n                }\r\n                if (this.checkBmpLine(data, y, 0, w)) {\r\n                    //中间线有数据，搜索上半部分\r\n                    sy = y;\r\n                } else {\r\n                    //中间线没有有数据，搜索下半部分\r\n                    ey = y;\r\n                }\r\n            }\r\n        }\r\n        // 下半部分\r\n        if (curbbx[3] > h) curbbx[3] = h;\r\n        else {\r\n            y = sy = curbbx[3];\r\n            ey = h;\r\n            if (this.checkBmpLine(data, sy, 0, w)) {\r\n                while (true) {\r\n                    y = (sy + ey) / 2 | 0;\r\n                    if (y - 1 <= sy) {\r\n                        curbbx[3] = y;\r\n                        break;\r\n                    }\r\n                    if (this.checkBmpLine(data, y, 0, w)) {\r\n                        sy = y;\r\n                    } else {\r\n                        ey = y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onlyH)\r\n            return;\r\n\r\n        // 左半部分\r\n        var minx = curbbx[0];\r\n        var stpos = w * curbbx[1]; //w*cy+0\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = 0; x < minx; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    minx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[0] = minx;\r\n        // 右半部分\r\n        var maxx = curbbx[2];\r\n        stpos = w * curbbx[1]; //w*cy\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = maxx; x < w; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    maxx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[2] = maxx;\r\n    }\r\n}","/**\r\n * 纹理寻址模式。\r\n */\r\nexport enum WrapMode {\r\n    /** 循环平铺。*/\r\n    Repeat = 0,\r\n    /** 超过UV边界后采用最后一个像素。*/\r\n    Clamp = 1,\r\n    /** 镜像采样 */\r\n    Mirrored = 2\r\n}","import { Point } from \"../../maths/Point\"\r\n\r\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\r\nexport class AtlasGrid {\r\n    atlasID: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _texCount: number = 0;\r\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\r\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\r\n    _used: number = 0;\t\t\t\t// 使用率\r\n\r\n    // TODO type 是否有用\r\n\r\n    //------------------------------------------------------------------------------\r\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n        this.atlasID = id;\r\n        this._init(width, height);\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\r\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\r\n        if (!this._get(width, height, pt))\r\n            return false;\r\n        //根据获得的x,y填充\r\n        this._fill(pt.x, pt.y, width, height, type);\r\n        this._texCount++;\r\n        //返回是否成功，以及X位置和Y位置\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _release(): void {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _init(width: number, height: number): boolean {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._release();\r\n        if (this._width == 0) return false;\r\n        this._cells = new Uint8Array(this._width * this._height * 3);\r\n        this._rowInfo = new Uint8Array(this._height);\r\n        this._used = 0;\r\n        this._clear();\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _get(width: number, height: number, pt: Point): boolean {\r\n        if (width > this._width || height > this._height) {\r\n            return false;\r\n        }\r\n        //定义返回的x,y的位置\r\n        var rx: number = -1;\r\n        var ry: number = -1;\r\n        //为了效率先保存临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeight: number = this._height;\r\n        //定义一个变量为了指向 m_pCells\r\n        var pCellBox: Uint8Array = this._cells;\r\n\r\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\r\n        for (var y: number = 0; y < nHeight; y++) {\r\n            //如果该行的空白数 小于 要放入的宽度返回\r\n            if (this._rowInfo[y] < width) continue;\r\n            for (var x: number = 0; x < nWidth;) {\r\n\r\n                var tm: number = (y * nWidth + x) * 3;\r\n\r\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                rx = x;\r\n                ry = y;\r\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\r\n                for (var xx: number = 0; xx < width; xx++) {\r\n                    if (pCellBox[3 * xx + tm + 2] < height) {\r\n                        rx = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                // 不行就x继续前进\r\n                if (rx < 0) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                // 找到了\r\n                pt.x = rx;\r\n                pt.y = ry;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\r\n        //定义一些临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeghit: number = this._height;\r\n        //代码检查\r\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\r\n\r\n        //填充\r\n        for (var yy: number = y; yy < (h + y); ++yy) {\r\n            this._check(this._rowInfo[yy] >= w);\r\n            this._rowInfo[yy] -= w;\r\n            for (var xx: number = 0; xx < w; xx++) {\r\n                var tm: number = (x + yy * nWidth + xx) * 3;\r\n                this._check(this._cells[tm] == 0);\r\n                this._cells[tm] = type;\r\n                this._cells[tm + 1] = w;\r\n                this._cells[tm + 2] = h;\r\n            }\r\n        }\r\n        //调整我左方相邻空白格子的宽度连续信息描述\r\n        if (x > 0) {\r\n            for (yy = 0; yy < h; ++yy) {\r\n                // TODO 下面应该可以优化\r\n                var s: number = 0;\r\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\r\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\r\n                }\r\n                for (xx = s; xx > 0; --xx) {\r\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\r\n                    this._check(xx > 0);\r\n                }\r\n            }\r\n        }\r\n        //调整我上方相邻空白格子的高度连续信息描述\r\n        if (y > 0) {\r\n            for (xx = x; xx < (x + w); ++xx) {\r\n                // TODO 下面应该可以优化\r\n                s = 0;\r\n                for (yy = y - 1; yy >= 0; --yy, s++) {\r\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\r\n                }\r\n                for (yy = s; yy > 0; --yy) {\r\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\r\n                    this._check(yy > 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._used += (w * h) / (this._width * this._height);\r\n    }\r\n\r\n    private _check(ret: boolean): void {\r\n        if (ret == false) {\r\n            console.log(\"xtexMerger 错误啦\");\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _clear(): void {\r\n        this._texCount = 0;\r\n        for (var y: number = 0; y < this._height; y++) {\r\n            this._rowInfo[y] = this._width;\r\n        }\r\n        for (var i: number = 0; i < this._height; i++) {\r\n            for (var j: number = 0; j < this._width; j++) {\r\n                var tm: number = (i * this._width + j) * 3;\r\n                this._cells[tm] = 0;\r\n                this._cells[tm + 1] = this._width - j;\r\n                this._cells[tm + 2] = this._width - i;\r\n            }\r\n        }\r\n    }\r\n    //------------------------------------------------------------------\r\n}\r\n\r\n\r\n","import { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Texture2D } from \"../../resource/Texture2D\";\r\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\r\nimport { TextAtlas } from \"./TextAtlas\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { TextRender } from \"./TextRender\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * 保存文字的贴图\r\n */\r\nexport class TextTexture extends Texture2D {\r\n    private static pool: TextTexture[] = new Array(10); // 回收用\r\n    private static poolLen = 0;\r\n    private static cleanTm = 0;\r\n    static EVENT_REUSE='texture_recycling'\r\n\r\n    /**@internal */\r\n    _discardTm = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\r\n    genID = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\r\n    curUsedCovRate = 0; \t// 当前使用到的使用率。根据面积算的\r\n    curUsedCovRateAtlas = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\r\n    lastTouchTm = 0;\r\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\r\n    //public var isIso:Boolean = false;\r\n    constructor(textureW=TextRender.atlasWidth, textureH=TextRender.atlasWidth) {\r\n        super(textureW,textureH,TextureFormat.R8G8B8A8,false,false,true,true);\r\n        this.setPixelsData(null, true, false);\r\n        this.lock = true;//防止被资源管理清除\r\n        //    this._render2DContext = LayaGL.render2DContext;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n\r\n        //TODO 预乘alpha\r\n        if (TextRender.debugUV) {\r\n            this.fillWhite();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一个文字位图\r\n     * @param\tdata\r\n     * @param\tx\t\t\t拷贝位置。\r\n     * @param\ty\r\n     * @param  uv  \r\n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\r\n     */\r\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\r\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\r\n        if (TextRender.isWan1Wan) {\r\n            return this.addCharCanvas(data, x, y, uv);\r\n        }\r\n        var dt: any = data.data;\r\n        if (data.data instanceof Uint8ClampedArray)\r\n            dt = new Uint8Array(dt.buffer);\r\n\r\n        LayaGL.textureContext.setTextureSubPixelsData(this._texture, dt, 0, false, x, y, data.width, data.height, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        u0 = x / this.width;\r\n        v0 = y / this.height;\r\n        u1 = (x + data.width) / this.width;\r\n        v1 = (y + data.height) / this.height;\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 添加一个文字\r\n     * 玩一玩不支持 getImageData，只能用canvas的方式\r\n     * @param\tcanv\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\r\n\r\n        LayaGL.textureContext.setTextureSubImageData(this._texture, canv, x, y, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        if (LayaEnv.isConch) {\r\n            u0 = x / this.width;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = y / this.height;\r\n            u1 = (x + canv.width) / this.width;\r\n            v1 = (y + canv.height) / this.height;\r\n        } else {\r\n            u0 = (x + 1) / this.width;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = (y + 1) / this.height;\r\n            u1 = (x + canv.width - 1) / this.width;\r\n            v1 = (y + canv.height - 1) / this.height;\r\n        }\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 填充白色。调试用。\r\n     */\r\n    fillWhite(): void {\r\n        var dt = new Uint8Array(this.width * this.height * 4);\r\n        dt.fill(0xff);\r\n        LayaGL.textureContext.setTextureImageData(this._getSource(), dt as any, true, false);\r\n    }\r\n\r\n    discard(): void {\r\n        // 文字贴图的释放要触发全局cacheas normal无效\r\n        ILaya.stage.setGlobalRepaint();\r\n        // 不再使用问题贴图的重用，否则会有内容清理问题\r\n        this.destroy();\r\n        return;\r\n    }\r\n\r\n    static getTextTexture(w: number, h: number): TextTexture {\r\n        // 不再回收\r\n        return new TextTexture(w, h);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        //console.log('destroy TextTexture');\r\n        this.destroy();\r\n    }\r\n\r\n    /**\r\n     * 定期清理\r\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\r\n     * \r\n     * 暂时先不用这个了。\r\n     */\r\n    static clean(): void {\r\n        var curtm = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\r\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\r\n        //每隔checkCleanTextureDt看看pool中的贴图有没有很老的可以删除的\r\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t\r\n            for (let i = 0; i < TextTexture.poolLen; i++) {\r\n                var p = TextTexture.pool[i];\r\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\r\n                    p.destroy();\t\t\t\t\t//真正删除贴图\r\n                    // 如果回收的话要正确通知使用这个贴图的\r\n                    //p.event(TextTexture.EVENT_REUSE)\r\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\r\n                    TextTexture.poolLen--;\r\n                    i--;\t//这个还要处理，用来抵消i++\r\n                }\r\n            }\r\n            TextTexture.cleanTm = curtm;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 这个贴图被当前帧使用了。\r\n     * 这个是基于贴图的，更简单，效率更高\r\n     */\r\n    touchTexture(){\r\n        let frame = RenderInfo.loopCount;\r\n        if (this.lastTouchTm != frame) {\r\n            //每帧都重新统计覆盖率\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = frame;\r\n        }\r\n    }\r\n\r\n    touchRect(ri: CharRenderInfo, frame: number): void {\r\n        if (this.lastTouchTm != frame) {\r\n            //每帧都重新统计覆盖率\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = frame;\r\n        }\r\n        var texw2 = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        var gridw2 = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\r\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\r\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\r\n    }\r\n}\r\n","import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { TextRender } from \"./TextRender\";\r\n\r\n/**\r\n *  文字贴图的大图集。\r\n */\r\nexport class TextAtlas {\r\n    texWidth: number = 1024;\r\n    texHeight: number = 1024;\r\n    private atlasgrid: AtlasGrid;\r\n    //private protectDist: number = 1;\r\n    texture: TextTexture|null = null;\r\n    charMaps: {[key:string]:CharRenderInfo} = {};\t\t// 保存文字信息的字典\r\n    static atlasGridW: number = 16;\r\n\r\n    constructor() {\r\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n\r\n    setProtecteDist(d: number): void {\r\n        //this.protectDist = d;\r\n    }\r\n\r\n    /**\r\n     * 如果返回null，则表示无法加入了\r\n     * 分配的时候优先选择最接近自己高度的节点\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    getAEmpty(w: number, h: number, pt: Point): boolean {\r\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n\r\n    /**\r\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\r\n     */\r\n    get usedRate(): number {\r\n        return this.atlasgrid._used;\r\n    }\r\n    //data 也可能是canvas\r\n    /*\r\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\r\n        texture.addChar(data, node.x, node.y);\r\n    }\r\n    */\r\n\r\n    destroy(): void {\r\n        for (var k in this.charMaps) {\r\n            var ri: CharRenderInfo = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n\r\n    printDebugInfo(): void {\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n * @en Set the font format and parse the fontInfo.\r\n * @zh 设置字体格式与解析字体模型。\r\n */\r\nexport class FontInfo {\r\n\r\n    private static _cache: Record<string, FontInfo> = {};\r\n\r\n    /**\r\n     * @en Parses a font string into a FontInfo object.\r\n     * @param font The font string to parse.\r\n     * @zh 解析字体字符串为 FontInfo 对象。\r\n     * @param font 要解析的字体字符串\r\n     */\r\n    static parse(font: string): FontInfo {\r\n        if (font === _lastFont) {\r\n            return _lastFontInfo;\r\n        }\r\n        let r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        _lastFont = font;\r\n        _lastFontInfo = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    _font: string;\r\n    /**@internal */\r\n    _family: string = \"Arial\";\r\n    /**@internal */\r\n    _size: number = 14;\r\n    /**@internal */\r\n    _italic: boolean = false;\r\n    /**@internal */\r\n    _bold: boolean = false;\r\n\r\n    constructor(font: string | null) {\r\n        this.setFont(font || \"14px Arial\");\r\n    }\r\n\r\n    /**\r\n     * @en Sets the font format based on the given value string.\r\n     * @param value The font value string to set.\r\n     * @zh 根据给定的值字符串设置字体格式。\r\n     * @param value 要设置的字体值字符串。\r\n     */\r\n    setFont(value: string): void {\r\n        this._font = value;\r\n        var words: any[] = value.split(' ');\r\n        var l: number = words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos: number = -1;\r\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\r\n        for (let i = 0; i < l; i++) {\r\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(words[i]);\r\n                if (this._size <= 0) {\r\n                    console.debug('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        //最后一个是用逗号分开的family\r\n        var fpos: number = szpos + 1;\r\n        var familys: string = words[fpos];\r\n        fpos++;//下一个\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = words.indexOf('italic') >= 0;\r\n        this._bold = words.indexOf('bold') >= 0;\r\n    }\r\n}\r\n\r\nvar _lastFont: string = '';\r\nvar _lastFontInfo: FontInfo;","/**\r\n * @private\r\n * @en WordText class for managing text content and rendering.\r\n * @zh WordText 类，用于管理文本内容和渲染。\r\n */\r\nexport class WordText {\r\n    /**\r\n     * @en The text content.\r\n     * @zh 文本内容。\r\n     */\r\n    text: string;\r\n    /**\r\n     * @en The width of the entire WordText. -1 indicates it hasn't been calculated yet.\r\n     * @zh 整个 WordText 的宽度。-1 表示还没有计算。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en The text information saved by grouping the characters of this object into texture groups. Inside is another array. The specific meaning can be found in the place of use.\r\n     * @zh 把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\r\n     */\r\n    pageChars: any[];\t\r\n    /**\r\n     * @en The ctx used for caching above. When crossing ctx (such as drawToTexture), it needs to be cleaned up, (because the settings for different ctx are different?). Set to any to indicate no concern for specific types, only for comparison purposes\r\n     * @zh 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理，（因为不同的ctx的设置不同？）。设置为any表示不关心具体类型，只是用来比较的\r\n     */\r\n    pagecharsCtx: any = null;  \r\n    /**\r\n     * @en Horizontal scale cached during rendering.\r\n     * @zh 渲染时缓存的水平缩放。\r\n     */\r\n    scalex;\t\r\n    /**\r\n     * @en Vertical scale cached during rendering.\r\n     * @zh 渲染时缓存的垂直缩放。\r\n     */\r\n    scaley;\r\n\r\n    _nativeObj: any;\r\n    _splitRender: boolean;\t// 强制拆分渲染\r\n\r\n    constructor() {\r\n        this.width = -1;\r\n        this.pageChars = [];\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Set the text content.\r\n     * @param txt The text to set.\r\n     * @zh 设置文本内容。\r\n     * @param txt 要设置的文本。\r\n     */\r\n    setText(txt: string): void {\r\n        this.text = txt;\r\n        if (this._nativeObj)\r\n            this._nativeObj._text = txt;\r\n        else\r\n            this.width = -1;\r\n        this.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * @en Convert the WordText to a string.\r\n     * @returns The text content.\r\n     * @zh 将 WordText 转换为字符串。\r\n     * @returns 文本内容。\r\n     */\r\n    toString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    /**\r\n     * @en The length of the text.\r\n     * @zh 文本的长度。\r\n     */\r\n    get length(): number {\r\n        return this.text ? this.text.length : 0;\r\n    }\r\n\r\n    /**\r\n     * @en Clean the cache. This method will delete associated textures.\r\n     * It's okay not to do it, textrender will automatically clean up the unused ones\r\n     * @zh 清理缓存。此方法会删除关联的贴图。\r\n     * 不做也可以，textrender会自动清理不用的\r\n     * TODO 重用\r\n     */\r\n    cleanCache(): void {\r\n        if (this._nativeObj) {\r\n            this._nativeObj.cleanCache();\r\n            return;\r\n        }\r\n\r\n        // 如果是独占文字贴图的，需要删掉\r\n        //TODO 这个效果不对。会造成文字错乱\r\n        let chars = this.pageChars;\r\n        if (chars.length > 0) {\r\n            for (var i in chars) {\r\n                //should use for in since chars maybe sparse \r\n                let p = chars[i];\r\n                if (!p) continue;\r\n                let tex = p.tex;\r\n                let words = p.words;\r\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\r\n                    tex.destroy();\r\n                }\r\n            }\r\n\r\n            this.pageChars = [];\r\n        }\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    /**\r\n     * @en The split render status.\r\n     * @zh 拆分渲染状态。\r\n     */\r\n    get splitRender() {\r\n        return this._splitRender;\r\n    }\r\n\r\n    set splitRender(value: boolean) {\r\n        this._splitRender = value;\r\n        if (this._nativeObj)\r\n            this._nativeObj.splitRender = value;\r\n    }\r\n}","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nexport class ICharRender {\r\n    fontsz = 16;\r\n    getWidth(font: string, str: string): number { return 0; }\r\n\r\n    scale(sx: number, sy: number): void {}\r\n\r\n    get canvasWidth(): number {  return 0;  }\r\n    set canvasWidth(w: number) {   }\r\n    \r\n    /**\r\n     *TODO stroke \r\n     * @param\tchar\r\n     * @param\tfont\r\n     * @param\tsize  返回宽高\r\n     * @return\r\n     */\r\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { Browser } from \"../../utils/Browser\";\r\nexport class CharRender_Canvas extends ICharRender {\r\n\tprivate static canvas: any = null;// HTMLCanvasElement;\r\n\tprivate ctx: any = null;\r\n\tprivate lastScaleX = 1.0;\r\n\tprivate lastScaleY = 1.0;\r\n\t//private needResetScale: boolean = false;\r\n\tprivate maxTexW = 0;\r\n\tprivate maxTexH = 0;\r\n\tprivate scaleFontSize = true;\r\n\tprivate showDbgInfo = false;\r\n\tprivate supportImageData = true;\r\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\r\n\t\tsuper();\r\n\t\tthis.maxTexW = maxw;\r\n\t\tthis.maxTexH = maxh;\r\n\t\tthis.scaleFontSize = scalefont;\r\n\t\tthis.supportImageData = useImageData;\r\n\t\tthis.showDbgInfo = showdbg;\r\n\t\tif (!CharRender_Canvas.canvas) {\r\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\r\n\t\t\tCharRender_Canvas.canvas.width = 1024;\r\n\t\t\tCharRender_Canvas.canvas.height = 512;\r\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\r\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\r\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\r\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\r\n\t\t\twindow.document.body.appendChild(CharRender_Canvas.canvas);;\r\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tget canvasWidth(): number {\r\n\t\treturn CharRender_Canvas.canvas.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tset canvasWidth(w: number) {\r\n\t\tif (CharRender_Canvas.canvas.width == w)\r\n\t\t\treturn;\r\n\t\tCharRender_Canvas.canvas.width = w;\r\n\t\tif (w > 2048) {\r\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\r\n\t\t}\r\n\t\t// 重新恢复一下缩放\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\tgetWidth(font: string, str: string): number {\r\n\t\tif (!this.ctx) return 0;\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\tif (this.ctx._lastFont != font) {\r\n\t\t\tthis.ctx.font = font;\r\n\t\t\tthis.ctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\treturn this.ctx.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\r\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tcri  修改里面的width。\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\r\n\t\tif (!this.supportImageData)\r\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\r\n\t\tw = Math.ceil(w);\r\n\t\th = Math.ceil(h);\r\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\r\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\r\n\r\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\r\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\r\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\r\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\r\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\r\n\t\t}\r\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\r\n\t\tctx.save();\r\n\t\t//ctx.textAlign = \"end\";\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\t//设置文本描边为圆角模式，默认值miter会导致在某些字体的转角字符出现尖刺现象。\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\t\tif (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\t//ctx.restore();\r\n\t\tif (rect) {\r\n\t\t\tif (rect[2] <= 0)//<=0表示原点的x偏移，例如原点在2，则这里就是-2， 这时候测量的宽度是从原点开始的，所以要加上偏移。否则会有右边被裁剪的情况\r\n\t\t\t\trect[2] = Math.ceil(-rect[2] + (cri.width + lineWidth * 2) * this.lastScaleX);\r\n\t\t\t//if (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\r\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\r\n\t\t}\r\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = imgdt.width;\r\n\t\tcri.bmpHeight = imgdt.height;\r\n\t\treturn imgdt;\r\n\t}\r\n\r\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\tif (Browser.window.isIOSHighPerformanceModePlus) {\r\n\t\t\t// 临时处理,微信高性能+模式下文本会出现裁剪问题,这里强制设置font解决\r\n\t\t\tctx.font = font;\r\n\t\t}\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\r\n\t\tw = Math.min(w, this.maxTexW);\r\n\t\th = Math.min(h, this.maxTexH);\r\n\r\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\r\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\r\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\r\n\t\tctx.font = font;\r\n\t\t//}\r\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\r\n\t\tctx.save();\r\n\t\tif (this.scaleFontSize) {\r\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\r\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t\t}\r\n\t\tctx.translate(margin_left, margin_top);\r\n\t\tctx.textAlign = \"left\";\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\r\n\t\t\tif (ctx.fillAndStrokeText) {\r\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\r\n\t\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t\t}\r\n\t\t} else if (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t}\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(0, 0, w, h);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\r\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\r\n\t\treturn CharRender_Canvas.canvas;\r\n\t}\r\n}\r\n\r\n","import { TextAtlas } from \"./TextAtlas\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { FontInfo } from \"../../utils/FontInfo\"\r\nimport { WordText } from \"../../utils/WordText\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { IFontMeasure } from \"./MeasureFont\";\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\r\n\r\nexport class TextRender extends EventDispatcher{\r\n    //config\r\n    static useOldCharBook = false;\r\n    static atlasWidth = 1024;\r\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\r\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\r\n    static forceWholeRender = false; \t// 强制整句话渲染\r\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\r\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\r\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\r\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\r\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\r\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\r\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\r\n    static isWan1Wan = false;\r\n    static showLog = false;\r\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\r\n    //config\r\n\r\n    /**\r\n     * fontSizeInfo\r\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \r\n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\r\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\r\n     */\r\n    private fontSizeInfo: {[key:string]:number} = {};\r\n    charRender: ICharRender;\r\n    private mapFont: any = {};\t\t// 把font名称映射到数字\r\n    private fontID = 0;\r\n\r\n    private fontScaleX = 1.0;\t\t\t\t\t\t//临时缩放。\r\n    private fontScaleY = 1.0;\r\n\r\n    //private var charMaps:Object = {};\t// 所有的都放到一起\r\n\r\n    private _curStrPos = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\r\n    static textRenderInst: TextRender;\t//debug\r\n\r\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\r\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\r\n\r\n    private static imgdtRect = [0, 0, 0, 0];\r\n\r\n    // 当前字体的测量信息。\r\n    private lastFont: FontInfo | null = null;\r\n    private fontSizeW = 0;\r\n    private fontSizeH = 0;\r\n    private fontSizeOffX = 0;\r\n    private fontSizeOffY = 0;\r\n\r\n    private renderPerChar = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\r\n    private tmpAtlasPos = new Point();\r\n    private fontStr: string;\t\t\t\t// 因为要去掉italic，所以自己保存一份\r\n    static simClean = false;\t\t\t\t// 测试用。强制清理占用低的图集\r\n\r\n    private _fontMeasure:IFontMeasure=null;\r\n\r\n    constructor() {\r\n        super();\r\n        var bugIOS = false;//是否是有bug的ios版本\r\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\r\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\r\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\r\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\r\n            //12.3\r\n        }\r\n        if ((ILaya.Browser.onMiniGame || \r\n            ILaya.Browser.onTTMiniGame || \r\n            ILaya.Browser.onBLMiniGame || \r\n            ILaya.Browser.onAlipayMiniGame || \r\n            ILaya.Browser.onTBMiniGame) && \r\n                !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\r\n        //TextRender.isWan1Wan = true;\r\n        this.charRender = new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false);\r\n        TextRender.textRenderInst = this;\r\n        ILaya.Laya['textRender'] = this;\r\n    }\r\n\r\n    set fontMeasure(m:IFontMeasure){\r\n        this._fontMeasure=m;\r\n    }\r\n\r\n    get fontMeasure(){\r\n        return this._fontMeasure;\r\n    }\r\n\r\n    private _wan1wansz(font:string,size:number){\r\n        let fontstr = 'bold ' + size + 'px ' + font;\r\n        // 这时候无法获得imagedata，只能采取保险测量\r\n        let fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\r\n        let fontSizeH = size * 1.5;\r\n        var szinfo = fontSizeW << 8 | fontSizeH;\r\n        this.fontSizeInfo[font] = szinfo;\r\n        return szinfo;\r\n    }\r\n\r\n    private getFontSizeInfo(font:string){\r\n        var finfo = this.fontSizeInfo[font];\r\n        if (!finfo ){\r\n            if(TextRender.isWan1Wan){\r\n                finfo = this._wan1wansz(font,TextRender.standardFontSize)\r\n            }else{\r\n                finfo = this._fontMeasure.getFontSizeInfo(font,TextRender.standardFontSize);\r\n            }\r\n            this.fontSizeInfo[font]=finfo;\r\n        }\r\n        return finfo;\r\n    }\r\n\r\n    /**\r\n     * 设置当前字体，获得字体的大小信息。\r\n     * @param\tfont\r\n     */\r\n    setFont(font: FontInfo): void {\r\n        if (this.lastFont == font) return;\r\n        this.lastFont = font;\r\n        var fontsz = this.getFontSizeInfo(font._family);\r\n        var offx = fontsz >> 24\r\n        var offy = (fontsz >> 16) & 0xff;\r\n        var fw = (fontsz >> 8) & 0xff;\r\n        var fh = fontsz & 0xff;\r\n        var k = font._size / TextRender.standardFontSize;\r\n        this.fontSizeOffX = Math.ceil(offx * k);\r\n        this.fontSizeOffY = Math.ceil(offy * k);\r\n        this.fontSizeW = Math.ceil(fw * k);\r\n        this.fontSizeH = Math.ceil(fh * k);\r\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\r\n            this.fontStr = font._font.replace('italic', '');\r\n        } else {\r\n            this.fontStr = font._font;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从string中取出一个完整的char，例如emoji的话要多个\r\n     * 会修改 _curStrPos\r\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\r\n     * @param\tstr\r\n     * @param\tstart\t开始位置\r\n     */\r\n    getNextChar(str: string): string | null {\r\n        var len = str.length;\r\n        var start = this._curStrPos;\r\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\r\n        if (start >= len)\r\n            return null;\r\n\r\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\r\n        var i = start;\r\n        var state = 0; //0 初始化 1  正常 2 连续中\r\n        for (; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\r\n                if (state == 1) break;//新的字符了，要截断\r\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\r\n                i++;\t//跨过一个。\r\n            }\r\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\r\n                // 继续。不改变状态\r\n            }\r\n            else if (c == 0x200d) {\t\t//zero width joiner\r\n                state = 2; \t// 继续\r\n            } else {\r\n                if (state == 0) state = 1;\r\n                else if (state == 1) break;\r\n                else if (state == 2) {\r\n                    // 继续\r\n                }\r\n            }\r\n        }\r\n        this._curStrPos = i;\r\n        return str.substring(start, i);\r\n    }\r\n\r\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data.length <= 0)\r\n            return;\r\n        //以后保存到wordtext中\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n\r\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\r\n        if (lineWidth < 0) lineWidth = 0;\r\n        this.setFont(font);\r\n        this.fontScaleX = this.fontScaleY = 1.0;\r\n        if (TextRender.scaleFontWithCtx) {\r\n            let sx = ctx.getMatScaleX();\r\n            let sy = ctx.getMatScaleY();\r\n\r\n            if (sx < 1e-4 || sy < 1e-1)\r\n                return;\r\n\r\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\r\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\r\n        }\r\n\r\n        font._italic && (ctx._italicDeg = 13);\r\n        //准备bmp\r\n        //拷贝到texture上,得到一个gltexture和uv\r\n        let wt = <WordText>data;\r\n        let isWT = data instanceof WordText;\r\n        let str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\r\n\r\n        /**\r\n         * sameTexData \r\n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\r\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\r\n         */\r\n        let sameTexData: any[] = isWT ? wt.pageChars : [];\r\n\r\n        let strWidth = 0;\r\n        if (isWT) {\r\n            str = wt.text;\r\n            strWidth = wt.width;\r\n            if (strWidth < 0) {\r\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\r\n            }\r\n        } else {\r\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\r\n        }\r\n\r\n        //水平对齐方式\r\n        switch (textAlign) {\r\n            case Const.ENUM_TEXTALIGN_CENTER:\r\n                x -= strWidth / 2;\r\n                break;\r\n            case Const.ENUM_TEXTALIGN_RIGHT:\r\n                x -= strWidth;\r\n                break;\r\n        }\r\n\r\n        //检查保存的数据是否有的已经被释放了\r\n        if (isWT) {\t// TODO 能利用lastGCCnt么\r\n            //wt.lastGCCnt = _curPage.gcCnt;\r\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\r\n                sameTexData = wt.pageChars = [];\r\n            }\r\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\r\n            // \t// 文字缩放要清理缓存\r\n            // \tsameTexData = wt.pageChars = [];\r\n            // }\r\n        }\r\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\r\n        let splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\r\n        if (!sameTexData || sameTexData.length < 1) {\r\n            if (isWT) {\r\n                wt.scalex = this.fontScaleX;\r\n                wt.scaley = this.fontScaleY;\r\n            }\r\n            // 重新构建缓存的贴图信息\r\n            // TODO 还是要ctx.scale么\r\n            if (splitTex) {\r\n                // 如果要拆分字符渲染\r\n                let stx = 0;\r\n                let sty = 0;\r\n\r\n                this._curStrPos = 0;\r\n                let curstr: string | null;\r\n                while (true) {\r\n                    curstr = this.getNextChar(str);\r\n                    if (!curstr)\r\n                        break;\r\n                    let ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\r\n                    if (!ri) {\r\n                        // 没有分配到。。。\r\n                        break;\r\n                    }\r\n                    if (ri.isSpace) {\t// 空格什么都不做\r\n                    } else {\r\n                        //分组保存\r\n                        var add = sameTexData[ri.texture.id];\r\n                        if (!add) {\r\n                            var o1 = { texgen: ri.texture.genID, tex: ri.texture, words: new Array() };\t// 根据genid来减少是否释放的判断量\r\n                            sameTexData[ri.texture.id] = o1;\r\n                            add = o1.words;\r\n                        } else {\r\n                            add = add.words;\r\n                        }\r\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\r\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\r\n                        stx += ri.width;\t// TODO 缩放\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // 如果要整句话渲染\r\n                let margin = (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\r\n                let isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\r\n                let ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\r\n                // 整句渲染，则只有一个贴图\r\n                sameTexData[0] = { texgen: ri.texture.genID, tex: ri.texture, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\r\n            }\r\n            isWT && (wt.pagecharsCtx = ctx);\r\n            //TODO getbmp 考虑margin 字体与标准字体的关系\r\n        }\r\n\r\n        this._drawResortedWords(ctx, x, y, sameTexData);\r\n        ctx._italicDeg = 0;\r\n    }\r\n\r\n    /**\r\n     * 画出重新按照贴图顺序分组的文字。\r\n     * @param\tsamePagesData\r\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\r\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\r\n     */\r\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: {[key:number]:any}): void {\r\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\r\n        var mat = ctx._curMat;\r\n        //samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt; 所以不要用普通for循环\r\n        for (var id in samePagesData) {\r\n            var dt = samePagesData[id];\r\n            if (!dt) continue;\r\n            var pri: any[] = dt.words;\r\n            var count = pri.length; if (count <= 0) continue;\r\n            var tex = <TextTexture>samePagesData[id].tex;\r\n            for (var j = 0; j < count; j++) {\r\n                var riSaved: any = pri[j];\r\n                var ri: CharRenderInfo = riSaved.ri;\r\n                if (ri.isSpace) continue;\r\n                ctx.touchRes(ri);\r\n                ctx.drawTexAlign = true;\r\n\r\n                ctx._inner_drawTexture(tex, tex.id,\r\n                    startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\r\n                     mat, ri.uv, 1.0, isLastRender, 0xffffffff);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查 txts数组中有没有被释放的资源\r\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\r\n     * @param\tstartid\r\n     * @return\r\n     */\r\n    hasFreedText(txts: any[]): boolean {\r\n        for (let i in txts) {\r\n            var pri = txts[i];\r\n            if (!pri) continue;\r\n            var tex = <TextTexture>pri.tex;\r\n            if (tex.destroyed || tex.genID != pri.texgen) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\r\n        var fid = this.mapFont[font._family];\r\n        if (fid == undefined) {\r\n            this.mapFont[font._family] = fid = this.fontID++;\r\n        }\r\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\r\n        if (lineWidth > 0)\r\n            key += '_' + strokeColor! + lineWidth;\r\n        if (font._bold)\r\n            key += 'P';\r\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\r\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\r\n        }\r\n\r\n        var i = 0;\r\n        // 遍历所有的大图集看是否存在\r\n        var sz = this.textAtlases.length;\r\n        var ri: CharRenderInfo;\r\n        var atlas: TextAtlas;\r\n        if (!isoTexture) {\r\n            for (i = 0; i < sz; i++) {\r\n                atlas = this.textAtlases[i];\r\n                ri = atlas.charMaps[key]\r\n                if (ri) {\r\n                    ri.touch();\r\n                    return ri;\r\n                }\r\n            }\r\n        }\r\n        // 没有找到，要创建一个\r\n        ri = new CharRenderInfo();\r\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\r\n        ri.char = str;\r\n        ri.height = font._size;\r\n        var margin = (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\r\n        // 如果不存在，就要插入已有的，或者创建新的\r\n        var imgdt: ImageData | null = null;\r\n        // 先大约测量文字宽度 \r\n\r\n        if (!lineWidth) {\r\n            lineWidth = 0;\r\n        }\r\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\r\n        let needCanvW = Math.min(2048, w1 + margin * 2*this.fontScaleX);//注意margin要*缩放，否则可能文字放不下\r\n        if (needCanvW > this.charRender.canvasWidth) {\r\n            this.charRender.canvasWidth = needCanvW;\r\n        }\r\n        if (isoTexture) {\r\n            // 独立贴图\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\r\n            // 这里可以直接\r\n            if (imgdt) {\r\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\r\n                tex.addChar(imgdt, 0, 0, ri.uv);\r\n                ri.texture = tex;\r\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\r\n                ri.oriy = margin;\r\n                tex.ri = ri;\r\n                this.isoTextures.push(tex);\r\n            }\r\n        } else {\r\n            // 大图集\r\n            var len = str.length;\r\n            if (len > 1) {\r\n                // emoji或者组合的\r\n            }\r\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\r\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\r\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\r\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\r\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\r\n            if (this.renderPerChar || len == 1) {\r\n                // 单个字符的处理\r\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\r\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\r\n            } else {\r\n                // 多个字符的处理\r\n                //TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\r\n                TextRender.imgdtRect[2] =  -(this.fontSizeOffX * this.fontScaleX);//<0表示要测量宽度，但是提供了原点偏移\r\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\r\n            }\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\r\n                margin, margin, margin, margin, TextRender.imgdtRect);\r\n            if (imgdt) {\r\n                atlas = this.addBmpData(imgdt, ri);\r\n                if (TextRender.isWan1Wan) {\r\n                    // 这时候 imgdtRect 是不好使的，要自己设置\r\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\r\n                    ri.oriy = margin;\r\n                } else {\r\n                    // 取下来的imagedata的原点在哪\r\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\r\n                    ri.oriy = (this.fontSizeOffY + lineExt);\r\n                }\r\n                atlas.charMaps[key] = ri;\r\n            }\r\n        }\r\n        return ri;\r\n    }\r\n\r\n    /**\r\n     * 添加数据到大图集\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var sz = this.textAtlases.length;\r\n        var atlas: TextAtlas;\r\n        var find = false;\r\n        for (var i = 0; i < sz; i++) {\r\n            atlas = this.textAtlases[i];\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (find) {\r\n                break;\r\n            }\r\n        }\r\n        if (!find) {\r\n            // 创建一个新的\r\n            atlas = new TextAtlas()\r\n            this.textAtlases.push(atlas);\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (!find) {\r\n                throw 'err1'; //TODO\r\n            }\r\n            // 清理旧的\r\n            this.cleanAtlases();\r\n        }\r\n        if (find) {\r\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\r\n            ri.texture = atlas.texture;\r\n        }\r\n        return atlas;\r\n    }\r\n\r\n    /**\r\n     * 清理利用率低的大图集\r\n     */\r\n    GC(): void {\r\n        var i = 0;\r\n        var sz = this.textAtlases.length;\r\n        var dt = 0;\r\n        var destroyDt = TextRender.destroyAtlasDt;\r\n        var totalUsedRateAtlas = 0;\r\n        var curloop = RenderInfo.loopCount;\r\n\r\n        //var minUsedRateID:int = -1;\r\n        //var minUsedRate:Number = 1;\r\n        var maxWasteRateID = -1;\r\n        var maxWasteRate = 0;\r\n        var tex: TextTexture = null;\r\n        var curatlas: TextAtlas = null;\r\n        // 图集的清理\r\n        for (; i < sz; i++) {\r\n            curatlas = this.textAtlases[i];\r\n            tex = curatlas.texture;\r\n            if (tex) {\r\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\r\n                // 浪费掉的图集\r\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\r\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\r\n                // 记录哪个图集浪费的最多\r\n                if (maxWasteRate < waste) {\r\n                    maxWasteRate = waste;\r\n                    maxWasteRateID = i;\r\n                }\r\n                /*\r\n                if (minUsedRate > tex.curUsedCovRate) {\r\n                    minUsedRate = tex.curUsedCovRate;\r\n                    minUsedRateID = i;\r\n                }\r\n                */\r\n            }\r\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\r\n            // 可能同时会有多个图集被回收\r\n            dt = curloop - curatlas.texture.lastTouchTm;\r\n            if (dt > destroyDt) {\r\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\r\n                curatlas.destroy();\r\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\r\n                sz--;\r\n                i--;\r\n                maxWasteRateID = -1;\r\n            }\r\n        }\r\n        // 缩减图集数组的长度\r\n        this.textAtlases.length = sz;\r\n\r\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\r\n        sz = this.isoTextures.length;\r\n        for (i = 0; i < sz; i++) {\r\n            tex = this.isoTextures[i];\r\n            dt = curloop - tex.lastTouchTm;\r\n            if (dt > TextRender.destroyUnusedTextureDt) {\r\n                tex.ri.deleted = true;\r\n                tex.ri.texture = null;\r\n                // 直接删除，不回收\r\n                tex.destroy();\r\n                this.isoTextures[i] = this.isoTextures[sz - 1];\r\n                sz--;\r\n                i--;\r\n            }\r\n        }\r\n        this.isoTextures.length = sz;\r\n\r\n        // 如果超出内存需要清理不常用\r\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\r\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\r\n            TextRender.simClean = false;\r\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\r\n            if (maxWasteRateID >= 0) {\r\n                curatlas = this.textAtlases[maxWasteRateID];\r\n                curatlas.destroy();\r\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\r\n                this.textAtlases.length = this.textAtlases.length - 1;\r\n                this.event('GC');\r\n            }\r\n        }\r\n\r\n        //TextTexture.clean();\r\n    }\r\n\r\n    /**\r\n     * 尝试清理大图集\r\n     */\r\n    cleanAtlases(): void {\r\n        // TODO 根据覆盖率决定是否清理\r\n    }\r\n\r\n\r\n    printDbgInfo(): void {\r\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\r\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\r\n        console.log('缓存用到的字体:');\r\n        for (var f in this.mapFont) {\r\n            var fontsz = this.getFontSizeInfo(f);\r\n            var offx = fontsz >> 24\r\n            var offy = (fontsz >> 16) & 0xff;\r\n            var fw = (fontsz >> 8) & 0xff;\r\n            var fh = fontsz & 0xff;\r\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\r\n        }\r\n        var num = 0;\r\n        console.log('缓存数据:');\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        this.textAtlases.forEach(function (a: TextAtlas): void {\r\n            var id = a.texture.id;\r\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\r\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\r\n            totalUsedRate += a.texture.curUsedCovRate;\r\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\r\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\r\n            for (var k in a.charMaps) {\r\n                var ri: CharRenderInfo = a.charMaps[k];\r\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\r\n                    '字符:', ri.char, 'key:', k);\r\n                num++;\r\n            }\r\n        });\r\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\r\n        this.isoTextures.forEach(function (tex: TextTexture): void {\r\n            console.log('    size:', tex.width, tex.height, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\r\n        });\r\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\r\n\r\n    }\r\n\r\n    // 在屏幕上显示某个大图集\r\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\r\n        if (!this.textAtlases[n]) {\r\n            console.log('没有这个图集');\r\n            return null;\r\n        }\r\n        var sp = new Sprite();\r\n        var texttex = this.textAtlases[n].texture;\r\n        var texture: any = {\r\n            width: TextRender.atlasWidth,\r\n            height: TextRender.atlasWidth,\r\n            sourceWidth: TextRender.atlasWidth,\r\n            sourceHeight: TextRender.atlasWidth,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            getIsReady: function (): boolean { return true; },\r\n            _addReference: function (): void { },\r\n            _removeReference: function (): void { },\r\n            _getSource: function (): any { return texttex._getSource(); },\r\n            bitmap: { id: texttex.id },\r\n            _uv: Texture.DEF_UV\r\n        };\r\n        (<any>sp).size = function (w: number, h: number): Sprite {\r\n            this.width = w;\r\n            this.height = h;\r\n            sp.graphics.clear();\r\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\r\n            sp.graphics.drawTexture(<Texture>texture, 0, 0, sp.width, sp.height);\r\n            return <Sprite>this;\r\n        }\r\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\r\n        sp.graphics.drawTexture(<Texture>texture, 0, 0, w, h);\r\n        sp.pos(x, y);\r\n        ILaya.stage.addChild(sp);\r\n        return sp;\r\n    }\r\n}\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Sprite2DGeometry } from \"./Sprite2DGeometry\";\r\n\r\n/**\r\n * 与MeshQuadTexture基本相同。不过index不是固定的\r\n */\r\nexport class MeshTexture extends Sprite2DGeometry {\r\n    static const_stride = 48;\r\n    static VertexDeclarition: VertexDeclaration = null;\r\n    //private _vbUin32Array: Uint32Array;\r\n    private _vbFloat32Array: Float32Array;\r\n    private _ibU16Array: Uint16Array;\r\n\r\n    static __init__(): void {\r\n        MeshTexture.VertexDeclarition = new VertexDeclaration(48, [\r\n            new VertexElement(0, VertexElementFormat.Vector4, 0),//pos,uv\r\n            new VertexElement(16, VertexElementFormat.Vector4, 1),//color,alpha\r\n            new VertexElement(32, VertexElementFormat.Vector4, 2),//\r\n        ])\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n    }\r\n\r\n    protected onVBRealloc(buff: ArrayBuffer): void {\r\n        //this._vbUin32Array = new Uint32Array(buff);\r\n        this._vbFloat32Array = new Float32Array(buff);\r\n    }\r\n    protected onIBRealloc(buff: ArrayBuffer): void {\r\n        this._ibU16Array = new Uint16Array(buff);\r\n    }\r\n\r\n    /**\r\n     * 增加四个顶点\r\n     * @param vertices \r\n     * @param uvs \r\n     * @param idx \r\n     * @param matrix \r\n     * @param rgba \r\n     */\r\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number, uvrect: number[] = null): void {\r\n        //vb\r\n        let addVert = vertices.length / 2;\r\n        this.expVBSize(addVert * MeshTexture.const_stride);\r\n        var vertsz = vertices.length >> 1;\r\n        var startpos = this._vertNum * MeshTexture.const_stride;//vb的起点。\t\t\t\r\n        var f32pos = startpos >> 2;\r\n        var vbdata = this._vbFloat32Array;\r\n        //var vbu32Arr = this._vbUin32Array;\r\n        var ci = 0;\r\n        var m00 = matrix.a;\r\n        var m01 = matrix.b;\r\n        var m10 = matrix.c;\r\n        var m11 = matrix.d;\r\n        var tx = matrix.tx;\r\n        var ty = matrix.ty;\r\n        var i = 0;\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        let uvminx = 0;\r\n        let uvminy = 0;\r\n        let uvu = 1;\r\n        let uvv = 1;\r\n        if (uvrect) {\r\n            uvminx = uvrect[0];\r\n            uvminy = uvrect[1];\r\n            uvu = uvrect[2];\r\n            uvv = uvrect[3];\r\n        }\r\n        let r = ((rgba >>> 16) & 0xff) / 255.0;\r\n        let g = ((rgba >>> 8) & 0xff) / 255.0;\r\n        let b = (rgba & 0xff) / 255.0;\r\n        let a = (rgba >>> 24) / 255.0;\r\n        for (i = 0; i < vertsz; i++) {\r\n            var x = vertices[ci], y = vertices[ci + 1];\r\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\r\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\r\n            vbdata[f32pos + 2] = uvminx + uvs[ci] * uvu;\r\n            vbdata[f32pos + 3] = uvminy + uvs[ci + 1] * uvv;\r\n\r\n            vbdata[f32pos + 4] = b;\r\n            vbdata[f32pos + 5] = g;\r\n            vbdata[f32pos + 6] = r;\r\n            vbdata[f32pos + 7] = a;\r\n            vbdata[f32pos + 8] = 0xff;\r\n            f32pos += 12;\r\n            ci += 2;\r\n        }\r\n\r\n        var vertN = this._vertNum;\r\n        var ibstart = this._indexNum;\r\n        this.expIBSize(idx.byteLength)\r\n        var indexBuffer = this._ibU16Array;\r\n        if (vertN > 0) {\r\n            for (let i = ibstart, si = 0, end = ibstart + idx.length; i < end; i++, si++) {\r\n                indexBuffer[i] = idx[si] + vertN;\r\n            }\r\n        } else {\r\n            indexBuffer.set(idx);\r\n        }\r\n\r\n        this._vertNum += vertsz;\r\n        this._indexNum += idx.length;\r\n    }\r\n\r\n    get vertexDeclarition(): VertexDeclaration {\r\n        return MeshTexture.VertexDeclarition;\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Sprite2DGeometry } from \"./Sprite2DGeometry\";\r\n\r\n/**\r\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\r\n */\r\nexport class MeshVG extends Sprite2DGeometry {\r\n    static const_stride = 24;// 36;\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n    //private _vbUin32Array:Uint32Array=null;\r\n    private _vbFloat32Array: Float32Array = null;\r\n\r\n    static __init__(): void {\r\n        MeshVG.vertexDeclaration = new VertexDeclaration(24, [\r\n            new VertexElement(0, VertexElementFormat.Vector2, 0),//xy\r\n            new VertexElement(8, VertexElementFormat.Vector4, 1), //color\r\n        ]);\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\r\n    }\r\n\r\n    protected onVBRealloc(buff: ArrayBuffer): void {\r\n        //this._vbUin32Array = new Uint32Array(buff);\r\n        this._vbFloat32Array = new Float32Array(buff);\r\n    }\r\n    protected onIBRealloc(buff: ArrayBuffer): void {\r\n    }\r\n\r\n    /**\r\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\r\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\r\n     * @param\trgba\trgba颜色\r\n     * @param\tib\t\tindex数组。\r\n     */\r\n    addVertAndIBToMesh(points: number[], rgba: number, ib: any[]): void {\r\n        var startpos = this._vertNum * MeshVG.const_stride;\r\n        this.expVBSize(points.length / 2 * MeshVG.const_stride);\r\n        var f32pos = startpos >> 2;\r\n        var vbdata = this._vbFloat32Array;\r\n        //var vbu32Arr = this._vbUin32Array\r\n        var ci = 0;\r\n        //vb\r\n        let r = ((rgba >>> 16) & 0xff) / 255.0;\r\n        let g = ((rgba >>> 8) & 0xff) / 255.0;\r\n        let b = (rgba & 0xff) / 255.0;\r\n        let a = (rgba >>> 24) / 255.0;\r\n        var sz = points.length / 2;\r\n        for (var i = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\r\n            //vbu32Arr[f32pos++] = rgba;\r\n            vbdata[f32pos++] = b;        //r\r\n            vbdata[f32pos++] = g;\r\n            vbdata[f32pos++] = r;\r\n            vbdata[f32pos++] = a;  //alpha\r\n        }\r\n\r\n        //ib\r\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\r\n        this.expIBSize(ib.length * 2);\r\n        //append index\r\n        (new Uint16Array(this._IBBuff, this._indexNum * 2, ib.length)).set(new Uint16Array(ib))\r\n\r\n        this._vertNum += sz;\r\n        this._indexNum += ib.length;\r\n    }\r\n\r\n    get vertexDeclarition(): VertexDeclaration {\r\n        return MeshVG.vertexDeclaration;\r\n    }\r\n\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Laya } from \"../../Laya\";\r\nimport { Const } from \"../Const\";\r\nimport { RenderManager2D } from \"../NodeRender2D/RenderManager2D\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { ShaderData } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { FontInfo } from \"../utils/FontInfo\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { MeasureFont } from \"../webgl/text/MeasureFont\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { Sprite2DGeometry } from \"../webgl/utils/Sprite2DGeometry\";\r\nimport { Render2D, Render2DSimple } from \"./Render2D\";\r\nimport { IAutoExpiringResource } from \"./ResNeedTouch\";\r\n\r\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\r\n\r\nexport interface IGraphicCMD {\r\n    run(context: Context, gx: number, gy: number): void;\r\n    recover(): void;//如有回收，实现这个函数\r\n    get cmdID(): string;\r\n    //other\r\n    percent?: boolean;\r\n    pivotX?: number;\r\n    pivotY?: number;\r\n    scaleX?: number;\r\n    scaleY?: number;\r\n    angle?: number;\r\n    tx?: number;\r\n    ty?: number;\r\n    matrix?: Matrix;\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    points?: any;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport class Context {\r\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n    /**@internal */\r\n    private _canvas: HTMLCanvas;\r\n\r\n    /**@internal */\r\n    _drawingToTexture: boolean;\r\n\r\n    private static _MAXVERTNUM = 65535;\r\n\r\n    static MAXCLIPRECT: Rectangle = null;\r\n\r\n    private _alpha = 1.0;\r\n\r\n    /**@internal */\r\n    _material: Material = null;\r\n\r\n    /**@internal */\r\n    private _fillStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    private _strokeStyle = DrawStyle.DEFAULT;\r\n\r\n    /**@internal */\r\n    private _tmpMatrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\r\n\r\n    private static SEGNUM = 32;\r\n    private static _contextcount = 0;\r\n\r\n    private _drawTexToDrawTri_Vert = new Float32Array(8);\t\t// 从速度考虑，不做成static了\r\n    private _drawTexToDrawTri_Index = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n    private _tempUV = new Float32Array(8);\r\n    private _drawTriUseAbsMatrix = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\r\n\r\n    private _other: ContextParams | null = null;\r\n\r\n    private _path: Path | null = null;\r\n    /**@internal */\r\n    _drawCount = 1;\r\n    private _width = Const.MAX_CLIP_SIZE;\r\n    private _height = Const.MAX_CLIP_SIZE;\r\n    private _renderCount = 0;\r\n    /**@internal */\r\n    stopMerge = true;     //如果用设置_curSubmit的方法，可能导致渲染错误，因为_curSubmit保存上次的信息，不能任意改\r\n    /**@internal */\r\n    _curSubmit = SubmitBase.RENDERBASE;\r\n    /**@internal */\r\n    _submitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\r\n\r\n    /**@internal */\r\n    private _mesh: Sprite2DGeometry;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _meshQuatTex = new MeshQuadTexture();\r\n    private _meshVG = new MeshVG();\r\n    private _meshTex = new MeshTexture();\r\n\r\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\r\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\r\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\r\n\r\n    /**@internal */\r\n    _clipRect = Context.MAXCLIPRECT;\r\n    /**@internal */\r\n    _globalClipMatrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\r\n    /**@internal */\r\n    _clipInfoID = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\r\n    private _clipID_Gen = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\r\n    /**@internal */\r\n    _curMat: Matrix;\r\n    /**@internal */\r\n    _matBuffer: Float32Array = new Float32Array(6);\r\n\r\n    //计算矩阵缩放的缓存\r\n    /**@internal */\r\n    _lastMatScaleX = 1.0;\r\n    /**@internal */\r\n    _lastMatScaleY = 1.0;\r\n    private _lastMat_a = 1.0;\r\n    private _lastMat_b = 0.0;\r\n    private _lastMat_c = 0.0;\r\n    private _lastMat_d = 1.0;\r\n    /**@internal */\r\n    _nBlendType = 0;\r\n    /**@internal */\r\n    _save: ISaveData[] & { _length?: number } = null;\r\n    /**@internal */\r\n    _charSubmitCache: CharSubmitCache | null = null;\r\n    /**@internal */\r\n    _saveMark: SaveMark | null = null;\r\n    /**@internal */\r\n    private _shader2D = new Shader2D();\t//\r\n\r\n    /**\r\n     * 所cacheAs精灵\r\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\r\n     * 加载完成后，调用repaint\r\n     */\r\n    sprite: Sprite | null = null;\r\n\r\n    /**@internal */\r\n    private static _textRender: TextRender | null = null;// new TextRender();\r\n    /**@internal */\r\n    _italicDeg = 0;//文字的倾斜角度\r\n    /**@internal */\r\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\r\n\r\n    private _fillColor = 0;\r\n    private _flushCnt = 0;\r\n\r\n    private defTexture: Texture | null = null;\t//给fillrect用\r\n    /**@internal */\r\n    _colorFiler: ColorFilter | null = null;\r\n\r\n    drawTexAlign = false;\t\t// 按照像素对齐\r\n    /**@internal */\r\n    _incache = false;\t\t\t// 正处在cacheas normal过程中\r\n\r\n    private _isMain = false;\t\t\t\t// 是否是主context\r\n\r\n    private _render2D: Render2D = null;\r\n\r\n    private _clearColor = new Color(0, 0, 0, 0);\r\n    private _clear = false;\r\n\r\n    private _shaderValueNeedRelease: Value2D[] = [];\r\n\r\n\r\n\r\n    _render2DManager: RenderManager2D;\r\n    //temp\r\n    //batchManager:RenderBatchManager2D=null;\r\n\r\n    static __init__(): void {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        if (!Context._textRender) {\r\n            let textRender = Context._textRender = new TextRender();\r\n            textRender.fontMeasure = new MeasureFont(textRender.charRender);\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        //默认值。可以外面设置\r\n        this.render2D = new Render2DSimple();\r\n        Context._contextcount++;\r\n        //_ib = IndexBuffer2D.QuadrangleIB;\r\n        if (!this.defTexture) {\r\n            var defTex2d = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\r\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this._other = ContextParams.DEFAULT;\r\n        this._curMat = Matrix.create();\r\n        this._charSubmitCache = new CharSubmitCache();\r\n        //_vb = _vbs[0] = VertexBuffer2D.create( -1);\r\n        this._mesh = this._meshQuatTex;\r\n        this._mesh.clearMesh();\r\n        this._save = [SaveMark.Create(this)];\r\n        this._save.length = 10;\r\n        this.clear();\r\n\r\n        this._render2DManager = new RenderManager2D();\r\n    }\r\n\r\n    //从ctx继承渲染参数\r\n    copyState(ctx: Context) {\r\n        ///TODO\r\n    }\r\n\r\n    set isMain(v: boolean) {\r\n        this._isMain = v;\r\n        if (v) {\r\n            //TODO 分配mesh\r\n        }\r\n    }\r\n\r\n    get isMain() {\r\n        return this._isMain;\r\n    }\r\n\r\n    set render2D(render: Render2D) {\r\n        this._render2D = render;\r\n    }\r\n\r\n    get render2D() {\r\n        return this._render2D;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**\r\n     * 添加需要touch的资源\r\n     * @param res \r\n     */\r\n    touchRes(res: IAutoExpiringResource) {\r\n        res.touch();\r\n    }\r\n\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n        var ctx: any = this;\r\n\r\n        //填充矩形\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n\r\n        //绘制矩形边框\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    alpha(value: number): void {\r\n        this.globalAlpha *= value;\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i = 2, n = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n\r\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon = false): void {\r\n        //绘制填充区域\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n\r\n        //绘制边框\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    /**@internal */\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, radius, 0, 2 * Math.PI, false, true, 40);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**@internal */\r\n    _drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        this.arc(x, y, width, height, 0, 2 * Math.PI, false, true, 40);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**@internal */\r\n    _drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        var tPath = this._getPath();\r\n        if (0 >= lt) {\r\n            tPath.addPoint(x, y);\r\n        } else {\r\n            this.arc(x + lt, y + lt, lt, lt, Math.PI, Math.PI + 0.5 * Math.PI);\r\n        }\r\n        let startX = x + width - rt;\r\n        if (0 >= rt) {\r\n            tPath.addPoint(startX, y);\r\n        } else {\r\n            this.arc(startX, y + rt, rt, rt, Math.PI + 0.5 * Math.PI, 2 * Math.PI);\r\n        }\r\n        startX = x + width - rb;\r\n        let startY = y + height - rb;\r\n        if (0 >= rb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, rb, rb, 0, 0.5 * Math.PI);\r\n        }\r\n        startX = x + lb;\r\n        startY = y + height - lb;\r\n        if (0 >= lb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, lb, lb, Math.PI - 0.5 * Math.PI, Math.PI);\r\n        }\r\n        tPath.addPoint(x, y + lt);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n\r\n    //矢量方法\t\r\n    /**@internal */\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        //移动中心点\r\n        //ctx.translate(x + args[0], y + args[1]);\r\n        //形成路径\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n        //恢复中心点\r\n        //ctx.translate(-x - args[0], -y - args[1]);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        //var points:Array = args[2];\r\n        this.beginPath();\r\n        //poly一定是close的\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i = 0, n = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n\r\n    //  static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        //  RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\r\n        //@ts-ignore\r\n        // LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\r\n        // LayaGL.renderEngine.scissorTest(true);\r\n        //@ts-ignore\r\n        // LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n\r\n    clearBG(r: number, g: number, b: number, a: number): void {\r\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        if (r == null || r == undefined) {\r\n            this._clear = false;\r\n        } else {\r\n            this._clearColor.setValue(r, g, b, a);\r\n            this._clear = true;\r\n        }\r\n        //   LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1, 0);\r\n    }\r\n\r\n    /**\r\n     * 释放占用内存\r\n     */\r\n    private _releaseMem(): void {\r\n        this._curMat && this._curMat.destroy();\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        this._shader2D = null;\r\n        this._charSubmitCache.clear();\r\n        this._path = null;\r\n        this._save = null;\r\n        this.sprite = null;\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     */\r\n    destroy(): void {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._charSubmitCache && this._charSubmitCache.destroy();\r\n        if (this.defTexture) {\r\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\r\n            this.defTexture.destroy();\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this._submitKey.clear();\r\n        this._drawCount = 1;\r\n        this._other = ContextParams.DEFAULT;\r\n        this._alpha = 1.0;\r\n        this._nBlendType = 0;\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n        this._fillStyle = this._strokeStyle = DrawStyle.DEFAULT;\r\n\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n\r\n        this._saveMark = <SaveMark>this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n\r\n    /**\r\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\r\n     * @param\tw\r\n     * @param\th\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            //如果是主画布，要记录窗口大小\r\n            //如果不是 TODO\r\n            if (this.isMain) {\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0) this._releaseMem();\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    set width(w: number) {\r\n        this.size(w, this._height);\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set height(h: number) {\r\n        this.size(this._width, h);\r\n    }\r\n\r\n    /**\r\n     * 获得当前矩阵的缩放值\r\n     * 避免每次都计算getScaleX\r\n     * @return\r\n     */\r\n    getMatScaleX(): number {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n\r\n    getMatScaleY(): number {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n\r\n    getFillColor(): number {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillStyle(value: any) {\r\n        if (!this._fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._fillStyle.toInt();\r\n        }\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        return this._fillStyle;\r\n    }\r\n\r\n    set globalAlpha(value: number) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._alpha) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._alpha = value;\r\n        }\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        return this._alpha;\r\n    }\r\n\r\n    set textAlign(value: string) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n\r\n    get textAlign(): string {\r\n        return this._other.textAlign;\r\n    }\r\n\r\n    set textBaseline(value: string) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n\r\n    get textBaseline(): string {\r\n        return this._other.textBaseline;\r\n    }\r\n\r\n    set globalCompositeOperation(value: string) {\r\n        this._drawToRender2D(this._curSubmit);\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n\r\n    set strokeStyle(value: any) {\r\n        this._strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._strokeStyle.toInt());\r\n    }\r\n\r\n    get strokeStyle(): any {\r\n        return this._strokeStyle;\r\n    }\r\n\r\n    translate(x: number, y: number): void {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            } else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lineWidth(value: number) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n\r\n    get lineWidth(): number {\r\n        return this._other.lineWidth;\r\n    }\r\n\r\n    save(): void {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n\r\n    restore(): void {\r\n        var sz = this._save._length;\r\n        var lastBlend = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i = sz - 1; i >= 0; i--) {\r\n            var o: ISaveData = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            //阻止合并\r\n            this.stopMerge = true;\r\n        }\r\n    }\r\n\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth = 0, borderColor: string = \"\"): void {\r\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\r\n        var submit = this._curSubmit;\r\n        var sameKey =\r\n            this._mesh.vertexNum + 4 < Context._MAXVERTNUM &&\r\n            submit && (\r\n                submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE &&\r\n                submit._key.blendShader === this._nBlendType &&\r\n                !this.isStopMerge(submit)) &&\r\n            this._curSubmit.material == this._material\r\n\r\n        if (!sameKey) {\r\n            this._drawToRender2D(this._curSubmit);\r\n            this._mesh = this._meshQuatTex;\r\n        }\r\n\r\n        let mesh = this._mesh as MeshQuadTexture;\r\n\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitBase.create(this, mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                this.fillShaderValue(submit.shaderValue);\r\n                this._copyClipInfo(submit.shaderValue);\r\n                submit.clipInfoID = this._clipInfoID;\r\n                if (!this._lastTex || this._lastTex.destroyed) {\r\n                    submit.shaderValue.textureHost = this.defTexture;\r\n                } else {\r\n                    submit.shaderValue.textureHost = this._lastTex;\r\n                }\r\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\r\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\r\n            }\r\n            mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            this._curSubmit._numEle += 6;\r\n        }\r\n    }\r\n\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\r\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._fillStyle;\r\n        //var rgb = drawstyle.toInt() ;\r\n        //由于显卡的格式是 rgba，所以需要处理一下\r\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\r\n        var rgba = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\r\n    }\r\n\r\n    /**@internal */\r\n    private _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: number[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\r\n        var submit = this._curSubmit;\r\n        //这个不合并，直接渲染\r\n        this._drawToRender2D(this._curSubmit);\r\n        this._mesh = this._meshQuatTex;\r\n\r\n        //filltexture相关逻辑。计算rect大小以及对应的uv\r\n        var repeatx = true;\r\n        var repeaty = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\": repeaty = false; break;\r\n            case \"repeat-y\": repeatx = false; break;\r\n            case \"no-repeat\": repeatx = repeaty = false; break;\r\n            default: break;\r\n        }\r\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\r\n        var uv: any[] = this._temp4Points;\r\n        var stu = 0; //uv起点\r\n        var stv = 0;\r\n        var stx = 0, sty = 0, edx = 0, edy = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\r\n        } else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\r\n        } else {\r\n            sty = y + offsety;\r\n        }\r\n\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n\r\n        //计算最大uv\r\n        var edu = (edx - x - offsetx) / texw;\r\n        var edv = (edy - y - offsety) / texh;\r\n\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\r\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\r\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\r\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\r\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n\r\n            var sv = Value2D.create(RenderSpriteData.Texture2D) as TextureSV;\r\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\r\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\r\n            sv.shaderData.addDefine(ShaderDefines2D.FILLTEXTURE);\r\n            var arry = texuvRect.concat();\r\n            Vector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n            sv.u_TexRange = Vector4.tempVec4;\r\n            submit = this._curSubmit = SubmitBase.create(this, this._mesh, sv);\r\n            this.fillShaderValue(sv);\r\n            submit.clipInfoID = this._clipInfoID;\r\n            submit.shaderValue.textureHost = texture;\r\n            var rgba = this._mixRGBandAlpha(color, this._alpha);\r\n            (this._mesh as MeshQuadTexture).addQuad(this._transedPoints, uv, rgba, true);\r\n\r\n            this._curSubmit._numEle += 6;\r\n        }\r\n        this.breakNextMerge();\t//暂不合并\r\n    }\r\n\r\n\r\n    /**\r\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\r\n     * @param\tvalue\r\n     */\r\n    setColorFilter(filter: ColorFilter): void {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        //_shader2D.filters = value;\r\n        this._colorFiler = filter;\r\n        this.stopMerge = true;\r\n        //_reCalculateBlendShader();\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color = 0xffffffff): void {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\r\n    }\r\n\r\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\r\n        if (!tex._getSource()) //source内调用tex.active();\r\n        {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n\r\n        //TODO 还没实现\r\n        var n = pos.length / 2;\r\n        var ipos = 0;\r\n        var bmpid = (tex.bitmap as Texture2D).id;\r\n        for (var i = 0; i < n; i++) {\r\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color = 0xffffffff): boolean {\r\n        return this._inner_drawTexture(tex, -1, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _copyClipInfo(shaderValue: Value2D): void {\r\n        let clipInfo = this._globalClipMatrix;\r\n        var cm = shaderValue.clipMatDir;\r\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\r\n        shaderValue.clipMatDir = cm;\r\n        var cmp = shaderValue.clipMatPos;\r\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\r\n        shaderValue.clipMatPos = cmp;\r\n    }\r\n\t/**@internal */\r\n    _copyClipInfoToShaderData(shaderData: ShaderData) {\r\n        let clipInfo = this._globalClipMatrix;\r\n        Vector4.tempVec4.setValue(clipInfo.a, clipInfo.b, clipInfo.c, clipInfo.d)\r\n        shaderData.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, Vector4.tempVec4);\r\n        Vector2.TempVector2.setValue(clipInfo.tx, clipInfo.ty);\r\n        shaderData.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, Vector2.TempVector2);\r\n    }\r\n\r\n    //通用的部分的比较\r\n    private isStopMerge(submit: SubmitBase) {\r\n        return this.stopMerge || (submit.clipInfoID !== this._clipInfoID);\r\n    }\r\n\r\n    drawCallOptimize(enable: boolean): boolean {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n\r\n    private _drawToRender2D(submit: SubmitBase) {\r\n        let mesh = this._mesh;\r\n        if (mesh.indexNum <= 0)\r\n            return;\r\n        let shaderValue = submit.shaderValue;\r\n        let shaderdata = shaderValue.shaderData;\r\n        switch (submit._key.blendShader) {\r\n            case 1://add\r\n            case 3://screen\r\n            case 5://light\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE);\r\n                break;\r\n            case 2://BlendMultiply\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_DST_COLOR);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n                break;\r\n            case 6://mask\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ZERO);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_SRC_ALPHA);\r\n                break;\r\n            case 7://destination\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ZERO);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ZERO);\r\n                break;\r\n            case 9:// not premul alpha\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_SRC_ALPHA);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n                break;\r\n            default:// premul alpha\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n        }\r\n\r\n        if (submit._colorFiler) {\r\n            var ft = submit._colorFiler;\r\n            shaderValue.setFilter(ft);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            shaderdata.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, Matrix4x4.TEMPMatrix0);\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            shaderdata.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, Vector4.tempVec4);\r\n        }\r\n\r\n        this._drawMesh(mesh, 0, mesh.vertexNum, submit._startIdx, mesh.indexNum, submit.shaderValue, submit.material);\r\n        this.stopMerge = false;\r\n        this._drawCount++;\r\n    }\r\n\r\n    //TODO 目前是为了方便，从设计上这样是不是不太好\r\n    private _drawMesh(mesh: Sprite2DGeometry, vboff: number, vertNum: number, iboff: number, indexNum: number, shaderValue: Value2D, customMaterial: Material) {\r\n        if (mesh.indexNum) {\r\n            let render2D = this._render2D;\r\n            if (!this._render2DManager._renderEnd) {\r\n                this._render2DManager.render(Render2DSimple.rendercontext2D);\r\n            }\r\n            render2D.draw(\r\n                mesh,\r\n                vboff, vertNum * mesh.vertexDeclarition.vertexStride,\r\n                iboff, indexNum * 2,\r\n                shaderValue,\r\n                customMaterial\r\n            );\r\n        }\r\n        mesh.clearMesh();\r\n        //不能直接release，有的会缓存，例如cacheas normal，或者底层是异步之类的，所以先收集再释放\r\n        //shaderValue.release();\r\n        if (!shaderValue._needRelease) {\r\n            shaderValue._needRelease = true;\r\n            this._shaderValueNeedRelease.push(shaderValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\ttex {Texture | RenderTexture }\r\n     * @param  imgid 图片id用来比较合并的\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tm\r\n     * @param\talpha\r\n     * @param\tuv\r\n     * @return\r\n     */\r\n    _inner_drawTexture(tex: Texture | BaseTexture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix | null, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\r\n        if (width <= 0 || height <= 0) {\r\n            return false;\r\n        }\r\n        var preKey = this._curSubmit._key;\r\n        uv = uv || (tex as Texture)._uv\r\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\r\n        //因为好多动画是drawTexture和drawTriangle混用的\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv = this._tempUV;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this.drawTriangles(tex as Texture, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n\r\n        var submit = this._curSubmit;\r\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n\r\n        if (this.drawTexAlign) {\r\n            var round: Function = Math.round;\r\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\t//一次性的\r\n        }\r\n\r\n        var rgba = this._mixRGBandAlpha(color, this._alpha * alpha);\r\n\r\n        //lastRender = false;\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex as Texture, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n\r\n        //this._drawCount++;\r\n\r\n        var sameKey = (imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid) &&\r\n            !this.isStopMerge(this._curSubmit) &&\r\n            this._mesh.vertexNum + 4 < Context._MAXVERTNUM &&\r\n            this._curSubmit.material == this._material\r\n\r\n        if (!sameKey) {\r\n            this._drawToRender2D(this._curSubmit);\r\n            this._mesh = this._meshQuatTex;\r\n        }\r\n        this._lastTex = tex as Texture;\r\n\r\n        if (!sameKey) {\r\n            let shaderValue = Value2D.create(RenderSpriteData.Texture2D);\r\n            this.fillShaderValue(shaderValue);\r\n            shaderValue.textureHost = tex;\r\n            this._curSubmit = submit = SubmitBase.create(this, this._mesh, shaderValue);\r\n            submit._key.other = imgid;\r\n            this._copyClipInfo(submit.shaderValue);\r\n            submit.clipInfoID = this._clipInfoID;\r\n        }\r\n        (this._mesh as MeshQuadTexture).addQuad(ops, uv, rgba, true);\r\n        submit._numEle += 6;\r\n        return true;\r\n    }\r\n\r\n    private fillShaderValue(shaderValue: Value2D) {\r\n        shaderValue.size = new Vector2(this._width, this._height);\r\n        this._copyClipInfo(shaderValue);\r\n    }\r\n    /**\r\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\r\n     * @param\tpt\r\n     * @return\r\n     */\r\n    private clipedOff(pt: any[]): boolean {\r\n        //TODO\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     * @param\th\r\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\r\n     */\r\n    private transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\r\n        var xoff = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx = x + w; var maxy = y + h;\r\n\r\n        var tx = m.tx;\r\n        var ty = m.ty;\r\n        var ma = m.a;\r\n        var mb = m.b;\r\n        var mc = m.c;\r\n        var md = m.d;\r\n        var a0 = x + xoff;\r\n        var a1 = y;\r\n        var a2 = maxx + xoff;\r\n        var a3 = y;\r\n        var a4 = maxx;\r\n        var a5 = maxy;\r\n        var a6 = x;\r\n        var a7 = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n            /* 旋转的情况下这个是错的。TODO\r\n            let dx = out[2] - out[0];\r\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[2] += dx;\r\n            }\r\n            dx = out[4] - out[6];\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[4] += dx;\r\n            }\r\n            */\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制拒绝submit合并\r\n     * 例如切换rt的时候\r\n     */\r\n    breakNextMerge(): void {\r\n        this.stopMerge = true;\r\n    }\r\n\r\n    private _repaintSprite(): void {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\ttex\r\n     * @param\tx\t\t\t\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\ttransform\t图片本身希望的矩阵\r\n     * @param\ttx\t\t\t节点的位置\r\n     * @param\tty\r\n     * @param\talpha\r\n     */\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\r\n        var oldcomp: string;\r\n        var curMat = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat = this._tmpMatrix;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n\r\n        if (transform && curMat._bTransform) {\r\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        } else {\r\n            //如果curmat没有旋转。\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\r\n        if (blendMode)\r\n            this.globalCompositeOperation = oldcomp;\r\n    }\r\n\r\n    drawGeo(geo: IRenderGeometryElement, material: Material, x: number, y: number) {\r\n        this.drawLeftData();\r\n        let mat = this._curMat;\r\n        let buffer = this._matBuffer;\r\n        buffer[0] = mat.a;\r\n        buffer[1] = mat.b;\r\n        buffer[2] = mat.tx + mat.a * x + mat.c * y;\r\n        buffer[3] = mat.c;\r\n        buffer[4] = mat.d;\r\n        buffer[5] = mat.ty + mat.b * x + mat.d * y;\r\n        material.setBuffer(\"u_NMatrix\", buffer);\r\n        material.setVector2(\"u_size\", new Vector2(this._width, this._height));//TODO LAOGUO\r\n        this._render2D.drawMesh(geo, material);\r\n    }\r\n\r\n    drawGeos(geo: IRenderGeometryElement, elements: [Material, number, number][], x: number, y: number) {\r\n        this.drawLeftData();\r\n        let mat = this._curMat;\r\n        let buffer = this._matBuffer;\r\n        buffer[0] = mat.a;\r\n        buffer[1] = mat.b;\r\n        buffer[2] = mat.tx + mat.a * x + mat.c * y;\r\n        buffer[3] = mat.c;\r\n        buffer[4] = mat.d;\r\n        buffer[5] = mat.ty + mat.b * x + mat.d * y;\r\n        for (let i = 0, n = elements.length; i < n; i++) {\r\n            let material = elements[i][0];\r\n            material.setBuffer(\"u_NMatrix\", buffer);\r\n            material.setVector2(\"u_size\", new Vector2(this._width, this._height));//TODO LAOGUO\r\n            geo.clearRenderParams();\r\n            geo.setDrawElemenParams(elements[i][1], elements[i][2]);\r\n            this._render2D.drawMesh(geo, material);\r\n        }\r\n    }\r\n\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number | null, blendMode: string, colorNum = 0xffffffff): void {\r\n\r\n        if (alpha == null) alpha = 1.0;\r\n\r\n        if (!tex._getSource()) { //source内调用tex.active();\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp: string | null = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        //this._drawCount++;\r\n\r\n        // 为了提高效率，把一些变量放到这里\r\n        var tmpMat = this._tmpMatrix;\r\n        var webGLImg = tex.bitmap;\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        var sameKey = preKey.submitType === SubmitBase.KEY_TRIANGLES &&\r\n            preKey.other === webGLImg.id &&\r\n            preKey.blendShader == this._nBlendType &&\r\n            this._mesh.vertexNum + vertices.length / 2 < Context._MAXVERTNUM &&\r\n            this._curSubmit.material == this._material;\r\n\r\n        if (!sameKey) {\r\n            this._drawToRender2D(this._curSubmit);\r\n            this._mesh = this._meshTex;\r\n        }\r\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n        if (!sameKey) {\r\n            //添加一个新的submit\r\n            var submit = this._curSubmit = SubmitBase.create(this, this._mesh,\r\n                Value2D.create(RenderSpriteData.Texture2D));\r\n            submit.shaderValue.textureHost = tex;\r\n            this.fillShaderValue(submit.shaderValue);\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit.shaderValue);\r\n            submit.clipInfoID = this._clipInfoID;\r\n        }\r\n\r\n        var rgba = this._mixRGBandAlpha(colorNum, this._alpha * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\r\n            } else {\r\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            //由于2d动画部分的uvs是绝对的（例如图集的话就是相对图集的）所以最后不传uvrect了。\r\n            (this._mesh as MeshTexture).addData(vertices, uvs, indices, tmpMat || this._curMat, rgba, null);\r\n        } else {\r\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\r\n            (this._mesh as MeshTexture).addData(vertices, uvs, indices, matrix, rgba, null);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp!;\r\n        }\r\n        //return true;\r\n    }\r\n\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\r\n        this._curMat._checkTransform();\r\n    }\r\n\r\n    rotate(angle: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n\r\n    scale(scaleX: number, scaleY: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n\r\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        } else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n\r\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n\r\n        if (escape) {\r\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\r\n            return;\r\n        }\r\n\r\n        var cm: Matrix = this._globalClipMatrix;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx = cm.tx;\r\n        var miny = cm.ty;\r\n        var maxx = minx + cm.a;\r\n        var maxy = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            } else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx = cm.tx + cm.a;\r\n            var cmaxy = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n    startRender() {\r\n        for (let sv of this._shaderValueNeedRelease) {\r\n            sv.release();\r\n            sv._needRelease = false;\r\n        }\r\n        this._shaderValueNeedRelease.length = 0;\r\n\r\n        this._render2D.renderStart(this._clear, this._clearColor);\r\n        this.clear();\r\n    }\r\n\r\n    endRender() {\r\n\r\n        this.flush();\r\n        if (!this._render2DManager._renderEnd) {\r\n            this._render2DManager.render(Render2DSimple.rendercontext2D);\r\n        }\r\n        this._render2D.renderEnd();\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n\r\n    //合并mesh之后，最后一点数据还没有渲染，这里强制渲染\r\n    drawLeftData() {\r\n        //剩下的\r\n        this._drawToRender2D(this._curSubmit);\r\n    }\r\n\r\n    flush() {\r\n        this.drawLeftData();\r\n        this._clipID_Gen = 0;\r\n        this._path && this._path.reset();\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        this._flushCnt++;\r\n        //charbook gc\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n    }\r\n\r\n    beginPath(convex = false): void {\r\n        this._getPath().beginPath(convex);\r\n    }\r\n\r\n    closePath(): void {\r\n        this._path.closePath();\r\n    }\r\n\r\n    /**\r\n     * 添加一个path。\r\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\r\n     * @param\tclose\t是否闭合\r\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\r\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\r\n     * @param\tdy\r\n     */\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\r\n        let sz = points.length;\r\n        for (let i = 0; i < sz - 1; i += 2) {\r\n            points[i] += dx;\r\n            points[i + 1] += dy;\r\n        }\r\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n\r\n    fill(): void {\r\n        var m = this._curMat;\r\n        var tPath = this._getPath();\r\n        var submit = this._curSubmit;\r\n        var sameKey = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType) &&\r\n            !this.isStopMerge(submit) &&\r\n            this._curSubmit.material == this._material;\r\n\r\n        if (!sameKey) {\r\n            this._drawToRender2D(submit);\r\n            this._mesh = this._meshVG;\r\n            this._curSubmit = this.addVGSubmit(this._mesh);\r\n            this.fillShaderValue(this._curSubmit.shaderValue);\r\n        }\r\n        var rgba = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum = 0;\r\n        var idx: any[];\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i = 0, sz = tPath.paths.length; i < sz; i++) {\r\n            var p = tPath.paths[i];\r\n            var vertNum = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath: any[] = p.path.concat();\r\n            // 应用矩阵转换顶点\r\n            var pi = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            if (this._mesh.vertexNum + vertNum > Context._MAXVERTNUM) {\r\n                //;\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                //然后用新的mesh，和新的submit。\r\n                this._mesh = new MeshVG();// MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._mesh);\r\n                this.fillShaderValue(this._curSubmit.shaderValue);\r\n            }\r\n\r\n            var curvert = this._mesh.vertexNum;\r\n            //生成 ib\r\n            if (p.convex) { //convex的ib比较容易\r\n                var faceNum = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos = 0;\r\n                for (var fi = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\r\n                if (curvert > 0) {\r\n                    //修改ib\r\n                    for (var ii = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            //填充mesh\r\n            (this._mesh as MeshVG).addVertAndIBToMesh(cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    private addVGSubmit(mesh: Sprite2DGeometry): SubmitBase {\r\n        //elenum设为0，后面再加\r\n        var submit: SubmitBase = SubmitBase.create(this, mesh, Value2D.create(RenderSpriteData.Primitive));\r\n        this.fillShaderValue(submit.shaderValue);\r\n        //submit._key.clear();\r\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._copyClipInfo(submit.shaderValue);\r\n        submit.clipInfoID = this._clipInfoID;\r\n        return submit;\r\n    }\r\n\r\n    stroke(): void {\r\n        if (this.lineWidth <= 0)\r\n            return;\r\n        var rgba = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n        var tPath = this._getPath();\r\n        var submit = this._curSubmit;\r\n        var sameKey = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType) &&\r\n            !this.isStopMerge(submit) &&\r\n            this._curSubmit.material == this._material\r\n\r\n        if (!sameKey) {\r\n            this._drawToRender2D(this._curSubmit);\r\n            this._mesh = this._meshVG;\r\n            this._curSubmit = this.addVGSubmit(this._mesh);\r\n            this.fillShaderValue(this._curSubmit.shaderValue);\r\n        }\r\n        var curEleNum = 0;\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i = 0, sz = tPath.paths.length; i < sz; i++) {\r\n            var p: any = tPath.paths[i];\r\n            if (p.path.length <= 0)\r\n                continue;\r\n            var idx: any[] = [];\r\n            var vertex: any[] = [];//x,y\r\n            //p.path.loop;\r\n            //填充vbib\r\n            var maxVertexNum = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\r\n            if (maxVertexNum < 2)\r\n                continue;\r\n            if (this._mesh.vertexNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                this._drawToRender2D(this._curSubmit);\r\n                //然后用新的mesh，和新的submit。\r\n                this._mesh = new MeshVG();// MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._mesh);\r\n                this.fillShaderValue(this._curSubmit.shaderValue);\r\n            }\r\n            //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\r\n            BasePoly.createLine2(p.path, idx, this.lineWidth, this._mesh.vertexNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\r\n            // 变换所有的点\r\n            var ptnum = vertex.length / 2;\r\n            var m: Matrix = this._curMat;\r\n            var pi = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < ptnum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = vertex[xp];\r\n                    _y = vertex[yp];\r\n\r\n                    vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < ptnum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = vertex[xp];\r\n                    _y = vertex[yp];\r\n                    vertex[xp] = _x + m.tx;\r\n                    vertex[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\r\n            //填充mesh\r\n            (this._mesh as MeshVG).addVertAndIBToMesh(vertex, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    moveTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tb 是否应用矩阵\r\n     */\r\n    lineTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    /*\r\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\r\n        //setPathId(-1);\r\n        beginPath();\r\n        strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        var points:Array = points;\r\n        //movePath(x, y); TODO 这个被去掉了\r\n        moveTo(points[0], points[1]);\r\n        var i:int = 2, n:int = points.length;\r\n        while (i < n) {\r\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\r\n        }\r\n        stroke();\r\n    }\r\n    */\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\r\n        /*\r\n        if (mId != -1) {\r\n            if (mHaveKey) {\r\n                return;\r\n            }\r\n        }\r\n        */\r\n        var i = 0;\r\n        var x = 0, y = 0;\r\n        var dx = this._path._lastOriX - x1;\r\n        var dy = this._path._lastOriY - y1;\r\n        var len1 = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx = dx / len1;\r\n        var ndy = dy / len1;\r\n        var dx2 = x2 - x1;\r\n        var dy2 = y2 - y1;\r\n        var len22 = dx2 * dx2 + dy2 * dy2;\r\n        var len2 = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2 = dx2 / len2;\r\n        var ndy2 = dy2 / len2;\r\n        var odx = ndx + ndx2;\r\n        var ody = ndy + ndy2;\r\n        var olen = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n\r\n        var nOdx = odx / olen;\r\n        var nOdy = ody / olen;\r\n\r\n        var alpha = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng = Math.PI / 2 - alpha;\r\n\r\n        len1 = r * Math.tan(halfAng);\r\n        var ptx1 = len1 * ndx + x1;\r\n        var pty1 = len1 * ndy + y1;\r\n\r\n        var orilen = Math.sqrt(len1 * len1 + r * r);\r\n        //圆心\r\n        var orix = x1 + nOdx * orilen;\r\n        var oriy = y1 + nOdy * orilen;\r\n\r\n        var ptx2 = len1 * ndx2 + x1;\r\n        var pty2 = len1 * ndy2 + y1;\r\n\r\n        var dir = ndx * ndy2 - ndy * ndx2;\r\n\r\n        var fChgAng = 0;\r\n        var sinx = 0.0;\r\n        var cosx = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n\r\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\r\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\r\n        var lastx = this._path._lastOriX, lasty = this._path._lastOriY;\t//没有矩阵转换的上一个点\r\n        var _x1 = ptx1, _y1 = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\r\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx = ptx1 - orix;\r\n        var cvy = pty1 - oriy;\r\n        var tx = 0.0;\r\n        var ty = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx = cvx * cosx + cvy * sinx;\r\n            var cy = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n\r\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\r\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\r\n            //x = x1;\r\n            //y = y1;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n\r\n    arc(cx: number, cy: number, rx: number, ry: number, startAngle: number, endAngle: number, counterclockwise = false, b = true, minNum = 20): void {\r\n        // Clamp angles\r\n        if (startAngle > endAngle) {\r\n            [startAngle, endAngle] = [endAngle, startAngle];\r\n        }\r\n        let da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            } else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        } else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            } else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx = this.getMatScaleX();\r\n        var sy = this.getMatScaleY();\r\n        var sr = rx * (sx > sy ? sx : sy);\r\n        var cl = 2 * Math.PI * sr;\r\n        let ndivs = (Math.max(cl / 5, minNum)) | 0;\r\n        let stepAng = Math.PI * 2 / ndivs;\r\n\r\n        var tPath = this._getPath();\r\n\r\n        let x = cx + Math.cos(startAngle) * rx;\r\n        let y = cy + Math.sin(startAngle) * ry;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            tPath.addPoint(x, y);\r\n        }\r\n        //增加关键支撑点，这些点要在固定位置\r\n        let curAng = Math.ceil(startAngle / stepAng) * stepAng;\r\n        while (endAngle - curAng >= stepAng) {\r\n            x = cx + Math.cos(curAng) * rx;\r\n            y = cy + Math.sin(curAng) * ry;\r\n            tPath.addPoint(x, y);\r\n            curAng += stepAng;\r\n        }\r\n        x = cx + Math.cos(endAngle) * rx;\r\n        y = cy + Math.sin(endAngle) * ry;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n        var tBezier: Bezier = Bezier.I;\r\n        var tResultArray: any[] = [];\r\n        //var _x1:Number = x, _y1:Number = y;\r\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\r\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        //_x1 = cpx, _y1 = cpy;\r\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\r\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i = 0, n = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 把颜色跟当前设置的alpha混合\r\n     * @return\r\n     */\r\n    mixRGBandAlpha(color: number): number {\r\n        return this._mixRGBandAlpha(color, this._alpha);\r\n    }\r\n    /**@internal */\r\n    _mixRGBandAlpha(color: number, alpha: number): number {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a = ((color & 0xff000000) >>> 24);\r\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        } else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\r\n        var tW = parameterLineWidth * 0.5;\r\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\r\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\r\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\r\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\r\n        /**\r\n         * p1-------------------------------p2\r\n         * |  x,y                      x+w,y|\r\n         * |     p4--------------------p3   |\r\n         * |     |                     |    |\r\n         * |     p6--------------------p7   |\r\n         * |  x,y+h                  x+w,y+h|\r\n         * p5-------------------------------p8\r\n         * \r\n         * 不用了\r\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\r\n         */\r\n        //TODO 这里能不能与下面的stroke合并一下\r\n        if (this.lineWidth > 0) {\r\n            var rgba = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\r\n        }\r\n    }\r\n\r\n    /*******************************************end矢量绘制***************************************************/\r\n    //TODO:coverage\r\n    drawParticle(x: number, y: number, pt: any): void {\r\n    }\r\n\r\n    private _getPath(): Path {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n\r\n    /**获取canvas*/\r\n    //注意这个是对外接口\r\n    get canvas(): HTMLCanvas {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来水平填充\r\n     * @param\ttex\r\n     * @param\tbmpid\r\n     * @param\tuv\t\t希望循环的部分的uv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     */\r\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\r\n        if (oriw <= 0)\r\n            return;//console.error('_fillTexture_h error: oriw must>0');\r\n\r\n        var stx = x;\r\n        var num = Math.floor(w / oriw);\r\n        var left = w % oriw;\r\n        for (var i = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\r\n            stx += oriw;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var du = uv[2] - uv[0];\r\n            var uvr = uv[0] + du * (left / oriw);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\r\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来垂直填充\r\n     * @param\ttex\r\n     * @param\timgid\r\n     * @param\tuv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\th\r\n     */\r\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\r\n        if (orih <= 0)\r\n            return; //console.error('_fillTexture_v error: orih must>0');\r\n        var sty = y;\r\n        var num = Math.floor(h / orih);\r\n        var left = h % orih;\r\n        for (var i = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\r\n            sty += orih;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var dv = uv[7] - uv[1];\r\n            var uvb = uv[1] + dv * (left / orih);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\r\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n\r\n        var uv = tex.uv, w = tex.bitmap.width, h = tex.bitmap.height;\r\n\r\n        var top = sizeGrid[0];\r\n        var left = sizeGrid[3];\r\n        var right = sizeGrid[1];\r\n        var bottom = sizeGrid[2];\r\n        var repeat = sizeGrid[4];\r\n        var needClip = false;\r\n\r\n        if (width == tex.width) {\r\n            left = right = 0;\r\n        }\r\n        if (height == tex.height) {\r\n            top = bottom = 0;\r\n        }\r\n\r\n        var d_top = top / h;\r\n        var d_left = left / w;\r\n        var d_right = right / w;\r\n        var d_bottom = bottom / h;\r\n\r\n        //处理进度条不好看的问题\r\n        // if (left + right > width) {\r\n        // \tvar clipWidth = width;\r\n        // \tneedClip = true;\r\n        // \twidth = left + right;\r\n        // \tthis.save();\r\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        // }\r\n\r\n        var imgid = (tex.bitmap as Texture2D).id;\r\n        var mat: Matrix = this._curMat;\r\n        var tuv = this._tempUV;\r\n\r\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\r\n        var scale_x = 1;\r\n        var scale_y = 1;\r\n        if (left + right > width) scale_x = width / (left + right);\r\n        if (top + bottom > height) scale_y = height / (top + bottom);\r\n        left *= scale_x;\r\n        right *= scale_x;\r\n        top *= scale_y;\r\n        bottom *= scale_y;\r\n\r\n        // 整图的uv\r\n        // 一定是方的，所以uv只要左上右下就行\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n\r\n        // 小图的uv\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n\r\n        //绘制四个角\r\n        // 构造uv\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt;\r\n            uvr_ = uvr; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        //绘制上下两个边\r\n        if (top) {\r\n            uvl_ = uvl + d_left; uvt_ = uvt;\r\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\r\n            }\r\n\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制左右两边\r\n        if (left) {\r\n            uvl_ = uvl; uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\r\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制中间\r\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr: any[] = Context.tmpUVRect;\r\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\r\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\r\n        } else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\r\n        }\r\n\r\n        if (needClip) this.restore();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass ContextParams {\r\n    static DEFAULT: ContextParams;\r\n\r\n    lineWidth = 1;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    clear(): void {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n\r\n    make(): ContextParams {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"./Context\"\r\nimport { _RenderFunction } from \"./RenderSprite\"\r\n\r\n/**\r\n * @internal\r\n * 快速节点命令执行器\r\n * 多个指令组合才有意义，单个指令没必要在下面加\r\n */\r\nexport class LayaGLQuickRunner {\r\n    static map: _RenderFunction[] = [];\r\n    /**@internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\r\n    }\r\n\r\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var tex = sprite.texture;\r\n        context.save();\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        var width = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n        var height = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n        var wRate = width / tex.sourceWidth;\r\n        var hRate = height / tex.sourceHeight;\r\n        width = tex.width * wRate;\r\n        height = tex.height * hRate;\r\n        if (width <= 0 || height <= 0) return null;\r\n        var px = -sprite.pivotX + tex.offsetX * wRate;\r\n        var py = -sprite.pivotY + tex.offsetY * hRate;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            context.drawTexture(tex, px, py, width, height);\r\n        context.restore();\r\n    }\r\n\r\n   \r\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        var alpha = style.alpha;\r\n        var tex = sprite.texture;\r\n        if (alpha > 0.01 || sprite._needRepaint()) {\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var width = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate = width / tex.sourceWidth;\r\n            var hRate = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px = x - style.pivotX + tex.offsetX * wRate;\r\n            var py = y - style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        var alpha = style.alpha;\r\n        var tex = sprite.texture;\r\n        if (alpha > 0.01 || sprite._needRepaint()) {\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.save();\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            var width = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate = width / tex.sourceWidth;\r\n            var hRate = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px = -style.pivotX + tex.offsetX * wRate;\r\n            var py = -style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.restore();\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        var alpha = style.alpha;\r\n        if (alpha > 0.01 || sprite._needRepaint()) {\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.save();\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n            context.restore();\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        var alpha = style.alpha;\r\n        if (alpha  > 0.01 || sprite._needRepaint()) {\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        context.save();\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        context.restore();\r\n    }\r\n\r\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var drawcallOptim = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        var style = sprite._style;\r\n        context.save();\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        x = -style.pivotX;\r\n        y = -style.pivotY;\r\n\r\n        var childs: any[] = sprite._children, n = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && (\r\n                    (_x = ele._x) >= right   || \r\n                    (_x + ele.width) <= left || \r\n                    (_y = ele._y) >= bottom  || \r\n                    (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        context.restore();\r\n        drawcallOptim && context.drawCallOptimize(false);\r\n    }\r\n\r\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var drawcallOptim = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        var style = sprite._style;\r\n        x = x - style.pivotX;\r\n        y = y - style.pivotY;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\r\n\r\n        var childs: any[] = sprite._children, n = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right   || \r\n                         (_x + ele.width) <= left || \r\n                         (_y = ele._y) >= bottom  || \r\n                         (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        drawcallOptim && context.drawCallOptimize(false);\r\n    }\r\n}\r\n\r\n","import { Context } from \"./Context\";\r\nimport { IAutoExpiringResource } from \"./ResNeedTouch\";\r\nimport { CachePage } from \"./SpriteCache\";\r\n\r\nvar DefferTouchResContextID=0;\r\nexport class DefferTouchResContext extends Context{\r\n    // context只是负责设置和收集引用的资源，并不管如何touch\r\n    cache:CachePage=null;\r\n    mustTouchRes:IAutoExpiringResource[]=[];\r\n    randomTouchRes:IAutoExpiringResource[]=[];\r\n    genID=DefferTouchResContextID++;    //版本id\r\n\r\n\r\n    /**\r\n     * 添加需要touch的资源\r\n     * @param res \r\n     */\r\n    override touchRes(res:IAutoExpiringResource){\r\n        if(res.isRandomTouch){\r\n            this.randomTouchRes.push(res);\r\n        }else{\r\n            this.mustTouchRes.push(res);\r\n        }\r\n    }    \r\n}","import { IRenderElement2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderElement2D\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { VertexDeclaration } from \"../RenderEngine/VertexDeclaration\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { Render2D, ISprite2DGeometry } from \"./Render2D\";\r\nimport { RenderObject2D } from \"./SpriteCache\";\r\n\r\nexport class RenderToCache extends Render2D {\r\n    renderResult:RenderObject2D[]=[];\r\n    private _tex_vert_decl: VertexDeclaration;\r\n\r\n    constructor() {\r\n        super(null);\r\n    }\r\n\r\n    clone(out: RenderTexture2D): RenderToCache {\r\n        return null;\r\n    }\r\n    \r\n    private _createMesh() {\r\n        // let geo = this.geo = new WebGLRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElement);\r\n        // let mesh = new WebGLBufferState();\r\n        // geo.bufferState = mesh;\r\n        // let vb = new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\r\n        // vb.vertexDeclaration = this._tex_vert_decl;\r\n        // let ib = new WebGLIndexBuffer(BufferTargetType.ELEMENT_ARRAY_BUFFER, BufferUsage.Dynamic);\r\n        // mesh.applyState([vb], ib)\r\n        // geo.indexFormat = IndexFormat.UInt16;\r\n    }\r\n\r\n    private setVertexDecl(decl: VertexDeclaration) {\r\n        if (this._tex_vert_decl != decl) {\r\n            this._tex_vert_decl = decl;\r\n            this._createMesh();\r\n        }\r\n    }\r\n\r\n    renderStart(): void {\r\n    }\r\n\r\n    draw(mesh2d: ISprite2DGeometry, vboff: number, vblen: number, iboff: number, iblen: number, mtl: Value2D): void {\r\n        this.setVertexDecl(mesh2d.vertexDeclarition);\r\n        let submesh = new RenderObject2D(mesh2d,vboff,vblen,iboff,iblen,mtl);\r\n        let clipPos = mtl.clipMatPos;\r\n        let clipDir = mtl.clipMatDir;\r\n        let clipMat = submesh.localClipMatrix;\r\n        clipMat.a = clipDir.x; clipMat.b = clipDir.y; clipMat.c = clipDir.z; clipMat.d = clipDir.w;\r\n        clipMat.tx = clipPos.x; clipMat.ty = clipPos.y;\r\n        mtl.shaderData.addDefine(ShaderDefines2D.WORLDMAT);\r\n        submesh.toNativeMesh();\r\n        this.renderResult.push(submesh);\r\n    }\r\n\r\n    drawMesh(mesh: IRenderGeometryElement, mtl: Material): void {\r\n        throw \"not implement\"\r\n    }\r\n    drawElement(ele: IRenderElement2D): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    renderEnd(): void {\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Const } from \"../Const\";\r\nimport { IRenderElement2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderElement2D\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DrawType } from \"../RenderEngine/RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { VertexDeclaration } from \"../RenderEngine/VertexDeclaration\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { Event } from \"../events/Event\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { TextTexture } from \"../webgl/text/TextTexture\";\r\nimport { Context } from \"./Context\";\r\nimport { DefferTouchResContext } from \"./DefferTouchResContext\";\r\nimport { ISprite2DGeometry, Render2D} from \"./Render2D\";\r\nimport { RenderSprite } from \"./RenderSprite\";\r\nimport { RenderToCache } from \"./RenderToCache\";\r\nimport { IAutoExpiringResource } from \"./ResNeedTouch\";\r\n\r\nexport class RenderObject2D implements ISprite2DGeometry{\r\n    vboff: number;\r\n    vblen: number;\r\n    iboff: number;\r\n    iblen: number;\r\n    mtl: Value2D;\r\n    //本地裁剪，给cacheas = normal用，用来组合出一个世界裁剪\r\n    localClipMatrix: Matrix;\r\n\r\n    dynaResourcesNeedTouch:any[];\r\n    vertexDeclarition: VertexDeclaration;\r\n    vbBuffer: ArrayBuffer;\r\n    ibBuffer: ArrayBuffer;\r\n\r\n    geo: IRenderGeometryElement;\r\n    renderElement: IRenderElement2D;\r\n\r\n    constructor(mesh:ISprite2DGeometry,vboff:number,vblen:number,iboff:number,iblen:number,mtl:Value2D){\r\n        this.localClipMatrix = new Matrix();\r\n        this.vertexDeclarition = mesh.vertexDeclarition;\r\n        this.vbBuffer = new ArrayBuffer(vblen);\r\n        this.ibBuffer = new ArrayBuffer(iblen);\r\n        (new Uint8Array(this.vbBuffer)).set(new Uint8Array(mesh.vbBuffer,vboff,vblen));\r\n        (new Uint8Array(this.ibBuffer)).set(new Uint8Array(mesh.ibBuffer,iboff,iblen));\r\n        this.mtl = mtl; //TODO clone?\r\n        this.vboff=0;\r\n        this.vblen=vblen;\r\n        this.iboff=0;\r\n        this.iblen=iblen;        \r\n    }\r\n\r\n    toNativeMesh(){\r\n        let renderDevice = LayaGL.renderDeviceFactory;\r\n        let geo = this.geo = renderDevice.createRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElement);\r\n        let mesh = geo.bufferState = renderDevice.createBufferState();\r\n        let vb = renderDevice.createVertexBuffer(BufferUsage.Dynamic);\r\n        vb.vertexDeclaration = this.vertexDeclarition;\r\n        let ib = renderDevice.createIndexBuffer(BufferUsage.Dynamic);\r\n        mesh.applyState([vb], ib)\r\n        geo.indexFormat = IndexFormat.UInt16;\r\n        vb.setDataLength(this.vblen);\r\n        vb.setData(this.vbBuffer, this.vboff, 0, this.vblen)\r\n        ib._setIndexDataLength(this.iblen)\r\n        ib._setIndexData(new Uint16Array(this.ibBuffer, this.iboff, this.iblen / 2), 0)\r\n        geo.clearRenderParams();\r\n        geo.setDrawElemenParams(this.iblen / 2, 0);\r\n\r\n        this.renderElement = LayaGL.render2DRenderPassFactory.createRenderElement2D();\r\n        this.renderElement.geometry = geo;\r\n        this.renderElement.value2DShaderData = this.mtl.shaderData;\r\n        this.renderElement.subShader = this.mtl._defaultShader.getSubShaderAt(0);\r\n        this.renderElement.materialShaderData = null;\r\n    }    \r\n\r\n    destroyGPUResource(){\r\n        this.renderElement&&this.renderElement.destroy();\r\n        let geo = this.geo;\r\n        if(geo){\r\n            geo.bufferState._vertexBuffers[0].destroy();\r\n            geo.bufferState._bindedIndexBuffer.destroy();\r\n            geo.bufferState.destroy();\r\n            geo.bufferState\r\n            geo.destroy();\r\n            this.geo=null; \r\n        }\r\n    }\r\n}\r\n\r\nexport class Cache_Info{\r\n    //相对所在page的信息.如果本身就是normal则就是自己的cache结果\r\n    page:CachePage=null;\r\n\r\n    //世界信息\r\n    //wMat=new Matrix();\r\n    mat:Matrix;\r\n    alpha:number;\r\n    blend:string;    //undefined表示没有设置\r\n    contextID:number;   //当这sprite是挂点的时候，这个表示更新挂点信息的id\r\n    //clipRect:Rectangle;\r\n    clipMatrix:Matrix;\r\n    reset(){\r\n        this.page && this.page.reset();\r\n        this.page = null;\r\n    }\r\n}\r\n\r\n//计算两个裁剪用matrix的交集\r\nfunction mergeClipMatrix(a:Matrix, b:Matrix,out:Matrix){\r\n    //假设a和b都是正的。TODO 起码应该假设a是正的\r\n    let amaxx = a.tx+a.a;\r\n    let amaxy = a.ty+a.d;\r\n    let bmaxx = b.tx+b.a;\r\n    let bmaxy = b.ty+b.d;\r\n    \r\n    let minx = out.tx = Math.max(a.tx,b.tx);\r\n    let miny = out.ty = Math.max(a.ty,b.ty);\r\n\r\n    out.b=out.c=0;\r\n    out.tx = minx;\r\n    out.ty = miny;\r\n    //如果没有交集\r\n    if(amaxx<=b.tx || amaxy<=b.ty || bmaxx<=a.tx || bmaxy<=a.ty){\r\n        out.a=-0.1;\r\n        out.d=-0.1;\r\n    }else{\r\n        let maxx = Math.min(amaxx,bmaxx);\r\n        let maxy = Math.min(amaxy,bmaxy);\r\n        out.a = maxx-minx;\r\n        out.d = maxy-miny;\r\n    }\r\n    return out;\r\n}\r\n\r\nclass RenderPageContext{\r\n    //简化的context，只是\r\n    curMatrix:Matrix;\r\n    alpha=1;\r\n    render2d:Render2D;\r\n    width=0;    //TODO这个不应该在这里\r\n    height=0;\r\n    clipInfo: Matrix;\r\n    blend=0;\r\n    /**\r\n     * 这里的xy就是渲染的xy，需要这个参数是为了正确计算当前矩阵\r\n     * @param ctx \r\n     * @param x \r\n     * @param y \r\n     */\r\n    constructor(ctx:Context,x:number,y:number){\r\n        let mat = this.curMatrix = ctx._curMat.clone();\r\n        mat.tx+=mat.a*x+mat.c*y;\r\n        mat.ty+=mat.b*x+mat.d*y;\r\n        this.alpha=ctx.globalAlpha;\r\n        this.render2d = ctx.render2D;\r\n        this.width=ctx.width;\r\n        this.height=ctx.height;\r\n        this.clipInfo = ctx._globalClipMatrix.clone();\r\n        this.blend = ctx._nBlendType;\r\n    }\r\n    _copyClipInfo(shaderValue: Value2D): void {\r\n        let clipInfo = this.clipInfo;\r\n        var cm = shaderValue.clipMatDir;\r\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\r\n        shaderValue.clipMatDir = cm;\r\n        var cmp = shaderValue.clipMatPos;\r\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\r\n        shaderValue.clipMatPos = cmp;\r\n    }    \r\n\r\n    clipRect( rect:Rectangle){//} x: number|Rectangle, y: number, width: number, height: number){\r\n        let x = rect.x;\r\n        let y = rect.y;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        var cm = this.clipInfo;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx = cm.tx;\r\n        var miny = cm.ty;\r\n        var maxx = minx + cm.a;\r\n        var maxy = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            let mat = this.curMatrix;\r\n            if (mat._bTransform) {\r\n                cm.tx = x * mat.a + y * mat.c + mat.tx;\r\n                cm.ty = x * mat.b + y * mat.d + mat.ty;\r\n                cm.a = width * mat.a;\r\n                cm.b = width * mat.b;\r\n                cm.c = height * mat.c;\r\n                cm.d = height * mat.d;\r\n            } else {\r\n                cm.tx = x + mat.tx;\r\n                cm.ty = y + mat.ty;\r\n                cm.a = width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = height;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx = cm.tx + cm.a;\r\n            var cmaxy = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n\r\n    setBlendMode(blend:string){\r\n        this.blend = BlendMode.TOINT[blend];\r\n    }\r\n    _applyBlend(shaderValue: Value2D) {\r\n        let shaderdata = shaderValue.shaderData;\r\n        switch (this.blend) {\r\n            case 1://add\r\n            case 3://screen\r\n            case 5://light\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE);\r\n                break;\r\n            case 2://BlendMultiply\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_DST_COLOR);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n                break;\r\n            case 6://mask\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ZERO);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_SRC_ALPHA);\r\n                break;\r\n            case 7://destination\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ZERO);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ZERO);\r\n                break;\r\n            case 9:// not premul alpha\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_SRC_ALPHA);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n                break;\r\n            default:// premul alpha\r\n                shaderdata.setInt(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\r\n                shaderdata.setInt(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\r\n        }\r\n    }\r\n}\r\n\r\n//page是在渲染的过程中动态创建的\r\nexport class CachePage{\r\n    sprite:Sprite=null;     //这个page对应的根sprite，具体挂点信息从parent节点的SpriteInfoInPage中找\r\n    meshes:RenderObject2D[]=null;\r\n    defferTouchRes:IAutoExpiringResource[]=null;\r\n    defferTouchResRand:IAutoExpiringResource[]=null;\r\n   \r\n    //挂载其他cacheas normal的sprite。实际的缓存数据保存在sprite身上，这里保存sprite比较方便。\r\n    children:Sprite[]=null;\r\n\r\n    reset(){\r\n        this.clearGPUObject();\r\n    }\r\n\r\n    private clearGPUObject(){\r\n        if(this.meshes){\r\n            this.meshes.forEach(m=>{\r\n                m.destroyGPUResource();\r\n            })\r\n        }\r\n    }\r\n    /**\r\n     * 根据sprite的相对矩阵（相对于parent）画出缓存的mesh\r\n     * 为了位置能正确，需要context中提供的矩阵是sprite的parent的世界矩阵\r\n     * @param sprite \r\n     * @param context \r\n     * @param isRoot  如果为true的话，则可以直接使用当前矩阵。优化用。\r\n     */\r\n    render(sprite:Sprite,context:RenderPageContext,isRoot:boolean){\r\n        let spriteTrans = sprite.transform;\r\n        let curMat = context.curMatrix;\r\n        if(isRoot){\r\n            curMat.copyTo(worldMat);\r\n            //alpha直接使用\r\n            //blend直接使用\r\n        }else{\r\n            //如果sprite有旋转，则用矩阵乘法，否则用简单的偏移\r\n            let x = sprite._x;\r\n            let y = sprite._y;\r\n            if(spriteTrans){\r\n                spriteTrans.copyTo(tmpMat);\r\n                //现在transform本身没有偏移，所以要单独加上\r\n                tmpMat.tx=x; tmpMat.ty=y;\r\n                Matrix.mul(tmpMat,curMat,worldMat);\r\n            }else{\r\n                worldMat.a=curMat.a; worldMat.b=curMat.b;\r\n                worldMat.c=curMat.c; worldMat.d=curMat.d;\r\n                worldMat.tx=curMat.a*x+curMat.c*y+curMat.tx; \r\n                worldMat.ty=curMat.b*x+curMat.d*y+curMat.ty;\r\n            }\r\n            context.alpha*=sprite.alpha;\r\n            //如果有blend设置一些\r\n            if(sprite.blendMode){\r\n                context.setBlendMode(sprite.blendMode);\r\n            }\r\n\r\n            //clip 这个不用处理。因为clip是在canvas之后，已经包含在下面的渲染数据中了\r\n            //if(sprite.scrollRect){ }\r\n        }\r\n\r\n        vec21.setValue(context.width, context.height);\r\n        //世界矩阵\r\n        let wMat4 = tmpMat4;//new Matrix4x4();\r\n        let mate = wMat4.elements;\r\n        mate[0]=worldMat.a;    mate[1]=worldMat.b;\r\n        mate[4]=worldMat.c;    mate[5]=worldMat.d;\r\n        mate[12]=worldMat.tx;  mate[13]=worldMat.ty;\r\n\r\n        this.meshes.forEach(renderinfo=>{\r\n            let render = context.render2d;\r\n            let curMtl = renderinfo.mtl;\r\n            if(curMtl.textureHost instanceof TextTexture){\r\n                //针对texture的touch\r\n                curMtl.textureHost.touchTexture();\r\n            }\r\n            //通过context的裁剪，透明，矩阵等参数修改当前材质\r\n            curMtl.size=vec21;\r\n            //应用cliprect\r\n            //TODO 在没有改变的情况下不用每次都做\r\n            // 把当前的clip转成世界空间，与context的合并\r\n            let clipMat = renderinfo.localClipMatrix;\r\n            if(clipMat.a==Const.MAX_CLIP_SIZE&&clipMat.d==Const.MAX_CLIP_SIZE){\r\n                //如果lcoal没有限制则直接使用parent的clip设置。\r\n                context.clipInfo.copyTo(tmpMat1);\r\n            }else{\r\n                Matrix.mul(clipMat, worldMat,tmpMat1);  //注意是worldMat而不是context.curMat\r\n                //合并。注意，如果context.clipInfo与local的clip方向不一致，效果就不对，这个目前的视线没有方法解决这个问题。\r\n                mergeClipMatrix(context.clipInfo,tmpMat1,tmpMat1)\r\n            }\r\n            let clipDir = curMtl.clipMatDir;\r\n            let clipPos = curMtl.clipMatPos;\r\n            clipDir.x=tmpMat1.a; clipDir.y=tmpMat1.b; \r\n            clipDir.z=tmpMat1.c; clipDir.w=tmpMat1.d;\r\n            curMtl.clipMatDir = clipDir;\r\n            clipPos.x = tmpMat1.tx; clipPos.y = tmpMat1.ty;\r\n            curMtl.clipMatPos=clipPos;\r\n\r\n            curMtl.mmat = wMat4;\r\n            curMtl.vertAlpha = context.alpha;\r\n            context._applyBlend(curMtl);\r\n            //render.draw(renderinfo,renderinfo.vboff,renderinfo.vblen, renderinfo.iboff, renderinfo.iblen, curMtl);\r\n            render.drawElement(renderinfo.renderElement);\r\n        })\r\n\r\n        //touch资源\r\n        this.defferTouchRes.forEach(res=>{res.touch();});\r\n        //TODO 随机touch\r\n        this.defferTouchResRand.forEach(res=>res.touch());\r\n\r\n        //渲染子\r\n        this.children && this.children.forEach(sp=>{\r\n            //根据sp更新shader数据，例如偏移等\r\n            let oldMat = context.curMatrix.clone();\r\n            let oldAlpha = context.alpha;\r\n            let parentCacheInfo = (sp.parent as Sprite)._cacheStyle.cacheInfo;\r\n            //原点设置为父节点的世界坐标，所以加上父节点的相对偏移\r\n            let offmat = parentCacheInfo.mat;\r\n            Matrix.mul(offmat,oldMat,context.curMatrix);\r\n            //context.curMatrix.copyTo((sp.parent as Sprite)._cacheStyle.cacheInfo.wMat);//TODO需要么\r\n            //应用父的alpha\r\n            context.alpha*=parentCacheInfo.alpha;\r\n            //应用父的blend\r\n            let oldBlend = context.blend;\r\n            if(parentCacheInfo.blend!=undefined){\r\n                context.setBlendMode(parentCacheInfo.blend);\r\n            }\r\n            //应用父的clip\r\n            let oldClipMatrix =  context.clipInfo.clone();\r\n\r\n            let clipMat = parentCacheInfo.clipMatrix;\r\n            Matrix.mul(clipMat, context.curMatrix,tmpMat1);\r\n            //合并\r\n            mergeClipMatrix(context.clipInfo,tmpMat1,context.clipInfo)\r\n            //TODO\r\n\r\n            sp._cacheStyle.cacheInfo.page.render(sp,context,false);\r\n            //恢复\r\n            context.curMatrix = oldMat;\r\n            context.alpha = oldAlpha;\r\n            context.blend = oldBlend;\r\n            context.clipInfo = oldClipMatrix;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nvar vec21 = new Vector2();\r\n/**\r\n * 把渲染结果保存成mesh和材质\r\n */\r\nexport class SpriteCache{\r\n\r\n    /**\r\n     * 已知sprite和当前世界矩阵curMat, 把sprite的偏移减掉，就是得到parent的世界矩阵\r\n     * @param sprite \r\n     * @param curMat 当前的矩阵，这是增加了sprite自身的偏移后的矩阵\r\n     * @param outMat 把curMat去掉sprite自身的偏移得到的结果\r\n     */\r\n    static curMatSubSpriteMat(sprite:Sprite, curMat:Matrix, outMat:Matrix){\r\n        //下面要把自己对矩阵的影响消掉，得到parent的矩阵\r\n        if(sprite._renderType&SpriteConst.TRANSFORM){\r\n            //如果有矩阵\r\n            sprite.transform.copyTo(invMat);\r\n            invMat.tx=sprite._x;    //直接设置，不用+，因为transform就是没有记录xy\r\n            invMat.ty=sprite._y;\r\n            invMat.invert();//注意要clone，否则会直接修改原始矩阵\r\n            Matrix.mul(invMat,curMat,outMat);\r\n        }else{\r\n            curMat.copyTo(outMat);\r\n            //只有平移。把自己的相对位置减回去即可\r\n            let cx = -sprite._x;\r\n            let cy = -sprite._y;\r\n            outMat.tx += (outMat.a*cx+outMat.c*cy);\r\n            outMat.ty += (outMat.b*cx+outMat.d*cy);\r\n        }\r\n        return outMat;\r\n    }\r\n\r\n    static renderCacheAsNormal(context:Context|DefferTouchResContext,sprite:Sprite,next:RenderSprite,x:number,y:number){\r\n        let rebuild=false;\r\n        var cache = sprite._getCacheStyle().cacheInfo.page;\r\n        if (!cache || sprite._needRepaint() || ILaya.stage.isGlobalRepaint()) {\r\n            if(sprite.alpha<=1e-6){\r\n                sprite.alpha = 0.001;//TODO 透明的不画了\r\n            }\r\n            //计算包围盒\r\n            //sprite._cacheStyle._calculateCacheRect(sprite, \"bitmap\", 0, 0);\r\n            //let tRec = sprite._cacheStyle.cacheRect;\r\n            //if(tRec.width<=0||tRec.height<=0)\r\n            //    return rebuild;\r\n            rebuild=true;\r\n\r\n            // 如果已经是在构造缓存的过程中了，这表示cacheas normal又包含cacheas normal，则\r\n            if(context instanceof DefferTouchResContext){\r\n                let parentPage = context.cache;\r\n                // 把自己加到缓存的children中\r\n                if(!parentPage.children){\r\n                    parentPage.children=[sprite];\r\n                }else if(parentPage.children.indexOf(sprite)<0){\r\n                    parentPage.children.push(sprite);\r\n                }\r\n                //记录incache可以通过sprite找到父cache\r\n                let parentNode = sprite.parent as Sprite\r\n                let parentCacheInfo = parentNode._cacheStyle.cacheInfo;\r\n                parentCacheInfo.page = parentPage;\r\n\r\n                if(context.genID!=parentCacheInfo.contextID){\r\n                    parentCacheInfo.contextID = context.genID;\r\n                    //这里稍微麻烦一些，需要计算parent的相对于所在page的矩阵\r\n                    //自己相对于parent的page的矩阵= 在curMat 下(x,y)偏移\r\n                    let curMat = context._curMat.clone();\r\n                    if(x!=0||y!=0){\r\n                        //需要把xy加进去\r\n                        curMat.tx+=x*curMat.a+y*curMat.c;\r\n                        curMat.ty+=x*curMat.b+y*curMat.d;\r\n                    }\r\n                    //记录parent的相对所在page的矩阵\r\n                    parentCacheInfo.mat = SpriteCache.curMatSubSpriteMat(sprite,curMat,curMat);\r\n\r\n                    //父节点相对于所在page的alpha\r\n                    parentCacheInfo.alpha = context.globalAlpha/sprite.alpha;\r\n\r\n                    //记录父节点的blend信息\r\n                    //往上遍历所有的\r\n                    let pageRootSprite =  parentPage.sprite;\r\n                    if(parentNode.blendMode){\r\n                        parentCacheInfo.blend = parentNode.blendMode;\r\n                    }else{\r\n                        let curNode = parentNode;\r\n                        while(curNode!=pageRootSprite){\r\n                            curNode = curNode.parent as Sprite;\r\n                            if(curNode.blendMode){\r\n                                parentCacheInfo.blend = curNode.blendMode;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //记录父节点的clip信息\r\n                    parentCacheInfo.clipMatrix = context._globalClipMatrix.clone();\r\n                }\r\n            }\r\n\r\n            cache = sprite._cacheStyle.cacheInfo.page = new CachePage();\r\n            cache.sprite = sprite;\r\n            Stat.canvasNormal++;\r\n            let ctx = new DefferTouchResContext();\r\n            ctx.cache = cache;\r\n            let renderer = new RenderToCache();\r\n            ctx.render2D= renderer;\r\n            ctx.startRender();\r\n            /*\r\n                对于cacheas normal 不存在rt原点与节点原点的问题\r\n                可以直接使用节点原点。\r\n            */\r\n            next._fun(sprite,ctx,0, 0);\r\n            ctx.endRender();\r\n\r\n            cache.meshes = renderer.renderResult;\r\n            cache.defferTouchRes = ctx.mustTouchRes;\r\n            cache.defferTouchResRand = ctx.randomTouchRes;\r\n            sprite.once(Event.REMOVED,()=>{\r\n                cache = sprite._cacheStyle.cacheInfo.page;\r\n                cache.reset();\r\n            })\r\n\r\n        }\r\n\r\n        if(!(context instanceof DefferTouchResContext)){\r\n            //根cache则开始渲染\r\n            let ctx = new RenderPageContext(context,x,y);\r\n            // 此时的ctx.curMatrix是sprite节点所在的世界矩阵\r\n            //先给ctx计算正确的矩阵，即sprite的parent的世界矩阵，直接修改结果到ctx.curMatrix\r\n            //SpriteCache.curMatSubSpriteMat(sprite,ctx.curMatrix, ctx.curMatrix);\r\n            cache.render(sprite,ctx,true);\r\n        }\r\n        return rebuild;\r\n    }\r\n}\r\n\r\nvar worldMat = new Matrix;\r\nvar invMat = new Matrix;\r\nvar tmpMat = new Matrix;\r\nvar tmpMat4 = new Matrix4x4;\r\nvar tmpMat1 = new Matrix();\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { Context } from \"./Context\";\r\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\r\nimport { Render2DSimple } from \"./Render2D\";\r\nimport { SpriteCache } from \"./SpriteCache\";\r\n\r\n/**\r\n * @private\r\n * \r\n */\r\nexport interface _RenderFunction {\r\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\r\n}\r\n\r\nconst INIT = 0x11111;\r\n/**\r\n * @private\r\n * 精灵渲染器\r\n */\r\nexport class RenderSprite {\r\n    /** @private*/\r\n    static cacheNormalEnable = true;\r\n    /** @private */\r\n    static renders: RenderSprite[] = [];\r\n    /** @private */\r\n    protected static NORENDER = new RenderSprite(0, null);\r\n    /** @internal */\r\n    _next: RenderSprite;\r\n    /** @internal */\r\n    _fun: (sp: Sprite, ctx: Context, x: number, y: number) => void;\r\n\r\n    /** @internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.__init__();\r\n        var initRender = new RenderSprite(INIT, null);\r\n        //总共的组合数量\r\n        let len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\r\n        for (let i = 0; i < len; i++)\r\n            RenderSprite.renders[i] = initRender;\r\n\r\n        RenderSprite.renders[0] = new RenderSprite(0, null);\r\n    }\r\n\r\n    //初始化，这个函数是一个引导函数，主要是用来构建每个type对应的函数链\r\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var type = sprite._renderType;\r\n        var r = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\r\n        r._fun(sprite, context, x, y);\r\n    }\r\n\r\n    private static _getTypeRender(type: number): RenderSprite {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\r\n        var rst: RenderSprite | null = null;\r\n        var tType = SpriteConst.CHILDS;\r\n        while (tType > 0) {\r\n            if (tType & type)\r\n                rst = new RenderSprite(tType, rst);\r\n            tType = tType >> 1;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    constructor(type: number, next: RenderSprite | null) {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\r\n            this._fun = LayaGLQuickRunner.map[type];\r\n            this._next = RenderSprite.NORENDER;\r\n            return;\r\n        }\r\n        this._next = next || RenderSprite.NORENDER;\r\n        switch (type) {\r\n            case 0:\r\n                this._fun = this._no;\r\n                return;\r\n            case SpriteConst.ALPHA:\r\n                this._fun = this._alpha;\r\n                return;\r\n            case SpriteConst.TRANSFORM:\r\n                this._fun = this._transform;\r\n                return;\r\n            case SpriteConst.BLEND:\r\n                this._fun = this._blend;\r\n                return;\r\n            case SpriteConst.CANVAS:\r\n                this._fun = this._canvas;\r\n                return;\r\n            case SpriteConst.MASK:\r\n                this._fun = this._mask;\r\n                return;\r\n            case SpriteConst.CLIP:\r\n                this._fun = this._clip;\r\n                return;\r\n            case SpriteConst.GRAPHICS:\r\n                this._fun = this._graphics;\r\n                return;\r\n            case SpriteConst.CHILDS:\r\n                this._fun = this._children;\r\n                return;\r\n            case SpriteConst.CUSTOM:\r\n                this._fun = this._custom;\r\n                return;\r\n            case SpriteConst.TEXTURE:\r\n                this._fun = this._texture;\r\n                return;\r\n            case SpriteConst.FILTERS:\r\n                this._fun = Filter._filter;\r\n                return;\r\n            case SpriteConst.HITAREA:\r\n                this._fun = this._hitarea;\r\n                return;\r\n            case SpriteConst.RENDERNODE2D:\r\n                this._fun = this._renderNode2D;\r\n                break;\r\n            case INIT:\r\n                this._fun = RenderSprite._initRenderFun;\r\n                return;\r\n        }\r\n    }\r\n\r\n    _renderNode2D(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        if (sprite._renderNode.addCMDCall)\r\n            sprite._renderNode.addCMDCall(context, x, y);\r\n\r\n        context.drawLeftData();//强制渲染之前的遗留\r\n        if (context._render2DManager._renderEnd) {\r\n            context._render2DManager._renderEnd = false;\r\n            context._render2DManager.addRenderObject(sprite._renderNode);\r\n        } else {\r\n            context._render2DManager.addRenderObject(sprite._renderNode);\r\n        }\r\n\r\n        if (this._next != RenderSprite.NORENDER)\r\n            this._next._fun(sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        sprite.customRender(context, x, y);\r\n        this._next._fun(sprite, context, 0, 0);\r\n    }\r\n\r\n    /**@internal */\r\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let next = this._next;\r\n        if (next == RenderSprite.NORENDER) return;\r\n\r\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            next._fun(sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let r = sprite._style.scrollRect;\r\n        let width = r.width;\r\n        let height = r.height;\r\n        if (width === 0)\r\n            width = 0.001;\r\n        if (height === 0)\r\n            height = 0.001;\r\n        context.save();\r\n        context.clipRect(x, y, width, height);\r\n        next._fun(sprite, context, x - r.x, y - r.y);\r\n        context.restore();\r\n    }\r\n\r\n    /**@internal */\r\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var tex = sprite.texture;\r\n            if (tex._getSource()) {\r\n                var width = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n                var height = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n                var wRate = width / tex.sourceWidth;\r\n                var hRate = height / tex.sourceHeight;\r\n                width = tex.width * wRate;\r\n                height = tex.height * hRate;\r\n                if (width > 0 && height > 0) {\r\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\r\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\r\n                    context._material = sprite.graphics.material;\r\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\r\n                    context._material = null;\r\n                }\r\n            }\r\n        }\r\n        if (this._next != RenderSprite.NORENDER)\r\n            this._next._fun(sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            let style = sprite._style;\r\n            let g = sprite._graphics;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n        }\r\n\r\n        if (this._next != RenderSprite.NORENDER)\r\n            this._next._fun(sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal IDE only*/\r\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (sprite.hitArea) {\r\n            var style = sprite._style;\r\n            var g = (<HitArea>sprite.hitArea)._hit;\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= 0.5;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            g = (<HitArea>sprite.hitArea)._unHit;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n        if (this._next != RenderSprite.NORENDER)\r\n            this._next._fun(sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        var alpha = style.alpha;\r\n        if (alpha > 0.01 || sprite._needRepaint()) {\r\n            //save alpha to temp\r\n            var temp = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (this._next != RenderSprite.NORENDER)\r\n                this._next._fun(sprite, context, x, y);\r\n            //restore alpha\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var transform = sprite.transform, _next = this._next;\r\n        if (transform && _next != RenderSprite.NORENDER) {\r\n            context.save();\r\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\r\n            _next._fun(sprite, context, 0, 0);\r\n            context.restore();\r\n        } else {\r\n            if (_next != RenderSprite.NORENDER)\r\n                _next._fun(sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let style: SpriteStyle = sprite._style;\r\n        let childs = <Sprite[]>sprite._children, n = childs.length;\r\n        x = x - sprite.pivotX;\r\n        y = y - sprite.pivotY;\r\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (visFlag) {\r\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\r\n                    visFlag = false;\r\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\r\n                    visFlag = false;\r\n            }\r\n\r\n            if (visFlag) {\r\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\r\n                    context.clipRect(0, 0, 1, 1, true);\r\n\r\n                ele.render(context, x, y);\r\n            }\r\n        }\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    /**\r\n     * 把sprite的下一步渲染到缓存的rt上\r\n     * 要求外面可以直接使用，不用考虑图集的偏移之类的问题\r\n     * @param sprite \r\n     * @param context \r\n     * @returns \r\n     */\r\n    _renderNextToCacheRT(sprite: Sprite, context: Context) {\r\n        var _cacheStyle = sprite._getCacheStyle();\r\n        if (sprite._needRepaint() || !_cacheStyle.renderTexture || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.renderTexture) {\r\n                _cacheStyle.renderTexture.destroy();//TODO 优化， 如果大小相同，可以重复利用\r\n            }\r\n            //如果需要构造RenderTexture\r\n            // 先计算需要的texuture的大小。\r\n            let scaleInfo = sprite._cacheStyle._calculateCacheRect(sprite, \"bitmap\"/*sprite._cacheStyle.cacheAs*/, 0, 0);\r\n            let tRec = _cacheStyle.cacheRect;\r\n            if (tRec.width <= 0 || tRec.height <= 0){\r\n                //什么也没渲染，注意设置rt为null，后面会判断\r\n                _cacheStyle.renderTexture = null;\r\n                return false;\r\n            }\r\n            //计算cache画布的大小\r\n            Stat.canvasBitmap++;\r\n\r\n            let w = tRec.width * scaleInfo.x;  //,\r\n            let h = tRec.height * scaleInfo.y;\r\n            let rt = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8);\r\n            let ctx = new Context();\r\n            ctx.copyState(context);\r\n            ctx.size(w, h);\r\n            ctx.clearBG(0, 0, 0, 0);\r\n            ctx.render2D = new Render2DSimple(rt);\r\n            ctx.startRender();\r\n            /*\r\n                由于tRec与rt的原点并不重合：\r\n                1. 图集中的小图可能有被裁掉的空白，这时候tRec.x>0 ，rt的原点就在节点原点的右边\r\n                2. 节点下的子可能在负的位置渲染，这时候rt的原点就在原点的左边\r\n                所以为了rt能正确的包含节点的渲染效果，应该偏移一下节点再渲染，具体就是取节点在rt坐标系下的值\r\n                当使用这个rt的时候，要反向偏移，即偏移rt在节点坐标系下的值\r\n            */\r\n            this._next._fun(sprite, ctx, -tRec.x, -tRec.y);\r\n            ctx.endRender();\r\n            //临时，恢复\r\n            ctx.render2D.setRenderTarget(context.render2D.out);\r\n            ctx.destroy();\r\n            _cacheStyle.renderTexture = rt;\r\n            return true;    //重绘\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var _cacheStyle = sprite._cacheStyle;\r\n        var _next = this._next;\r\n\r\n        if (_cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\r\n            //虽然有mask但是mask不可见，则不走这个流程。\r\n            _next._fun(sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let isbmp = sprite.cacheAs === 'bitmap';\r\n        if (isbmp) {\r\n            //temp\r\n            context.drawLeftData();\r\n            this._renderNextToCacheRT(sprite, context);\r\n            // RenderSprite.RenderToCacheTexture(sprite,context,x,y)\r\n            var tRec = _cacheStyle.cacheRect;\r\n            context._material = sprite.graphics.material;\r\n            let rt = _cacheStyle.renderTexture;\r\n            rt && context._drawRenderTexture(rt, x + tRec.x, y + tRec.y, rt.width, rt.height, null, 1, [0, 1, 1, 1, 1, 0, 0, 0]);\r\n            context._material = null;\r\n        } else {\r\n            if (!RenderSprite.cacheNormalEnable) {\r\n                _next._fun(sprite, context, x, y);\r\n                return;\r\n            } else {\r\n                context.drawLeftData();\r\n                SpriteCache.renderCacheAsNormal(context, sprite, this._next, x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    //use Render Rect\r\n    static RenderToRenderTexture(sprite: Sprite, context: Context | null, x: number, y: number, renderTexture: RenderTexture2D = null, isDrawRenderRect: boolean = true) {\r\n        //如果需要构造RenderTexture\r\n        // 先计算需要的texuture的大小。\r\n        let scaleInfo = sprite._getCacheStyle()._calculateCacheRect(sprite, \"bitmap\"/*sprite._cacheStyle.cacheAs*/, 0, 0);\r\n        let tRec = sprite._cacheStyle.cacheRect;\r\n        let ctx = new Context();\r\n        context && ctx.copyState(context);\r\n        let rt = renderTexture;\r\n        if (rt) {\r\n            ctx.size(rt.width, rt.height);\r\n            ctx.clearBG(RenderTexture2D._clearColor.r, RenderTexture2D._clearColor.g, RenderTexture2D._clearColor.b, RenderTexture2D._clearColor.a);\r\n        } else {\r\n            //计算cache画布的大小\r\n\r\n            let w = tRec.width * scaleInfo.x + (isDrawRenderRect ? 0 : tRec.x);\r\n            let h = tRec.height * scaleInfo.y + (isDrawRenderRect ? 0 : tRec.y);\r\n            rt = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8);\r\n            ctx.size(w, h);\r\n            ctx.clearBG(0, 0, 0, 0);\r\n        }\r\n        ctx.render2D = ctx.render2D.clone(rt);\r\n\r\n        ctx.startRender();\r\n        //把位置移到0，所以要-sprite.xy, 考虑图集空白，所以要-tRec.xy,因为tRec.xy是sprite空间的，所以转到贴图空间是取反\r\n        if (isDrawRenderRect) {\r\n            sprite.render(ctx, x - sprite.x - tRec.x, y - sprite.y - tRec.y);\r\n        } else {\r\n            sprite.render(ctx, x - sprite.x, y - sprite.y);\r\n        }\r\n\r\n        ctx.endRender();\r\n        //临时，恢复\r\n        context && ctx.render2D.setRenderTarget(context.render2D.out);\r\n        ctx.destroy();\r\n        return rt;\r\n    }\r\n    /**\r\n     * 把sprite画在当前贴图的x,y位置\r\n     * @param sprite \r\n     * @param context \r\n     * @param x \r\n     * @param y \r\n     * @returns \r\n     */\r\n    static RenderToCacheTexture(sprite: Sprite, context: Context | null, x: number, y: number, isDrawRenderRect: boolean = true) {\r\n        var _cacheStyle = sprite._getCacheStyle();\r\n        if (sprite._needRepaint() || !_cacheStyle.renderTexture || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.renderTexture) {\r\n                _cacheStyle.renderTexture.destroy();//TODO 优化， 如果大小相同，可以重复利用\r\n            }\r\n            _cacheStyle.renderTexture = RenderSprite.RenderToRenderTexture(sprite, context, x, y, null, isDrawRenderRect);\r\n            return true;    //重绘\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@internal */\r\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style = sprite._style;\r\n        context.save();\r\n        context.globalCompositeOperation = style.blendMode;\r\n        this._next._fun(sprite, context, x, y);\r\n        context.restore();\r\n    }\r\n\r\n    //保存rect，避免被修改。例如 RenderSprite.RenderToCacheTexture 会修改cache的rect\r\n    private _spriteRect_TextureSpace = new Rectangle();\r\n    private _maskRect_TextureSpace = new Rectangle();\r\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        let cache = sprite._getCacheStyle();\r\n        //由于mask必须是sprite的子，因此mask变了必然导致sprite的重绘，所以就不缓存多个rt了\r\n        if (sprite._needRepaint() || !cache.renderTexture || cache.renderTexture.destroyed || ILaya.stage.isGlobalRepaint()) {\r\n            if (cache.renderTexture) {\r\n                cache.renderTexture.destroy();//TODO 优化， 如果大小相同，可以重复利用\r\n            }\r\n\r\n            /**\r\n             * 这里比较绕，需要解释一下\r\n             * 目前的做法是把sprite的rect和mask的rect都转到sprite的原始原点（左上角）空间，这里叫做TextureSpace，简称t空间\r\n             * 然后在t空间做rect交集\r\n             */\r\n            sprite._cacheStyle._calculateCacheRect(sprite, \"bitmap\", 0, 0);\r\n            let spRect_TS = this._spriteRect_TextureSpace.copyFrom(cache.cacheRect);\r\n            if (spRect_TS.width <= 0 || spRect_TS.height <= 0)\r\n                return;\r\n            //转到sprite的原始空间\r\n            spRect_TS.x += sprite.pivotX;\r\n            spRect_TS.y += sprite.pivotY;\r\n\r\n            //这个时候获得的rect是包含pivot的。下面的mask按照规则是作为sprite的子来计算，但是，他的位置是相对于原始位置\r\n            //而不是pivot，所以需要根据mask的pivot调整mask的rect的位置\r\n\r\n            let mask = sprite.mask;\r\n            //TODO mask如果非常简单，就不要先渲染到texture上\r\n            let maskcache = mask._getCacheStyle();\r\n            maskcache._calculateCacheRect(mask, \"bitmap\", 0, 0);  //后面的参数传入mask.xy没有效果，只能后面自己单独加上\r\n            let maskRect_TS = this._maskRect_TextureSpace.copyFrom(maskcache.cacheRect);\r\n            //maskRect是mask自己的,相对于自己的锚点，要转到sprite原始空间\r\n            //把mask的xy应用一下，就是在sprite原始空间（t空间）的位置\r\n            maskRect_TS.x += mask._x;\r\n            maskRect_TS.y += mask._y;\r\n\r\n            //计算cache画布的大小，就是两个rect的交集，这个交集作为渲染区域。t空间\r\n            let x1 = Math.max(spRect_TS.x, maskRect_TS.x);\r\n            let y1 = Math.max(spRect_TS.y, maskRect_TS.y);\r\n            let x2 = Math.min(spRect_TS.x + spRect_TS.width, maskRect_TS.x + maskRect_TS.width);\r\n            let y2 = Math.min(spRect_TS.y + spRect_TS.height, maskRect_TS.y + maskRect_TS.height);\r\n\r\n            let width1 = x2 - x1;\r\n            let height1 = y2 - y1;\r\n            if (width1 <= 0 || height1 <= 0) return;\r\n\r\n            //先渲染mask，避免rt混乱的可能性。这里的ctx目前只是用来恢复rt的\r\n            RenderSprite.RenderToCacheTexture(mask, ctx, 0, 0);\r\n            let rt = new RenderTexture2D(width1, height1, RenderTargetFormat.R8G8B8A8);\r\n            let ctx1 = new Context();\r\n            ctx1.clearBG(0, 0, 0, 0);\r\n            ctx1.size(width1, height1);\r\n            ctx1.render2D = new Render2DSimple(rt);\r\n            ctx1.startRender();\r\n            //由于是t空间，需要抵消掉pivot的设置（_fun会应用pivot），-x1y1是为了对齐到裁剪的rt\r\n            this._next._fun(sprite, ctx1, sprite.pivotX - x1, sprite.pivotY - y1);\r\n            let maskRT = maskcache.renderTexture;\r\n            ctx1.globalCompositeOperation = 'mask';\r\n            ctx1._drawRenderTexture(maskRT,\r\n                maskRect_TS.x - x1,     //maskRect_TS已经考虑了mask的位置了，所以不要加mask.x。-x1y1是对齐到裁剪rt\r\n                maskRect_TS.y - y1,\r\n                maskRect_TS.width, maskRect_TS.height, null, 1,\r\n                [0, 1, 1, 1, 1, 0, 0, 0])\r\n\r\n            ctx1.endRender();\r\n            //临时，恢复\r\n            ctx1.render2D.setRenderTarget(ctx.render2D.out);\r\n            ctx1.destroy();\r\n\r\n            cache.renderTexture = rt;\r\n            cache.cacheRect.x = x1 - sprite.pivotX;   //x1是t空间的，要转回sprite空间，所以-pivot\r\n            cache.cacheRect.y = y1 - sprite.pivotY;\r\n            cache.cacheRect.width = rt.width;\r\n            cache.cacheRect.height = rt.height;\r\n        }\r\n\r\n        let tex = cache.renderTexture;\r\n        let rect = cache.cacheRect;\r\n        ctx._drawRenderTexture(tex,\r\n            x + rect.x, y + rect.y, tex.width, tex.height, null, 1, [0, 1, 1, 1, 1, 0, 0, 0])\r\n    }\r\n}\r\n\r\n","import { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { Context } from \"../renders/Context\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Resource } from \"./Resource\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * @en `HTMLCanvas` is a proxy class for the HTML Canvas, encapsulating the properties and methods of the Canvas.\r\n * @zh `HTMLCanvas` 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\r\n */\r\nexport class HTMLCanvas extends Resource {\r\n\r\n    private _ctx: any;\r\n    /**@internal */\r\n    _source: HTMLCanvasElement;\r\n    /**@internal */\r\n    _texture: Texture | RenderTexture2D;\r\n    protected _width: number;\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @en The source of the canvas element.\r\n     * @zh Canvas 元素的源。\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * @en The width of the canvas.\r\n     * @zh 画布宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the canvas.\r\n     * @zh 画布高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    _getSource() {\r\n        return this._source;\r\n    }\r\n    /**\r\n     * @en According to the specified type, create an HTMLCanvas instance.\r\n     * @param createCanvas If true, creates a new canvas element. If false, uses the instance itself as the canvas source. \r\n     * @zh 根据指定的类型，创建一个 HTMLCanvas 实例。\r\n     * @param createCanvas 如果为true，则创建一个新的画布元素。如果为 false，则使用当前实例作为画布源。\r\n     */\r\n    constructor(createCanvas: boolean = false) {\r\n        super();\r\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\r\n            this._source = Browser.createElement(\"canvas\");\r\n        else {\r\n            this._source = this as unknown as HTMLCanvasElement;\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @en Clear the canvas content.\r\n     * @zh 清空画布内容。\r\n     */\r\n    clear(): void {\r\n        if (this._ctx) {\r\n            if (this._ctx.clear) {\r\n                this._ctx.clear();\r\n            } else {\r\n                this._ctx.clearRect(0, 0, this._width, this._height);\r\n            }\r\n        }\r\n        if (this._texture) {\r\n            this._texture.destroy();\r\n            this._texture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the HTMLCanvas instance, releasing all associated resources.\r\n     * @zh 销毁 HTMLCanvas 实例，释放所有相关资源。\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._setCPUMemory(0);\r\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\r\n        this._ctx = null;\r\n    }\r\n\r\n    /**\r\n     * @en Releases the resources of the HTMLCanvas instance.\r\n     * @zh 释放 HTMLCanvas 实例的资源。\r\n     */\r\n    release(): void {\r\n    }\r\n\r\n    /**\r\n     * @en The Canvas rendering context.\r\n     * @zh Canvas 渲染上下文。\r\n     */\r\n    get context(): Context {\r\n        if (this._ctx) return this._ctx;\r\n        //@ts-ignore\r\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\r\n            // @ts-ignore\r\n            this._ctx = new Context();\r\n        } else {\r\n            //@ts-ignore\r\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\r\n        }\r\n        this._ctx._canvas = this;\r\n        return this._ctx;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\r\n     * @param\tcontext Canvas 渲染上下文。\r\n     */\r\n    _setContext(context: Context): void {\r\n        this._ctx = context;\r\n    }\r\n\r\n    /**\r\n     * @en Get the Canvas rendering context.\r\n     * @param contextID The context ID.\r\n     * @param other\r\n     * @return The Canvas rendering context Context object.\r\n     * @zh 获取 Canvas 渲染上下文。\r\n     * @param\tcontextID 上下文ID.\r\n     * @param\tother\r\n     * @return  Canvas 渲染上下文 Context 对象。\r\n     */\r\n    getContext(contextID: string, other: any = null): Context {\r\n        return this.context;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Get the memory size.\r\n     * @return The memory size.\r\n     * @zh 获取内存大小。\r\n     * @return 内存大小。\r\n     */\r\n    //TODO:coverage\r\n    getMemSize(): number {\r\n        return 0;//TODO:待调整\r\n    }\r\n\r\n    /**\r\n     * @en Set the width and height of the Canvas.\r\n     * @param w The width of the Canvas.\r\n     * @param h The height of the Canvas.\r\n     * @zh 设置画布的宽度和高度。\r\n     * @param w 画布的宽度。\r\n     * @param h 画布的高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\r\n            this._width = w;\r\n            this._height = h;\r\n            this._setCPUMemory(w * h * 4);\r\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\r\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\r\n                this._source.height = h;\r\n                this._source.width = w;\r\n            }\r\n            if (this._texture) {\r\n                this._texture.destroy();\r\n                this._texture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the texture instance.\r\n     * @zh 获取纹理实例\r\n     */\r\n    getTexture(): Texture | null | RenderTexture2D {\r\n        if (!this._texture) {\r\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\r\n            bitmap.setImageData(this.source, false, false);\r\n            this._texture = new Texture(bitmap);\r\n        }\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * @en Convert the image to base64 information\r\n     * @param type The image type \"image/png\"\r\n     * @param encoderOptions quality parameter, range 0-1\r\n     * @zh 把图片转换为base64信息\r\n     * @param type 图片格式 \"image/png\"\r\n     * @param encoderOptions 质量参数，取值范围为0-1\r\n     */\r\n    toBase64(type: string, encoderOptions: number): string | null {\r\n        if (this._source) {\r\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * @en Graphic bounds data class\r\n * @zh 图形边界数据类\r\n */\r\nexport class BoundsStyle {\r\n    /**@private */\r\n    bounds: Rectangle|null;\r\n    /**\r\n     * @en Bounds set by the user\r\n     * @zh 用户设置的边界\r\n     */\r\n    userBounds: Rectangle|null;\r\n    /**\r\n     * @en Cached bounds vertices, used for sprite bounds calculation\r\n     * @zh 缓存的边界顶点，用于精灵计算边界\r\n     */\r\n    temBM: any[]|null;\r\n\r\n    /**\r\n     * @en Reset the BoundsStyle\r\n     * @returns The current BoundsStyle instance\r\n     * @zh 重置BoundsStyle\r\n     * @returns 当前BoundsStyle实例\r\n     */\r\n    reset(): BoundsStyle {\r\n        if (this.bounds) this.bounds.recover();\r\n        if (this.userBounds) this.userBounds.recover();\r\n        this.bounds = null;\r\n        this.userBounds = null;\r\n        this.temBM = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the BoundsStyle to the object pool\r\n     * @zh 回收BoundsStyle到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"BoundsStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * @en Create a new BoundsStyle object pool instance\r\n     * @zh 创建一个新的BoundsStyle对象池实例\r\n     */\r\n    static create(): BoundsStyle {\r\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\r\n    }\r\n}\r\n\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { CachePage, Cache_Info } from \"../../renders/SpriteCache\"\r\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { Sprite } from \"../Sprite\"\r\n\r\n/**\r\n * @internal\r\n * @en Store cache-related data.\r\n * Now it has been expanded to store everything related to rendering\r\n * @zh 存储缓存相关数据\r\n * 现在已经扩展成存储一切跟渲染相关的东西了\r\n */\r\nexport class CacheStyle {\r\n\r\n    static EMPTY = new CacheStyle();\r\n    /**\r\n     * @en Cache type set by the user\r\n     * @zh 用户设置的缓存类型\r\n     */\r\n    userSetCache: string;\r\n    /**\r\n     * @deprecated\r\n     * @en Whether it's a static cache. This property is deprecated and setting any value has no effect.\r\n     * @zh 是否为静态缓存。此属性已经废除，设置任何值都无效。\r\n     */\r\n    staticCache: boolean;\r\n    /**\r\n     * @en Mask object\r\n     * @zh 遮罩对象\r\n     */\r\n    mask: Sprite;\r\n    /**作为mask时的父对象*/\r\n    maskParent: Sprite;\r\n    /**\r\n     * @en Current cache area\r\n     * @zh 当前缓存区域\r\n     */\r\n    cacheRect: Rectangle;\r\n    private _renderTexture: RenderTexture2D;\r\n    renderTexOffx = 0;\r\n    renderTexOffy = 0;\r\n\r\n    /**\r\n     * @en Cache information for 'cacheas normal'\r\n     * @zh cacheas normal 相关的缓存信息\r\n     */\r\n    cacheInfo = new Cache_Info();\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    onInvisible() {\r\n        //console.log('TODO cache invisibl')       \r\n    }\r\n\r\n    set renderTexture(rt: RenderTexture2D) {\r\n        if (this._renderTexture && rt != this._renderTexture) {\r\n            this._renderTexture.destroy();\r\n        }\r\n        this._renderTexture = rt;\r\n    }\r\n\r\n    get renderTexture() {\r\n        return this._renderTexture;\r\n    }\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        if (this === CacheStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteCache\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * @en Reset the CacheStyle\r\n     * @zh 重置CacheStyle\r\n     */\r\n    reset(): CacheStyle {\r\n        this.userSetCache = \"none\";\r\n        this.staticCache = false;\r\n        this.mask = null;\r\n        this.maskParent = null;\r\n        if (this.cacheRect) this.cacheRect.recover();\r\n        this.cacheRect = null;\r\n        this.cacheInfo.reset();\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @en Create a new CacheStyle object pool instance.\r\n     * @returns A new CacheStyle instance.\r\n     * @zh 创建一个新的 CacheStyle 对象池实例。\r\n     * @returns 一个新的 CacheStyle 实例。\r\n     */\r\n    static create(): CacheStyle {\r\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\r\n    }\r\n\r\n    private static _scaleInfo = new Point();\r\n    static CANVAS_EXTEND_EDGE = 16;\r\n    /**\r\n    * @internal\r\n    */\r\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\r\n        var _cacheStyle = sprite._getCacheStyle();\r\n        if (!_cacheStyle.cacheRect)\r\n            _cacheStyle.cacheRect = Rectangle.create();\r\n        var tRec: Rectangle;\r\n\r\n        //计算显示对象的绘图区域\r\n        if (tCacheType === \"bitmap\") {\r\n            tRec = sprite.getSelfBounds();\r\n            tRec.width = tRec.width;//+ extend * 2;\r\n            tRec.height = tRec.height;// + extend * 2;\r\n            tRec.x = tRec.x - sprite.pivotX;\r\n            tRec.y = tRec.y - sprite.pivotY;\r\n            //关于xy这里有些迷惑，这里看来是表示相对于sprite原点的位置。\r\n            //tRec.x = tRec.x ;//- extend;\r\n            //tRec.y = tRec.y ;//- extend;\r\n            tRec.x = Math.floor(tRec.x + x) - x;\r\n            tRec.y = Math.floor(tRec.y + y) - y;\r\n            tRec.width = Math.floor(tRec.width);\r\n            tRec.height = Math.floor(tRec.height);\r\n            _cacheStyle.cacheRect.copyFrom(tRec);\r\n        } else {\r\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\r\n        }\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n\r\n        //处理显示对象的scrollRect偏移\r\n        if (sprite._style.scrollRect) {\r\n            var scrollRect: Rectangle = sprite._style.scrollRect;\r\n            tRec.x -= scrollRect.x;\r\n            tRec.y -= scrollRect.y;\r\n        }\r\n        CacheStyle._scaleInfo.setTo(1, 1);\r\n\r\n        return CacheStyle._scaleInfo;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Dragging } from \"../../utils/Dragging\"\r\nimport { IHitArea } from \"../../utils/IHitArea\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Sprite style\r\n * @zh 精灵样式\r\n */\r\nexport class SpriteStyle {\r\n\r\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\r\n\r\n    /**\r\n     * @en Horizontal scaling\r\n     * @zh 水平缩放\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * @en Vertical scaling\r\n     * @zh 垂直缩放\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * @en Horizontal skew angle\r\n     * @zh 水平倾斜角度\r\n     */\r\n    skewX: number;\r\n    /**\r\n     * @en Vertical skew angle\r\n     * @zh 垂直倾斜角度\r\n     */\r\n    skewY: number;\r\n    /**\r\n     * @en X-axis pivot point\r\n     * @zh X轴心点\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * @en Y-axis pivot point\r\n     * @zh Y轴心点\r\n     */\r\n    pivotY: number;\r\n    /**\r\n     * @en Rotation angle\r\n     * @zh 旋转角度\r\n     */\r\n    rotation: number;\r\n    /**\r\n     * @en Transparency\r\n     * @zh 透明度\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * @en Scroll area\r\n     * @zh 滚动区域\r\n     */\r\n    scrollRect: Rectangle;\r\n    /**\r\n     * @en Viewport\r\n     * @zh 视口\r\n     */\r\n    viewport: Rectangle;\r\n    /**\r\n     * @en Hit area\r\n     * @zh 点击区域\r\n     */\r\n    hitArea: IHitArea;\r\n    /**\r\n     * @en Dragging\r\n     * @zh 滑动\r\n     */\r\n    dragging: Dragging;\r\n    /**\r\n     * @en Blend mode\r\n     * @zh 混合模式\r\n     */\r\n    blendMode: string;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * @en Reset for easy reuse next time\r\n     * @zh 重置，方便下次复用\r\n     */\r\n    reset(): SpriteStyle {\r\n        this.scaleX = this.scaleY = 1;\r\n        this.skewX = this.skewY = 0;\r\n        this.pivotX = this.pivotY = this.rotation = 0;\r\n        this.alpha = 1;\r\n        if (this.scrollRect) this.scrollRect.recover();\r\n        this.scrollRect = null;\r\n        if (this.viewport) this.viewport.recover();\r\n        this.viewport = null;\r\n        this.hitArea = null;\r\n        this.dragging = null;\r\n        this.blendMode = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        if (this === SpriteStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * @en Create SpriteStyle object pool instance\r\n     * @zh 创建SpriteStyle对象池实例\r\n     */\r\n    static create(): SpriteStyle {\r\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\r\n    }\r\n}\r\n\r\n","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Alpha command.\r\n * @zh 透明命令\r\n */\r\nexport class AlphaCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the AlphaCmd\r\n     * @zh 透明命令的标识符\r\n     */\r\n    static ID: string = \"Alpha\";\r\n\r\n    /**\r\n     * @en The opacity level of the command.\r\n     * @zh 透明度值。\r\n     */\r\n    alpha: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Creates or retrieves an AlphaCmd instance from the object pool and initializes it with the specified alpha value.\r\n     * @param alpha The alpha value to set for the AlphaCmd instance.\r\n     * @returns An AlphaCmd instance initialized with the given alpha value.\r\n     * @zh 从对象池创建或获取一个 AlphaCmd 实例，并使用指定的 alpha 值进行初始化。\r\n     * @param alpha 用于设置 AlphaCmd 实例的 alpha 值。\r\n     * @returns 一个已用给定 alpha 值初始化的 AlphaCmd 实例。\r\n     */\r\n    static create(alpha: number): AlphaCmd {\r\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\r\n        cmd.alpha = alpha;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recovers the `AlphaCmd` instance to the object pool for reuse.\r\n     * @zh 将 `AlphaCmd` 实例回收到对象池以供重用。\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"AlphaCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the alpha command in the given context.\r\n     * @param context The rendering context.\r\n     * @param gx The global x coordinate (unused in this method).\r\n     * @param gy The global y coordinate (unused in this method).\r\n     * @zh 在给定的上下文中执行 alpha 命令。\r\n     * @param context 渲染上下文。\r\n     * @param gx 全局 x 坐标（本方法中未使用）。\r\n     * @param gy 全局 y 坐标（本方法中未使用）。\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.alpha(this.alpha);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the AlphaCmd\r\n     * @zh 透明命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return AlphaCmd.ID;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw circle command\r\n * @zh 绘制圆形命令\r\n */\r\nexport class DrawCircleCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawCircleCmd\r\n     * @zh 绘制圆形命令的标识符\r\n     */\r\n    static ID: string = \"DrawCircle\";\r\n\r\n    /**\r\n     * @en X-axis position of the circle center\r\n     * @zh 圆心X轴位置\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis position of the circle center\r\n     * @zh 圆心Y轴位置\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Radius of the circle\r\n     * @zh 圆的半径\r\n     */\r\n    radius: number;\r\n    /**\r\n     * @en Fill color\r\n     * @zh 填充颜色\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) Border color\r\n     * @zh （可选）边框颜色\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) Border width\r\n     * @zh （可选）边框宽度\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages\r\n     * @zh 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawCircleCmd instance\r\n     * @param x X-axis position of the circle center\r\n     * @param y Y-axis position of the circle center\r\n     * @param radius Radius of the circle\r\n     * @param fillColor Fill color\r\n     * @param lineColor Border color\r\n     * @param lineWidth Border width\r\n     * @returns A DrawCircleCmd instance\r\n     * @zh 创建绘制圆形的DrawCircleCmd实例\r\n     * @param x 圆心X轴位置\r\n     * @param y 圆心Y轴位置\r\n     * @param radius 圆的半径\r\n     * @param fillColor 填充颜色\r\n     * @param lineColor 边框颜色\r\n     * @param lineWidth 边框宽度\r\n     * @returns DrawCircleCmd实例\r\n     */\r\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\r\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCircleCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw circle command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制圆形命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawCircleCmd\r\n     * @zh 绘制圆形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawCircleCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the bounding points of the circle\r\n     * @param sp The sprite that draws the cmd\r\n     * @returns An array of bounding points\r\n     * @zh 获取圆形的包围盒顶点数据\r\n     * @param sp 绘制cmd的精灵\r\n     * @returns 包围盒顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n","import { Bezier } from \"../../maths/Bezier\";\r\nimport { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw curves command\r\n * @zh 绘制曲线命令\r\n */\r\nexport class DrawCurvesCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawCurvesCmd\r\n     * @zh 绘制曲线命令的标识符\r\n     */\r\n    static ID: string = \"DrawCurves\";\r\n\r\n    /**\r\n     * @en X-axis position to start drawing\r\n     * @zh 开始绘制的 X 轴位置\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis position to start drawing\r\n     * @zh 开始绘制的 Y 轴位置\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Collection of points for the curve segments, format: [controlX, controlY, anchorX, anchorY...]\r\n     * @zh 线段的点集合，格式：[controlX, controlY, anchorX, anchorY...]\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * @en Line color\r\n     * @zh 线段颜色\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) Line width\r\n     * @zh （可选）线段宽度\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawCurvesCmd instance\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param points Collection of points for the curve segments\r\n     * @param lineColor Line color\r\n     * @param lineWidth Line width\r\n     * @returns A DrawCurvesCmd instance\r\n     * @zh 创建一个DrawCurvesCmd实例\r\n     * @param x 开始绘制的 X 轴位置\r\n     * @param y 开始绘制的 Y 轴位置\r\n     * @param points 线段的点集合\r\n     * @param lineColor 线段颜色\r\n     * @param lineWidth 线段宽度\r\n     * @returns DrawCurvesCmd实例\r\n     */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\r\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCurvesCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw curves command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制曲线命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.points)\r\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawCurvesCmd\r\n     * @zh 绘制曲线命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawCurvesCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the bounding points of the curves.\r\n     * @zh 获取贝塞尔曲线上的点数据。\r\n     */\r\n    getBoundPoints(): number[] {\r\n        return Bezier.I.getBezierPoints(this.points);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw image command\r\n * @zh 绘制图片命令\r\n */\r\nexport class DrawImageCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawImageCmd\r\n     * @zh 绘制图片命令的标识符\r\n     */\r\n    static ID: string = \"DrawImage\";\r\n\r\n    /**\r\n     * @en Texture to be drawn\r\n     * @zh 要绘制的纹理\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * @en (Optional) X-axis offset\r\n     * @zh （可选）X轴偏移量\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en (Optional) Y-axis offset\r\n     * @zh （可选）Y轴偏移量\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en (Optional) Width of the drawn image\r\n     * @zh （可选）绘制图片的宽度\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en (Optional) Height of the drawn image\r\n     * @zh （可选）绘制图片的高度\r\n     */\r\n    height: number;\r\n\r\n    /**\r\n     * @en (Optional) Drawing color\r\n     * @zh （可选）绘图颜色\r\n     */\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawImageCmd instance\r\n     * @param texture Texture to be drawn\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width Width of the drawn image\r\n     * @param height Height of the drawn image\r\n     * @param color Drawing color\r\n     * @returns A DrawImageCmd instance\r\n     * @zh 创建一个绘制图片命令实例\r\n     * @param texture 要绘制的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width 绘制图片的宽度\r\n     * @param height 绘制图片的高度\r\n     * @param color 绘图颜色\r\n     * @returns 绘制图片命令实例\r\n     */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        Pool.recover(\"DrawImageCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw image command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制图片命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawImageCmd\r\n     * @zh 绘制图片命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawImageCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw bend line command\r\n * @zh 绘制单条曲线命令\r\n */\r\nexport class DrawLineCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawLineCmd\r\n     * @zh 绘制单条曲线命令的标识符\r\n     */\r\n    static ID: string = \"DrawLine\";\r\n\r\n    /**\r\n     * @en X-axis start position\r\n     * @zh X轴起始位置\r\n     */\r\n    fromX: number;\r\n    /**\r\n     * @en Y-axis start position\r\n     * @zh Y轴起始位置\r\n     */\r\n    fromY: number;\r\n    /**\r\n     * @en X-axis end position\r\n     * @zh X轴结束位置\r\n     */\r\n    toX: number;\r\n    /**\r\n     * @en Y-axis end position\r\n     * @zh Y轴结束位置\r\n     */\r\n    toY: number;\r\n    /**\r\n     * @en Line color\r\n     * @zh 线条颜色\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * @en (Optional) Line width\r\n     * @zh （可选）线条宽度\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @en Whether the position is a percentage\r\n     * @zh 位置是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawLineCmd instance\r\n     * @param fromX X-axis start position\r\n     * @param fromY Y-axis start position\r\n     * @param toX X-axis end position\r\n     * @param toY Y-axis end position\r\n     * @param lineColor Line color\r\n     * @param lineWidth Line width\r\n     * @returns A DrawLineCmd instance\r\n     * @zh 创建一个绘制单条曲线命令实例\r\n     * @param fromX X轴起始位置\r\n     * @param fromY Y轴起始位置\r\n     * @param toX X轴结束位置\r\n     * @param toY Y轴结束位置\r\n     * @param lineColor 线条颜色\r\n     * @param lineWidth 线条宽度\r\n     * @returns DrawLineCmd 实例\r\n     */\r\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\r\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\r\n        cmd.fromX = fromX;\r\n        cmd.fromY = fromY;\r\n        cmd.toX = toX;\r\n        cmd.toY = toY;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawLineCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw bend line command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制单条曲线命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawLineCmd\r\n     * @zh 绘制单条曲线命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawLineCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the bounding points of the line\r\n     * @param sp The sprite that draws the cmd\r\n     * @returns An array of bounding points\r\n     * @zh 获取直线的包围盒顶点数据\r\n     * @param sp 绘制cmd的精灵\r\n     * @returns 包围盒顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        _tempPoints.length = 0;\r\n        let lineWidth: number;\r\n        lineWidth = this.lineWidth * 0.5;\r\n\r\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\r\n        if (this.percent) {\r\n            fromX *= sp.width;\r\n            fromY *= sp.height;\r\n            toX *= sp.width;\r\n            toY *= sp.height;\r\n        }\r\n\r\n        if (fromX == toX) {\r\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\r\n        } else if (fromY == toY) {\r\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\r\n        } else {\r\n            _tempPoints.push(fromX, fromY, toX, toY);\r\n        }\r\n\r\n        return _tempPoints;\r\n    }\r\n}\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw continuous curves command\r\n * @zh 绘制连续曲线命令\r\n */\r\nexport class DrawLinesCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawLinesCmd\r\n     * @zh 绘制连续曲线命令的标识符\r\n     */\r\n    static ID: string = \"DrawLines\";\r\n\r\n    /**\r\n     * @en X-axis position to start drawing\r\n     * @zh 开始绘制的X轴位置\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis position to start drawing\r\n     * @zh 开始绘制的Y轴位置\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Collection of points for the line segments. Format: [x1,y1,x2,y2,x3,y3...]\r\n     * @zh 线段的点集合。格式：[x1,y1,x2,y2,x3,y3...]\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * @en Line color \r\n     * @zh 线段颜色\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) Line width\r\n     * @zh （可选）线段宽度\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawLinesCmd instance\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param points Collection of points for the line segments\r\n     * @param lineColor Line color\r\n     * @param lineWidth Line width\r\n     * @returns A DrawLinesCmd instance\r\n     * @zh 创建一个绘制连续曲线命令实例\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param points 线段的点集合\r\n     * @param lineColor 线段颜色\r\n     * @param lineWidth 线段宽度\r\n     * @returns DrawLinesCmd 实例\r\n     */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\r\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\r\n        //TODO 线段需要缓存\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawLinesCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw continuous lines command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制连续曲线命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawLinesCmd\r\n     * @zh 绘制连续曲线命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawLinesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw vector graphics based on the path\r\n * @zh 根据路径绘制矢量图形\r\n */\r\nexport class DrawPathCmd {\r\n    /**\r\n     * @en Identifier for the DrawPathCmd\r\n     * @zh 根据路径绘制矢量图形命令的标识符\r\n     */\r\n    static ID: string = \"DrawPath\";\r\n\r\n    /**\r\n     * @en The X-axis position to start drawing.\r\n     * @zh 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The Y-axis position to start drawing.\r\n     * @zh 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Path collection. Paths support the following formats: [[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]].\r\n     * @zh 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     */\r\n    paths: any[] | null;\r\n    /**\r\n     * @en (Optional) Brush definition, supports the following settings: {fillStyle:\"#FF0000\"}.\r\n     * @zh （可选）刷子定义，支持以下设置：{fillStyle:\"#FF0000\"}。\r\n     */\r\n    brush: any;\r\n    /**\r\n     * @en (Optional) Pen definition, supports the following settings: {strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}.\r\n     * @zh （可选）画笔定义，支持以下设置：{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    pen: any;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawPathCmd instance\r\n     * @param x The X-axis position to start drawing\r\n     * @param y The Y-axis position to start drawing\r\n     * @param paths Path collection\r\n     * @param brush Brush definition\r\n     * @param pen Pen definition\r\n     * @returns DrawPathCmd instance\r\n     * @zh 创建一个根据路径绘制矢量图形命令实例\r\n     * @param x 开始绘制的 X 轴位置\r\n     * @param y 开始绘制的 Y 轴位置\r\n     * @param paths 路径集合\r\n     * @param brush 刷子定义\r\n     * @param pen 画笔定义\r\n     * @return DrawPathCmd 实例\r\n     */\r\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\r\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.paths = paths;\r\n        cmd.brush = brush;\r\n        cmd.pen = pen;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.paths = null;\r\n        this.brush = null;\r\n        this.pen = null;\r\n        Pool.recover(\"DrawPathCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局 X 偏移\r\n     * @param gy 全局 Y 偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawPathCmd\r\n     * @zh 根据路径绘制矢量图形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawPathCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the boundary points of the path\r\n     * @zh 获取路径的边界点\r\n     */\r\n    getBoundPoints(): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        rst.length = 0;\r\n        let paths = this.paths;\r\n        let len = paths.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw a pie chart\r\n * @zh 绘制扇形\r\n */\r\nexport class DrawPieCmd {\r\n    /**\r\n     * @en Identifier for the DrawPieCmd\r\n     * @zh 绘制扇形命令的标识符\r\n     */\r\n    static ID: string = \"DrawPie\";\r\n\r\n    /**\r\n     * @en The X-axis position to start drawing.\r\n     * @zh 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The Y-axis position to start drawing.\r\n     * @zh 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en The radius of the pie chart.\r\n     * @zh 扇形半径。\r\n     */\r\n    radius: number = 0;\r\n\r\n    /**\r\n     * @en The fill color \r\n     * @zh 填充颜色 \r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) The border color  \r\n     * @zh （可选）边框颜色 \r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) The width of the border.\r\n     * @zh （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    private _startAngle: number;\r\n    private _endAngle: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawPieCmd instance\r\n     * @param x The X-axis position to start drawing\r\n     * @param y The Y-axis position to start drawing\r\n     * @param radius The radius of the pie chart\r\n     * @param startAngle The start angle of the pie chart\r\n     * @param endAngle The end angle of the pie chart\r\n     * @param fillColor The fill color \r\n     * @param lineColor The border color \r\n     * @param lineWidth The width of the border\r\n     * @returns DrawPieCmd instance\r\n     * @zh 创建一个绘制扇形命令实例\r\n     * @param x 开始绘制的 X 轴位置\r\n     * @param y 开始绘制的 Y 轴位置\r\n     * @param radius 扇形半径\r\n     * @param startAngle 扇形起始角度\r\n     * @param endAngle 扇形终止角度\r\n     * @param fillColor 填充颜色 \r\n     * @param lineColor 边框颜色 \r\n     * @param lineWidth 边框宽度\r\n     * @returns 绘制扇形命令实例\r\n     */\r\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\r\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd._startAngle = startAngle;\r\n        cmd._endAngle = endAngle;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPieCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局 X 偏移\r\n     * @param gy 全局 Y 偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawPieCmd\r\n     * @zh 绘制扇形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawPieCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en The start angle of the pie chart in degrees.\r\n     * @zh 开始角度（以度为单位）。\r\n     */\r\n    get startAngle(): number {\r\n        return this._startAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set startAngle(value: number) {\r\n        this._startAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * @en The end angle of the pie chart in degrees.\r\n     * @zh 结束角度（以度为单位）。\r\n     */\r\n    get endAngle(): number {\r\n        return this._endAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set endAngle(value: number) {\r\n        this._endAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * @en Get the boundary points of the pie chart\r\n     * @zh 获取扇形的边界点\r\n     */\r\n    getBoundPoints(): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        _tempPoints.length = 0;\r\n        let k: number = Math.PI / 180;\r\n        let d1: number = this.endAngle - this.startAngle;\r\n        let x = this.x, y = this.y, radius = this.radius;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            // 如果满了一圈了\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        // \r\n        rst.push(x, y);\t// 中心\r\n\r\n        var delta: number = d1 % 360;\r\n        if (delta < 0) delta += 360;\r\n\r\n        // 一定增加，且在360以内的end\r\n        var end1: number = this.startAngle + delta;\r\n\r\n        // 转成弧度\r\n        var st: number = this.startAngle * k;\r\n        var ed: number = end1 * k;\r\n\r\n        // 起点\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        // 终点\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n\r\n        // 圆形的四个边界点\r\n        // 按照90度对齐，看看会经历几个90度\r\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\r\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\r\n        for (var cs: number = s1; cs <= s2; cs += 90) {\r\n            var csr: number = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw a polygon\r\n * @zh 绘制多边形\r\n */\r\nexport class DrawPolyCmd {\r\n    /**\r\n     * @en Identifier for the DrawPolyCmd\r\n     * @zh 绘制多边形命令的标识符\r\n     */\r\n    static ID: string = \"DrawPoly\";\r\n\r\n    /**\r\n     * @en The X-axis position to start drawing.\r\n     * @zh 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The Y-axis position to start drawing.\r\n     * @zh 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en The collection of points for the polygon.\r\n     * @zh 多边形的点集合。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * @en The fill color \r\n     * @zh 填充颜色 \r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) The border color  \r\n     * @zh （可选）边框颜色 \r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) The width of the border.\r\n     * @zh （可选）边框宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawPolyCmd instance\r\n     * @param x The X-axis position to start drawing\r\n     * @param y The Y-axis position to start drawing\r\n     * @param points The collection of points for the polygon\r\n     * @param fillColor The fill color \r\n     * @param lineColor The border color \r\n     * @param lineWidth The width of the border\r\n     * @returns DrawPolyCmd instance\r\n     * @zh 创建绘制多边形命令的实例\r\n     * @param x 开始绘制的 X 轴位置\r\n     * @param y 开始绘制的 Y 轴位置\r\n     * @param points 多边形的点集合\r\n     * @param fillColor 填充颜色 \r\n     * @param lineColor 边框颜色 \r\n     * @param lineWidth 边框宽度\r\n     */\r\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\r\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPolyCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing polygon command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制多边形命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局 X 偏移\r\n     * @param gy 全局 Y 偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let isConvexPolygon = this.points.length <= 6;\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\r\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawPolyCmd\r\n     * @zh 绘制多边形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawPolyCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../renders/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw a rectangle\r\n * @zh 绘制矩形\r\n */\r\nexport class DrawRectCmd {\r\n    /**\r\n     * @en Identifier for the DrawRectCmd\r\n     * @zh 绘制矩形命令的标识符\r\n     */\r\n    static ID: string = \"DrawRect\";\r\n\r\n    /**\r\n     * @en The X-axis position to start drawing.\r\n     * @zh 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The Y-axis position to start drawing.\r\n     * @zh 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en The width of the rectangle.\r\n     * @zh 矩形宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en The height of the rectangle.\r\n     * @zh 矩形高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * @en The fill color  \r\n     * @zh 填充颜色 \r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) The border color \r\n     * @zh （可选）边框颜色 \r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) The width of the border.\r\n     * @zh （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages.\r\n     * @zh 位置和大小是否是百分比。\r\n     */\r\n    percent: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawRectCmd instance\r\n     * @param x The X-axis position to start drawing\r\n     * @param y The Y-axis position to start drawing\r\n     * @param width The width of the rectangle\r\n     * @param height The height of the rectangle\r\n     * @param fillColor The fill color \r\n     * @param lineColor The border color \r\n     * @param lineWidth The width of the border\r\n     * @param percent Whether the position and size are percentages\r\n     * @returns DrawRectCmd instance\r\n     * @zh 创建绘制矩形的命令实例\r\n     * @param x 开始绘制的 X 轴位置\r\n     * @param y 开始绘制的 Y 轴位置\r\n     * @param width 矩形宽度\r\n     * @param height 矩形高度\r\n     * @param fillColor 填充颜色 \r\n     * @param lineColor 边框颜色 \r\n     * @param lineWidth 边框宽度\r\n     * @param percent 位置和大小是否是百分比\r\n     * @returns DrawRectCmd实例\r\n     */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\r\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRectCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing rectangle command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制矩形命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else\r\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawRectCmd\r\n     * @zh 绘制矩形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawRectCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the vertex data of the bounding box\r\n     * @param sp The sprite that draws the command\r\n     * @returns Array of vertex data\r\n     * @zh 获取包围盒的顶点数据\r\n     * @param sp 绘制命令的精灵对象\r\n     * @returns 顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from '../../utils/ColorUtils';\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * @en Draw a single texture\r\n * @zh 绘制单个贴图\r\n */\r\nexport class DrawTextureCmd {\r\n    /**\r\n     * @en Identifier for the DrawTextureCmd\r\n     * @zh 绘制单个贴图命令的标识符\r\n     */\r\n    static ID: string = \"DrawTexture\";\r\n\r\n    /**\r\n     * @en The texture to be drawn.\r\n     * @zh 要绘制的纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * @en (Optional) X-axis offset.\r\n     * @zh （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en (Optional) Y-axis offset.\r\n     * @zh （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en (Optional) Width of the texture.\r\n     * @zh （可选）纹理的宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en (Optional) Height of the texture.\r\n     * @zh （可选）纹理的高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * @en (Optional) Matrix information for transformation.\r\n     * @zh （可选）矩阵信息，用于变换。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * @en (Optional) Alpha value.\r\n     * @zh （可选）透明度。\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * @en (Optional) Color filter.\r\n     * @zh （可选）颜色滤镜。\r\n     */\r\n    color: number = 0xffffffff;\r\n    /**\r\n     * @en (Optional) Blend mode.\r\n     * @zh （可选）混合模式。\r\n     */\r\n    blendMode: string | null;\r\n\r\n    /**\r\n     * @en (Optional) UV coordinates.\r\n     * @zh （可选）UV坐标。\r\n     */\r\n    uv: number[] | null = null;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawTextureCmd instance\r\n     * @param texture The texture to be drawn\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width Width of the texture\r\n     * @param height Height of the texture\r\n     * @param matrix Matrix information for transformation\r\n     * @param alpha Alpha value\r\n     * @param color Color filter\r\n     * @param blendMode Blend mode\r\n     * @param uv UV coordinates\r\n     * @returns DrawTextureCmd instance\r\n     * @zh 创建一个绘制单个贴图实例\r\n     * @param texture 要绘制的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width 纹理的宽度\r\n     * @param height 纹理的高度\r\n     * @param matrix 矩阵信息，用于变换\r\n     * @param alpha 透明度\r\n     * @param color 颜色滤镜\r\n     * @param blendMode 混合模式\r\n     * @param uv UV坐标\r\n     * @returns DrawTextureCmd实例\r\n     */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv || null;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw texture command.\r\n     * @param context The rendering context.\r\n     * @param gx Starting X coordinate.\r\n     * @param gy Starting Y coordinate.\r\n     * @zh 执行绘制纹理命令。\r\n     * @param context 渲染上下文。\r\n     * @param gx 起始 X 坐标。\r\n     * @param gy 起始 Y 坐标。\r\n     */\r\n\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawTextureCmd\r\n     * @zh 绘制单个贴图命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * @en Fill texture command\r\n * @zh 填充贴图命令\r\n */\r\nexport class FillTextureCmd {\r\n    /**\r\n     * @en Identifier for the FillTextureCmd\r\n     * @zh 填充贴图命令的标识符\r\n     */\r\n    static ID: string = \"FillTexture\";\r\n\r\n    /**\r\n     * @en The texture to be filled.\r\n     * @zh 要填充的纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * @en X-axis offset.\r\n     * @zh X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis offset.\r\n     * @zh Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en (Optional) Width of the filled area.\r\n     * @zh （可选）填充区域的宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en (Optional) Height of the filled area.\r\n     * @zh （可选）填充区域的高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * @en (Optional) Fill type: repeat|repeat-x|repeat-y|no-repeat\r\n     * @zh （可选）填充类型：repeat|repeat-x|repeat-y|no-repeat\r\n     */\r\n    type?: string;\r\n    /**\r\n     * @en (Optional) Texture offset\r\n     * @zh （可选）贴图纹理偏移\r\n     */\r\n    offset?: Point;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages\r\n     * @zh 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**\r\n     * @en (Optional) Drawing color\r\n     * @zh （可选）绘图颜色\r\n     */\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a FillTextureCmd instance\r\n     * @param texture The texture to be filled\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width Width of the filled area\r\n     * @param height Height of the filled area\r\n     * @param type Fill type\r\n     * @param offset Texture offset\r\n     * @param color Drawing color\r\n     * @returns FillTextureCmd instance\r\n     * @zh 创建绘制填充贴图的命令实例\r\n     * @param texture 要填充的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width 填充区域的宽度\r\n     * @param height 填充区域的高度\r\n     * @param type 填充类型\r\n     * @param offset 贴图纹理偏移\r\n     * @param color 绘图颜色\r\n     * @returns FillTextureCmd实例\r\n     */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\r\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.type = type;\r\n        cmd.offset = offset;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.offset = null;\r\n        Pool.recover(\"FillTextureCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the fill texture command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制填充贴图命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\r\n            }\r\n            else\r\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the FillTextureCmd\r\n     * @zh 填充贴图命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return FillTextureCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the vertex data of the bounding box\r\n     * @param sp The sprite that draws the command\r\n     * @returns Array of vertex data\r\n     * @zh 获取包围盒的顶点数据\r\n     * @param sp 绘制命令的精灵对象\r\n     * @returns 顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if (this.width && this.height)\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n        else\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\r\n","import { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Restore command, used in conjunction with save\r\n * @zh 恢复命令，与save配套使用\r\n */\r\nexport class RestoreCmd {\r\n    /**\r\n     * @en Identifier for the RestoreCmd\r\n     * @zh 恢复命令的标识符\r\n     */\r\n    static ID: string = \"Restore\";\r\n\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a RestoreCmd instance\r\n     * @returns RestoreCmd instance\r\n     * @zh 创建一个恢复命令实例\r\n     * @returns 恢复命令实例\r\n     */\r\n    static create(): RestoreCmd {\r\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RestoreCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the restore command\r\n     * @param context The rendering context\r\n     * @zh 执行恢复命令\r\n     * @param context 渲染上下文\r\n     */\r\n    run(context: Context): void {\r\n        context.restore();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the RestoreCmd\r\n     * @zh 恢复命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return RestoreCmd.ID;\r\n    }\r\n\r\n}","import { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Rotate command\r\n * @zh 旋转命令\r\n */\r\nexport class RotateCmd {\r\n    /**\r\n     * @en Identifier for the RotateCmd\r\n     * @zh 旋转命令的标识符\r\n     */\r\n    static ID: string = \"Rotate\";\r\n\r\n    /**\r\n     * @en Rotation angle in radians.\r\n     * @zh 旋转角度，以弧度计。\r\n     */\r\n    angle: number;\r\n    /**\r\n     * @en (Optional) Horizontal axis point coordinates.\r\n     * @zh （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * @en (Optional) Vertical axis point coordinates.\r\n     * @zh （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a RotateCmd instance\r\n     * @param angle Rotation angle in radians\r\n     * @param pivotX Horizontal axis point coordinates.\r\n     * @param pivotY Vertical axis point coordinates.\r\n     * @returns RotateCmd instance\r\n     * @zh 创建一个旋转命令实例\r\n     * @param angle 旋转角度，以弧度计。\r\n     * @param pivotX 水平方向轴心点坐标。\r\n     * @param pivotY 垂直方向轴心点坐标。\r\n     * @returns 旋转命令实例\r\n     */\r\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\r\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\r\n        cmd.angle = angle;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RotateCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the rotate command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行旋转命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the RotateCmd\r\n     * @zh 旋转命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return RotateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * @en Scale command\r\n * @zh 缩放命令\r\n */\r\nexport class ScaleCmd {\r\n    /**\r\n     * @en Identifier for the ScaleCmd\r\n     * @zh 缩放命令的标识符\r\n     */\r\n    static ID: string = \"Scale\";\r\n\r\n    /**\r\n     * @en Horizontal scaling value.\r\n     * @zh 水平方向缩放值。\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * @en Vertical scaling value.\r\n     * @zh 垂直方向缩放值。\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * @en (Optional) Horizontal axis point coordinates.\r\n     * @zh （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * @en (Optional) Vertical axis point coordinates.\r\n     * @zh （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a ScaleCmd instance\r\n     * @param scaleX Horizontal scaling value\r\n     * @param scaleY Vertical scaling value\r\n     * @param pivotX Horizontal axis point coordinates\r\n     * @param pivotY Vertical axis point coordinates\r\n     * @returns ScaleCmd instance\r\n     * @zh 创建一个缩放命令实例\r\n     * @param scaleX 水平方向缩放值\r\n     * @param scaleY 垂直方向缩放值\r\n     * @param pivotX 水平方向轴心点坐标\r\n     * @param pivotY 垂直方向轴心点坐标\r\n     * @returns 缩放命令实例\r\n     */\r\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\r\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\r\n        cmd.scaleX = scaleX;\r\n        cmd.scaleY = scaleY;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ScaleCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the scale command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行缩放命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the ScaleCmd\r\n     * @zh 缩放命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return ScaleCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Transform command\r\n * @zh 矩阵变换命令\r\n */\r\nexport class TransformCmd {\r\n    /**\r\n     * @en Identifier for the TransformCmd\r\n     * @zh 矩阵变换命令的标识符\r\n     */\r\n    static ID: string = \"Transform\";\r\n\r\n    /**\r\n     * @en The transformation matrix.\r\n     * @zh 变换矩阵。\r\n     */\r\n    matrix: Matrix;\r\n    /**\r\n     * @en (Optional) Horizontal axis point coordinates.\r\n     * @zh （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * @en (Optional) Vertical axis point coordinates.\r\n     * @zh （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a TransformCmd instance\r\n     * @param matrix The transformation matrix\r\n     * @param pivotX Horizontal axis point coordinates\r\n     * @param pivotY Vertical axis point coordinates\r\n     * @returns TransformCmd instance\r\n     * @zh 创建一个矩阵变换命令实例\r\n     * @param matrix 变换矩阵\r\n     * @param pivotX 水平方向轴心点坐标\r\n     * @param pivotY 垂直方向轴心点坐标\r\n     * @returns 矩阵变换命令实例\r\n     */\r\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\r\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\r\n        cmd.matrix = matrix;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.matrix = null;\r\n        Pool.recover(\"TransformCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the transform command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行矩阵变换命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the TransformCmd\r\n     * @zh 矩阵变换命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return TransformCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * @en Translate command\r\n * @zh 位移命令\r\n */\r\nexport class TranslateCmd {\r\n    /**\r\n     * @en Identifier for the TranslateCmd\r\n     * @zh 位移命令的标识符\r\n     */\r\n    static ID: string = \"Translate\";\r\n\r\n    /**\r\n     * @en The value to be added to the horizontal coordinate (x).\r\n     * @zh 添加到水平坐标（x）上的值。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * @en The value to be added to the vertical coordinate (y).\r\n     * @zh 添加到垂直坐标（y）上的值。\r\n     */\r\n    ty: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a TranslateCmd instance\r\n     * @param tx The value to be added to the horizontal coordinate\r\n     * @param ty The value to be added to the vertical coordinate\r\n     * @returns TranslateCmd instance\r\n     * @zh 创建一个位移命令实例\r\n     * @param tx 要添加到水平坐标的值\r\n     * @param ty 要添加到垂直坐标的值\r\n     * @returns 位移命令实例\r\n     */\r\n    static create(tx: number, ty: number): TranslateCmd {\r\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\r\n        cmd.tx = tx;\r\n        cmd.ty = ty;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"TranslateCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the translate command\r\n     * @param context The rendering context\r\n     * @zh 执行位移命令\r\n     * @param context 渲染上下文\r\n     */\r\n    run(context: Context): void {\r\n        context.translate(this.tx, this.ty);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the TranslateCmd\r\n     * @zh 位移命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return TranslateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw triangles command\r\n * @zh 绘制三角形命令\r\n */\r\nexport class DrawTrianglesCmd {\r\n    /**\r\n     * @en Identifier for the DrawTrianglesCmd\r\n     * @zh 绘制三角形命令的标识符\r\n     */\r\n    static ID: string = \"DrawTriangles\";\r\n\r\n    /**\r\n     * @en The texture to be drawn.\r\n     * @zh 要绘制的纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * @en X-axis offset.\r\n     * @zh X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis offset.\r\n     * @zh Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Vertex array.\r\n     * @zh 顶点数组。\r\n     */\r\n    vertices: Float32Array;\r\n    /**\r\n     * @en UV data.\r\n     * @zh UV数据。\r\n     */\r\n    uvs: Float32Array;\r\n    /**\r\n     * @en Vertex indices.\r\n     * @zh 顶点索引。\r\n     */\r\n    indices: Uint16Array;\r\n    /**\r\n     * @en Scaling matrix.\r\n     * @zh 缩放矩阵。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * @en Alpha value.\r\n     * @zh 透明度值。\r\n     */\r\n    alpha: number;\r\n    //public var color:String;\r\n    /**\r\n     * @en Blend mode.\r\n     * @zh 混合模式。\r\n     */\r\n    blendMode: string | null;\r\n    /**\r\n     * @en Color transformation.\r\n     * @zh 颜色变换。\r\n     */\r\n    color: number | null;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawTrianglesCmd instance\r\n     * @param texture The texture to be drawn\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param vertices Vertex array\r\n     * @param uvs UV data\r\n     * @param indices Vertex indices\r\n     * @param matrix Scaling matrix\r\n     * @param alpha Alpha value\r\n     * @param color Color transformation\r\n     * @param blendMode Blend mode\r\n     * @returns DrawTrianglesCmd instance\r\n     * @zh 创建一个绘制三角形命令实例\r\n     * @param texture 要绘制的纹理  \r\n     * @param x X轴偏移量  \r\n     * @param y Y轴偏移量  \r\n     * @param vertices 顶点数组  \r\n     * @param uvs UV数据  \r\n     * @param indices 顶点索引  \r\n     * @param matrix 缩放矩阵  \r\n     * @param alpha 透明度值  \r\n     * @param color 颜色变换  \r\n     * @param blendMode 混合模式  \r\n     * @returns 绘制三角形命令实例\r\n     */\r\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\r\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\r\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        cmd.blendMode = blendMode;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing triangles command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制三角形命令\r\n     * @param context 渲染上下文  \r\n     * @param gx 全局X偏移  \r\n     * @param gy 全局Y偏移  \r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawTrianglesCmd\r\n     * @zh 绘制三角形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the boundary points of the triangles\r\n     * @zh 获取三角形的边界点\r\n     */\r\n    getBoundPoints(): number[] {\r\n        let vert = this.vertices;\r\n        var vnum = vert.length;\r\n        if (vnum < 2) return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx) minx = cx;\r\n            if (miny > cy) miny = cy;\r\n            if (maxx < cx) maxx = cx;\r\n            if (maxy < cy) maxy = cy;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * @en Draw a texture with nine-grid information\r\n * @zh 绘制带九宫格信息的图片\r\n */\r\nexport class Draw9GridTextureCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the Draw9GridTextureCmd\r\n     * @zh 绘制带九宫格信息的图片命令的标识符\r\n     */\r\n    static ID: string = \"Draw9GridTexture\";\r\n\r\n    /**\r\n     * @en The texture to be drawn\r\n     * @zh 要绘制的纹理\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * @en (Optional) X-axis offset\r\n     * @zh （可选）X轴偏移量\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en (Optional) Y-axis offset\r\n     * @zh （可选）Y轴偏移量\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en (Optional) Width of the drawn texture\r\n     * @zh （可选）绘制纹理的宽度\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en (Optional) Height of the drawn texture\r\n     * @zh （可选）绘制纹理的高度\r\n     */\r\n    height: number;\r\n\r\n   /**\r\n     * @en The size grid of the texture.\r\n     * The size grid is a 3x3 division of the texture, allowing it to be scaled without distorting the corners and edges. \r\n     * The array contains five values representing the top, right, bottom, and left margins, and whether to repeat the fill (0: no repeat, 1: repeat). \r\n     * The values are separated by commas. For example: \"6,6,6,6,1\".\r\n     * @zh 纹理的九宫格数据。\r\n     * 九宫格是一种将纹理分成3x3格的方式，使得纹理缩放时保持角和边缘不失真。\r\n     * 数组包含五个值，分别代表上边距、右边距、下边距、左边距以及是否重复填充（0：不重复填充，1：重复填充）。\r\n     * 值以逗号分隔。例如：\"6,6,6,6,1\"。\r\n     */\r\n    sizeGrid: number[];\r\n\r\n    /**\r\n     * @en Color tint for the texture (default: 0xffffffff)\r\n     * @zh 纹理的颜色色调（默认值：0xffffffff）\r\n     */\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages\r\n     * @zh 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**\r\n     * @private\r\n     * @en Creates or retrieves a Draw9GridTextureCmd instance from the object pool and initializes it with the specified parameters.\r\n     * @param texture The texture to be drawn\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width Width of the drawn texture\r\n     * @param height Height of the drawn texture\r\n     * @param sizeGrid Nine-grid information\r\n     * @param percent Whether the position and size are percentages (default: false)\r\n     * @param color Color tint for the texture (default: null)\r\n     * @returns A Draw9GridTextureCmd instance initialized with the given parameters\r\n     * @zh 从对象池创建或获取一个 Draw9GridTextureCmd 实例，并使用指定的参数进行初始化。\r\n     * @param texture 要绘制的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width 绘制纹理的宽度\r\n     * @param height 绘制纹理的高度\r\n     * @param sizeGrid 九宫格信息\r\n     * @param percent 位置和大小是否是百分比（默认值：false）\r\n     * @param color 纹理的颜色色调（默认值：null）\r\n     * @returns 一个已用给定参数初始化的 Draw9GridTextureCmd 实例\r\n     */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\r\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.sizeGrid = sizeGrid;\r\n        cmd.percent = percent;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        Pool.recover(\"Draw9GridTextureCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw nine-grid texture command in the given context\r\n     * @param context The rendering context\r\n     * @param gx The global x coordinate\r\n     * @param gy The global y coordinate\r\n     * @zh 在给定的上下文中执行绘制九宫格纹理命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局 x 坐标\r\n     * @param gy 全局 y 坐标\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\r\n            }\r\n            else\r\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the Draw9GridTextureCmd\r\n     * @zh 绘制带九宫格信息的图片命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return Draw9GridTextureCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the bounding points of the 9-grid texture\r\n     * @param sp The sprite that draws the cmd, containing width and height information\r\n     * @returns An array of bounding points [x1, y1, x2, y2, x3, y3, x4, y4]\r\n     * @zh 获取九宫格纹理的边界顶点数据\r\n     * @param sp 绘制cmd的精灵，包含宽度和高度信息\r\n     * @returns 包围盒顶点数据数组 [x1, y1, x2, y2, x3, y3, x4, y4]\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let minx = this.x;\r\n        let miny = this.y;\r\n        let maxx = this.width;\r\n        let maxy = this.height;\r\n        if (this.percent) {\r\n            minx *= sp.width;\r\n            miny *= sp.height;\r\n            maxx *= sp.width;\r\n            maxy *= sp.height;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\r\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n","import { Context } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Save command, used in conjunction with restore\r\n * @zh 存储命令，与restore配套使用\r\n */\r\nexport class SaveCmd {\r\n    /**\r\n     * @en Identifier for the SaveCmd\r\n     * @zh 存储命令的标识符\r\n     */\r\n    static ID: string = \"Save\";\r\n\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a SaveCmd instance\r\n     * @returns SaveCmd instance\r\n     * @zh 创建一个存储命令实例\r\n     * @returns 存储命令实例\r\n     */\r\n    static create(): SaveCmd {\r\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"SaveCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the save command\r\n     * @param context The rendering context\r\n     * @zh 执行存储命令\r\n     * @param context 渲染上下文\r\n     */\r\n    run(context: Context): void {\r\n        context.save();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the SaveCmd\r\n     * @zh 存储命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return SaveCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context, IGraphicCMD } from \"../../renders/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * @en Draw ellipse command\r\n * @zh 绘制椭圆命令\r\n */\r\nexport class DrawEllipseCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawEllipseCmd\r\n     * @zh 绘制椭圆命令的标识符\r\n     */\r\n    static ID: string = \"DrawEllipse\";\r\n    /**\r\n     * @en X-axis position of the ellipse center\r\n     * @zh 椭圆中心点X轴位置\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis position of the ellipse center\r\n     * @zh 椭圆中心点Y轴位置\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Horizontal radius of the ellipse\r\n     * @zh 椭圆的横向半径\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en Vertical radius of the ellipse\r\n     * @zh 椭圆的纵向半径\r\n     */\r\n    height: number;\r\n    /**\r\n     * @en Fill color\r\n     * @zh 填充颜色\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) Border color\r\n     * @zh （可选）边框颜色\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) Border width\r\n     * @zh （可选）边框宽度\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages\r\n     * @zh 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawEllipseCmd instance\r\n     * @param x X-axis position of the ellipse center\r\n     * @param y Y-axis position of the ellipse center\r\n     * @param width Horizontal radius of the ellipse\r\n     * @param height Vertical radius of the ellipse\r\n     * @param fillColor Fill color\r\n     * @param lineColor Border color\r\n     * @param lineWidth Border width\r\n     * @param percent Whether the position and size are percentages\r\n     * @returns A DrawEllipseCmd instance\r\n     * @zh 创建一个绘制椭圆命令的实例\r\n     * @param x 椭圆中心点X轴位置\r\n     * @param y 椭圆中心点Y轴位置\r\n     * @param width 椭圆的横向半径\r\n     * @param height 椭圆的纵向半径\r\n     * @param fillColor 填充颜色\r\n     * @param lineColor 边框颜色\r\n     * @param lineWidth 边框宽度\r\n     * @param percent 位置和大小是否是百分比\r\n     * @returns DrawEllipseCmd实例\r\n     */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawEllipseCmd\", DrawEllipseCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawEllipseCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw ellipse command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制椭圆命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawEllipse(this.x * w + gx, this.y * h + gy, this.width * w - offset, this.height * h - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawEllipse(this.x + gx, this.y + gy, this.width - offset, this.height - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawEllipseCmd\r\n     * @zh 绘制椭圆命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawEllipseCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the bounding points of the ellipse\r\n     * @param sp The sprite that draws the cmd\r\n     * @returns An array of bounding points\r\n     * @zh 获取椭圆的包围盒顶点数据\r\n     * @param sp 绘制cmd的精灵\r\n     * @returns 包围盒顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.width, this.y - this.height, this.width * 2, this.height * 2, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawEllipseCmd\", DrawEllipseCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../renders/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * @en Draw a rounded rectangle\r\n * @zh 绘制圆角矩形\r\n */\r\nexport class DrawRoundRectCmd {\r\n    /**\r\n     * @en Identifier for the DrawRoundRectCmd\r\n     * @zh 绘制圆角矩形命令的标识符\r\n     */\r\n    static ID: string = \"DrawRoundRect\";\r\n    /**\r\n     * @en The X-axis position of the rounded rectangle.\r\n     * @zh 圆角矩形的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en The Y-axis position of the rounded rectangle.\r\n     * @zh 圆角矩形的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en The width of the rounded rectangle.\r\n     * @zh 圆角矩形的宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en The height of the rounded rectangle.\r\n     * @zh 圆角矩形的高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * @en The radius of the top-left corner.\r\n     * @zh 左上圆角的半径。\r\n     */\r\n    lt: number;\r\n    /**\r\n     * @en The radius of the top-right corner.\r\n     * @zh 右上圆角的半径。\r\n     */\r\n    rt: number;\r\n    /**\r\n     * @en The radius of the bottom-left corner.\r\n     * @zh 左下圆角的半径。\r\n     */\r\n    lb: number;\r\n    /**\r\n     * @en The radius of the bottom-right corner.\r\n     * @zh 右下圆角的半径。\r\n     */\r\n    rb: number;\r\n    /**\r\n     * @en The fill color.\r\n     * @zh 填充颜色 \r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * @en (Optional) The border color.\r\n     * @zh （可选）边框颜色 \r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * @en (Optional) The width of the border.\r\n     * @zh （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * @en Whether the position and size are percentages.\r\n     * @zh 位置和大小是否是百分比。\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawRoundRectCmd instance\r\n     * @param x The X-axis position of the rounded rectangle\r\n     * @param y The Y-axis position of the rounded rectangle\r\n     * @param width The width of the rounded rectangle\r\n     * @param height The height of the rounded rectangle\r\n     * @param lt The radius of the top-left corner\r\n     * @param rt The radius of the top-right corner\r\n     * @param lb The radius of the bottom-left corner\r\n     * @param rb The radius of the bottom-right corner\r\n     * @param fillColor The fill color \r\n     * @param lineColor The border color \r\n     * @param lineWidth The width of the border\r\n     * @param percent Whether the position and size are percentages\r\n     * @returns DrawRoundRectCmd instance\r\n     * @zh 创建绘制圆角矩形命令的实例\r\n     * @param x 圆角矩形的 X 轴位置\r\n     * @param y 圆角矩形的 Y 轴位置\r\n     * @param width 圆角矩形的宽度\r\n     * @param height 圆角矩形的高度\r\n     * @param lt 左上圆角的半径\r\n     * @param rt 右上圆角的半径\r\n     * @param lb 左下圆角的半径\r\n     * @param rb 右下圆角的半径\r\n     * @param fillColor 填充颜色 \r\n     * @param lineColor 边框颜色 \r\n     * @param lineWidth 边框宽度\r\n     * @param percent 位置和大小是否是百分比\r\n     * @returns DrawRoundRectCmd 实例\r\n     */\r\n    static create(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRoundRectCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.lt = lt;\r\n        cmd.rt = rt;\r\n        cmd.lb = lb;\r\n        cmd.rb = rb;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRoundRectCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing rounded rectangle command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制圆角矩形命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawRoundRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawRoundRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawRoundRectCmd\r\n     * @zh 绘制圆角矩形命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawRoundRectCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Get the vertex data of the bounding box\r\n     * @param sp The sprite that draws the command\r\n     * @returns Array of vertex data\r\n     * @zh 获取包围盒的顶点数据\r\n     * @param sp 绘制命令的精灵对象\r\n     * @returns 顶点数据数组\r\n     */\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);","import { Context } from \"../../renders/Context\";\r\nimport { FontInfo } from \"../../utils/FontInfo\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Config } from \"../../../Config\";\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\n\r\n/**\r\n * @en Draw text command\r\n * @zh 绘制文字命令\r\n */\r\nexport class FillTextCmd {\r\n    /**\r\n     * @en Identifier for the FillTextCmd\r\n     * @zh 绘制文字命令的标识符\r\n     */\r\n    static ID: string = \"FillText\";\r\n\r\n    /**\r\n     * @en The x position of the start of the text (relative to the canvas).\r\n     * @zh 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     */\r\n    x: number = 0;\r\n    /**\r\n     * @en The y position of the start of the text (relative to the canvas).    \r\n     * @zh 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     */\r\n    y: number = 0;\r\n\r\n    private _text: string;\r\n    private _wordText: WordText;\r\n    private _font: string;\r\n    private _color: string;\r\n    private _strokeColor: string = '#000000';\r\n    private _stroke: number;\r\n    private _align: number;\r\n    private _fontObj: FontInfo;\r\n\r\n    private _loosyBound:Rectangle=null;\r\n    /**\r\n     * @en Text content\r\n     * @zh 文本内容\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    /**\r\n     * @en Stroke color\r\n     * @zh 描边颜色\r\n     */\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set strokeColor(value: string) {\r\n        this._strokeColor = value;\r\n    }\r\n\r\n    /**\r\n     * @en Stroke width\r\n     * @zh 描边宽度\r\n     */\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n    set stroke(value: number) {\r\n        this._stroke = value;\r\n    }\r\n\r\n    /**\r\n     * @en Text alignment\r\n     * @zh 对齐方式\r\n     */\r\n    get align() {\r\n        return this._align;\r\n    }\r\n    set align(value: number) {\r\n        this._align = value;\r\n    }\r\n\r\n    /**\r\n     * @en Create a FillTextCmd instance\r\n     * @param text Text content\r\n     * @param x X position\r\n     * @param y Y position\r\n     * @param font Font\r\n     * @param color Text color\r\n     * @param align Alignment\r\n     * @param stroke Stroke width\r\n     * @param strokeColor Stroke color\r\n     * @returns FillTextCmd instance\r\n     * @zh 创建绘制文本的命令的实例\r\n     * @param text 文本内容\r\n     * @param x x位置\r\n     * @param y y位置\r\n     * @param font 字体\r\n     * @param color 文本颜色\r\n     * @param align 对齐方式\r\n     * @param stroke 描边宽度\r\n     * @param strokeColor 描边颜色\r\n     * @returns 绘制文本的命令实例\r\n     */\r\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, align: string, stroke: number, strokeColor: string | null): FillTextCmd {\r\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\r\n        cmd._text = null;\r\n        cmd._wordText = null;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.font = font;\r\n        cmd.color = color;\r\n        cmd._stroke = stroke;\r\n        cmd._strokeColor = strokeColor;\r\n\r\n        switch (align) {\r\n            case 'center':\r\n                cmd._align = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                cmd._align = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n            default:\r\n                cmd._align = Const.ENUM_TEXTALIGN_DEFAULT;\r\n        }\r\n\r\n        if (text instanceof WordText) {\r\n            cmd._wordText = text;\r\n            text.cleanCache();\r\n        }\r\n        else\r\n            cmd._text = text;\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"FillTextCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing text command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制文本命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (ILaya.stage.isGlobalRepaint()) {\r\n            this._wordText && this._wordText.cleanCache();\r\n        }\r\n        if (null == this._text) this._text = '';\r\n        if (null == this._fontObj) {\r\n            this.font = null;\r\n        }\r\n        if (null == this._color) {\r\n            this._color = '#ffffff';\r\n        }\r\n\r\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._strokeColor, this._stroke, this._align);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the FillTextCmd\r\n     * @zh 绘制文字命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return FillTextCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * @en Define the font size and font, e.g., \"20px Arial\".\r\n     * @zh 定义字号和字体，比如\"20px Arial\"。\r\n     */\r\n    get font(): string {\r\n        return this._font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._font = value;\r\n        if (!value)\r\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\r\n        this._fontObj = FontInfo.parse(value);\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * @en Define the text color, e.g., \"#ff0000\".\r\n     * @zh 定义文本颜色，比如\"#ff0000\"。\r\n     */\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if(!this._loosyBound){\r\n            let ctx = ILaya.Browser.context;\r\n            ctx.save();\r\n            ctx.font = this.font;\r\n            let size = ctx.measureText(this.text);\r\n            let w = size.width;\r\n            ctx.restore();\r\n            let x = this.x;\r\n            let y = this.y;\r\n\r\n            switch(this._align){\r\n                case Const.ENUM_TEXTALIGN_CENTER:\r\n                    x-=w/2;\r\n                break;\r\n                case Const.ENUM_TEXTALIGN_RIGHT:\r\n                    x-=w;\r\n                break;\r\n                default:\r\n                break;\r\n            }\r\n            //留一些余量\r\n            x-=4;\r\n            y-=this._fontObj._size;            \r\n            this._loosyBound = new Rectangle(x,y,w+8,this._fontObj._size*2);\r\n        }\r\n\r\n        return Rectangle._getBoundPointS(this._loosyBound.x, this._loosyBound.y, this._loosyBound.width, this._loosyBound.height, null)\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { GrahamScan } from \"../maths/GrahamScan\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Graphics } from \"./Graphics\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\"\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\n\r\nconst _tempMatrix: Matrix = new Matrix();\r\nconst _initMatrix: Matrix = new Matrix();\r\nconst _tempMatrixArrays: any[] = [];\r\n\r\n/**\r\n * @private\r\n * @en Graphic bounds data class\r\n * @zh 图形边界数据类\r\n */\r\nexport class GraphicsBounds {\r\n    /**@private */\r\n    private _temp: number[];\r\n    /**@private */\r\n    private _bounds: Rectangle;\r\n    /**@private */\r\n    private _rstBoundPoints: number[];\r\n    /**@private */\r\n    private _cacheBoundsType: boolean = false;\r\n    /**@internal */\r\n    _graphics: Graphics;\r\n    /**@internal */\r\n    _affectBySize: boolean;\r\n\r\n    /**\r\n     * @en Destroy\r\n     * @zh 销毁\r\n     */\r\n    destroy(): void {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp) this._temp.length = 0;\r\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\r\n        if (this._bounds) this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n\r\n    /**\r\n     * @en Create a new GraphicsBounds instance\r\n     * @zh 创建一个新的GraphicsBounds实例\r\n     */\r\n    static create(): GraphicsBounds {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n\r\n    /**\r\n     * @en Reset data\r\n     * @zh 重置数据\r\n     */\r\n    reset(): void {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n\r\n    /**\r\n     * @en Get the position and size information matrix (CPU intensive, frequent use may cause lag, use sparingly).\r\n     * @param realSize (Optional) Use the real size of the image. Default is false.\r\n     * @returns A Rectangle object composed of position and size.\r\n     * @zh 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize （可选）使用图片的真实大小，默认为false。\r\n     * @returns 位置与宽高组成的一个Rectangle对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Get the list of boundary points.\r\n     * @param realSize (Optional) Use the real size of the image. Default is false.\r\n     * @returns An array of boundary points.\r\n     * @zh 获取边界点列表。\r\n     * @param realSize （可选）使用图片的真实大小，默认为false。\r\n     * @returns 边界点的数组。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n\r\n    private _getCmdPoints(realSize: boolean = false): any[] {\r\n        let cmds = this._graphics.cmds;\r\n        let sp = this._graphics._sp;\r\n        this._affectBySize = false;\r\n\r\n        let rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (cmds.length == 0) return rst;\r\n\r\n        let matrixs: any[] = _tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        let tMatrix: Matrix = _initMatrix;\r\n        tMatrix.identity();\r\n        let tempMatrix: Matrix = _tempMatrix;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            let cmd = cmds[i];\r\n            if (cmd.percent)\r\n                this._affectBySize = true;\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                case SaveCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID: //restore\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawEllipseCmd.ID:\r\n                    addPointArrToRst(rst,(<DrawEllipseCmd>cmd).getBoundPoints(sp),tMatrix);\r\n                    break;\r\n                case DrawRoundRectCmd.ID:\r\n                    addPointArrToRst(rst,(<DrawRoundRectCmd>cmd).getBoundPoints(sp),tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(), tMatrix);\r\n                    break;\r\n                case Draw9GridTextureCmd.ID:\r\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case FillTextCmd.ID:\r\n                    addPointArrToRst(rst, (<FillTextCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                default:\r\n                    //没有相应功能的取sprite的\r\n                    addPointArrToRst(rst,Rectangle._getBoundPointS(sp.x, sp.y, sp.width, sp.height, null), tMatrix);\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        } else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n\r\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n}\r\n\r\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\r\n    let len = points.length;\r\n    for (let i = 0; i < len; i += 2) {\r\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n    }\r\n}\r\n\r\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\r\n    var _tempPoint: Point = Point.TEMP;\r\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n    matrix.transformPoint(_tempPoint);\r\n    rst.push(_tempPoint.x, _tempPoint.y);\r\n}","import { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Clip command\r\n * @zh 裁剪命令\r\n */\r\nexport class ClipRectCmd  implements IGraphicCMD{\r\n    /**\r\n     * @en Identifier for the ClipRectCmd\r\n     * @zh 裁剪命令的标识符\r\n     */\r\n    static ID: string = \"ClipRect\";\r\n    /**\r\n     * @en X-axis offset.\r\n     * @zh X 轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * @en Y-axis offset.\r\n     * @zh Y 轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * @en Width of the clip rectangle.\r\n     * @zh 裁剪矩形的宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * @en Height of the clip rectangle.\r\n     * @zh 裁剪矩形的高度。\r\n     */\r\n    height: number;\r\n\r\n    /**\r\n     * @private\r\n     * @en Creates or retrieves a ClipRectCmd instance from the object pool and initializes it with the specified parameters.\r\n     * @param x The x-coordinate of the top-left corner of the clip rectangle.\r\n     * @param y The y-coordinate of the top-left corner of the clip rectangle.\r\n     * @param width The width of the clip rectangle.\r\n     * @param height The height of the clip rectangle.\r\n     * @returns A ClipRectCmd instance initialized with the given parameters.\r\n     * @zh 从对象池创建或获取一个 ClipRectCmd 实例，并使用指定的参数进行初始化。\r\n     * @param x 裁剪矩形左上角的 x 坐标。\r\n     * @param y 裁剪矩形左上角的 y 坐标。\r\n     * @param width 裁剪矩形的宽度。\r\n     * @param height 裁剪矩形的高度。\r\n     * @returns 一个已用给定参数初始化的 ClipRectCmd 实例。\r\n     */\r\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool.\r\n     * @zh 将实例回收到对象池。\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ClipRectCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the clip rectangle command in the given context.\r\n     * @param context The rendering context.\r\n     * @param gx The global x coordinate.\r\n     * @param gy The global y coordinate.\r\n     * @zh 在给定的上下文中执行裁剪矩形命令。\r\n     * @param context 渲染上下文。\r\n     * @param gx 全局 x 坐标。\r\n     * @param gy 全局 y 坐标。\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the ClipRectCmd\r\n     * @zh 裁剪命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return ClipRectCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../renders/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw multiple textures based on coordinate sets\r\n * @zh 根据坐标集合绘制多个贴图\r\n */\r\nexport class DrawTexturesCmd {\r\n    /**\r\n     * @en Identifier for the DrawTexturesCmd\r\n     * @zh 根据坐标集合绘制多个贴图命令的标识符\r\n     */\r\n    static ID: string = \"DrawTextures\";\r\n\r\n    /**\r\n     * @en The texture to be drawn.\r\n     * @zh 要绘制的纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * @en Drawing times and coordinates.\r\n     * @zh 绘制次数和坐标。\r\n     */\r\n    pos: ArrayLike<number>;\r\n\r\n    /**\r\n     * @en Additional vertex colors.\r\n     * @zh 附加顶点色。\r\n     */\r\n    colors: number[];\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawTexturesCmd instance\r\n     * @param texture The texture to be drawn\r\n     * @param pos Drawing times and coordinates\r\n     * @param colors Additional vertex colors\r\n     * @returns DrawTexturesCmd instance\r\n     * @zh 创建一个根据坐标集合绘制多个贴图实例\r\n     * @param texture 要绘制的纹理\r\n     * @param pos 绘制次数和坐标\r\n     * @param colors 附加顶点色\r\n     * @returns DrawTexturesCmd实例\r\n     */\r\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\r\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.pos = pos;\r\n        cmd.colors = colors || [];\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool\r\n     * @zh 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        this.texture = null;\r\n        this.pos = null;\r\n        Pool.recover(\"DrawTexturesCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the drawing textures command\r\n     * @param context The rendering context\r\n     * @param gx Global X offset\r\n     * @param gy Global Y offset\r\n     * @zh 执行绘制多个纹理命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X偏移\r\n     * @param gy 全局Y偏移\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawTexturesCmd\r\n     * @zh 根据坐标集合绘制多个贴图命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawTexturesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ILaya } from \"./../../ILaya\";\r\n/**\r\n * @private\r\n * @en The Cache Manager is a centralized management class for object caching.\r\n * @zh 对象缓存统一管理类。\r\n */\r\nexport class CacheManger {\r\n    /**\r\n     * @en The maximum allowable execution time for a single cleanup check, in milliseconds.\r\n     * @zh 单次清理检测允许执行的时间，单位ms。\r\n     */\r\n    static loopTimeLimit: number = 2;\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheList: any[] = [];\r\n    /**\r\n     * @private\r\n     * 当前检测的索引\r\n     */\r\n    private static _index: number = 0;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Register a cache management function.\r\n     * @param disposeFunction The function used to dispose of the cache, with the signature fun(force:Boolean).\r\n     * @param getCacheListFunction The function used to retrieve the cache list, with the signature fun():Array.\r\n     * @zh 注册cache管理函数。\r\n     * @param disposeFunction 释放函数， fun(force:Boolean)。\r\n     * @param getCacheListFunction 获取cache列表函数， fun():Array。\r\n     */\r\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\r\n        var cache: any;\r\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\r\n        CacheManger._cacheList.push(cache);\r\n    }\r\n\r\n    /**\r\n     * @en Unregister a cache management function.\r\n     * @param disposeFunction Release function fun(force:Boolean)\r\n     * @param getCacheListFunction Get cache list function fun():Array\r\n     * @zh 移除cache管理函数。\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     */\r\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        var i: number, len: number;\r\n        len = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\r\n                CacheManger._cacheList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Force the disposal of all managed caches.\r\n     * @zh 强制清理所有管理器。\r\n     */\r\n    //TODO:coverage\r\n    static forceDispose(): void {\r\n        var i: number, len: number = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            CacheManger._cacheList[i].tryDispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Start the check loop with a specified interval time.\r\n     * @param waitTime The interval time between checks, in milliseconds.\r\n     * @zh 开始检测循环。\r\n     * @param waitTime 检测间隔时间，单位毫秒。\r\n     */\r\n    static beginCheck(waitTime: number = 15000): void {\r\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @en Stop the check loop.\r\n     * @zh 停止检测循环。\r\n     */\r\n    //TODO:coverage\r\n    static stopCheck(): void {\r\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 检测函数\r\n     */\r\n    private static _checkLoop(): void {\r\n        var cacheList: any[] = CacheManger._cacheList;\r\n        if (cacheList.length < 1) return;\r\n        var tTime: number = ILaya.Browser.now();\r\n        var count: number;\r\n        var len: number;\r\n        len = count = cacheList.length;\r\n        while (count > 0) {\r\n            CacheManger._index++;\r\n            CacheManger._index = CacheManger._index % len;\r\n            cacheList[CacheManger._index].tryDispose(false);\r\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\r\n            count--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { CacheManger } from \"./CacheManger\"\r\n\r\n/**\r\n * @private\r\n * @en VectorGraphManager class for managing vector graphics.\r\n * @zh 用于管理矢量图形的 VectorGraphManager 类。\r\n */\r\nexport class VectorGraphManager {\r\n    /**\r\n     * @en Singleton instance of VectorGraphManager.\r\n     * @zh VectorGraphManager 的单例实例。\r\n     */\r\n    static instance: VectorGraphManager;\r\n\r\n    /**\r\n     * @en Dictionary to track the usage of shapes.\r\n     * @zh 用于跟踪形状使用情况的字典。\r\n     */\r\n    useDic: any = {};\r\n\r\n    /**\r\n     * @en Dictionary to store shapes.\r\n     * @zh 用于存储形状的字典。\r\n     */\r\n    shapeDic: any = {};\r\n\r\n    /**\r\n     * @en Dictionary to store shape lines.\r\n     * @zh 用于存储形状线条的字典。\r\n     */\r\n    shapeLineDic: any = {};\r\n\r\n    private _id: number = 0;\r\n    private _checkKey: boolean = false;\r\n    private _freeIdArray: any[] = [];\r\n\r\n    constructor() {\r\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @en Get the singleton instance of VectorGraphManager.\r\n     * @returns The singleton instance of VectorGraphManager.\r\n     * @zh 获取 VectorGraphManager 的单例实例。\r\n     * @returns VectorGraphManager 的单例实例。\r\n     */\r\n    static getInstance(): VectorGraphManager {\r\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\r\n    }\r\n\r\n    /**\r\n     * @en Get an available ID.\r\n     * @returns An available ID.\r\n     * @zh 获取一个可用的 ID。\r\n     * @returns 一个可用的 ID。\r\n     */\r\n    getId(): number {\r\n        //if (_freeIdArray.length > 0) {\r\n        //return _freeIdArray.pop();\r\n        //}\r\n        return this._id++;\r\n    }\r\n\r\n    /**\r\n     * @en Add a shape to the list.\r\n     * @param id The ID of the shape.\r\n     * @param shape The shape object.\r\n     * @zh 将一个形状添加到列表中。\r\n     * @param id 形状的 ID。\r\n     * @param shape 形状对象。\r\n     */\r\n    addShape(id: number, shape: any): void {\r\n        this.shapeDic[id] = shape;\r\n        if (!this.useDic[id]) {\r\n            this.useDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Add a line shape to the list.\r\n     * @param id The ID of the line shape.\r\n     * @param Line The line shape object.\r\n     * @zh 将一个线形状添加到列表中。\r\n     * @param id 线形状的 ID。\r\n     * @param Line 线形状对象。\r\n     */\r\n    addLine(id: number, Line: any): void {\r\n        this.shapeLineDic[id] = Line;\r\n        if (!this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Check if an object is in use.\r\n     * @param id The ID of the object to check.\r\n     * @zh 检查一个对象是否正在使用中。\r\n     * @param id 要检查的对象的 ID。\r\n     */\r\n    getShape(id: number): void {\r\n        if (this._checkKey) {\r\n            if (this.useDic[id] != null) {\r\n                this.useDic[id] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Delete a shape object.\r\n     * @param id The ID of the shape to delete.\r\n     * @zh 删除一个形状对象。\r\n     * @param id 要删除的形状的 ID。\r\n     */\r\n    deleteShape(id: number): void {\r\n        if (this.shapeDic[id]) {\r\n            this.shapeDic[id] = null;\r\n            delete this.shapeDic[id];\r\n        }\r\n        if (this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = null;\r\n            delete this.shapeLineDic[id];\r\n        }\r\n        if (this.useDic[id] != null) {\r\n            delete this.useDic[id];\r\n        }\r\n        //_freeIdArray.push(id);\r\n    }\r\n\r\n    /**\r\n     * @en Get the cache list.\r\n     * @returns An array of cached objects.\r\n     * @zh 获取缓存列表。\r\n     * @returns 缓存对象的数组。\r\n     */\r\n    getCacheList(): any[] {\r\n        var str: any;\r\n        var list: any[] = [];\r\n        for (str in this.shapeDic) {\r\n            list.push(this.shapeDic[str]);\r\n        }\r\n        for (str in this.shapeLineDic) {\r\n            list.push(this.shapeLineDic[str]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * @en Start the disposal process, preparing for destruction.\r\n     * @zh 开始清理过程，准备销毁。\r\n     */\r\n    startDispose(key: boolean): void {\r\n        var str: any;\r\n        for (str in this.useDic) {\r\n            this.useDic[str] = false;\r\n        }\r\n        this._checkKey = true;\r\n    }\r\n\r\n    /**\r\n     * @en Confirm destruction.\r\n     * @zh 确认销毁。\r\n     */\r\n    endDispose(): void {\r\n        if (this._checkKey) {\r\n            var str: any;\r\n            for (str in this.useDic) {\r\n                if (!this.useDic[str]) {\r\n                    this.deleteShape(str);\r\n                }\r\n            }\r\n            this._checkKey = false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { IRenderGeometryElement } from \"../../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw geometry command\r\n * @zh 绘制几何体命令\r\n */\r\nexport class DrawGeoCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawGeoCmd\r\n     * @zh 绘制几何体命令的标识符\r\n     */\r\n    static ID: string = \"DrawGeoCmd\";\r\n\r\n    /**\r\n     * @en Geometry element to be rendered\r\n     * @zh 要渲染的几何体元素\r\n     */\r\n    geo: IRenderGeometryElement;\r\n\r\n    /**\r\n     * @en Material used for rendering\r\n     * @zh 用于渲染的材质\r\n     */\r\n    material: Material;\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawGeoCmd instance\r\n     * @param geo Geometry element to be rendered\r\n     * @param material Material used for rendering\r\n     * @returns A DrawGeoCmd instance\r\n     * @zh 创建一个绘制几何体命令实例\r\n     * @param geo 要渲染的几何体元素\r\n     * @param material 用于渲染的材质\r\n     * @returns DrawGeoCmd 实例\r\n     */\r\n    static create(geo: IRenderGeometryElement, material: Material): DrawGeoCmd {\r\n        var cmd: DrawGeoCmd = Pool.getItemByClass(\"DrawGeoCmd\" + material.id, DrawGeoCmd);\r\n        cmd.init(geo, material);\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Create a geometry element\r\n     * @param decl Vertex declaration\r\n     * @param vbArray Vertex buffer array\r\n     * @param vblen Vertex buffer length\r\n     * @param ibArray Index buffer array\r\n     * @param iblen Index buffer length\r\n     * @returns Created geometry element\r\n     * @zh 创建一个几何体元素\r\n     * @param decl 顶点声明\r\n     * @param vbArray 顶点缓冲数组\r\n     * @param vblen 顶点缓冲长度\r\n     * @param ibArray 索引缓冲数组\r\n     * @param iblen 索引缓冲长度\r\n     * @returns 创建的几何体元素\r\n     */\r\n    static creatGEO(decl: VertexDeclaration, vbArray: Float32Array, vblen: number, ibArray: Uint16Array, iblen: number) {\r\n        let geo = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElement);\r\n        let mesh = LayaGL.renderDeviceFactory.createBufferState();\r\n        geo.bufferState = mesh;\r\n        let vb = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\r\n        vb.vertexDeclaration = decl;\r\n        let ib = LayaGL.renderDeviceFactory.createIndexBuffer(BufferUsage.Dynamic);\r\n        mesh.applyState([vb], ib)\r\n        geo.indexFormat = IndexFormat.UInt16;\r\n        //let vb = mesh._vertexBuffers[0];\r\n        //let ib = mesh._bindedIndexBuffer;\r\n        vb.setDataLength(vblen);\r\n        vb.setData(vbArray.buffer, 0, 0, vblen)\r\n        ib._setIndexDataLength(iblen)\r\n        ib._setIndexData(new Uint16Array(ibArray.buffer, 0, iblen / 2), 0)\r\n        geo.clearRenderParams();\r\n        geo.setDrawElemenParams(iblen / 2, 0);\r\n        return geo;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize the DrawGeoCmd\r\n     * @param geo Geometry element to be rendered\r\n     * @param material Material used for rendering\r\n     * @zh 初始化绘制几何体命令\r\n     * @param geo 要渲染的几何体元素\r\n     * @param material 用于渲染的材质\r\n     */\r\n    init(geo: IRenderGeometryElement, material: Material): void {\r\n        this.material = material;\r\n        this.geo = geo;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawGeoCmd\" + this.material.id, this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw geometry command\r\n     * @param context The rendering context\r\n     * @param gx Global x-coordinate\r\n     * @param gy Global Y-coordinate\r\n     * @zh 执行绘制几何体命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X坐标\r\n     * @param gy 全局Y坐标\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawGeo(this.geo, this.material, gx, gy);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawGeoCmd\r\n     * @zh 绘制几何体命令的ID\r\n     */\r\n    get cmdID(): string {\r\n        return DrawGeoCmd.ID;\r\n    }\r\n}\r\n","import { IRenderGeometryElement } from \"../../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { Context, IGraphicCMD } from \"../../renders/Context\"\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @en Draw multiple geometries command\r\n * @zh 绘制多个几何体命令\r\n */\r\nexport class DrawGeosCmd implements IGraphicCMD {\r\n    /**\r\n     * @en Identifier for the DrawGeosCmd\r\n     * @zh 绘制多个几何体命令的标识符\r\n     */\r\n    static ID: string = \"DrawGeoCmd\";\r\n    /**\r\n     * @en Geometry element to be rendered\r\n     * @zh 要渲染的几何体元素\r\n     */\r\n    geo: IRenderGeometryElement;\r\n    /**\r\n     * @en Array of [Material, startIndex, count] tuples for each geometry\r\n     * @zh 每个几何体的 [材质, 起始索引, 数量] 元组数组\r\n     */\r\n    elements: [Material, number, number][];\r\n\r\n    /**\r\n     * @private\r\n     * @en Create a DrawGeosCmd instance\r\n     * @param geo Geometry element to be rendered\r\n     * @param elements Array of [Material, startIndex, count] tuples for each geometry\r\n     * @returns A DrawGeosCmd instance\r\n     * @zh 创建一个 DrawGeosCmd 实例\r\n     * @param geo 要渲染的几何体元素\r\n     * @param elements 每个几何体的 [材质, 起始索引, 数量] 元组数组\r\n     * @returns DrawGeosCmd 实例\r\n     */\r\n    static create(geo: IRenderGeometryElement, elements: [Material, number, number][]): DrawGeosCmd {\r\n        var cmd: DrawGeosCmd = Pool.getItemByClass(\"DrawGeosCmd\", DrawGeosCmd);\r\n        cmd.init(geo, elements);\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Initialize the DrawGeosCmd\r\n     * @param geo Geometry element to be rendered\r\n     * @param elements Array of [Material, startIndex, count] tuples for each geometry\r\n     * @zh 初始化绘制多个几何体\r\n     * @param geo 要渲染的几何体元素\r\n     * @param elements 每个几何体的 [材质, 起始索引, 数量] 元组数组\r\n     */\r\n    init(geo: IRenderGeometryElement, elements: [Material, number, number][]): void {\r\n        this.elements = elements;\r\n        this.geo = geo;\r\n    }\r\n\r\n    /**\r\n     * @en Recycle the instance to the object pool\r\n     * @zh 将实例回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawGeosCmd\", this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Execute the draw geometries command\r\n     * @param context The rendering context\r\n     * @param gx Global x-coordinate\r\n     * @param gy Global Y-coordinate\r\n     * @zh 执行绘制多个几何体命令\r\n     * @param context 渲染上下文\r\n     * @param gx 全局X坐标\r\n     * @param gy 全局Y坐标\r\n     */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawGeos(this.geo, this.elements, gx, gy);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en The identifier for the DrawGeosCmd\r\n     * @zh 绘制多个几何体命令的标识符\r\n     */\r\n    get cmdID(): string {\r\n        return DrawGeosCmd.ID;\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { GraphicsBounds } from \"./GraphicsBounds\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context, IGraphicCMD } from \"../renders/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport type { Material } from \"../resource/Material\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\";\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { ShaderData, ShaderDataType } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { DrawGeoCmd } from \"./cmd/DrawGeoCmd\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { DrawGeosCmd } from \"./cmd/DrawGeosCmd\";\r\n\r\n/**\r\n * @en The Graphics class is used to create drawing display objects. Graphics can draw multiple bitmaps or vector graphics simultaneously, and can also combine instructions such as save, restore, transform, scale, rotate, translate, alpha, etc. to change the drawing effect.\r\n * Graphics is stored as a command stream and can be accessed through the cmds property. Graphics is a lighter object than Sprite, and proper use can improve application performance (for example, changing a large number of node drawings to a collection of Graphics commands of one node can reduce the consumption of creating a large number of nodes).\r\n * @zh Graphics 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\r\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\r\n * @see laya.display.Sprite#graphics\r\n */\r\nexport class Graphics {\r\n\r\n    /**\r\n     * @en Add global Uniform Data Map\r\n     * @param propertyID The ID of the property\r\n     * @param propertyKey The key of the property\r\n     * @param uniformtype The type of the uniform\r\n     * @zh 添加全局Uniform数据映射\r\n     * @param propertyID 属性ID\r\n     * @param propertyKey 属性键\r\n     * @param uniformtype Uniform类型\r\n     */\r\n    static add2DGlobalUniformData(propertyID: number, propertyKey: string, uniformtype: ShaderDataType) {\r\n        let sceneUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Sprite2DGlobal\");\r\n        sceneUniformMap.addShaderUniform(propertyID, propertyKey, uniformtype);\r\n    }\r\n\r\n    /**\r\n     * @en Global shaderData\r\n     * @zh 全局着色器数据\r\n     */\r\n    static get globalShaderData() : ShaderData {\r\n        return Value2D.globalShaderData;\r\n    }\r\n\r\n    /**@internal */\r\n    _sp: Sprite | null = null;\r\n    /**@internal */\r\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\r\n    /**@private */\r\n    private _cmds: IGraphicCMD[] = [];\r\n    /**@private */\r\n    protected _vectorgraphArray: any[] | null = null;\r\n    /**@private */\r\n    private _graphicBounds: GraphicsBounds | null = null;\r\n\r\n    private _material: Material;\r\n\r\n    constructor() {\r\n        this._createData();\r\n    }\r\n\r\n    /**@internal */\r\n    _createData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _clearData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _destroyData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Destroy this object.\r\n     * @zh 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.clear(true);\r\n        if (this._graphicBounds) this._graphicBounds.destroy();\r\n        this._graphicBounds = null;\r\n        this._vectorgraphArray = null;\r\n        if (this._sp) {\r\n            this._sp._renderType = 0;\r\n            this._sp = null;\r\n        }\r\n        this._destroyData();\r\n    }\r\n\r\n    /**\r\n     * @en Clear drawing commands.\r\n     * @param recoverCmds Whether to recycle the drawing instruction array. If set to true, the instruction array will be recycled to save memory. It is recommended to set it to true for recycling, but if you manually reference the array, recycling is not recommended.\r\n     * @zh 清空绘制命令。\r\n     * @param recoverCmds 是否回收绘图指令数组。设置为true，则对指令数组进行回收以节省内存开销。建议设置为true进行回收，但如果手动引用了数组，不建议回收。\r\n     */\r\n    clear(recoverCmds: boolean = true): void {\r\n        //TODO:内存回收all\r\n        if (recoverCmds) {\r\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\r\n                this._cmds[i].recover();\r\n            }\r\n        }\r\n\r\n        this._cmds.length = 0;\r\n        this._render = this._renderEmpty;\r\n        this._clearData();\r\n        if (this._sp) {\r\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this._repaint();\r\n        if (this._vectorgraphArray) {\r\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\r\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\r\n            }\r\n            this._vectorgraphArray.length = 0;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _clearBoundsCache(onSizeChanged?: boolean): void {\r\n        if (this._graphicBounds) {\r\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\r\n                this._graphicBounds.reset();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _initGraphicBounds(): void {\r\n        if (!this._graphicBounds) {\r\n            this._graphicBounds = GraphicsBounds.create();\r\n            this._graphicBounds._graphics = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Redraw this object.\r\n     * @zh 重绘此对象。\r\n     */\r\n    _repaint(): void {\r\n        this._clearBoundsCache();\r\n        this._sp && this._sp.repaint();\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isOnlyOne(): boolean {\r\n        return this._cmds.length === 1;\r\n    }\r\n\r\n    /**\r\n     * @en Command flow. All drawing commands are stored.\r\n     * @zh 命令流。存储了所有绘制命令。\r\n     */\r\n    get cmds() {\r\n        return this._cmds;\r\n    }\r\n\r\n    set cmds(value) {\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n\r\n        this._cmds = value;\r\n\r\n        let len = value.length;\r\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n        this._repaint();\r\n    }\r\n\r\n    /**\r\n     * @en Save to the command stream.\r\n     * @zh 添加到命令流。\r\n     */\r\n    addCmd(cmd: any): any {\r\n        if (cmd == null) {\r\n            console.warn(\"null cmd\");\r\n            return;\r\n        }\r\n\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n        this._cmds.push(cmd);\r\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\r\n        this._repaint();\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * @en Remove a specific command from the command list.\r\n     * @param cmd The command to be removed.\r\n     * @zh 从命令列表中移除特定的命令。\r\n     * @param cmd 要移除的命令。\r\n     */\r\n    removeCmd(cmd: any) {\r\n        let i = this.cmds.indexOf(cmd);\r\n        if (i != -1) {\r\n            this._cmds.splice(i, 1);\r\n\r\n            let len = this._cmds.length;\r\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n            this._repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the position and size information matrix (CPU-intensive, frequent use may cause lag, use sparingly).\r\n     * @param realSize (Optional) Use the real size of the image, default is false.\r\n     * @returns A Rectangle object composed of position and size.\r\n     * @zh 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize （可选）使用图片的真实大小，默认为false。\r\n     * @returns 位置与宽高组成的一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Get the list of endpoints.\r\n     * @param realSize (Optional) Use the real size of the image, default is false.\r\n     * @returns An array of endpoint coordinates.\r\n     * @zh 获取端点列表。\r\n     * @param realSize （可选）使用图片的真实大小，默认为false。\r\n     * @returns 端点坐标的数组。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBoundPoints(realSize);\r\n    }\r\n\r\n    /**\r\n     * @en The material of the graphics object.\r\n     * @zh 图形对象的材质。\r\n     */\r\n    get material() {\r\n        return this._material;\r\n    }\r\n\r\n    set material(value: Material) {\r\n        if (this._material == value)\r\n            return;\r\n        this._material && this._material._removeReference();\r\n        this._material = value;\r\n        if (value != null)\r\n            value._addReference();\r\n    }\r\n\r\n    /**\r\n     * @en Draw a single image\r\n     * @param texture The texture to draw\r\n     * @param x (Optional) X-axis offset. Default is 0.\r\n     * @param y (Optional) Y-axis offset. Default is 0.\r\n     * @param width (Optional) Width of the image. Default is null.\r\n     * @param height (Optional) Height of the image. Default is null.\r\n     * @param color (Optional) Color of the image. Default is null.\r\n     * @zh 绘制单独图片\r\n     * @param texture 要绘制的纹理\r\n     * @param x （可选）X轴偏移量。默认为0。\r\n     * @param y （可选）Y轴偏移量。默认为0。\r\n     * @param width （可选）图片宽度。默认为null。\r\n     * @param height （可选）图片高度。默认为null。\r\n     * @param color （可选）图片颜色。默认为null。\r\n     */\r\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\r\n        if (!texture) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a texture. More powerful than drawImage but less performant.\r\n     * @param texture The texture to draw\r\n     * @param x (Optional) X-axis offset. Default is 0.\r\n     * @param y (Optional) Y-axis offset. Default is 0.\r\n     * @param width (Optional) Width of the texture. Default is null.\r\n     * @param height (Optional) Height of the texture. Default is null.\r\n     * @param matrix (Optional) Matrix information. Default is null.\r\n     * @param alpha (Optional) Transparency. Default is 1.\r\n     * @param color (Optional) Color filter. Default is null.\r\n     * @param blendMode (Optional) Blend mode. Default is null.\r\n     * @param uv (Optional) UV coordinates. Default is undefined.\r\n     * @zh 绘制纹理，相比drawImage功能更强大，性能会差一些\r\n     * @param texture 要绘制的纹理\r\n     * @param x （可选）X轴偏移量。默认为0。\r\n     * @param y （可选）Y轴偏移量。默认为0。\r\n     * @param width （可选）纹理宽度。默认为null。\r\n     * @param height （可选）纹理高度。默认为null。\r\n     * @param matrix （可选）矩阵信息。默认为null。\r\n     * @param alpha （可选）透明度。默认为1。\r\n     * @param color （可选）颜色滤镜。默认为null。\r\n     * @param blendMode （可选）混合模式。默认为null。\r\n     * @param uv （可选）UV坐标。默认为undefined。\r\n     */\r\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\r\n        if (!texture || alpha < 0.01) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\r\n    }\r\n\r\n    /**\r\n     * @en Batch draw the same texture multiple times.\r\n     * @param texture The texture to draw\r\n     * @param pos Array of positions for each draw\r\n     * @param colors (Optional) Array of colors for each draw\r\n     * @zh 批量绘制同样纹理\r\n     * @param texture 要绘制的纹理\r\n     * @param pos 绘制次数和坐标数组\r\n     * @param colors （可选）图片颜色数组\r\n     */\r\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\r\n        if (!texture) return null;\r\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\r\n    }\r\n    /**\r\n     * @en Draw geometry\r\n     * @param geo Render geometry element\r\n     * @param material Material to use for rendering\r\n     * @zh 绘制几何体\r\n     * @param geo 渲染几何元素\r\n     * @param material 用于渲染的材质\r\n     */\r\n    drawGeo(geo: IRenderGeometryElement, material: Material) {\r\n        return this.addCmd(DrawGeoCmd.create(geo, material));\r\n    }\r\n\r\n    /**\r\n     * @en Draw multiple geometries\r\n     * @param geo Render geometry element\r\n     * @param elements Array of [Material, startIndex, count] tuples\r\n     * @zh 绘制多个几何体\r\n     * @param geo 渲染几何元素\r\n     * @param elements [材质, 起始索引, 数量] 元组数组\r\n     */\r\n    drawGeos(geo: IRenderGeometryElement, elements: [Material, number, number][]) {\r\n        return this.addCmd(DrawGeosCmd.create(geo, elements));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a group of triangles\r\n     * @param texture The texture to use\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param vertices Vertex array\r\n     * @param uvs UV data. Note that the UV coordinates are used directly. If the texture is from an atlas, these UVs are also from the atlas and don't need conversion.\r\n     * @param indices Vertex indices\r\n     * @param matrix (Optional) Scale matrix. Default is null.\r\n     * @param alpha (Optional) Alpha value. Default is 1.\r\n     * @param color (Optional) Color transformation. Default is null.\r\n     * @param blendMode (Optional) Blend mode. Default is null.\r\n     * @zh 绘制一组三角形\r\n     * @param texture 要使用的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param vertices 顶点数组\r\n     * @param uvs UV数据。注意这里的uv是直接使用的，如果texture是图集中的资源，这里的uv也是图集中的，即不需要转换直接用。\r\n     * @param indices 顶点索引\r\n     * @param matrix （可选）缩放矩阵。默认为null。\r\n     * @param alpha （可选）alpha值。默认为1。\r\n     * @param color （可选）颜色变换。默认为null。\r\n     * @param blendMode （可选）混合模式。默认为null。\r\n     */\r\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\r\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\r\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\r\n    }\r\n\r\n    /**\r\n     * @en Fill with texture\r\n     * @param texture The texture to use for filling\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width (Optional) Width. Default is 0.\r\n     * @param height (Optional) Height. Default is 0.\r\n     * @param type (Optional) Fill type: 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'. Default is 'repeat'.\r\n     * @param offset (Optional) Texture offset. Default is null.\r\n     * @param color (Optional) Color. Default is null.\r\n     * @zh 用纹理填充\r\n     * @param texture 用于填充的纹理\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width （可选）宽度。默认为0。\r\n     * @param height （可选）高度。默认为0。\r\n     * @param type （可选）填充类型：'repeat'、'repeat-x'、'repeat-y'或'no-repeat'。默认为'repeat'。\r\n     * @param offset （可选）贴图纹理偏移。默认为null。\r\n     * @param color （可选）颜色。默认为null。\r\n     */\r\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\r\n        if (texture && texture.bitmap)\r\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @en Set the clipping area. Coordinates outside the clipping area will not be displayed.\r\n     * @param x X-axis offset\r\n     * @param y Y-axis offset\r\n     * @param width Width of the clipping area\r\n     * @param height Height of the clipping area\r\n     * @zh 设置剪裁区域，超出剪裁区域的坐标不显示。\r\n     * @param x X轴偏移量\r\n     * @param y Y轴偏移量\r\n     * @param width 剪裁区域的宽度\r\n     * @param height 剪裁区域的高度\r\n     */\r\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * @en Draw text on the canvas\r\n     * @param text The text to output on the canvas\r\n     * @param x The x-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param y The y-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param font Defines the font size and family, e.g., \"20px Arial\"\r\n     * @param color Defines the text color, e.g., \"#ff0000\"\r\n     * @param textAlign Text alignment. Possible values: \"left\", \"center\", \"right\"\r\n     * @zh 在画布上绘制文本\r\n     * @param text 在画布上输出的文本\r\n     * @param x 开始绘制文本的x坐标位置（相对于画布）\r\n     * @param y 开始绘制文本的y坐标位置（相对于画布）\r\n     * @param font 定义字号和字体，例如\"20px Arial\"\r\n     * @param color 定义文本颜色，例如\"#ff0000\"\r\n     * @param textAlign 文本对齐方式。可选值：\"left\"、\"center\"、\"right\"\r\n     */\r\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\r\n    }\r\n\r\n    /**\r\n     * @en Draw filled and stroked text on the canvas.\r\n     * @param text The text to output on the canvas\r\n     * @param x The x-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param y The y-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param font Defines the font and size, e.g., \"20px Arial\"\r\n     * @param fillColor Defines the text color, e.g., \"#ff0000\"\r\n     * @param textAlign Text alignment. Possible values: \"left\", \"center\", \"right\"\r\n     * @param lineWidth Width of the stroke line\r\n     * @param borderColor Defines the color of the text stroke\r\n     * @zh 在画布上绘制\"被填充且镶边的\"文本。\r\n     * @param text 在画布上输出的文本\r\n     * @param x 开始绘制文本的x坐标位置（相对于画布）\r\n     * @param y 开始绘制文本的y坐标位置（相对于画布）\r\n     * @param font 定义字体和字号，例如\"20px Arial\"\r\n     * @param fillColor 定义文本颜色，例如\"#ff0000\"\r\n     * @param textAlign 文本对齐方式。可选值：\"left\"、\"center\"、\"right\"\r\n     * @param lineWidth 镶边线条宽度\r\n     * @param borderColor 定义镶边文本颜色\r\n     */\r\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\r\n    }\r\n\r\n    /**\r\n     * @en Draw text on the canvas (without fill). The default color of the text is black.\r\n     * @param text The text to output on the canvas\r\n     * @param x The x-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param y The y-coordinate where to start drawing the text (relative to the canvas)\r\n     * @param font Defines the font and size, e.g., \"20px Arial\"\r\n     * @param color Defines the text color, e.g., \"#ff0000\"\r\n     * @param lineWidth Width of the line\r\n     * @param textAlign Text alignment. Possible values: \"left\", \"center\", \"right\"\r\n     * @zh 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\r\n     * @param text 在画布上输出的文本\r\n     * @param x 开始绘制文本的x坐标位置（相对于画布）\r\n     * @param y 开始绘制文本的y坐标位置（相对于画布）\r\n     * @param font 定义字体和字号，例如\"20px Arial\"\r\n     * @param color 定义文本颜色，例如\"#ff0000\"\r\n     * @param lineWidth 线条宽度\r\n     * @param textAlign 文本对齐方式。可选值：\"left\"、\"center\"、\"right\"\r\n     */\r\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\r\n    }\r\n\r\n    /**\r\n     * @en Set the transparency.\r\n     * @param alpha The transparency value\r\n     * @zh 设置透明度。\r\n     * @param alpha 透明度值\r\n     */\r\n    alpha(alpha: number): AlphaCmd {\r\n        return this.addCmd(AlphaCmd.create(alpha));\r\n    }\r\n\r\n    /**\r\n     * @en Replace the current transformation matrix for drawing.\r\n     * @param matrix The matrix\r\n     * @param pivotX (Optional) X-coordinate of the pivot point. Default is 0.\r\n     * @param pivotY (Optional) Y-coordinate of the pivot point. Default is 0.\r\n     * @zh 替换绘图的当前转换矩阵。\r\n     * @param matrix 矩阵\r\n     * @param pivotX （可选）水平方向轴心点坐标。默认为0。\r\n     * @param pivotY （可选）垂直方向轴心点坐标。默认为0。\r\n     */\r\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\r\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * @en Rotate the current drawing. (It's recommended to use transform for better performance)\r\n     * @param angle The rotation angle in radians\r\n     * @param pivotX (Optional) X-coordinate of the pivot point. Default is 0.\r\n     * @param pivotY (Optional) Y-coordinate of the pivot point. Default is 0.\r\n     * @zh 旋转当前绘图。(推荐使用transform，性能更高)\r\n     * @param angle 旋转角度，以弧度计\r\n     * @param pivotX （可选）水平方向轴心点坐标。默认为0。\r\n     * @param pivotY （可选）垂直方向轴心点坐标。默认为0。\r\n     */\r\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\r\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * @en Scale the current drawing to a larger or smaller size. (It's recommended to use transform for better performance)\r\n     * @param scaleX Horizontal scaling value\r\n     * @param scaleY Vertical scaling value\r\n     * @param pivotX (Optional) X-coordinate of the pivot point. Default is 0.\r\n     * @param pivotY (Optional) Y-coordinate of the pivot point. Default is 0.\r\n     * @zh 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\r\n     * @param scaleX 水平方向缩放值\r\n     * @param scaleY 垂直方向缩放值\r\n     * @param pivotX （可选）水平方向轴心点坐标。默认为0。\r\n     * @param pivotY （可选）垂直方向轴心点坐标。默认为0。\r\n     */\r\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\r\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * @en Remap the (0,0) position on the canvas.\r\n     * @param tx The value to add to the horizontal coordinate (x)\r\n     * @param ty The value to add to the vertical coordinate (y)\r\n     * @zh 重新映射画布上的 (0,0) 位置。\r\n     * @param tx 添加到水平坐标（x）上的值\r\n     * @param ty 添加到垂直坐标（y）上的值\r\n     */\r\n    translate(tx: number, ty: number): TranslateCmd {\r\n        return this.addCmd(TranslateCmd.create(tx, ty));\r\n    }\r\n\r\n    /**\r\n     * @en Save the current state of the environment.\r\n     * @zh 保存当前环境的状态。\r\n     */\r\n    save(): SaveCmd {\r\n        return this.addCmd(SaveCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @en Return the previously saved path state and properties.\r\n     * @zh 返回之前保存过的路径状态和属性。\r\n     */\r\n    restore(): RestoreCmd {\r\n        return this.addCmd(RestoreCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Replace text color.\r\n     * @param color The new color\r\n     * @zh 替换文本颜色。\r\n     * @param color 新的颜色\r\n     */\r\n    replaceTextColor(color: string): void {\r\n        this._repaint();\r\n        let cmds = this._cmds;\r\n        for (let i = cmds.length - 1; i > -1; i--) {\r\n            let cmd = cmds[i];\r\n            var cmdID: string = cmd.cmdID;\r\n            switch (cmdID) {\r\n                case FillTextCmd.ID:\r\n                    (cmd as FillTextCmd).color = color;\r\n                    break;\r\n                case DrawImageCmd.ID: //bitmap font\r\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Load and display an image.\r\n     * @param url The URL of the image\r\n     * @param x (Optional) The x-coordinate where the image will be displayed. Default is 0.\r\n     * @param y (Optional) The y-coordinate where the image will be displayed. Default is 0.\r\n     * @param width (Optional) The width to display the image. Set to 0 to use the default image width. Default is null.\r\n     * @param height (Optional) The height to display the image. Set to 0 to use the default image height. Default is null.\r\n     * @param complete (Optional) The callback function to be called when the image is loaded\r\n     * @zh 加载并显示一个图片。\r\n     * @param url 图片地址\r\n     * @param x （可选）显示图片的x位置。默认为0。\r\n     * @param y （可选）显示图片的y位置。默认为0。\r\n     * @param width （可选）显示图片的宽度，设置为0表示使用图片默认宽度。默认为null。\r\n     * @param height （可选）显示图片的高度，设置为0表示使用图片默认高度。默认为null。\r\n     * @param complete （可选）加载完成回调\r\n     */\r\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\r\n        let tex: Texture = ILaya.loader.getRes(url);\r\n        if (tex) {\r\n            this.drawImage(tex, x, y, width, height);\r\n            complete && complete.call(this._sp);\r\n        }\r\n        else {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.drawImage(tex, x, y, width, height);\r\n                complete && complete.call(this._sp);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context._material = this._material;\r\n        var cmds = this._cmds!;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            cmds[i].run(context, x, y);\r\n        }\r\n        context._material = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context._material = this._material;\r\n        this._cmds[0].run(context, x, y);\r\n        context._material = null;\r\n    }\r\n\r\n    /**\r\n     * @en Draw a line.\r\n     * @param fromX X-axis starting position\r\n     * @param fromY Y-axis starting position\r\n     * @param toX X-axis ending position\r\n     * @param toY Y-axis ending position\r\n     * @param lineColor Color of the line\r\n     * @param lineWidth (Optional) Width of the line. Default is 1.\r\n     * @zh 绘制一条线。\r\n     * @param fromX X轴开始位置\r\n     * @param fromY Y轴开始位置\r\n     * @param toX X轴结束位置\r\n     * @param toY Y轴结束位置\r\n     * @param lineColor 线条颜色\r\n     * @param lineWidth （可选）线条宽度。默认为1。\r\n     */\r\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\r\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a series of line segments.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param points Collection of points for line segments. Format: [x1,y1,x2,y2,x3,y3...]\r\n     * @param lineColor Color of the line segments, or gradient object for filling the drawing\r\n     * @param lineWidth (Optional) Width of the line segments. Default is 1.\r\n     * @zh 绘制一系列线段。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param points 线段的点集合。格式：[x1,y1,x2,y2,x3,y3...]\r\n     * @param lineColor 线段颜色，或者填充绘图的渐变对象\r\n     * @param lineWidth （可选）线段宽度。默认为1。\r\n     */\r\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\r\n        if (!points || points.length < 4) return null;\r\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a series of curves.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param points Collection of points for curves. Format: [controlX, controlY, anchorX, anchorY...]\r\n     * @param lineColor Color of the curves, or gradient object for filling the drawing\r\n     * @param lineWidth (Optional) Width of the curves. Default is 1.\r\n     * @zh 绘制一系列曲线。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param points 曲线的点集合，格式：[controlX, controlY, anchorX, anchorY...]\r\n     * @param lineColor 曲线颜色，或者填充绘图的渐变对象\r\n     * @param lineWidth （可选）曲线宽度。默认为1。\r\n     */\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\r\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a rectangle.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param width Width of the rectangle\r\n     * @param height Height of the rectangle\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing. Default is null.\r\n     * @param lineWidth (Optional) Border width. Default is 1.\r\n     * @param percent Whether the position and size are percentage values\r\n     * @returns DrawRectCmd object\r\n     * @zh 绘制矩形。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param width 矩形宽度\r\n     * @param height 矩形高度\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。默认为null。\r\n     * @param lineWidth （可选）边框宽度。默认为1。\r\n     * @param percent 位置和大小是否是百分比值\r\n     * @returns DrawRectCmd对象\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\r\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a rounded rectangle.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param width Width of the rounded rectangle\r\n     * @param height Height of the rounded rectangle\r\n     * @param lt Left-top corner radius\r\n     * @param rt Right-top corner radius\r\n     * @param lb Left-bottom corner radius\r\n     * @param rb Right-bottom corner radius\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing. Default is null.\r\n     * @param lineWidth (Optional) Border width. Default is 1.\r\n     * @param percent (Optional) Whether the position and size are percentage values\r\n     * @zh 绘制圆角矩形。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param width 圆角矩形宽度\r\n     * @param height 圆角矩形高度\r\n     * @param lt 左上圆角\r\n     * @param rt 右上圆角\r\n     * @param lb 左下圆角\r\n     * @param rb 右下圆角\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。默认为null。\r\n     * @param lineWidth （可选）边框宽度。默认为1。\r\n     * @param percent （可选）位置和大小是否是百分比值\r\n     */\r\n    drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean) {\r\n        return this.addCmd(DrawRoundRectCmd.create(x, y, width, height, lt, rt, lb, rb, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a circle.\r\n     * @param x X-axis position of the circle center\r\n     * @param y Y-axis position of the circle center\r\n     * @param radius Radius of the circle\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing. Default is null.\r\n     * @param lineWidth (Optional) Border width. Default is 1.\r\n     * @zh 绘制圆形。\r\n     * @param x 圆点X轴位置\r\n     * @param y 圆点Y轴位置\r\n     * @param radius 半径\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。默认为null。\r\n     * @param lineWidth （可选）边框宽度。默认为1。\r\n     */\r\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\r\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw an ellipse.\r\n     * @param x X-axis position of the ellipse center\r\n     * @param y Y-axis position of the ellipse center\r\n     * @param width Horizontal radius\r\n     * @param height Vertical radius\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing\r\n     * @param lineWidth (Optional) Border width\r\n     * @param percent (Optional) Whether the position and size are percentage values\r\n     * @zh 绘制椭圆形。\r\n     * @param x 圆点X轴位置\r\n     * @param y 圆点Y轴位置\r\n     * @param width 横向半径\r\n     * @param height 纵向半径\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象\r\n     * @param lineWidth （可选）边框宽度\r\n     * @param percent （可选）位置和大小是否是百分比值\r\n     */\r\n    drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        return this.addCmd(DrawEllipseCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a pie.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param radius Radius of the pie\r\n     * @param startAngle Start angle\r\n     * @param endAngle End angle\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing. Default is null.\r\n     * @param lineWidth (Optional) Border width. Default is 1.\r\n     * @zh 绘制扇形。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param radius 扇形半径\r\n     * @param startAngle 开始角度\r\n     * @param endAngle 结束角度\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。默认为null。\r\n     * @param lineWidth （可选）边框宽度。默认为1。\r\n     */\r\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\r\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a polygon.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param points Collection of points for the polygon\r\n     * @param fillColor Fill color, or gradient object for filling the drawing\r\n     * @param lineColor (Optional) Border color, or gradient object for filling the drawing. Default is null.\r\n     * @param lineWidth (Optional) Border width. Default is 1.\r\n     * @zh 绘制多边形。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param points 多边形的点集合\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。默认为null。\r\n     * @param lineWidth （可选）边框宽度。默认为1。\r\n     */\r\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\r\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * @en Draw a path.\r\n     * @param x X-axis position to start drawing\r\n     * @param y Y-axis position to start drawing\r\n     * @param paths Collection of paths. Paths support the following format: [[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]\r\n     * @param brush (Optional) Brush definition, supports the following settings: {fillStyle:\"#FF0000\"}\r\n     * @param pen (Optional) Pen definition, supports the following settings: {strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}\r\n     * @zh 绘制路径。\r\n     * @param x 开始绘制的X轴位置\r\n     * @param y 开始绘制的Y轴位置\r\n     * @param paths 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]\r\n     * @param brush （可选）刷子定义，支持以下设置：{fillStyle:\"#FF0000\"}\r\n     * @param pen （可选）画笔定义，支持以下设置：{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}\r\n     */\r\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\r\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\r\n    }\r\n\r\n    /**\r\n     * @en Draw an image with nine-grid\r\n     * @param texture The texture to draw\r\n     * @param x (Optional) X-axis position. Default is 0.\r\n     * @param y (Optional) Y-axis position. Default is 0.\r\n     * @param width (Optional) Width of the image. Default is 0.\r\n     * @param height (Optional) Height of the image. Default is 0.\r\n     * @param sizeGrid Nine-grid information\r\n     * @param color (Optional) Color to tint the image\r\n     * @zh 绘制带九宫格的图片\r\n     * @param texture 要绘制的纹理\r\n     * @param x （可选）X轴位置。默认为0。\r\n     * @param y （可选）Y轴位置。默认为0。\r\n     * @param width （可选）图片宽度。默认为0。\r\n     * @param height （可选）图片高度。默认为0。\r\n     * @param sizeGrid 九宫格信息\r\n     * @param color （可选）图片的着色颜色\r\n     */\r\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\r\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\r\n    }\r\n}\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Component } from \"../components/Component\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Stat } from \"../utils/Stat\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\n\r\nconst ARRAY_EMPTY: any[] = [];\r\n\r\n/**\r\n * @en The `Node` class is the base class for all objects that can be placed in the display list.\r\n * The display list manages all objects displayed in the runtime of Laya. \r\n * Use the Node class to arrange the display list. A Node object can have child display objects.\r\n * @zh `Node` 类是可放在显示列表中的所有对象的基类。\r\n * 该显示列表管理 LayaAir 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\r\n */\r\nexport class Node extends EventDispatcher {\r\n    /**\r\n     * @internal\r\n     * @en Event constant: Set active scene\r\n     * @zh 事件常量：设置活动场景\r\n     */\r\n    static EVENT_SET_ACTIVESCENE: string = \"ActiveScene\";\r\n    /**@internal */\r\n    static EVENT_SET_IN_ACTIVESCENE: string = \"InActiveScene\";\r\n    /**@private */\r\n    private _bits: number = 0;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Child object collection, please do not modify this object directly.\r\n     * @zh 子对象集合，请不要直接修改此对象。\r\n     */\r\n    _children: Node[] = ARRAY_EMPTY;\r\n    /**\r\n     * @internal\r\n     * @en Parent node object.\r\n     * @zh 父节点对象。\r\n     */\r\n    _parent: Node = null;\r\n    /**\r\n     * @internal\r\n     * @en Whether it has been destroyed.\r\n     * @zh 是否已经被销毁。\r\n     */\r\n    _destroyed: boolean = false;\r\n    /**@internal */\r\n    _conchData: any;\r\n    /**@internal */\r\n    _componentDriver: ComponentDriver;\r\n    /**\r\n     * @internal\r\n     * @en Whether it is a 3D node, i.e., Scene3D, Sprite3D and their derived classes.\r\n     * @zh 是否是3D节点，即Scene3D、Sprite3D及其衍生类。\r\n     */\r\n    _is3D: boolean;\r\n    /**\r\n     * @internal\r\n     * @en the URL of the resource.\r\n     * @zh 资源的URL。\r\n     */\r\n    _url: string;\r\n\r\n    /**\r\n     * @en Extra data of the node.\r\n     * @zh 节点的额外数据。IDE内部使用。\r\n     */\r\n    _extra: INodeExtra;\r\n\r\n    /**\r\n     * @en Node name.\r\n     * @zh 节点名称。\r\n     */\r\n    name: string = \"\";\r\n\r\n    /**\r\n     * @en Node tag.\r\n     * @zh 节点标签。\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * @en The URL of the resource.\r\n     * @zh 资源的URL。\r\n     */\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(path: string) {\r\n        this._url = path;\r\n    }\r\n\r\n    /**\r\n     * @en Hide flags.\r\n     * @zh 隐藏标志。\r\n     */\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * @en Whether it is a 3D node, i.e., Scene3D, Sprite3D and their derived classes.\r\n     * @zh 是否是3D节点，即Scene3D、Sprite3D及其衍生类。\r\n     */\r\n    get is3D(): boolean {\r\n        return this._is3D;\r\n    }\r\n\r\n    /**\r\n     * @en Whether it has been destroyed. The object cannot be used after being destroyed.\r\n     * @zh 是否已经销毁。对象销毁后不能再使用。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this._initialize();\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Initialize the node.\r\n    * @zh 初始化节点。\r\n    */\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    /**\r\n     * @en Set a specific bit of the node.\r\n     * @param type The bit type to set.\r\n     * @param value The value to set, true or false.\r\n     * @zh 设置节点的特定位。\r\n     * @param type 要设置的位类型。\r\n     * @param value 要设置的值,true或false。\r\n     */\r\n    _setBit(type: number, value: boolean): void {\r\n        if (type === NodeFlags.DISPLAY) {\r\n            var preValue: boolean = this._getBit(type);\r\n            if (preValue != value) this._updateDisplayedInstage();\r\n        }\r\n        if (value) this._bits |= type;\r\n        else this._bits &= ~type;\r\n    }\r\n\r\n    /**\r\n     * @en Get a specific bit of the node.\r\n     * @param type The bit type to get.\r\n     * @returns The bit value, true or false.\r\n     * @zh 获取节点的特定位。\r\n     * @param type 要获取的位类型。\r\n     * @returns 位的值,true或false。\r\n     */\r\n    _getBit(type: number): boolean {\r\n        return (this._bits & type) != 0;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Update the display status of the node in the stage.\r\n     * This method checks the node's hierarchy to determine if it or any of its parents are displayed in the stage, and updates the DISPLAYED_INSTAGE flag accordingly.\r\n     * @zh 更新节点在舞台中的显示状态。\r\n     * 此方法检查节点的层次结构，以确定它或其任何父节点是否显示在舞台中，并相应地更新 DISPLAYED_INSTAGE 标志。\r\n     */\r\n    private _updateDisplayedInstage(): void {\r\n        var ele: Node;\r\n        ele = this;\r\n        var stage: Node = ILaya.stage;\r\n        var displayedInStage: boolean = false;\r\n        while (ele) {\r\n            if (ele._getBit(NodeFlags.DISPLAY)) {\r\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n                break;\r\n            }\r\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\r\n                displayedInStage = true;\r\n                break;\r\n            }\r\n            ele = ele._parent;\r\n        }\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set up the notification chain for the node.\r\n     * This method ensures that the DISPLAY flag is propagated upwards through the node's hierarchy.\r\n     * @zh 设置节点的通知链。\r\n     * 此方法确保 DISPLAY 标志向上传播通过节点的层次结构。\r\n     */\r\n    _setUpNoticeChain(): void {\r\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set a specific bit up the parent chain.\r\n     * @param type The bit type to set.\r\n     * @zh 向上设置父节点链的特定位。\r\n     * @param type 要设置的位类型。\r\n     */\r\n    _setBitUp(type: number): void {\r\n        var ele: Node = this;\r\n        ele._setBit(type, true);\r\n        ele = ele._parent;\r\n        while (ele) {\r\n            if (ele._getBit(type)) return;\r\n            ele._setBit(type, true);\r\n            ele = ele._parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Start listening to a specific event type.\r\n     * This method sets the DISPLAY flag if the event type is DISPLAY or UNDISPLAY and the node is not already marked as displayed.\r\n     * @param type The event type to listen to.\r\n     * @zh 开始监听特定事件类型。\r\n     * 如果事件类型是 DISPLAY 或 UNDISPLAY 且节点尚未标记为显示，则此方法设置 DISPLAY 标志。\r\n     * @param type 要监听的事件类型。\r\n     */\r\n    protected onStartListeningToType(type: string) {\r\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Bubble an event up the parent chain.\r\n     * @param type The event type.\r\n     * @param data The event data. If not provided, a new Event object will be created.\r\n     * @zh 事件冒泡到父节点链。\r\n     * @param type 事件类型。\r\n     * @param data 事件数据。如果未提供,将创建一个新的Event对象。\r\n     */\r\n    bubbleEvent(type: string, data?: any) {\r\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\r\n        arr.length = 0;\r\n\r\n        let obj: Node = this;\r\n        while (obj) {\r\n            if (obj.activeInHierarchy)\r\n                arr.push(obj);\r\n            obj = obj.parent;\r\n        }\r\n\r\n        if (data instanceof Event) {\r\n            data._stopped = false;\r\n            for (let obj of arr) {\r\n                data.setTo(type, obj, this);\r\n                obj.event(type, data);\r\n                if (data._stopped)\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            for (let obj of arr)\r\n                obj.event(type, data);\r\n        }\r\n\r\n        _bubbleChainPool.push(arr);\r\n    }\r\n\r\n    /**\r\n     * @en Check whether the node has a specific hide flag.\r\n     * @param flag The hide flag to check.\r\n     * @returns Whether the node has the specified hide flag.\r\n     * @zh 检查节点是否具有特定的隐藏标志。\r\n     * @param flag 要检查的隐藏标志。\r\n     * @returns 节点是否具有指定的隐藏标志。\r\n     */\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy this node. When a node is destroyed, it will be removed from its parent node and the references will be cleared, waiting for the garbage collector to recycle it.\r\n     * When destroying a node, its own event listeners, timer listeners, child objects will be removed, and it will be removed from its parent node.\r\n     * @param destroyChild Whether to destroy child nodes as well. If true, all child nodes will be destroyed recursively; otherwise, they will only be removed from the parent.\r\n     * @zh 销毁此节点。destroy对象默认会把自己从父节点移除,并且清理自身引用关系,等待js自动垃圾回收机制回收。destroy后不能再使用。\r\n     * destroy时会移除自身的事情监听,自身的timer监听,移除子对象及从父节点移除自己。\r\n     * @param destroyChild 是否同时销毁子节点,若值为true,则销毁子节点,否则不销毁子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._destroyed = true;\r\n        this.destroyAllComponent();\r\n        this._parent && this._parent.removeChild(this);\r\n\r\n        //销毁子节点\r\n        if (this._children) {\r\n            if (destroyChild) this.destroyChildren();\r\n            else this.removeChildren();\r\n        }\r\n        this.onDestroy();\r\n\r\n        this._children = null;\r\n\r\n        //移除所有事件监听\r\n        this.offAll();\r\n    }\r\n\r\n\r\n    /**\r\n    * @en The callback function when the node is destroyed. This is a virtual method. You can override it for custom logic when the node is about to be destroyed.\r\n    * @zh 节点被销毁时执行的回调函数。此方法为虚方法，使用时重写覆盖即可。\r\n    */\r\n    onDestroy(): void {\r\n        //trace(\"onDestroy node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @en Destroy all child nodes, without destroying the node itself.\r\n     * @zh 销毁所有子节点,但不销毁节点本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            //为了保持销毁顺序，所以需要正序销毁\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[0] && this._children[0].destroy(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Add a child node.\r\n     * @param node The node to be added as a child.\r\n     * @returns The added child node.\r\n     * @zh 添加子节点。\r\n     * @param node 节点对象。\r\n     * @returns 返回添加的节点。\r\n     */\r\n    addChild<T extends Node>(node: T): T {\r\n        if (!node || this._destroyed || node as any === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (node._parent === this) {\r\n            var index: number = this.getChildIndex(node);\r\n            if (index !== this._children.length - 1) {\r\n                this._children.splice(index, 1);\r\n                this._children.push(node);\r\n                this._childChanged();\r\n            }\r\n        } else {\r\n            node._parent && node._parent.removeChild(node);\r\n            this._children === ARRAY_EMPTY && (this._children = []);\r\n            this._children.push(node);\r\n            node._setParent(this);\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @en Add multiple child nodes.\r\n     * @param ...args A variable number of child nodes to be added.\r\n     * @zh 批量增加子节点。\r\n     * @param ...args 无数子节点。\r\n     */\r\n    addChildren(...args: any[]): void {\r\n        var i: number = 0, n: number = args.length;\r\n        while (i < n) {\r\n            this.addChild(args[i++]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Insert a child node at a specific index.\r\n     * @param node The child node to be inserted.\r\n     * @param index The index at which the child node will be inserted.\r\n     * @returns The inserted child node.\r\n     * @zh 在指定的索引位置插入子节点。\r\n     * @param node 节点对象。\r\n     * @param index 索引位置。\r\n     * @returns 返回添加的节点。\r\n     */\r\n    addChildAt(node: Node, index: number): Node {\r\n        if (!node || this._destroyed || node === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (index >= 0 && index <= this._children.length) {\r\n            if (node._parent === this) {\r\n                var oldIndex: number = this.getChildIndex(node);\r\n                this._children.splice(oldIndex, 1);\r\n                this._children.splice(index, 0, node);\r\n                this._childChanged();\r\n            } else {\r\n                node._parent && node._parent.removeChild(node);\r\n                this._children === ARRAY_EMPTY && (this._children = []);\r\n                this._children.splice(index, 0, node);\r\n                node._setParent(this);\r\n            }\r\n            return node;\r\n        } else {\r\n            throw new Error(\"appendChildAt:The index is out of bounds\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the index of a child node.\r\n     * @param node The child node to query.\r\n     * @returns The index of the child node.\r\n     * @zh 获取子节点的索引位置。\r\n     * @param node 子节点。\r\n     * @returns 子节点所在的索引位置。\r\n     */\r\n    getChildIndex(node: Node): number {\r\n        return this._children.indexOf(node);\r\n    }\r\n\r\n    /**\r\n    * @en Get a child node by its name.\r\n    * @param name The name of the child node.\r\n    * @returns The child node with the specified name, or null if not found.\r\n    * @zh 根据子节点的名字获取子节点对象。\r\n    * @param name 子节点的名字。\r\n    * @returns 节点对象。\r\n    */\r\n    getChildByName(name: string): Node {\r\n        for (let child of this._children) {\r\n            if (child && child.name === name)\r\n                return child;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Get a child node by its index.\r\n     * @param index The index of the child node.\r\n     * @returns The child node at the specified index, or null if the index is out of range.\r\n     * @zh 根据子节点的索引位置获取子节点对象。\r\n     * @param index 索引位置。\r\n     * @returns 指定索引处的子节点，如果索引超出范围，则为空。\r\n     */\r\n    getChildAt(index: number): Node {\r\n        return this._children[index] || null;\r\n    }\r\n\r\n    /**\r\n     * @en Set the index of a child node.\r\n     * @param node The child node to set the index for.\r\n     * @param index The new index of the child node.\r\n     * @returns The child node itself.\r\n     * @zh 设置子节点的索引位置。\r\n     * @param node 子节点。\r\n     * @param index 新的索引。\r\n     * @returns 返回子节点本身。\r\n     */\r\n    setChildIndex(node: Node, index: number): Node {\r\n        var childs: any[] = this._children;\r\n        if (index < 0 || index >= childs.length) {\r\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\r\n        }\r\n\r\n        var oldIndex: number = this.getChildIndex(node);\r\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\r\n        childs.splice(oldIndex, 1);\r\n        childs.splice(index, 0, node);\r\n        this._childChanged();\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Callback when a child node changes.\r\n     * @param child The child node that has changed.\r\n     * @zh 子节点发生变化时的回调。\r\n     * @param child 发生变化的子节点。\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Remove a child node.\r\n     * @param node The child node to be removed.\r\n     * @returns The removed node.\r\n     * @zh 删除子节点。\r\n     * @param node 子节点。\r\n     * @returns 被删除的节点。\r\n     */\r\n    removeChild(node: Node): Node {\r\n        if (!this._children) return node;\r\n        var index: number = this._children.indexOf(node);\r\n        return this.removeChildAt(index);\r\n    }\r\n\r\n    /**\r\n     * @en Remove itself from its parent node. If it hasn't been added to any parent node, nothing happens.\r\n     * @returns The node itself.\r\n     * @zh 从父容器删除自己,如果已经被删除不会抛出异常。\r\n     * @returns 当前节点。\r\n     */\r\n    removeSelf(): Node {\r\n        this._parent && this._parent.removeChild(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Remove a child node by its name.\r\n     * @param name The name of the child node.\r\n     * @returns The removed node.\r\n     * @zh 根据子节点名字删除对应的子节点对象,如果找不到不会抛出异常。\r\n     * @param name 对象名字。\r\n     * @returns 查找到的节点。\r\n     */\r\n    removeChildByName(name: string): Node {\r\n        var node: Node = this.getChildByName(name);\r\n        node && this.removeChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @en Remove a child node by its index.\r\n     * @param index The index of the child node.\r\n     * @returns The removed node.\r\n     * @zh 根据子节点索引位置,删除对应的子节点对象。\r\n     * @param index 节点索引位置。\r\n     * @returns 被删除的节点。\r\n     */\r\n    removeChildAt(index: number): Node {\r\n        var node: Node = this.getChildAt(index);\r\n        if (node) {\r\n            this._children.splice(index, 1);\r\n            node._setParent(null);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @en Remove all children from this node.\r\n     * @param beginIndex The begin index.\r\n     * @param endIndex The end index.\r\n     * @returns The node itself.\r\n     * @zh 删除指定索引区间的所有子对象。\r\n     * @param beginIndex 开始索引。\r\n     * @param endIndex 结束索引。\r\n     * @returns 当前节点对象。\r\n     */\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        if (this._children && this._children.length > 0) {\r\n            var childs: any[] = this._children;\r\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\r\n                var arr: any[] = childs;\r\n                this._children = ARRAY_EMPTY;\r\n            } else {\r\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\r\n            }\r\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\r\n                arr[i]._setParent(null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Replace a child node.\r\n     * @param newNode The new node to replace the old one.\r\n     * @param oldNode The old node to be replaced.\r\n     * @returns The new node.\r\n     * @zh 替换子节点。\r\n     * @param newNode 新节点。\r\n     * @param oldNode 老节点。\r\n     * @returns 返回新节点。\r\n     */\r\n    replaceChild(newNode: Node, oldNode: Node): Node {\r\n        var index: number = this._children.indexOf(oldNode);\r\n        if (index > -1) {\r\n            this._children.splice(index, 1, newNode);\r\n            oldNode._setParent(null);\r\n            newNode._setParent(this);\r\n            return newNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en The number of child nodes.\r\n     * @zh 子对象数量。\r\n     */\r\n    get numChildren(): number {\r\n        return this._children ? this._children.length : 0;\r\n    }\r\n\r\n    /**\r\n     * @en The parent node.\r\n     * @zh 父节点。\r\n     */\r\n    get parent(): Node {\r\n        return this._parent;\r\n    }\r\n\r\n    /**\r\n     * @en Check if this node is an ancestor of the given node.\r\n     * @returns True if this node is an ancestor of the given node, false otherwise.\r\n     * @param node The node to check.\r\n     * @zh 检查本节点是否是某个节点的上层节点。\r\n     * @param node 要检查的节点。\r\n     * @returns 一个布尔值，表示本节点是否是某个节点的上层节点。\r\n     */\r\n    isAncestorOf(node: Node): boolean {\r\n        let p = node.parent;\r\n        while (p) {\r\n            if (p == this)\r\n                return true;\r\n\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Set the parent node of the current node.\r\n     * @param value The new parent node.\r\n     * @zh 设置当前节点的父节点。\r\n     * @param value 新的父节点。\r\n     */\r\n    protected _setParent(value: Node): void {\r\n        if (this._parent !== value) {\r\n            if (value) {\r\n                this._parent = value;\r\n                //如果父对象可见，则设置子对象可见\r\n                this._onAdded();\r\n                this.event(Event.ADDED);\r\n                if (this._getBit(NodeFlags.DISPLAY)) {\r\n                    this._setUpNoticeChain();\r\n                    value.displayedInStage && this._displayChild(this, true);\r\n                }\r\n                value._childChanged(this);\r\n            } else {\r\n                //设置子对象不可见\r\n                this._onRemoved();\r\n                this.event(Event.REMOVED);\r\n                let p = this._parent;\r\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\r\n                this._parent = value;\r\n                p._childChanged(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the node is displayed in the scene.\r\n     * @zh 表示是否在显示列表中显示。\r\n     */\r\n    get displayedInStage(): boolean {\r\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the display status of the node.\r\n     * @param value The display status.\r\n     * @zh 设置节点的显示状态。\r\n     * @param value 显示状态。\r\n     */\r\n    _setDisplay(value: boolean): void {\r\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\r\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\r\n            if (value) this.event(Event.DISPLAY);\r\n            else this.event(Event.UNDISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * @internal\r\n    * @en Set the display state of a node's children.\r\n    * @param node The node whose children's display state needs to change.\r\n    * @param display The display state to set.\r\n    * @zh 设置指定节点对象的子对象是否可见（是否在渲染列表中）。\r\n    * @param node 节点。\r\n    * @param display 是否可见。\r\n    */\r\n    private _displayChild(node: Node, display: boolean): void {\r\n        var childs: any[] = node._children;\r\n        if (childs) {\r\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\r\n                var child: Node = childs[i];\r\n                if (!child) continue;\r\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\r\n                if (child._children.length > 0) {\r\n                    this._displayChild(child, display);\r\n                } else {\r\n                    child._setDisplay(display);\r\n                }\r\n            }\r\n        }\r\n        node._setDisplay(display);\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether the current node contains the specified node.\r\n     * @returns A Boolean value indicating whether the current node contains the specified node.\r\n     * @param node The specified node.\r\n     * @zh 当前容器是否包含指定的节点对象。\r\n     * @param node 指定的节点对象。\r\n     * @returns 一个布尔值，表示是否包含指定的节点对象。\r\n     */\r\n    contains(node: Node): boolean {\r\n        if (node === this) return true;\r\n        while (node) {\r\n            if (node._parent === this) return true;\r\n            node = node._parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Repeatedly execute a callback function at a fixed interval. This is a wrapper of the `loop` method in the timer property of the node.\r\n     * @param delay The interval between executions, in milliseconds.\r\n     * @param caller The execution scope of the callback function (this).\r\n     * @param method The callback function.\r\n     * @param args The parameters passed to the callback function.\r\n     * @param coverBefore Whether to override the previous delayed execution. The default value is true.\r\n     * @param jumpFrame Whether the callback should be executed when the timer jumps frames. The default value is false. If set to true, the callback will be executed multiple times in a single frame if possible, for performance reasons.\r\n     * @zh 定时重复执行某函数。这是对节点 timer 属性的 `loop` 方法的封装。\r\n     * @param delay 执行间隔时间,以毫秒为单位。\r\n     * @param caller 回调函数的执行域(this)。\r\n     * @param method 回调函数。\r\n     * @param args 传递给回调函数的参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行,默认为 true。\r\n     * @param jumpFrame 时钟是否跳帧。基于时间的循环回调,单位时间间隔内,如能执行多次回调,出于性能考虑,引擎默认只执行一次,设置jumpFrame为true后,则回调会连续执行多次。默认为false。\r\n     */\r\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\r\n    }\r\n\r\n    /**\r\n     * @en Executes a callback function once after a specified delay.\r\n     * @param delay The delay time, in milliseconds.\r\n     * @param caller The execution scope of the callback function (this).\r\n     * @param method The callback function.\r\n     * @param args The parameters passed to the callback function.\r\n     * @param coverBefore Whether to override the previous delayed execution. The default value is true.\r\n     * @zh 在指定延迟时间后执行一次回调函数。功能同Laya.timer.once()。\r\n     * @param delay 延迟时间,以毫秒为单位。\r\n     * @param caller 回调函数的执行域(this)。\r\n     * @param method 回调函数。\r\n     * @param args 传递给回调函数的参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行,默认为 true。\r\n     */\r\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * @en Repeatedly executes a callback function at a fixed interval based on frame rate.\r\n     * @param delay The interval between executions, in frames.\r\n     * @param caller The execution scope of the callback function (this).\r\n     * @param method The callback function.\r\n     * @param args The parameters passed to the callback function.\r\n     * @param coverBefore Whether to override the previous delayed execution. The default value is true.\r\n     * @zh 基于帧率,定时重复执行回调函数。功能同Laya.timer.frameLoop()。\r\n     * @param delay 执行间隔时间,以帧为单位。\r\n     * @param caller 回调函数的执行域(this)。\r\n     * @param method 回调函数。\r\n     * @param args 传递给回调函数的参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行,默认为 true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * @en Executes a callback function once after a specified delay based on frame rate.\r\n     * @param delay The delay time, in frames.\r\n     * @param caller The execution scope of the callback function (this).\r\n     * @param method The callback function.\r\n     * @param args The parameters passed to the callback function.\r\n     * @param coverBefore Whether to override the previous delayed execution. The default value is true.\r\n     * @zh 基于帧率,在指定延迟时间后执行一次回调函数。功能同Laya.timer.frameOnce()。\r\n     * @param delay 延迟时间,以帧为单位。\r\n     * @param caller 回调函数的执行域(this)。\r\n     * @param method 回调函数。\r\n     * @param args 传递给回调函数的参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行,默认为 true。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * @en Clears a timer.\r\n     * @param caller The execution scope of the callback function (this).\r\n     * @param method The callback function.\r\n     * @zh 清除定时器。功能同Laya.timer.clear()。\r\n     * @param caller 回调函数的执行域(this)。\r\n     * @param method 回调函数。\r\n     */\r\n    clearTimer(caller: any, method: Function): void {\r\n        this.timer.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * @en Delays the execution of a callback function until the next frame after the current execution block is finished.\r\n     * The callback function will only be executed once. It is generally called before the control is displayed on the screen to delay the calculation of data.\r\n     * @param method The callback function.\r\n     * @param args The parameters passed to the callback function.\r\n     * @zh 在当前执行块完成后,延迟执行回调函数到下一帧。\r\n     * 回调函数只会被执行一次。一般在控件被显示在屏幕之前调用，用于延迟计算数据。\r\n     * @param method 回调函数。\r\n     * @param args 传递给回调函数的参数。\r\n     */\r\n    callLater(method: Function, args: any[] = null): void {\r\n        this.timer.callLater(this, method, args);\r\n    }\r\n\r\n    /**\r\n     * @en If there are callback functions delayed by `callLater`, they will be executed immediately.\r\n     * @param method The name of the callback function to be executed, such as `functionName`.\r\n     * @zh 如果有通过 `callLater` 延迟执行的回调函数,将立即执行它们。\r\n     * @param method 要执行的回调函数名称,例如 `functionName`。\r\n     */\r\n    runCallLater(method: Function): void {\r\n        this.timer.runCallLater(this, method);\r\n    }\r\n\r\n    //============================组件化支持==============================\r\n    /** \r\n     * @private\r\n     * @internal\r\n     * @en The component list of this node.\r\n     * @zh 节点的组件列表。\r\n     */\r\n    protected _components: Component[];\r\n    /**@private */\r\n    private _activeChangeScripts: Component[];\r\n\r\n\r\n    /**\r\n    * @internal\r\n    * @en The scene this node belongs to.\r\n    * @zh 该节点所属的场景。\r\n    */\r\n    _scene: Node;\r\n\r\n    /**\r\n     * @en Get the scene this node belongs to.\r\n     * @zh 获取该节点所属的场景。\r\n     */\r\n    get scene(): any {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * @en Thether this node is active.\r\n     * @zh 该节点自身是否激活。\r\n     */\r\n    get active(): boolean {\r\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\r\n    }\r\n\r\n    set active(value: boolean) {\r\n        value = !!value;\r\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\r\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n                if (value)\r\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n                else\r\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n            } else {\r\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\r\n                if (this._parent) {\r\n                    if (this._parent.activeInHierarchy) {\r\n                        this._processActive(value, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Thether this node is active in the hierarchy.\r\n     * @zh 该节点在层级中是否激活。\r\n     */\r\n    get activeInHierarchy(): boolean {\r\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Actions performed when the node becomes active.\r\n     * @zh 节点激活时执行的操作。\r\n     */\r\n    protected _onActive(): void {\r\n        Stat.spriteCount++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Actions performed when the node becomes inactive.\r\n     * @zh 节点停用时执行的操作。\r\n     */\r\n    protected _onInActive(): void {\r\n        Stat.spriteCount--;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Actions performed when the node is added to the scene.\r\n     * @zh 节点被添加到场景时执行的操作。\r\n     */\r\n    protected _onActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Actions performed when the node is removed from the scene.\r\n     * @zh 节点从场景中移除时执行的操作。\r\n     */\r\n    protected _onInActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_IN_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @en The callback function that is executed when the component is activated, at which point all nodes and components have been created.\r\n     * This is a virtual method that needs to be overridden in the subclass.\r\n     * @zh 组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次。\r\n     * 此方法为虚方法，使用时重写覆盖即可。\r\n     */\r\n    onAwake(): void {\r\n        //this.name  && trace(\"onAwake node \", this.name);\r\n    }\r\n\r\n    /**\r\n    * @en The callback function that is executed when the component is enabled, such as when a node is added to the stage.\r\n    * This is a virtual method that needs to be overridden in the subclass.\r\n    * @zh 组件被启用后执行，比如节点被添加到舞台后。\r\n    * 此方法为虚方法，使用时重写覆盖即可。\r\n    */\r\n    onEnable(): void {\r\n        //this.name  && trace(\"onEnable node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * @en The callback function that is executed when the component is disabled, such as when a node is removed from the stage.\r\n     * This is a virtual method that needs to be overridden in the subclass.\r\n     * @zh 组件被禁用时执行，比如从节点从舞台移除后。\r\n     * 此方法为虚方法，使用时重写覆盖即可。\r\n     */\r\n    onDisable(): void {\r\n        //trace(\"onDisable node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, spriteMap: any): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Set the scene to which the node belongs.\r\n    * @param scene The scene the node belongs to.\r\n    * @zh 设置节点归属的场景。\r\n    * @param scene 节点所属的场景。\r\n    */\r\n    _setBelongScene(scene: Node): void {\r\n        if (!this._scene || this.scene != scene) {\r\n            this._scene = scene;\r\n            this._onActiveInScene();\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setBelongScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Unset the node from its belong scene.\r\n     * @zh 从所属场景中移除节点。\r\n     */\r\n    _setUnBelongScene(): void {\r\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\r\n            this._onInActiveInScene();\r\n            this._scene = null;\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Processes the active state of the node and its children in the hierarchy.\r\n    * @param active The active state to be set.\r\n    * @param fromSetter Whether the state is set from a setter.\r\n    * @zh 处理节点及其子节点在层级中的激活状态。\r\n    * @param active 设置的激活状态。\r\n    * @param fromSetter 是否由 setter 设置。\r\n    */\r\n    _processActive(active: boolean, fromSetter?: boolean) {\r\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\r\n        let arr = this._activeChangeScripts;\r\n\r\n        if (active)\r\n            this._activeHierarchy(arr, fromSetter);\r\n        else\r\n            this._inActiveHierarchy(arr, fromSetter);\r\n\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let comp = arr[i];\r\n            comp.owner && comp._setActive(active);\r\n        }\r\n\r\n        arr.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Activate the node and its children within the hierarchy. It marks the node and all its children as active, and adds eligible component scripts to the activation change list.\r\n     * @param activeChangeScripts The list of component scripts affected by the activation change.\r\n     * @zh 在层级中递归地激活节点及其子节点。这个方法将节点及其所有子节点标记为激活状态，并将符合条件的组件脚本添加到激活变更列表中。\r\n     * @param activeChangeScripts 存放激活状态变更的组件脚本列表。\r\n     */\r\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    (comp._enabled) && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(true);\r\n            }\r\n        }\r\n\r\n        this._onActive();\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        if (!this._getBit(NodeFlags.AWAKED)) {\r\n            this._setBit(NodeFlags.AWAKED, true);\r\n            this.onAwake();\r\n        }\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Deactivates the current node, its components, and children recursively. Only the scripts that are marked as active will have their references pushed to `activeChangeScripts`.\r\n     * @param activeChangeScripts Array to hold the references of active scripts that are being deactivated.\r\n     * @zh 在层级中递归地停用当前节点、其组件和子节点。只有标记为活动的脚本才会将其引用推送到 `activeChangeScripts` 中。\r\n     * @param activeChangeScripts 用于保存正在被停用的活动脚本的引用的数组。\r\n     */\r\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._onInActive();\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    comp._enabled && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(false);\r\n            }\r\n        }\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\r\n\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Handle the addition of the node to its parent.\r\n     * This method is called when the node is added to a parent node, updating the active state and scene reference if applicable.\r\n     * @zh 处理节点被添加到父节点时的操作。\r\n     * 当节点被添加到父节点时调用此方法，如果适用，更新激活状态和场景引用。\r\n     */\r\n    protected _onAdded(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n        } else {\r\n            let parentScene = this._parent.scene;\r\n            parentScene && this._setBelongScene(parentScene);\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     * @en Handle the removal of the node from its parent.\r\n     * This method is called when the node is removed from its parent node, updating the active state and scene reference if applicable.\r\n     * @zh 处理节点从父节点移除时的操作。\r\n     * 当节点从父节点移除时调用此方法，如果适用，更新激活状态和场景引用。\r\n     */\r\n    protected _onRemoved(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n        } else {\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\r\n            this._parent.scene && this._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Add a component instance to the node.\r\n     * @param comp The component instance.\r\n     * @zh 添加组件实例到节点。\r\n     * @param comp 组件实例。\r\n     */\r\n    _addComponentInstance(comp: Component): void {\r\n        if (!this._components)\r\n            this._components = [];\r\n        this._components.push(comp);\r\n\r\n        comp._setOwner(this);\r\n        if (this.activeInHierarchy)\r\n            comp._setActive(true);\r\n        this._componentsChanged?.(comp, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Destroy a component on the node.\r\n     * @param comp The component to destroy.\r\n     * @zh 销毁节点上的组件。\r\n     * @param comp 要销毁的组件。\r\n     */\r\n    _destroyComponent(comp: Component) {\r\n        if (!this._components)\r\n            return;\r\n\r\n        let i = this._components.indexOf(comp);\r\n        if (i != -1) {\r\n            this._components.splice(i, 1);\r\n            comp._destroy();\r\n            this._componentsChanged?.(comp, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Destroy all components on the node.\r\n     * @zh 销毁节点上的所有组件。\r\n     */\r\n    private destroyAllComponent(): void {\r\n        if (!this._components)\r\n            return;\r\n\r\n        for (let i = 0, n = this._components.length; i < n; i++) {\r\n            let item = this._components[i];\r\n            item && !item.destroyed && item._destroy();\r\n        }\r\n        this._components.length = 0;\r\n        this._componentsChanged?.(null, 2);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Handle changes to the node's components.\r\n     * This method is called when a component is added, removed, or all components are destroyed.\r\n     * @param comp The component that was changed.\r\n     * @param action The action performed: 0 for added, 1 for removed, 2 for all destroyed.\r\n     * @zh 处理节点组件的变化。\r\n     * 当组件被添加、移除或所有组件被销毁时调用此方法。\r\n     * @param comp 发生变化的组件。\r\n     * @param action 执行的操作：0 表示添加，1 表示移除，2 表示全部销毁。\r\n     */\r\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\r\n\r\n    /**\r\n    * @internal\r\n    * @en Clones the components from the current node to the destination object.\r\n    * @param destObject The destination object to clone the components to.\r\n    * @zh 将当前节点的组件克隆到指定的目标对象中。\r\n    * @param destObject 要克隆组件到的目标对象。\r\n    */\r\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\r\n        var destNode: Node = (<Node>destObject);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\r\n                this._components[i]._cloneTo(destComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Add a component instance to the node.\r\n     * @param component The component instance.\r\n     * @returns The added component instance.\r\n     * @zh 添加组件实例到节点。\r\n     * @param component 组件实例。\r\n     * @returns 添加的组件实例。\r\n     */\r\n    addComponentInstance(component: Component): Component {\r\n        if (component.owner)\r\n            throw \"Node:the component has belong to other node.\";\r\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\r\n        else\r\n            this._addComponentInstance(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * @en Add a component to the node.\r\n     * @param componentType The type of the component.\r\n     * @returns The added component instance.\r\n     * @zh 添加组件到节点。\r\n     * @param componentType 组件类型。\r\n     * @returns 添加的组件实例。\r\n     */\r\n    addComponent<T extends Component>(componentType: new () => T): T {\r\n        let comp: T = Pool.createByClass(componentType);\r\n        if (!comp) {\r\n            throw \"missing \" + componentType.toString();\r\n        }\r\n\r\n        if (comp._singleton && this.getComponent(componentType))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\r\n        else\r\n            this._addComponentInstance(comp);\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @en Get a component instance by type. Returns null if not found.\r\n     * @param componentType The type of the component.\r\n     * @returns The component instance.\r\n     * @zh 根据类型获取组件实例。如果没有找到则返回null。\r\n     * @param componentType 组件类型。\r\n     * @returns 组件实例。\r\n     */\r\n    getComponent<T extends Component>(componentType: new () => T): T {\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType)\r\n                    return comp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Get all component instances on the node.\r\n     * @returns An array of component instances.\r\n     * @zh 获取节点上的所有组件实例。\r\n     * @returns 组件实例数组。\r\n     */\r\n    get components(): ReadonlyArray<Component> {\r\n        return this._components || ARRAY_EMPTY;\r\n    }\r\n\r\n    /**\r\n     * @en Get all component instances by type. Returns an empty array if none are found.\r\n     * @param componentType The type of the component.\r\n     * @returns An array of component instances.\r\n     * @zh 根据类型获取所有组件实例。如果没有找到则返回空数组。\r\n     * @param componentType 组件类型。\r\n     * @returns 组件实例数组。\r\n     */\r\n    getComponents(componentType: typeof Component): Component[] {\r\n        var arr: any[];\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType) {\r\n                    arr = arr || [];\r\n                    arr.push(comp);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * @en Get the timer associated with the node.\r\n     * @returns The timer.\r\n     * @zh 获取与节点关联的计时器。\r\n     * @returns 计时器。\r\n     */\r\n    get timer(): Timer {\r\n        return this._scene ? this._scene.timer : ILaya.timer;\r\n    }\r\n\r\n    /**\r\n     * @en Called after deserialization.\r\n     * @zh 反序列化后调用。\r\n     */\r\n    onAfterDeserialize() { }\r\n}\r\n\r\nconst _bubbleChainPool: Array<Array<Node>> = [];\r\n\r\nexport interface INodeExtra { }\r\n","\r\nconst HALF_PI = Math.PI * 0.5;\r\nconst PI2 = Math.PI * 2;\r\n\r\n/**\r\n * @en The `Ease` class defines easing functions for Tween animations to achieve various transition effects.\r\n * @zh `Ease` 类定义了缓动函数，用于实现 Tween 动画的缓动效果，以便于创建各种转换效果。\r\n */\r\nexport class Ease {\r\n    /**\r\n     * @en Define continuous motion without acceleration.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the animated property.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * @en Define continuous motion without acceleration.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the animated property.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearIn(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * @en Define continuous motion without acceleration.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the animated property.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearInOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * @en Define continuous motion without acceleration.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the animated property.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, then accelerates the motion.\r\n     * The motion is similar to a ball falling towards the floor and bouncing back with decreasing rebounds.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceIn(t: number, b: number, c: number, d: number): number {\r\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, accelerates, and then decelerates to zero velocity.\r\n     * The motion is similar to a ball falling towards the floor and bouncing back with decreasing rebounds.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\r\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n    }\r\n\r\n    /**\r\n     * @en Begins the motion at a faster velocity, then decelerates until the velocity is zero.\r\n     * The motion is similar to a ball falling towards the floor and bouncing back with decreasing rebounds.\r\n     * @param t Current time between 0 and the duration (inclusive).\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @returns The value of the interpolated property at the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\r\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with a backward movement, then moves towards the target in the opposite direction, overshoots, and then returns.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animation property at the start.\r\n     * @param c The total change in the property's value that occurs during the animation.\r\n     * @param d The total duration of the motion.\r\n     * @param s The overshoot amount. The larger the value, the greater the overshoot.\r\n     * @returns The value of the interpolation attribute for the specified time.\r\n     * @zh 开始时往后运动，然后反向朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with a backward movement, then moves towards the target, overshoots slightly, reverses direction again, and finally moves towards the target.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animation property at the start.\r\n     * @param c The total change in the property's value that occurs during the animation.\r\n     * @param d The total duration of the motion.\r\n     * @param s The overshoot amount. The larger the value, the greater the overshoot.\r\n     * @returns The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion towards the target, overshoots slightly, then reverses direction and moves back towards the target.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animation property at the start.\r\n     * @param c The total change in the property's value that occurs during the animation.\r\n     * @param d The total duration of the motion.\r\n     * @param s The overshoot amount. The larger the value, the greater the overshoot.\r\n     * @returns The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion from zero velocity, then accelerates. \r\n     * The motion is defined by a sine wave that elastically decays in an exponential manner.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @param a The amplitude of the sine wave.\r\n     * @param p The period of the sine wave in milliseconds.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, accelerates, and then decelerates to zero velocity. \r\n     * The motion is defined by a sine wave that elastically decays in an exponential manner.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @param a The amplitude of the sine wave.\r\n     * @param p The period of the sine wave in milliseconds.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d * 0.5) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion at a faster velocity, then decelerates until the velocity reaches zero. \r\n     * The motion is defined by a sine wave that decays in an exponential manner.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @param a The amplitude of the sine wave.\r\n     * @param p The period of the sine wave in milliseconds.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion from zero velocity and then accelerates rapidly.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以零速率开始运动，然后在执行时加快运动速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, accelerates the motion, and then decelerates to zero velocity.\r\n     * The motion acceleration in the Sine slow motion equation is smaller than that in the Quad equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineInOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion from zero velocity, then accelerates the motion.\r\n     * The motion acceleration in the Sine slow motion equation is smaller than that in the Quad equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion at a faster pace, then decelerates until the velocity reaches zero.\r\n     * The motion acceleration in the Sine slow motion equation is smaller than that in the Quad equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sin(t / d * HALF_PI) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at zero speed and then accelerate the motion speed during execution.\r\n     * The motion acceleration of the Quint slow motion equation is greater than that of the Quart slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * The motion acceleration of the Quint slow motion equation is greater than that of the Quart slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * The motion acceleration of the Quint slow motion equation is greater than that of the Quart slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en The method starts at zero speed and then accelerates the motion speed during execution.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\r\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en The method starts at zero speed and then accelerates the motion speed during execution.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * The motion acceleration of the Quart slow motion equation is greater than that of the Cubic slow motion equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en The method starts at zero speed and then accelerates the motion speed during execution.\r\n     * The motion acceleration in the Quad deceleration equation is equal to the motion acceleration between the 100% deceleration time axis and is significantly smaller than the motion acceleration in the Cubic deceleration equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, accelerates the motion, and then decelerates to zero velocity. \r\n     * The motion acceleration in the Quad deceleration equation is equal to the motion acceleration between the 100% deceleration time axis and is significantly smaller than the motion acceleration in the Cubic deceleration equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\r\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * The motion acceleration in the Quad deceleration equation is equal to the motion acceleration between the 100% deceleration time axis and is significantly smaller than the motion acceleration in the Cubic deceleration equation.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Starts the motion with zero velocity, then accelerates the motion.\r\n     * Each time interval is the remaining distance minus a fixed proportion.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoIn(t: number, b: number, c: number, d: number): number {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * Each time interval is the remaining distance minus a fixed proportion.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * Each time interval is the remaining distance minus a fixed proportion.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoOut(t: number, b: number, c: number, d: number): number {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en The method starts at zero speed and then accelerates the motion speed during execution.\r\n     * The acceleration of the slow motion equation will result in a sudden change in velocity.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en At the beginning of the motion, the velocity is zero. Accelerate the motion first, then decelerate until the velocity is zero.\r\n     * The acceleration of the slow motion equation will result in a sudden change in velocity.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * @en Start moving at a faster speed, then slow down the motion speed during execution until the speed reaches zero.\r\n     * The acceleration of the slow motion equation will result in a sudden change in velocity.\r\n     * @param t Current time between 0 and the duration, inclusive.\r\n     * @param b The initial value of the animated property.\r\n     * @param c The total change in the property's value.\r\n     * @param d The duration of the motion.\r\n     * @return The value of the interpolation attribute for the specified time.\r\n     * @zh 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n}\r\n\r\n","import { Handler } from \"./Handler\";\r\nimport { Pool } from \"./Pool\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ILaya } from \"./../../ILaya\";\r\n\r\n/**\r\n * @en The `Tween` class is an easing class. It is used to implement the interpolation of properties of a target object.\r\n * @zh `Tween` 类是一个缓动类。使用此类能够实现对目标对象属性的渐变。\r\n */\r\nexport class Tween {\r\n    /**@private */\r\n    private static tweenMap: any[] = [];\r\n    /**@private */\r\n    private _complete: Handler;\r\n    /**@private */\r\n    private _target: any;\r\n    /**@private */\r\n    private _ease: Function;\r\n    /**@private */\r\n    private _props: any[];\r\n    /**@private */\r\n    private _duration: number;\r\n    /**@private */\r\n    private _delay: number;\r\n    /**@private */\r\n    private _startTimer: number;\r\n    /**@private */\r\n    private _usedTimer: number;\r\n    /**@private */\r\n    private _usedPool: boolean;\r\n    /**@private */\r\n    private _delayParam: any[];\r\n    /**\r\n     * @private\r\n     * @en Unique identifier used by TimeLintLite.\r\n     * @zh 唯一标识，由 TimeLintLite 使用。\r\n     */\r\n    gid: number = 0;\r\n    /**\r\n     * @en Update callback, when the buffering value changes, the value of the callback changes\r\n     * @zh 更新回调，缓动数值发生变化时，回调变化的值。\r\n     */\r\n    update: Handler;\r\n    /**\r\n     * @en The number of times to replay the tween. If set to 0, it indicates an infinite loop.\r\n     * @zh 重播次数，如果设置为 0，则表示无限循环播放。\r\n     */\r\n    repeat: number = 1;\r\n    /**当前播放次数*/\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * @en Tweens the object's properties to the target values.\r\n     * @param target The target object whose properties will be tweened.\r\n     * @param props The list of properties to change, e.g., {x:100, y:20, ease:Ease.backOut, complete:Handler.create(this,onComplete), update:new Handler(this,onUpdate)}.\r\n     * @param duration The time taken for the tween in milliseconds.\r\n     * @param ease The type of easing, defaults to linear motion.\r\n     * @param complete The callback function when the tween completes.\r\n     * @param delay The delay before the tween starts.\r\n     * @param coverBefore Whether to override the previous tween.\r\n     * @param autoRecover Whether to automatically recover after the tween ends, defaults to true.\r\n     * @returns Returns the Tween object.\r\n     * @zh 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * @en From the props attribute, tween to the current state.\r\n     * @param target The target object whose properties will be tweened.\r\n     * @param props The list of properties to change, e.g., {x:100, y:20, ease:Ease.backOut, complete:Handler.create(this,onComplete), update:new Handler(this,onUpdate)}.\r\n     * @param duration The time taken for the tween in milliseconds.\r\n     * @param ease The type of easing, defaults to linear motion.\r\n     * @param complete The callback function when the tween completes.\r\n     * @param delay The delay before the tween starts.\r\n     * @param coverBefore Whether to override the previous tween.\r\n     * @param autoRecover Whether to automatically recover after the tween ends, defaults to true.\r\n     * @returns Returns the Tween object.\r\n     * @zh 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * @en Tweens the props attribute of the object to the target value.\r\n     * @param target The target object whose properties will be tweened.\r\n     * @param props The list of properties to change, e.g., {x:100, y:20, ease:Ease.backOut, complete:Handler.create(this,onComplete), update:new Handler(this,onUpdate)}.\r\n     * @param duration The time taken for the tween in milliseconds.\r\n     * @param ease The type of easing, defaults to linear motion.\r\n     * @param complete The callback function when the tween completes.\r\n     * @param delay The delay before the tween starts.\r\n     * @param coverBefore Whether to override the previous tween.\r\n     * @returns Returns the Tween object.\r\n     * @zh 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\r\n    }\r\n\r\n    /**\r\n     * @en From the props attribute, slow down to the current state.\r\n     * @param target The target object (the object whose property values will be changed).\r\n     * @param props A list of changing properties, such as {x:100, y:20, ease:Ease.backOut, complete:Handler.create(this,onComplete), update:new Handler(this,onComplete)}.\r\n     * @param duration The time spent, in milliseconds.\r\n     * @param ease The easing type, default is uniform motion. Default value is null.\r\n     * @param complete The callback function at the end. Default value is null.\r\n     * @param delay The delay time before execution. Default value is 0.\r\n     * @param coverBefore Whether to cover the previous tween. Default value is false.\r\n     * @returns Returns a Tween object.\r\n     * @zh 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\r\n    }\r\n\r\n    /** @internal */\r\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\r\n        if (!target) throw new Error(\"Tween:target is null\");\r\n        this._target = target;\r\n        this._duration = duration;\r\n        this._ease = ease || props.ease || Tween.easeNone;\r\n        this._complete = complete || props.complete;\r\n        this._delay = delay;\r\n        this._props = [];\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        this._usedPool = usePool;\r\n        this._delayParam = null;\r\n        this.update = props.update;\r\n\r\n        //判断是否覆盖\t\t\t\r\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\r\n        if (!Tween.tweenMap[gid]) {\r\n            Tween.tweenMap[gid] = [this];\r\n        } else {\r\n            if (coverBefore) Tween.clearTween(target);\r\n            Tween.tweenMap[gid].push(this);\r\n        }\r\n\r\n        if (runNow) {\r\n            if (delay <= 0) this.firstStart(target, props, isTo);\r\n            else {\r\n                this._delayParam = [target, props, isTo];\r\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\r\n            }\r\n        } else {\r\n            this._initProps(target, props, isTo);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private firstStart(target: any, props: any, isTo: boolean): void {\r\n        this._delayParam = null;\r\n        if (target.destroyed) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this._initProps(target, props, isTo);\r\n        this._beginLoop();\r\n    }\r\n\r\n    private _initProps(target: any, props: any, isTo: boolean): void {\r\n        //初始化属性\r\n        for (var p in props) {\r\n            if (typeof (target[p]) == 'number') {\r\n                var start: number = isTo ? target[p] : props[p];\r\n                var end: number = isTo ? props[p] : target[p];\r\n                this._props.push([p, start, end - start]);\r\n                if (!isTo) target[p] = start;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginLoop(): void {\r\n        ILaya.timer.frameLoop(1, this, this._doEase);\r\n    }\r\n\r\n    /**执行缓动**/\r\n    private _doEase(): void {\r\n        this._updateEase(Browser.now());\r\n    }\r\n\r\n    /**@internal */\r\n    _updateEase(time: number): void {\r\n        var target: any = this._target;\r\n        if (!target) return;\r\n\r\n        //如果对象被销毁，则立即停止缓动\r\n        if (target.destroyed) return Tween.clearTween(target);\r\n\r\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\r\n        if (usedTimer < 0) return;\r\n        if (usedTimer >= this._duration) return this.complete();\r\n\r\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\r\n        }\r\n        if (this.update) this.update.run();\r\n    }\r\n\r\n    /**\r\n     * @en Set the current execution progress ratio.\r\n     * @zh 设置当前执行进度比例。\r\n     */\r\n    set progress(v: number) {\r\n        var uTime: number = v * this._duration;\r\n        this._startTimer = Browser.now() - this._delay - uTime;\r\n    }\r\n\r\n    /**\r\n     * @en Immediately complete the tween and reach the end point.\r\n     * @zh 立即结束缓动并到达终点。\r\n     */\r\n    complete(): void {\r\n        if (!this._target) return;\r\n\r\n        //立即执行初始化\r\n        ILaya.timer.runTimer(this, this.firstStart);\r\n\r\n        //缓存当前属性\r\n        var target: any = this._target;\r\n        var props: any = this._props;\r\n        var handler: Handler = this._complete;\r\n        //设置终点属性\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + prop[2];\r\n        }\r\n        if (this.update) this.update.run();\r\n\r\n        this._count++;\r\n        if (this.repeat != 0 && this._count >= this.repeat) {\r\n            //清理\r\n            this.clear();\r\n            //回调\r\n            handler && handler.run();\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Pause the tween. It can be resumed using resume() or restart().\r\n     * @zh 暂停缓动。可以通过 resume() 或 restart() 重新开始。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._beginLoop);\r\n        ILaya.timer.clear(this, this._doEase);\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        var time: number = Browser.now();\r\n        var dTime: number;\r\n        dTime = time - this._startTimer - this._delay;\r\n        if (dTime < 0) {\r\n            this._usedTimer = dTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set the start time of the tween.\r\n     * @param startTime The start time.\r\n     * @zh 设置缓动的开始时间。\r\n     * @param startTime 开始时间。\r\n     */\r\n    setStartTime(startTime: number): void {\r\n        this._startTimer = startTime;\r\n    }\r\n\r\n    /**\r\n     * @en Clear all tweens on the specified target object.\r\n     * @param target The target object.\r\n     * @zh 清理指定目标对象上的所有缓动。\r\n     * @param target 目标对象。\r\n     */\r\n    static clearAll(target: any): void {\r\n        if (!target || !target.$_GID) return;\r\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                tweens[i]._clear();\r\n            }\r\n            tweens.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clear a specific tween.\r\n     * @param tween The tween object to clear.\r\n     * @zh 清理某个特定的缓动。\r\n     * @param tween 要清理的缓动对象。\r\n     */\r\n    static clear(tween: Tween): void {\r\n        tween.clear();\r\n    }\r\n\r\n    /**@private 同clearAll，废弃掉，尽量别用。*/\r\n    static clearTween(target: any): void {\r\n        Tween.clearAll(target);\r\n    }\r\n\r\n    /**\r\n     * @en Stop and clear the current tween.\r\n     * @zh 停止并清理当前缓动。\r\n     */\r\n    clear(): void {\r\n        if (this._target) {\r\n            this._remove();\r\n            this._clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clear(): void {\r\n        this.pause();\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        this._complete = null;\r\n        this._target = null;\r\n        this._ease = null;\r\n        this._props = null;\r\n        this._delayParam = null;\r\n        this.repeat = 1;\r\n\r\n        if (this._usedPool) {\r\n            this.update = null;\r\n            Pool.recover(\"tween\", this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Recycle to the object pool.\r\n     * @zh 回收到对象池。\r\n     */\r\n    recover(): void {\r\n        this._usedPool = true;\r\n        this._clear();\r\n    }\r\n\r\n    private _remove(): void {\r\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                if (tweens[i] === this) {\r\n                    tweens.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Restart the paused tween.\r\n     * @zh 重新开始已暂停的缓动。\r\n     */\r\n    restart(): void {\r\n        this.pause();\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        if (this._delayParam) {\r\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\r\n            return;\r\n        }\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            this._target[prop[0]] = prop[1];\r\n        }\r\n        ILaya.timer.once(this._delay, this, this._beginLoop);\r\n    }\r\n\r\n    /**\r\n     * @en Resume the paused tween.\r\n     * @zh 恢复已暂停的缓动。\r\n     */\r\n    resume(): void {\r\n        if (this._usedTimer >= this._duration) return;\r\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\r\n        if (this._delayParam) {\r\n            if (this._usedTimer < 0) {\r\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\r\n            } else {\r\n                this.firstStart.apply(this, <any>this._delayParam);\r\n            }\r\n        } else {\r\n            this._beginLoop();\r\n        }\r\n    }\r\n\r\n    private static easeNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Ease } from \"./Ease\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Tween } from \"./Tween\";\r\n\r\n/**\r\n * @private\r\n * @en The `Dragging` class is a touch sliding control.\r\n * @zh `Dragging` 类是触摸滑动控件。\r\n */\r\nexport class Dragging {\r\n    /**\r\n     * @en The object being dragged.\r\n     * @zh 被拖动的对象。\r\n     */\r\n    target: Sprite;\r\n    /**\r\n     * @en The damping ratio for easing.\r\n     * @zh 缓动衰减系数。\r\n     */\r\n    ratio: number = 0.92;\r\n    /**\r\n     * @en The maximum offset per frame.\r\n     * @zh 单帧最大偏移量。\r\n     */\r\n    maxOffset: number = 60;\r\n    /**\r\n     * @en The sliding area.\r\n     * @zh 滑动范围。\r\n     */\r\n    area: Rectangle;\r\n    /**\r\n     * @en Indicates whether the dragging has inertia.\r\n     * @zh 表示拖动是否有惯性。\r\n     */\r\n    hasInertia: boolean;\r\n    /**\r\n     * @en The maximum elastic distance.\r\n     * @zh 橡皮筋最大值。\r\n     */\r\n    elasticDistance: number;\r\n    /**\r\n     * @en The time for elastic back in milliseconds.\r\n     * @zh 橡皮筋回弹时间，单位为毫秒。\r\n     */\r\n    elasticBackTime: number;\r\n    /**\r\n     * @en The event data carried along.\r\n     * @zh 事件携带数据。\r\n     */\r\n    data: any;\r\n\r\n    private _dragging: boolean = false;\r\n    private _clickOnly: boolean = true;\r\n    private _elasticRateX: number;\r\n    private _elasticRateY: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _offsets: any[];\r\n    private _tween: Tween;\r\n    private _parent: Sprite;\r\n\r\n    /**\r\n     * @en Start dragging.\r\n     * @param target The Sprite object to be dragged.\r\n     * @param area The area within which the object can be dragged.\r\n     * @param hasInertia Indicates whether the dragging has inertia.\r\n     * @param elasticDistance The maximum elastic distance allowed for the drag.\r\n     * @param elasticBackTime The time in milliseconds for the elastic back effect.\r\n     * @param data Any data to be carried with the event.\r\n     * @param ratio The damping ratio for inertia.\r\n     * @zh 开始拖拽。\r\n     * @param target 待拖拽的 Sprite 对象。\r\n     * @param area 滑动范围。\r\n     * @param hasInertia 拖动是否有惯性。\r\n     * @param elasticDistance 橡皮筋最大值。\r\n     * @param elasticBackTime 橡皮筋回弹时间，单位为毫秒。\r\n     * @param data 事件携带数据。\r\n     * @param ratio 惯性阻尼系数。\r\n     */\r\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\r\n        this.clearTimer();\r\n\r\n        this.target = target;\r\n        this.area = area;\r\n        this.hasInertia = hasInertia;\r\n        this.elasticDistance = area ? elasticDistance : 0;\r\n        this.elasticBackTime = elasticBackTime;\r\n        this.data = data;\r\n        this.ratio = ratio;\r\n\r\n        this._parent = (target.parent as Sprite);\r\n\r\n        this._clickOnly = true;\r\n        this._dragging = true;\r\n        this._elasticRateX = this._elasticRateY = 1;\r\n        this._lastX = this._parent.mouseX;\r\n        this._lastY = this._parent.mouseY;\r\n\r\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    /**\r\n     * 清除计时器。\r\n     */\r\n    private clearTimer(): void {\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n        ILaya.systemTimer.clear(this, this.tweenMove);\r\n        if (this._tween) {\r\n            this._tween.recover();\r\n            this._tween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop dragging\r\n     * @zh 停止拖拽。\r\n     */\r\n    stop(): void {\r\n        if (this._dragging) {\r\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n            this._dragging = false;\r\n            this.target && this.area && this.backToArea();\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽的循环处理函数。\r\n     */\r\n    private loop(): void {\r\n        var point: Point = this._parent.getMousePoint();\r\n        var mouseX: number = point.x;\r\n        var mouseY: number = point.y;\r\n        var offsetX: number = mouseX - this._lastX;\r\n        var offsetY: number = mouseY - this._lastY;\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\r\n                this._clickOnly = false;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this.target.event(Event.DRAG_START, this.data);\r\n                //TODO:\r\n                //target._set$P(\"$_MOUSEDOWN\", false);\r\n            } else return;\r\n        } else {\r\n            this._offsets.push(offsetX, offsetY);\r\n        }\r\n        if (offsetX === 0 && offsetY === 0) return;\r\n\r\n        this._lastX = mouseX;\r\n        this._lastY = mouseY;\r\n        this.target.x += offsetX * this._elasticRateX;\r\n        this.target.y += offsetY * this._elasticRateY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n    }\r\n\r\n    /**\r\n     * 拖拽区域检测。\r\n     */\r\n    private checkArea(): void {\r\n        if (this.elasticDistance <= 0) {\r\n            this.backToArea();\r\n        } else {\r\n            if (this.target._x < this.area.x) {\r\n                var offsetX: number = this.area.x - this.target._x;\r\n            } else if (this.target._x > this.area.x + this.area.width) {\r\n                offsetX = this.target._x - this.area.x - this.area.width;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\r\n\r\n            if (this.target._y < this.area.y) {\r\n                var offsetY: number = this.area.y - this.target.y;\r\n            } else if (this.target._y > this.area.y + this.area.height) {\r\n                offsetY = this.target._y - this.area.y - this.area.height;\r\n            } else {\r\n                offsetY = 0;\r\n            }\r\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动至设定的拖拽区域。\r\n     */\r\n    private backToArea(): void {\r\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\r\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\r\n    }\r\n\r\n    /**\r\n     * 舞台的抬起事件侦听函数。\r\n     * @param\te Event 对象。\r\n     */\r\n    private onStageMouseUp(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly || !this.target) return;\r\n        //target.mouseEnabled = true;\r\n\r\n        if (this.hasInertia) {\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\r\n            }\r\n\r\n            this._offsetX = this._offsetY = 0;\r\n            var len: number = this._offsets.length;\r\n            var n: number = Math.min(len, 6);\r\n            var m: number = this._offsets.length - n;\r\n            for (var i: number = len - 1; i > m; i--) {\r\n                this._offsetY += this._offsets[i--];\r\n                this._offsetX += this._offsets[i];\r\n            }\r\n\r\n            this._offsetX = this._offsetX / n * 2;\r\n            this._offsetY = this._offsetY / n * 2;\r\n\r\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\r\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\r\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\r\n        } else if (this.elasticDistance > 0) {\r\n            this.checkElastic();\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 橡皮筋效果检测。\r\n     */\r\n    private checkElastic(): void {\r\n        var tx: number = NaN;\r\n        var ty: number = NaN;\r\n        if (this.target.x < this.area.x) tx = this.area.x;\r\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\r\n\r\n        if (this.target.y < this.area.y) ty = this.area.y;\r\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\r\n\r\n        if (!isNaN(tx) || !isNaN(ty)) {\r\n            var obj: any = {};\r\n            if (!isNaN(tx)) obj.x = tx;\r\n            if (!isNaN(ty)) obj.y = ty;\r\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动。\r\n     */\r\n    private tweenMove(): void {\r\n        this._offsetX *= this.ratio * this._elasticRateX;\r\n        this._offsetY *= this.ratio * this._elasticRateY;\r\n\r\n        this.target.x += this._offsetX;\r\n        this.target.y += this._offsetY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n\r\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\r\n            ILaya.systemTimer.clear(this, this.tweenMove);\r\n            if (this.elasticDistance > 0) this.checkElastic();\r\n            else this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结束拖拽。\r\n     */\r\n    private clear(): void {\r\n        if (this.target) {\r\n            this.clearTimer();\r\n            var sp = this.target;\r\n            this.target = null;\r\n            this._parent = null;\r\n            sp.event(Event.DRAG_END, this.data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class SpriteUtils {\r\n    /**\r\n     * @private\r\n     * @en Returns the smallest rectangular area object composed of two points on the stage coordinate system for the given display object Sprite.\r\n     * @param sprite The display object Sprite.\r\n     * @param x0 The X-axis coordinate of the first point.\r\n     * @param y0 The Y-axis coordinate of the first point.\r\n     * @param x1 The X-axis coordinate of the second point.\r\n     * @param y1 The Y-axis coordinate of the second point.\r\n     * @return The rectangle object Rectangle composed of the two points on the stage coordinate system.\r\n     * @zh 根据传入的显示对象 Sprite 和此显示对象上的两个点，返回这两点在舞台坐标系上组成的最小矩形区域对象。\r\n     * @param sprite 显示对象 Sprite。\r\n     * @param x0 点一的 X 轴坐标。\r\n     * @param y0 点一的 Y 轴坐标。\r\n     * @param x1 点二的 X 轴坐标。\r\n     * @param y1 点二的 Y 轴坐标。\r\n     * @return 两个点在舞台坐标系组成的矩形对象 Rectangle。\r\n     */\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\r\n        var newLTPoint: Point;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint: Point;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Calculates the global coordinates and scaling values of the specified Sprite display object, and returns a Rectangle object containing the calculated X and Y coordinates as well as the scaleX and scaleY values.\r\n     * @param sprite The Sprite object to calculate.\r\n     * @returns The Rectangle object with the calculated values.\r\n     * @zh 计算传入的显示对象 Sprite 在全局坐标系中的坐标和缩放值，返回一个 Rectangle 对象，存放计算出的坐标 X 值、Y 值、ScaleX 值和 ScaleY 值。\r\n     * @param\tsprite Sprite 对象。\r\n     * @return  矩形对象 Rectangle。\r\n     */\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\r\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the transform of a specified area relative to the top-left corner of the window.\r\n     * @param coordinateSpace The coordinate space, must not be a Stage reference.\r\n     * @param x The x coordinate relative to the `coordinateSpace`.\r\n     * @param y The y coordinate relative to the `coordinateSpace`.\r\n     * @returns An object containing the transformed x, y coordinates, and scale factor.\r\n     * @zh 获取指定区域内相对于窗口左上角的transform。\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @returns 包含转换后的x、y坐标以及缩放因子的对象\r\n     */\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\r\n        var stage = ILaya.stage;\r\n\r\n        // coordinateSpace的全局缩放、坐标\r\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\r\n        // canvas的transform矩阵\r\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\r\n        // 在矩阵变化前前记录的canvas的坐标\r\n        var canvasLeft: number = canvasMatrix.tx;\r\n        var canvasTop: number = canvasMatrix.ty;\r\n\r\n        // 把矩阵转回0度，得到正确的画布缩放比\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        // 组合画布缩放和舞台适配缩放\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        // 画布是否处于正常角度的垂直角度，-90或90度\r\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\r\n        var tx: number, ty: number;\r\n\r\n        if (perpendicular) {\r\n            // 在舞台上的坐标\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n\r\n            // 设置了screenMode = horizontal\r\n            if (stage.canvasDegree == 90) {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\r\n            else {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        // 没有canvas旋转\r\n        else {\r\n            // 在舞台上的坐标\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n\r\n            // 在浏览器窗口上的坐标\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n\r\n        // Safari兼容\r\n        ty += stage['_safariOffsetY'];\r\n\r\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\r\n        var domScaleX: number, domScaleY: number;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        } else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n\r\n    /**\r\n     * @en Make a DOM element fit within a specific area of the stage.\r\n     * @param dom The reference to the DOM element.\r\n     * @param coordinateSpace The coordinate space. It should not be a reference to Stage.\r\n     * @param x The x coordinate relative to the coordinateSpace.\r\n     * @param y The y coordinate relative to the coordinateSpace.\r\n     * @param width The width of the area.\r\n     * @param height The height of the area.\r\n     * @zh 使DOM元素适应舞台内指定区域。\r\n     * @param\tdom\t\t\t\tDOM元素引用\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @param\twidth\t\t\t宽度\r\n     * @param\theight\t\t\t高度\r\n     */\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\"\r\n        }\r\n\r\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n\r\n        // 设置dom样式\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n    \r\n\r\n    /**\r\n     * @private\r\n     * @en Reorders the passed array of items based on the Z property of the child items.\r\n     * Returns a Boolean value indicating whether the array has been reordered.\r\n     * @param array The array of child objects.\r\n     * @return A Boolean value indicating if the array has been reordered.\r\n     * @zh 根据子项的 Z 属性值对传入的数组列表进行重新排序。\r\n     * 返回一个 Boolean 值，表示是否已重新排序。\r\n     * @param array 子对象数组。\r\n     * @return Boolean 值，表示是否已重新排序。\r\n     */\r\n    static updateOrder(array: any[]): boolean {\r\n        if (!array || array.length < 2) return false;\r\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\r\n                else break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { Context } from \"../renders/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BoundsStyle } from \"./css/BoundsStyle\";\r\nimport { CacheStyle } from \"./css/CacheStyle\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Node } from \"./Node\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Dragging } from \"../utils/Dragging\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Scene } from \"./Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport type { Material } from \"../resource/Material\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { BaseRenderNode2D } from \"../NodeRender2D/BaseRenderNode2D\";\r\nimport type { Stage } from \"./Stage\";\r\n\r\n/**\r\n * @en Sprite is a basic display list node for displaying graphical content. By default, Sprite does not accept mouse events. Through the graphics API, images or vector graphics can be drawn, supporting operations like rotation, scaling, translation, and more. Sprite also functions as a container class, allowing the addition of multiple child nodes.\r\n * @zh Sprite是基本的显示图形的显示列表节点。Sprite默认不接受鼠标事件。通过graphics可以绘制图片或者矢量图，支持旋转，缩放，位移等操作。Sprite同时也是容器类，可用来添加多个子节点。\r\n */\r\nexport class Sprite extends Node {\r\n    /**@internal */\r\n    _x: number = 0;\r\n    /**@internal */\r\n    _y: number = 0;\r\n    /**@internal */\r\n    _width: number = 0;\r\n    /**@internal */\r\n    _height: number = 0;\r\n    /**\r\n     * @internal\r\n     * @en X anchor point, value ranges from 0 to 1. Setting anchorX ultimately changes the node's pivot point through the pivotX value.\r\n     * @zh X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。\r\n     */\r\n    _anchorX: number = 0;\r\n    /**\r\n     * @internal\r\n     * @en Y anchor point, value ranges from 0 to 1. Setting anchorY ultimately changes the node's pivot point through the pivotY value.\r\n     * @zh Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。\r\n     */\r\n    _anchorY: number = 0;\r\n    /**@internal */\r\n    _visible: boolean = true;\r\n    /**\r\n     * @internal\r\n     * @en Mouse state, 0: auto, 1: mouseEnabled=false, 2: mouseEnabled=true.\r\n     * @zh 鼠标状态，0:auto，1:mouseEnabled=false，2:mouseEnabled=true。\r\n     */\r\n    _mouseState: number = 0;\r\n    /**\r\n     * @internal\r\n     * @en Z-order for sorting, higher values are displayed in front.\r\n     * @zh z排序，数值越大越靠前。\r\n     */\r\n    _zOrder: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _transform: Matrix | null = null;\r\n    /**@internal */\r\n    protected _tfChanged: boolean = false;\r\n    /**@internal */\r\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\r\n    /**@internal */\r\n    private _texture: Texture | null = null;\r\n    /**@internal */\r\n    private _sizeFlag: number = 0;\r\n\r\n    //以下变量为系统调用，请不要直接使用\r\n    /**@internal */\r\n    _style: SpriteStyle = SpriteStyle.EMPTY;\r\n    /**@internal */\r\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\r\n    private _filterArr: Filter[] = null;\r\n    /**@internal */\r\n    _boundStyle: BoundsStyle | null = null;\r\n    /**@internal */\r\n    _graphics: Graphics | null = null;\r\n    /**@internal */\r\n    _renderNode: BaseRenderNode2D = null;\r\n    /**\r\n     * @internal\r\n     */\r\n    _ownGraphics: boolean = false;\r\n\r\n    /**\r\n     @en For non-UI component display object nodes (container objects or display objects without image resources), specifies whether the mouse events penetrate this object's collision detection. `true` means the object is penetrable, `false` means it is not penetrable.\r\n    * When penetrable, the engine will no longer detect this object and will recursively check its child objects until it finds the target object or misses all objects.\r\n    * When not penetrable, the node's width and height define the mouse collision area (a non-penetrable rectangular area). If the rectangular collision area does not meet the requirements, you can use the drawing area of the hit area as the collision area. The hit area takes precedence over width and height of node as the non-penetrable mouse collision area.\r\n    * Note that for UI object nodes with a set skin property, once a skin texture resource is set, this property becomes ineffective, and the rectangular area drawn by the texture will always be non-penetrable unless it does not accept mouse events or a non-clickable area is set.\r\n    *@zh 用于非UI组件显示对象节点（容器对象或没有设置图像资源的显示对象），鼠标事件与此对象在碰撞检测时，是否穿透。ture为可穿透，false为不可穿透。\r\n     * 可穿透时，引擎不再检测本对象，而会递归检测子对象，直到找到命中的目标对象或者未命中任何对象。\r\n     * 不可穿透时，以节点宽高为鼠标碰撞区（矩形的不可穿透区域）。如果矩形碰撞区不能满足需求，可以将点击区域的绘制图形作为碰撞区，绘制区域优先于宽高作为不可穿透的鼠标碰撞区域。\r\n     * 注意，可以设置skin属性的UI对象节点，当设置了skin纹理资源之后，该属性设置失效，纹理绘制的矩形区域内会始终处于不可穿透状态。除非不接受鼠标事件或设置不可点击区域。\r\n     */\r\n    mouseThrough: boolean = false;\r\n    /**\r\n     * @en Under the premise that this object is non-penetrable (mouseThrough is false), specify whether the mouse event capture detection prioritizes this object.  When set to true, the object itself is prioritized for detection.  When set to false, the child objects are prioritized.\r\n     * When set to prioritize the object itself, the object is detected first.  If the object itself is not hit, the detection is directly interrupted, indicating that no target was hit.  If the object itself is hit, further recursive detection is performed on its child objects until the final mouse hit target is found or all child nodes have been checked.\r\n     * When set to prioritize child objects, the child objects are recursively detected first.  If a child object is hit, the detection is interrupted and the hit target is obtained.  If all child nodes have been checked and no child object is hit, then the detection checks if the object itself is hit.\r\n     * In most cases, prioritizing the detection of child objects is advisable unless the developer does not care about the mouse event detection results of the current node's child nodes.  For example, when child nodes are certainly within the width and height range of the parent node's container, there is no need for recursive detection layer by layer if the mouse click does not occur within the parent node's area.\r\n     * Using this property appropriately can reduce the nodes for mouse event detection and improve performance.\r\n     * @zh 在本对象为不可穿透（mouseThrough为false）的前提下，指定鼠标事件捕获检测是否优先检测本对象。为`true`时优先检测本对象，为`false`时优先检测子对象。\r\n     * 优先检测本对象时，如果本对象没有被检测命中，会中断检测，表示没有命中目标；如果本对象被检测命中，则进一步递归检测其子对象，直到找到鼠标最终的命中目标或所有子节点都检测完毕。\r\n     * 优先检测子对象时，先递归检测其子对象，如果子对象被检测命中，则中断检测，获得命中目标。如果所有子节点都检测完毕，仍未检测命中任何子对象，最后再检测本对象是否被命中；\r\n     * 大多数情况下需要优先检测子对象，除非开发者并不关心当前节点的子节点的鼠标事件检测结果，也就是以当前节点作为其子节点的鼠标事件检测依据。例如，子节点肯定在父节点的容器宽高范围内，当鼠标点击不发生在父节点范围内的区域时，就不必层层递归检测了。\r\n     * 合理使用本属性，能减少鼠标事件检测的节点，提高性能。\r\n     */\r\n    hitTestPrior: boolean = false;\r\n    /**\r\n     * @en Whether to automatically calculate the width and height of the node. The default value is `false`, which does not automatically calculate and offers better performance.\r\n     * If you want to get the width and height based on the drawn content, you can set this property to `true`, or use the getBounds method to obtain them, which has some impact on performance.\r\n     * @zh 是否自动计算节点的宽高数据。默认值为 false，不自动计算，性能更佳。\r\n     * 如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取，对性能有一定影响。\r\n     */\r\n    autoSize: boolean = false;\r\n    /** \r\n    * @internal\r\n    * @en If the node needs to load related skins but placed in different domains, you can set it here.\r\n    * @zh 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置。\r\n    **/\r\n    _skinBaseUrl: string;\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc\r\n     * @en Destroy the sprite.\r\n     * @param destroyChild Whether to destroy child nodes. Default is true.\r\n     * @zh 销毁精灵。\r\n     * @param destroyChild 是否删除子节点。默认为 true。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._style && this._style.recover();\r\n        this._cacheStyle && this._cacheStyle.recover();\r\n        this._boundStyle && this._boundStyle.recover();\r\n        this._transform && this._transform.recover();\r\n        this._style = null;\r\n        this._cacheStyle = null;\r\n        this._boundStyle = null;\r\n        this._transform = null;\r\n        this._texture && this._texture._removeReference();\r\n        this._texture = null;\r\n        this._graphics && this._ownGraphics && this._graphics.destroy();\r\n        this._graphics = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @en Get the scene the sprite belongs to.\r\n     * @zh 获取所属的场景。\r\n     */\r\n    get scene(): Scene {\r\n        return <Scene>this._scene;\r\n    }\r\n\r\n    /**\r\n     * @en Re-sort by zOrder.\r\n     * @zh 根据 zOrder 进行重新排序。\r\n     */\r\n    updateZOrder(): void {\r\n        SpriteUtils.updateOrder(this._children) && this.repaint();\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Get the bounds style.\r\n    * @returns The bounds style.\r\n    * @zh 获取边界样式。\r\n    * @returns 边界样式。\r\n    */\r\n    _getBoundsStyle(): BoundsStyle {\r\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\r\n        return this._boundStyle;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set custom render.\r\n     * @zh 设置自定义渲染。\r\n     */\r\n    _setCustomRender(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Enable or disable custom rendering. Custom rendering must be enabled to use the customRender function.\r\n     * @param {boolean} b Whether to enable custom rendering.\r\n     * @zh 设置是否开启自定义渲染，只有开启自定义渲染，才能使用 customRender 函数渲染。\r\n     * @param {boolean} b 是否开启自定义渲染。\r\n     */\r\n    set customRenderEnable(b: boolean) {\r\n        if (b) {\r\n            this._renderType |= SpriteConst.CUSTOM;\r\n            this._setCustomRender();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Specifies whether the display object is cached as a static image. When cacheAs is set, changes in child objects will automatically update the cache. You can also manually call the reCache method to update the cache.\r\n     * It is recommended to cache \"complex content\" that does not change frequently as a static image to greatly improve rendering performance. cacheAs has three values: \"none\", \"normal\", and \"bitmap\".\r\n     * The default is \"none,\" which does not perform any caching.\r\n     * When set to \"normal,\" command caching is used.\r\n     * When set to \"bitmap,\" renderTarget caching is used.\r\n     * Disadvantages of the renderTarget caching mode: it creates additional renderTarget objects, increasing memory overhead, has a maximum cache area limit of 2048, and can increase CPU overhead with constant redrawing. Advantages: it significantly reduces draw calls and provides the highest rendering performance.\r\n     * Disadvantages of the command caching mode: it only reduces node traversal and command organization and does not reduce the number of draw calls, resulting in moderate performance. Advantages: it has no additional memory overhead and does not require renderTarget support.\r\n     * @zh 指定显示对象是否缓存为静态图像，cacheAs 时，子对象发生变化，会自动重新缓存，同时也可以手动调用 reCache 方法更新缓存。\r\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs 有 \"none\"，\"normal\" 和 \"bitmap\" 三个值可选。\r\n     * 默认为 \"none\"，不做任何缓存。\r\n     * 当值为 \"normal\" 时，使用命令缓存。\r\n     * 当值为 \"bitmap\" 时，使用 renderTarget 缓存。\r\n     * renderTarget 缓存模式缺点：会额外创建 renderTarget 对象，增加内存开销，缓存面积有最大 2048 限制，不断重绘时会增加 CPU 开销。优点：大幅减少 drawcall，渲染性能最高。\r\n     * 命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少 drawcall 数，性能中等。优点：没有额外内存开销，无需 renderTarget 支持。\r\n     */\r\n    get cacheAs(): string {\r\n        return this._getCacheStyle().userSetCache;\r\n    }\r\n\r\n    set cacheAs(value: string) {\r\n        if (value === this._cacheStyle.userSetCache) return;\r\n        this._getCacheStyle().userSetCache = value;\r\n\r\n        if (this.mask && value === 'normal') return;\r\n        if (value == 'bitmap' || value == 'normal') {\r\n            this._renderType |= SpriteConst.CANVAS;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CANVAS;\r\n        }\r\n        //this._checkCanvasEnable();\r\n        this.repaint();\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。\r\n     * @deprecated\r\n     */\r\n    get staticCache(): boolean {\r\n        return this._getCacheStyle().staticCache;\r\n    }\r\n\r\n    /**@deprecated */\r\n    set staticCache(value: boolean) {\r\n        this._getCacheStyle().staticCache = value;\r\n        if (!value) this.reCache();\r\n    }\r\n\r\n    /**\r\n     * @en The rendering component node of the sprite.\r\n     * @zh 精灵的渲染组件节点。\r\n     */\r\n    get renderNode2D() {\r\n        return this._renderNode;\r\n    }\r\n\r\n    set renderNode2D(value: BaseRenderNode2D) {\r\n        if (value) {\r\n            this._renderType |= SpriteConst.RENDERNODE2D;\r\n            this._renderNode = value;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.RENDERNODE2D;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @en Call this method to refresh the cache when cacheAs is set.\r\n     * @zh 在设置 cacheAs 的情况下，调用此方法会重新刷新缓存。\r\n     */\r\n    reCache(): void {\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n    }\r\n\r\n    /**\r\n     * @en Get the repaint type.\r\n     * @returns The repaint type.\r\n     * @zh 获取重绘类型。\r\n     * @returns 重绘类型。\r\n     */\r\n    getRepaint(): number {\r\n        return this._repaint;\r\n    }\r\n\r\n    /** \r\n     * @internal\r\n     * @en Set the x coordinate value.\r\n     * @param value The x coordinate value.\r\n     * @zh 设置 x 坐标值。\r\n     * @param value x 坐标值。\r\n     */\r\n    _setX(value: number): void {\r\n        this._x = value;\r\n    }\r\n\r\n    /** \r\n     * @internal\r\n     * @en Set the y coordinate value.\r\n     * @param  value The y coordinate value.\r\n     * @zh 设置 y 坐标值。\r\n     * @param  value y 坐标值。\r\n     */\r\n    _setY(value: number): void {\r\n        this._y = value;\r\n    }\r\n\r\n    /**\r\n     * @en The x coordinate value relative to the parent container.\r\n     * @zh 显示对象相对于父容器的水平方向坐标值。\r\n     */\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._x !== value) {\r\n            this._setX(value);\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._getCacheStyle().maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The y coordinate value relative to the parent container.\r\n     * @zh 显示对象相对于父容器的垂直方向坐标值。\r\n     */\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._y !== value) {\r\n            this._setY(value);\r\n\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._getCacheStyle().maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The width of the Node, in pixels\r\n     * @zh 节点的宽度，单位为像素。\r\n     */\r\n    get width(): number {\r\n        return this.get_width();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this.set_width(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the width of the Node.\r\n     * @param number value  The width value, in pixels.\r\n     * @zh 设置节点的宽度。\r\n     * @param number value  宽度值，以像素为单位。\r\n     */\r\n    set_width(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~1;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 1;\r\n        else\r\n            this._sizeFlag &= ~1;\r\n        if (this._width !== value || flag != this._sizeFlag) {\r\n            this._width = value;\r\n            this._setWidth(value);\r\n            this._setPivotX(this._anchorX * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the width of the Node, in pixels\r\n     * @zh 获取节点的宽度。以像素为单位。\r\n     */\r\n    get_width(): number {\r\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\r\n        if (this.texture) return this.texture.width;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().width;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the Node, in pixels.\r\n     * @zh 节点的高度，单位为像素。\r\n     */\r\n    get height(): number {\r\n        return this.get_height();\r\n    }\r\n\r\n    set height(value: number) {\r\n        this.set_height(value);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Set the height of the Node, in pixels\r\n    * @zh 设置节点的高度，单位为像素。\r\n    */\r\n    set_height(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~2;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 2;\r\n        else\r\n            this._sizeFlag &= ~2;\r\n        if (this._height !== value || flag != this._sizeFlag) {\r\n            this._height = value;\r\n            this._setHeight(value);\r\n            this._setPivotY(this._anchorY * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @en Get the height of the Node, in pixels.\r\n    * @zh 获取节点的高度，以像素为单位。\r\n    */\r\n    get_height(): number {\r\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\r\n        if (this.texture) return this.texture.height;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().height;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Check if the width is set.\r\n     * @returns True if the width is set, otherwise false.\r\n     * @zh 检查是否设置了宽度。\r\n     * @returns True 表示宽度已设置，否则为 False。\r\n     */\r\n    get _isWidthSet() {\r\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Check if the height is set.\r\n     * @returns True if the height is set, otherwise false.\r\n     * @zh 检查是否设置了高度。\r\n     * @returns True 表示高度已设置，否则为 False。\r\n     */\r\n    get _isHeightSet() {\r\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setWidth(value: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _setHeight(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Called when the layout should be refreshed.\r\n     * @zh 当需要刷新布局时调用。\r\n     */\r\n    protected _shouldRefreshLayout() {\r\n    }\r\n\r\n    /**\r\n     * @en The display width of the object, in pixels, including X axis scaling.\r\n     * @returns The display width.\r\n     * @zh 对象的显示宽度（以像素为单位），包含X轴缩放。\r\n     * @returns 显示宽度。\r\n     */\r\n    get displayWidth(): number {\r\n        return this.width * this.scaleX;\r\n    }\r\n\r\n    /**\r\n    * @en The display height of the object, in pixels, including Y axis scaling.\r\n    * @returns The display height.\r\n    * @zh 对象的显示高度（以像素为单位），包含Y轴缩放。\r\n    * @returns 显示高度。\r\n    */\r\n    get displayHeight(): number {\r\n        return this.height * this.scaleY;\r\n    }\r\n\r\n    /**\r\n     * @en Set the bounds of the object. If set, getBounds will not be used to calculate the bounds. Proper use can improve performance.\r\n     * @param bound The bounds rectangle.\r\n     * @zh 设置对象的边界大小，如果设置，则不再通过getBounds计算边界。合理使用能提高性能。\r\n     * @param bound 边界矩形区域\r\n     */\r\n    setSelfBounds(bound: Rectangle): void {\r\n        this._getBoundsStyle().userBounds = bound;\r\n    }\r\n\r\n    /**\r\n     * @en Get the rectangle display area of the object in the parent container's coordinate system.\r\n     * Note: This calculation is complex, use sparingly.\r\n     * @return The rectangle area.\r\n     * @zh 获取本对象在父容器坐标系的矩形显示区域。\r\n     * 注意：计算量较大，尽量少用。\r\n     * @returns 矩形区域。\r\n     */\r\n    getBounds(): Rectangle {\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\r\n    }\r\n\r\n    /**\r\n     * @en Get the rectangle display area of the object in its own coordinate system.\r\n     * Note: This calculation is complex, use sparingly.\r\n     * @returns The rectangle area.\r\n     * @zh 获取本对象在自己坐标系的矩形显示区域。\r\n     * 注意：计算量较大，尽量少用。\r\n     * @returns 矩形区域。\r\n     */\r\n    getSelfBounds(): Rectangle {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\r\n        if (!this._graphics && this._children.length === 0 && !this._texture)\r\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the polygon vertex list of the display area of the object in the parent container's coordinate system.\r\n     * @param  ifRotate Whether to consider the rotation of the object itself. \r\n     * If true, and the object has rotation, the vertices will be calculated based on the object's rotated position.\r\n     * If false, the vertices will be calculated based on the object's unrotated position, even if the object has rotation.\r\n     * @returns  The vertex list in the format: [x1, y1, x2, y2, x3, y3, ...].\r\n     * @zh 获取本对象在父容器坐标系的显示区域多边形顶点列表。\r\n     * @param  ifRotate （可选）是否考虑对象自身的旋转。\r\n     * 如果为 true，且对象有旋转，则顶点会根据对象旋转后的位置进行计算。\r\n     * 如果为 false，则顶点会根据对象未旋转的位置进行计算，即使对象有旋转。\r\n     * @returns 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\r\n        let pX: number = 0, pY: number = 0;\r\n        if (this._style) {\r\n            pX = this.pivotX;\r\n            pY = this.pivotY;\r\n            ifRotate = ifRotate || (this._style.rotation !== 0);\r\n            if (this._style.scrollRect) {\r\n                pX += this._style.scrollRect.x;\r\n                pY += this._style.scrollRect.y;\r\n            }\r\n        }\r\n        let pList: any[] = this._getBoundPointsM(ifRotate);\r\n        if (!pList || pList.length < 1) return pList;\r\n\r\n        if (pList.length != 8) {\r\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\r\n        }\r\n\r\n        if (!this.transform) {\r\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\r\n            return pList;\r\n        }\r\n        let tPoint = Point.TEMP;\r\n        let len = pList.length;\r\n        for (let i = 0; i < len; i += 2) {\r\n            tPoint.x = pList[i];\r\n            tPoint.y = pList[i + 1];\r\n            this.toParentPoint(tPoint);\r\n            pList[i] = tPoint.x;\r\n            pList[i + 1] = tPoint.y;\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the vertex list of the display area polygon in its own coordinate system.\r\n     * @param ifRotate (Optional) Whether to consider the rotation of the child objects when calculating their vertices.\r\n     * If true, and a child object has rotation, the child's vertices will be calculated based on its rotated position.\r\n     * If false, the child's vertices will be calculated based on its unrotated position, even if it has rotation.\r\n     * @returns A list of vertices. Structure: [x1, y1, x2, y2, x3, y3, ...].\r\n     * @zh 获取自己坐标系的显示区域多边形顶点列表。\r\n     * @param ifRotate （可选）在计算子对象的顶点时是否考虑子对象的旋转。\r\n     * 如果为 true,且子对象有旋转,则子对象的顶点将根据其旋转后的位置来计算。\r\n     * 如果为 false,则子对象的顶点将根据其未旋转的位置来计算,即使子对象有旋转。\r\n     * @returns 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\r\n        if (!this._boundStyle) this._getBoundsStyle();\r\n        let rst = this._boundStyle.temBM;\r\n        if (!rst) rst = this._boundStyle.temBM = [];\r\n        if (this._style.scrollRect) {\r\n            rst.length = 0;\r\n            var rec: Rectangle = Rectangle.TEMP;\r\n            rec.copyFrom(this._style.scrollRect);\r\n            rst.push(...rec._getBoundPoints());\r\n            return rst;\r\n        }\r\n        let pList: any[];\r\n        if (this._graphics) {\r\n            pList = this._graphics.getBoundPoints();\r\n        } else {\r\n            rst.length = 0;\r\n            pList = rst;\r\n        }\r\n        if (this._texture) {\r\n            rec = Rectangle.TEMP;\r\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\r\n            pList.push(...rec._getBoundPoints());\r\n        }\r\n        //处理子对象区域\r\n        let chidren = this._children;\r\n        for (let i = 0, n = chidren.length; i < n; i++) {\r\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\r\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\r\n                let cList = child._boundPointsToParent(ifRotate);\r\n                if (cList) {\r\n                    if (pList)\r\n                        pList.push(...cList);\r\n                    else\r\n                        pList = cList;\r\n                }\r\n            }\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @en Returns the display area of the drawing object (`Graphics`) in this instance, excluding child objects.\r\n     * @param realSize (Optional) Use the actual size of the image, default is false.\r\n     * @returns A Rectangle object representing the obtained display area.\r\n     * @zh 返回此实例中绘图对象（`Graphics`）的显示区域，不包括子对象。\r\n     * @param realSize （可选）使用图片的真实大小，默认为false。\r\n     * @returns 一个 Rectangle 对象，表示获取到的显示区域。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        return this._graphics.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the cache style.\r\n     * @return The cache style (CacheStyle).\r\n     * @zh 获取缓存样式。\r\n     * @return 缓存样式 (CacheStyle)。\r\n     */\r\n    _getCacheStyle(): CacheStyle {\r\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\r\n        return this._cacheStyle;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Get the sprite style.\r\n     * @return The sprite style (SpriteStyle).\r\n     * @zh 获取精灵样式。\r\n     * @return 精灵样式 (SpriteStyle)。\r\n     */\r\n    getStyle(): SpriteStyle {\r\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\r\n        return this._style;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Set the sprite style.\r\n     * @param value The sprite style to set.\r\n     * @zh 设置精灵样式。\r\n     * @param value 要设置的精灵样式。\r\n     */\r\n    setStyle(value: SpriteStyle): void {\r\n        this._style = value;\r\n    }\r\n\r\n    /**\r\n     * @en The scale factor on the X axis, with a default value of 1. Setting a negative value can achieve a horizontal flip effect, e.g., scaleX=-1.\r\n     * @zh X轴缩放值，默认值为1。设置为负数可以实现水平反转效果，例如scaleX=-1。\r\n     */\r\n    get scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set scaleX(value: number) {\r\n        this.set_scaleX(value);\r\n    }\r\n\r\n    /**\r\n     * @en The scale factor on the Y axis, with a default value of 1. Setting a negative value can achieve a vertical flip effect, e.g., scaleY=-1.\r\n     * @zh Y轴缩放值，默认值为1。设置为负数可以实现垂直反转效果，例如scaleY=-1。\r\n     */\r\n    get scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    set scaleY(value: number) {\r\n        this.set_scaleY(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the scale factor on the X axis and update the transform and layout if necessary.\r\n     * @param value The scale factor to set on the X axis.\r\n     * @zh 设置X轴缩放值,并在必要时更新变换和布局。\r\n     * @param value 要设置的X轴缩放值。\r\n     */\r\n    set_scaleX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleX(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @en Get the scale factor on the X axis.\r\n     * @return The scale factor on the X axis.\r\n     * @zh 获取X轴缩放值。\r\n     * @return X轴缩放值。\r\n     */\r\n    get_scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the scale factor on the Y axis and update the transform and layout if necessary.\r\n     * @param value The scale factor to set on the Y axis.\r\n     * @zh 设置Y轴缩放值,并在必要时更新变换和布局。\r\n     * @param value 要设置的Y轴缩放值。\r\n     */\r\n    set_scaleY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleY !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleY(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the scale factor on the Y axis.\r\n     * @return The scale factor on the Y axis.\r\n     * @zh 获取Y轴缩放值。\r\n     * @return Y轴缩放值。\r\n     */\r\n    get_scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the scale factor on the X axis.\r\n     * @param value The scale factor to set on the X axis.\r\n     * @zh 设置X轴缩放值。\r\n     * @param value 要设置的X轴缩放值。\r\n     */\r\n    _setScaleX(value: number): void {\r\n        this._style.scaleX = value;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the scale factor on the Y axis.\r\n     * @param value The scale factor to set on the Y axis.\r\n     * @zh 设置Y轴缩放值。\r\n     * @param value 要设置的Y轴缩放值。\r\n     */\r\n    _setScaleY(value: number): void {\r\n        this._style.scaleY = value;\r\n    }\r\n\r\n    /**\r\n     * @en The rotation angle, in degrees, with a default value of 0.\r\n     * @zh 旋转角度，默认值为0。以角度为单位。\r\n     */\r\n    get rotation(): number {\r\n        return this._style.rotation;\r\n    }\r\n\r\n    set rotation(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.rotation !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the rotation angle.\r\n     * @param value The rotation angle to set, in degrees.\r\n     * @zh 设置旋转角度。\r\n     * @param value 要设置的旋转角度，以角度为单位。\r\n     */\r\n    _setRotation(value: number): void {\r\n        this.getStyle().rotation = value;\r\n    }\r\n\r\n    /**\r\n     * @en The horizontal skew angle, in degrees, with a default value of 0.\r\n     * @zh 水平倾斜角度，默认值为0。以角度为单位。\r\n     */\r\n    get skewX(): number {\r\n        return this._style.skewX;\r\n    }\r\n\r\n    set skewX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewX !== value) {\r\n            this._setSkewX(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @internal\r\n      * @en Set the horizontal skew angle.\r\n      * @param value The horizontal skew angle to set, in degrees.\r\n      * @zh 设置水平倾斜角度。\r\n      * @param value 要设置的水平倾斜角度,以角度为单位。\r\n      */\r\n    _setSkewX(value: number): void {\r\n        this._style.skewX = value;\r\n    }\r\n\r\n    /**\r\n      * @en The vertical skew angle, in degrees, with a default value of 0.\r\n      * @zh 垂直倾斜角度,默认值为0。以角度为单位。\r\n      */\r\n    get skewY(): number {\r\n        return this._style.skewY;\r\n    }\r\n\r\n    set skewY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewY !== value) {\r\n            this._setSkewY(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the vertical skew angle.\r\n     * @param value The vertical skew angle to set, in degrees.\r\n     * @zh 设置垂直倾斜角度。\r\n     * @param value 要设置的垂直倾斜角度,以角度为单位。\r\n     */\r\n    _setSkewY(value: number): void {\r\n        this._style.skewY = value;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Create a transform matrix.\r\n     * @return The created transform matrix.\r\n     * @zh 创建变换矩阵。\r\n     * @return 创建的变换矩阵。\r\n     */\r\n    _createTransform(): Matrix {\r\n        return Matrix.create();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected \r\n     * @en Adjust the transform matrix.\r\n     * @return The adjusted transform matrix.\r\n     * @zh 调整变换矩阵。\r\n     * @return 调整后的变换矩阵。\r\n     */\r\n    protected _adjustTransform(): Matrix {\r\n        this._tfChanged = false;\r\n        var style = this._style;\r\n        var sx = style.scaleX, sy = style.scaleY;\r\n        var sskx = style.skewX;\r\n        var ssky = style.skewY;\r\n        var rot = style.rotation;\r\n        var m = this._transform || (this._transform = this._createTransform());\r\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\r\n            m._bTransform = true;\r\n            var skx = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\r\n            var sky = (rot + ssky) * 0.0174532922222222;\r\n            var cx = Math.cos(sky);\r\n            var ssx = Math.sin(sky);\r\n            var cy = Math.sin(skx);\r\n            var ssy = Math.cos(skx);\r\n            m.a = sx * cx;\r\n            m.b = sx * ssx;\r\n            m.c = -sy * cy;\r\n            m.d = sy * ssy;\r\n            m.tx = m.ty = 0;\r\n        } else {\r\n            m.identity();\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTransform(value: Matrix): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en The matrix information of the object. By setting the matrix, node rotation, scaling, and displacement effects can be achieved.\r\n     * @zh 对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。\r\n     */\r\n    get transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        this.set_transform(value);\r\n    }\r\n\r\n    /**\r\n      * @internal\r\n      * @en Get the transform matrix.\r\n      * @return The transform matrix.\r\n      * @zh 获取变换矩阵。\r\n      * @return 变换矩阵。\r\n      */\r\n    get_transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the transform matrix and update the object's position and render type.\r\n     * @param value The transform matrix to set.\r\n     * @zh 设置变换矩阵,并更新对象的位置和渲染类型。\r\n     * @param value 要设置的变换矩阵。\r\n     */\r\n    set_transform(value: Matrix): void {\r\n        this._tfChanged = false;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        value.copyTo(m);\r\n        this._setTransform(m);\r\n        //设置transform时重置x,y\r\n        if (value) {\r\n            this._x = m.tx;\r\n            this._y = m.ty;\r\n            m.tx = m.ty = 0;\r\n        }\r\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\r\n        else {\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        this.parentRepaint();\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the pivot point's x coordinate.\r\n     * @return The pivot point's x coordinate.\r\n     * @zh 获取轴心点的 x 坐标。\r\n     * @return 轴心点的 x 坐标。\r\n     */\r\n    _getPivotX(): number {\r\n        return this._style.pivotX;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the pivot point's x coordinate.\r\n     * @param value The x coordinate to set.\r\n     * @zh 设置轴心点的 x 坐标。\r\n     * @param value 要设置的 x 坐标。\r\n     */\r\n    _setPivotX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotX = value;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the pivot point's y coordinate.\r\n     * @return The pivot point's y coordinate.\r\n     * @zh 获取轴心点的 y 坐标。\r\n     * @return 轴心点的 y 坐标。\r\n     */\r\n    _getPivotY(): number {\r\n        return this._style.pivotY;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the pivot point's y coordinate.\r\n     * @param value The y coordinate to set.\r\n     * @zh 设置轴心点的 y 坐标。\r\n     * @param value 要设置的 y 坐标。\r\n     */\r\n    _setPivotY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotY = value;\r\n    }\r\n\r\n    /**\r\n     * @en The x-axis pivot point position, in pixels, with a default value of 0. The pivot point affects the object's position, scaling center, and rotation center.\r\n     * @zh X 轴轴心点的位置，以像素为单位，默认为 0。轴心点会影响对象的位置、缩放中心和旋转中心。\r\n     */\r\n    get pivotX(): number {\r\n        return this._getPivotX();\r\n    }\r\n\r\n    set pivotX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotX != value) {\r\n            this._setPivotX(value);\r\n            let t = this.width;\r\n            if (t != 0) this._anchorX = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The y-axis pivot point position, in pixels, with a default value of 0. The pivot point affects the object's position, scaling center, and rotation center.\r\n     * @zh Y 轴轴心点的位置，以像素为单位，默认为 0。轴心点会影响对象的位置、缩放中心和旋转中心。\r\n     */\r\n    get pivotY(): number {\r\n        return this._getPivotY();\r\n    }\r\n\r\n    set pivotY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotY != value) {\r\n            this._setPivotY(value);\r\n            let t = this.height;\r\n            if (t != 0) this._anchorY = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The anchor point's x-coordinate, ranging from 0 to 1. Setting anchorX will ultimately change the node's pivot point through the pivotX value.\r\n     * @zh X 轴锚点,值为 0-1。设置 anchorX 值最终会通过 pivotX 值来改变节点的轴心点。\r\n     */\r\n    get anchorX(): number {\r\n        return this.get_anchorX();\r\n    }\r\n\r\n    /**\r\n      * @internal\r\n      * @en Get the anchor point's x-coordinate.\r\n      * @return The anchor point's x-coordinate.\r\n      * @zh 获取锚点的 x 坐标。\r\n      * @return 锚点的 x 坐标。\r\n      */\r\n    get_anchorX(): number {\r\n        return this._anchorX;\r\n    }\r\n\r\n    set anchorX(value: number) {\r\n        this.set_anchorX(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the anchor point's x-coordinate, ultimately changing the node's pivot point through the pivotX value.\r\n     * @param value The anchor point's x-coordinate to set.\r\n     * @zh 设置锚点的 x 坐标,最终会通过 pivotX 值来改变节点的轴心点。\r\n     * @param value 要设置的锚点的 x 坐标。\r\n     */\r\n    set_anchorX(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            if (value != null) {\r\n                this._setPivotX(value * this.width);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The anchor point's y-coordinate, ranging from 0 to 1. Setting anchorY will ultimately change the node's pivot point through the pivotY value.\r\n     * @zh Y 轴锚点，值为 0-1。设置 anchorY 值最终会通过 pivotY 值来改变节点的轴心点。\r\n     */\r\n    get anchorY(): number {\r\n        return this.get_anchorY();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the anchor point's y-coordinate.\r\n     * @return The anchor point's y-coordinate.\r\n     * @zh 获取锚点的 y 坐标。\r\n     * @return 锚点的 y 坐标。\r\n     */\r\n    get_anchorY(): number {\r\n        return this._anchorY;\r\n    }\r\n\r\n    set anchorY(value: number) {\r\n        this.set_anchorY(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the anchor point's y-coordinate, ultimately changing the node's pivot point through the pivotY value.\r\n     * @param value The anchor point's y-coordinate to set.\r\n     * @zh 设置锚点的 y 坐标,最终会通过 pivotY 值来改变节点的轴心点。\r\n     * @param value 要设置的锚点的 y 坐标。\r\n     */\r\n    set_anchorY(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            if (value != null) {\r\n                this._setPivotY(value * this.height);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the alpha value. If the value is not 1, the render type will be changed.\r\n     * @param value The alpha value to set.\r\n     * @zh 设置 alpha 值。如果值不为 1,则会改变渲染类型。\r\n     * @param value 要设置的 alpha 值。\r\n     */\r\n    _setAlpha(value: number): void {\r\n        if (this._style.alpha !== value) {\r\n            var style: SpriteStyle = this.getStyle();\r\n            style.alpha = value;\r\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\r\n            else this._renderType &= ~SpriteConst.ALPHA;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the alpha value.\r\n     * @return The alpha value.\r\n     * @zh 获取 alpha 值。\r\n     * @return alpha 值。\r\n     */\r\n    _getAlpha(): number {\r\n        return this._style.alpha;\r\n    }\r\n\r\n    /**\r\n     * @en The transparency value, ranging from 0 to 1, with a default value of 1 (opaque). Changing the alpha value will affect the drawcall.\r\n     * @zh 透明度,值为 0-1,默认值为 1(不透明)。更改 alpha 值会影响 drawcall。\r\n     */\r\n    get alpha(): number {\r\n        return this._getAlpha();\r\n    }\r\n\r\n    set alpha(value: number) {\r\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\r\n        this._setAlpha(value);\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the object is visible. The default value is true. If set to false, the node will not be rendered.\r\n     * @zh 表示对象是否可见,默认为 true。如果设置为 false,节点将不会被渲染。\r\n     */\r\n    get visible(): boolean {\r\n        return this.get_visible();\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.set_visible(value);\r\n    }\r\n\r\n    /**\r\n      * @internal\r\n      * @en Get the visibility value.\r\n      * @return The visibility value.\r\n      * @zh 获取可见性的值。\r\n      * @return 可见性的值。\r\n      */\r\n    get_visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @en Set the visibility value. If the value changes, the node will be redrawn.\r\n     * @param value The visibility value to set.\r\n     * @zh 设置可见性的值。如果值改变,节点将会被重绘。\r\n     * @param value 要设置的可见性的值。\r\n     */\r\n    set_visible(value: boolean): void {\r\n        if (this._visible !== value) {\r\n            this._visible = value;\r\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Specifies the blending mode to be used. Only \"lighter\" is currently supported.\r\n     * @zh 指定要使用的混合模式，目前只支持 \"lighter\"。\r\n     */\r\n    get blendMode(): string {\r\n        return this._style.blendMode;\r\n    }\r\n\r\n    set blendMode(value: string) {\r\n        if (this.getStyle().blendMode != value) {\r\n            this.getStyle().blendMode = value;\r\n            if (value && value != \"source-over\")\r\n                this._renderType |= SpriteConst.BLEND;\r\n            else\r\n                this._renderType &= ~SpriteConst.BLEND;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The drawing object, which encapsulates the interfaces for drawing bitmaps and vector graphics. All drawing operations of Sprite are implemented through Graphics.\r\n     * @zh 绘图对象。封装了绘制位图和矢量图的接口,Sprite 的所有绘图操作都是通过 Graphics 实现的。\r\n     */\r\n    get graphics(): Graphics {\r\n        if (!this._graphics) {\r\n            this.graphics = new Graphics();\r\n            this._ownGraphics = true;\r\n        }\r\n        return this._graphics;\r\n    }\r\n\r\n    set graphics(value: Graphics) {\r\n        this.setGraphics(value, false);\r\n    }\r\n\r\n    /**\r\n     * @en Set the Graphics object for drawing.\r\n     * @param value The Graphics object to set.\r\n     * @param transferOwnership Whether to set the Graphics object to the belonging node (i.e., transfer the ownership of the Graphics object to the Sprite). If true, the Sprite will be responsible for destroying the Graphics object when it's no longer needed.\r\n     * @zh 设置用于绘制的 Graphics 对象。\r\n     * @param value 要设置的 Graphics 对象。\r\n     * @param transferOwnership 是否将 Graphics 对象设置到所属节点上(即将 Graphics 对象的所有权转移给 Sprite)。如果为 true,则 Sprite 将负责在不再需要 Graphics 对象时销毁它。\r\n     */\r\n    setGraphics(value: Graphics, transferOwnership: boolean) {\r\n        if (this._graphics) {\r\n            this._graphics._sp = null;\r\n            if (this._ownGraphics)\r\n                this._graphics.destroy();\r\n        }\r\n        this._ownGraphics = transferOwnership;\r\n        this._graphics = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.GRAPHICS;\r\n            value._sp = this;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @en 2D sprite material\r\n     * @zh 2D精灵材质\r\n     */\r\n    get material() {\r\n        return this._graphics?.material;\r\n    }\r\n\r\n    set material(value: Material) {\r\n        if (this._graphics == null && value == null)\r\n            return;\r\n\r\n        this.graphics.material = value;\r\n    }\r\n\r\n    /**\r\n     * @en The scroll rectangle range of the display object, with a clipping effect (if you only want to limit the rendering area of child objects, please use viewport).\r\n     * Differences between srollRect and viewport:\r\n     * 1. srollRect has a clipping effect, viewport only affects whether child objects are rendered, and does not have a clipping effect (higher performance).\r\n     * 2. Setting the x and y properties of the rect can achieve scrolling effect, but scrollRect will keep the position of point 0,0 unchanged.\r\n     * @zh 显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)\r\n     * srollRect和viewport的区别：\r\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。\r\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。\r\n     */\r\n    get scrollRect(): Rectangle {\r\n        return this._style.scrollRect;\r\n    }\r\n\r\n    set scrollRect(value: Rectangle) {\r\n        if (this.getStyle().scrollRect == null && value == null)\r\n            return;\r\n\r\n        this.getStyle().scrollRect = value;\r\n        //viewport = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.CLIP;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CLIP;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n    * @en The viewport size. Child objects outside the viewport will not be rendered (if you want to achieve a clipping effect, please use scrollRect). Proper use can improve rendering performance. For example, map tiles composed of small images will not render small images outside the viewport.\r\n    * The default value is null.\r\n    * The differences between scrollRect and viewport:\r\n    * 1. scrollRect comes with a clipping effect, while viewport only affects whether child objects are rendered without clipping (better performance).\r\n    * 2. Setting the x and y properties of the rect can achieve a scrolling effect in the area, but scrollRect will keep the position of point 0,0 unchanged.\r\n    * @zh 视口大小，视口外的子对象将不被渲染（如果想实现裁剪效果，请使用scrollRect），合理使用能提高渲染性能。例如，由一个个小图片拼成的地图块，viewport外面的小图片将不渲染。\r\n    * 默认值为null。\r\n    * scrollRect和viewport的区别：\r\n    * 1. scrollRect自带裁剪效果，viewport只影响子对象是否渲染，不具有裁剪效果（性能更高）。\r\n    * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。\r\n    */\r\n    get viewport(): Rectangle {\r\n        return this._style.viewport;\r\n    }\r\n\r\n    set viewport(value: Rectangle) {\r\n        if (typeof (value) == 'string') {\r\n            let recArr = (<any>value).split(\",\");\r\n            if (recArr.length > 3) {\r\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\r\n            }\r\n        }\r\n        this.getStyle().viewport = value;\r\n    }\r\n\r\n    /**\r\n     * @en Set the position. Equivalent to setting the x and y properties separately.\r\n     * Since the return value is the Sprite object itself, you can use the following syntax: spr.pos(...).scale(...);\r\n     * @param x X-axis coordinate.\r\n     * @param y Y-axis coordinate.\r\n     * @param speedMode (Optional) Whether to use speed mode. Normally, this.x=value is called to assign values. Speed mode directly calls the internal function to handle it. If the x and y properties are not overridden, it is recommended to set to speed mode for higher performance.\r\n     * @returns The object itself.\r\n     * @zh 设置坐标位置。相当于分别设置x和y属性。\r\n     * 因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);\r\n     * @param x X轴坐标。\r\n     * @param y Y轴坐标。\r\n     * @param speedMode （可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为极速模式性能更高。\r\n     * @returns 返回对象本身。\r\n     */\r\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\r\n        if (this._x !== x || this._y !== y) {\r\n            if (this._destroyed) return this;\r\n            if (speedMode) {\r\n                this._setX(x);\r\n                this._setY(y);\r\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n                var p: Sprite = this._cacheStyle.maskParent;\r\n                if (p) {\r\n                    p.repaint(SpriteConst.REPAINT_CACHE);\r\n                }\r\n\r\n                if (this.cacheGlobal) {\r\n                    let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n                    this._setGlobalCacheFlag(flag, true);\r\n                    this._syncGlobalFlag(flag, true);\r\n                }\r\n\r\n            } else {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the pivot point. Equivalent to setting the pivotX and pivotY properties separately.\r\n     * Since the return value is the Sprite object itself, you can use the following syntax: spr.pivot(...).pos(50, 100);\r\n     * @param x X-axis pivot point.\r\n     * @param y Y-axis pivot point.\r\n     * @returns The object itself.\r\n     * @zh 设置轴心点。相当于分别设置pivotX和pivotY属性。\r\n     * 因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);\r\n     * @param x X轴心点。\r\n     * @param y Y轴心点。\r\n     * @returns 返回对象本身。\r\n     */\r\n    pivot(x: number, y: number): Sprite {\r\n        this.pivotX = x;\r\n        this.pivotY = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the size. Equivalent to setting the width and height properties separately.\r\n     * Since the return value is the Sprite object itself, you can use the following syntax: spr.size(...).pos(50, 100);\r\n     * @param width Width value.\r\n     * @param height Height value.\r\n     * @returns The object itself.\r\n     * @zh 设置宽高。相当于分别设置width和height属性。\r\n     * 因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);\r\n     * @param width 宽度值。\r\n     * @param height 高度值。\r\n     * @returns 返回对象本身。\r\n     */\r\n    size(width: number, height: number): Sprite {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the scale. Equivalent to setting the scaleX and scaleY properties separately.\r\n     * Since the return value is the Sprite object itself, you can use the following syntax: spr.scale(...).pos(50, 100);\r\n     * @param scaleX X-axis scale ratio.\r\n     * @param scaleY Y-axis scale ratio.\r\n     * @param speedMode (Optional) Whether to use speed mode. Normally, this.scaleX=value is called to assign values. Speed mode directly calls the internal function to handle it. If the scaleX and scaleY properties are not overridden, it is recommended to set to speed mode for higher performance.\r\n     * @returns The object itself.\r\n     * @zh 设置缩放。相当于分别设置scaleX和scaleY属性。\r\n     * 因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);\r\n     * @param scaleX X轴缩放比例。\r\n     * @param scaleY Y轴缩放比例。\r\n     * @param speedMode （可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为极速模式性能更高。\r\n     * @returns 返回对象本身。\r\n     */\r\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\r\n        if (this._destroyed) return this;\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\r\n            if (speedMode) {\r\n                this._setScaleX(scaleX);\r\n                this._setScaleY(scaleY);\r\n                this._setTranformChange();\r\n                this._shouldRefreshLayout();\r\n            } else {\r\n                this.scaleX = scaleX;\r\n                this.scaleY = scaleY;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Set the skew angle. Equivalent to setting the skewX and skewY properties separately.\r\n     * Since the return value is the Sprite object itself, you can use the following syntax: spr.skew(...).pos(50, 100);\r\n     * @param skewX Horizontal skew angle.\r\n     * @param skewY Vertical skew angle.\r\n     * @returns The object itself.\r\n     * @zh 设置倾斜角度。相当于分别设置skewX和skewY属性。\r\n     * 因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);\r\n     * @param skewX 水平倾斜角度。\r\n     * @param skewY 垂直倾斜角度。\r\n     * @returns 返回对象本身。\r\n     */\r\n    skew(skewX: number, skewY: number): Sprite {\r\n        this.skewX = skewX;\r\n        this.skewY = skewY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Update and render the display object. Called by the system.\r\n     * @param ctx The rendering context reference.\r\n     * @param x The X-axis coordinate.\r\n     * @param y The Y-axis coordinate.\r\n     * The meaning of x and y is complex. Without rotation, it is the world position of the current node.\r\n     * If any parent node has rotation, x and y will be reset to [0,0] there and then accumulated again.\r\n     * So, x and y can be considered as the cumulative value from the current node to a node with rotation (or the root node).\r\n     * @zh 更新、呈现显示对象。由系统调用。\r\n     * @param ctx 渲染的上下文引用。\r\n     * @param x X轴坐标。\r\n     * @param y Y轴坐标。\r\n     * 关于上面的x、y的含义比较复杂，在没有旋转的情况下，它就是当前节点的世界坐标的位置。\r\n     * 如果此节点的某个父节点有旋转，x、y会在那里被重置为[0,0]，然后继续累加。\r\n     * 所以可以认为这个x、y是表示当前节点到某个有旋转的节点（或者根节点）的累加值。\r\n     */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Draws the current Sprite to a Canvas and returns an HtmlCanvas object.\r\n     * The drawing result can be used as an image source to be drawn into other Sprites.\r\n     * It can also obtain the original image data, send it to the server, or save it as an image to achieve a screenshot effect.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @returns The HTMLCanvas object.\r\n     * @zh 绘制当前 Sprite 到 Canvas 上,并返回一个 HtmlCanvas 对象。\r\n     * 绘制的结果可以当作图片源,再次绘制到其他 Sprite 里面。也可以获取原始图片数据,发给服务器或者保存为图片,从而实现截图效果。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @returns HTMLCanvas 对象。\r\n     */\r\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\r\n        return Sprite.drawToCanvas(this, canvasWidth, canvasHeight, offsetX, offsetY);\r\n    }\r\n    /**\r\n     * @private\r\n     * @en Draws the specified Sprite to a Canvas and returns an HtmlCanvas object.\r\n     * @param sprite The Sprite to draw.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @returns The HTMLCanvas object.\r\n     * @zh 绘制指定的 Sprite 到 Canvas 上,并返回一个 HtmlCanvas 对象。\r\n     * @param sprite 要绘制的 Sprite。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @returns HTMLCanvas 对象。\r\n     */\r\n    static drawToCanvas(sprite: Sprite, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, isDrawRenderRect: boolean = true): HTMLCanvas {\r\n        // if (arguments.length > 5) {\r\n        //     throw 'drawToCanvas 接口参数不对'\r\n        // }\r\n        let rt = Sprite.drawToRenderTexture2D(sprite, canvasWidth, canvasHeight, offsetX, offsetY, null);\r\n        var dt = rt.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\r\n        var imgdata = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\r\n        //翻转getData的结果。\r\n        var lineLen = canvasWidth * 4;\r\n        var dst = imgdata.data;\r\n        var y = canvasHeight - 1;\r\n        var off = y * lineLen;\r\n        var srcoff = 0;\r\n        for (; y >= 0; y--) {\r\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\r\n            off -= lineLen;\r\n            srcoff += lineLen;\r\n        }\r\n        //imgdata.data.set(dt);\r\n        //画到2d画布上\r\n        var canv = new HTMLCanvas(true);\r\n        canv.size(canvasWidth, canvasHeight);\r\n        var ctx2d = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\r\n        ctx2d.putImageData(imgdata, 0, 0);\r\n        rt.destroy();\r\n        return canv;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @en Draws the current object to a Texture object.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @param rt The render target.\r\n     * @returns The drawn Texture or RenderTexture2D object.\r\n     * @zh 绘制当前对象到一个 Texture 对象上。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @param rt 渲染目标。\r\n     * @returns 绘制的 Texture 或 RenderTexture2D 对象。\r\n     */\r\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null, isDrawRenderRect: boolean = true): Texture | RenderTexture2D {\r\n        let res = Sprite.drawToTexture(this, canvasWidth, canvasHeight, offsetX, offsetY, rt, isDrawRenderRect);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @en Draws the current object to a RenderTexture2D object.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @param rt The render target.\r\n     * @returns The drawn RenderTexture2D object.\r\n     * @zh 绘制当前对象到一个 Texture 对象上。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @param rt 渲染目标。\r\n     * @returns 绘制的 RenderTexture2D 对象。\r\n     */\r\n    drawToRenderTexture2D(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): RenderTexture2D {\r\n        let res = Sprite.drawToRenderTexture2D(this, canvasWidth, canvasHeight, offsetX, offsetY, rt);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @private\r\n     * @en Draws the specified Sprite to a Texture or RenderTexture2D object.\r\n     * @param sprite The Sprite to draw.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @param rt The render target. If not provided, a new RenderTexture2D will be created.\r\n     * @returns The drawn Texture or RenderTexture2D object.\r\n     * @zh 将指定的 Sprite 绘制到 Texture 或 RenderTexture2D 对象上。\r\n     * @param sprite 要绘制的 Sprite。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @param rt 渲染目标。如果未提供,将创建一个新的 RenderTexture2D。\r\n     * @returns 绘制的 Texture 或 RenderTexture2D 对象。\r\n     */\r\n    static drawToTexture(sprite: Sprite, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null, isDrawRenderRect: boolean = true): Texture | RenderTexture2D {\r\n        let renderout = rt || new RenderTexture2D(canvasWidth, canvasHeight, RenderTargetFormat.R8G8B8A8);\r\n        let ctx = new Context();\r\n        if (rt) {\r\n            ctx.size(rt.width, rt.height);\r\n        } else {\r\n            ctx.size(canvasWidth, canvasHeight)\r\n        }\r\n        ctx.render2D = ctx.render2D.clone(renderout);\r\n        ctx._drawingToTexture = true;\r\n        let outrt = RenderSprite.RenderToRenderTexture(sprite, ctx, offsetX, offsetY, renderout, isDrawRenderRect);\r\n        ctx._drawingToTexture = false;\r\n        ctx.destroy();\r\n        if (!rt) {\r\n            let outTexture = new Texture(outrt, Texture.INV_UV);\r\n            return outTexture;\r\n        }\r\n        return outrt;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Draws the specified Sprite to a RenderTexture2D object.\r\n     * @param sprite The Sprite to draw.\r\n     * @param canvasWidth The width of the canvas.\r\n     * @param canvasHeight The height of the canvas.\r\n     * @param offsetX The X-axis offset for drawing.\r\n     * @param offsetY The Y-axis offset for drawing.\r\n     * @param rt The render target. If not provided, a new RenderTexture2D will be created.\r\n     * @returns The drawn RenderTexture2D object.\r\n     * @zh 将指定的 Sprite 绘制到 RenderTexture2D 对象上。\r\n     * @param sprite 要绘制的 Sprite。\r\n     * @param canvasWidth 画布宽度。\r\n     * @param canvasHeight 画布高度。\r\n     * @param offsetX 绘制的 X 轴偏移量。\r\n     * @param offsetY 绘制的 Y 轴偏移量。\r\n     * @param rt 渲染目标。如果未提供,将创建一个新的 RenderTexture2D。\r\n     * @returns 绘制的 RenderTexture2D 对象。\r\n     */\r\n    static drawToRenderTexture2D(sprite: Sprite, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): RenderTexture2D {\r\n        let renderout = rt || new RenderTexture2D(canvasWidth, canvasHeight, RenderTargetFormat.R8G8B8A8);\r\n        let ctx = new Context();\r\n        if (rt) {\r\n            ctx.size(rt.width, rt.height);\r\n        } else {\r\n            ctx.size(canvasWidth, canvasHeight)\r\n        }\r\n        ctx.render2D = ctx.render2D.clone(renderout);\r\n        ctx._drawingToTexture = true;\r\n        let outrt = RenderSprite.RenderToRenderTexture(sprite, ctx, offsetX, offsetY, renderout);\r\n        ctx._drawingToTexture = false;\r\n        ctx.destroy();\r\n        return outrt;\r\n    }\r\n\r\n    /**\r\n     * 绘制到Canvas的上下文\r\n     */\r\n    static drawtocanvCtx: Context;\r\n\r\n    /**\r\n     * @en Custom update and render display objects. Generally used to extend rendering modes. Please use it reasonably as it may cause inability to render on accelerators.\r\n     * Note: Do not add or remove tree nodes in this function, otherwise it will affect the traversal of tree nodes.\r\n     * @param context The rendering context reference.\r\n     * @param x The X-axis coordinate.\r\n     * @param y The Y-axis coordinate.\r\n     * @zh 自定义更新、呈现显示对象。一般用来扩展渲染模式,请合理使用,可能会导致在加速器上无法渲染。\r\n     * 注意: 不要在此函数内增加或删除树节点,否则会对树节点遍历造成影响。\r\n     * @param context 渲染的上下文引用。\r\n     * @param x X轴坐标。\r\n     * @param y Y轴坐标。\r\n     */\r\n    customRender(context: Context, x: number, y: number): void {\r\n        //_renderType |= SpriteConst.CUSTOM;\r\n        this._repaint = SpriteConst.REPAINT_ALL;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Apply filters.\r\n     * @zh 应用滤镜。\r\n     */\r\n    _applyFilters(): void {\r\n        // canvas 模式不支持\r\n    }\r\n\r\n    /**\r\n     * @en The filter collection. Multiple filters can be combined.\r\n     * @zh 滤镜集合。可以设置多个滤镜组合。\r\n     */\r\n    get filters(): Filter[] {\r\n        return this._filterArr;\r\n    }\r\n\r\n    set filters(value: Filter[]) {\r\n        value && value.length === 0 && (value = null);\r\n\r\n        //先去掉旧的事件监听\r\n        if(this._filterArr){\r\n            for(let f of this._filterArr){\r\n                f && f.off(Filter.EVENT_CHANGE,this,this.repaint);\r\n            }\r\n        }\r\n        this._filterArr = value ? value.slice() : null;\r\n        if(value){\r\n            for(let f of value){\r\n                f && f.on(Filter.EVENT_CHANGE,this,this.repaint);\r\n            }\r\n        }\r\n        if (value)\r\n            this._renderType |= SpriteConst.FILTERS;\r\n        else\r\n            this._renderType &= ~SpriteConst.FILTERS;\r\n\r\n        if (value && value.length > 0) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @en Converts the local coordinates to the global coordinates relative to the stage.\r\n     * @param point The local coordinate point.\r\n     * @param createNewPoint (Optional) Whether to create a new Point object as the return value. The default is false, which uses the input point object as the return value to reduce object creation overhead.\r\n     * @param globalNode The global node, default is Laya.stage \r\n     * @return The converted global coordinate point.\r\n     * @zh 把本地坐标转换为相对stage的全局坐标。\r\n     * @param point 本地坐标点。\r\n     * @param createNewPoint （可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode global节点，默认为Laya.stage \r\n     * @return 转换后的坐标的点。\r\n     */\r\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint === true) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            point = ele.toParentPoint(point);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the global coordinates relative to the stage to the local coordinates.\r\n     * @param point The global coordinate point.\r\n     * @param createNewPoint (Optional) Whether to create a new Point object as the return value. The default is false, which uses the input point object as the return value to reduce object creation overhead.\r\n     * @param globalNode The global node, default is Laya.stage.\r\n     * @return The converted local coordinate point.\r\n     * @zh 把stage的全局坐标转换为本地坐标。\r\n     * @param point 全局坐标点。\r\n     * @param createNewPoint （可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode global节点，默认为Laya.stage。\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        var list: any[] = [];\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            list.push(ele);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        var i: number = list.length - 1;\r\n        while (i >= 0) {\r\n            ele = list[i];\r\n            point = ele.fromParentPoint(point);\r\n            i--;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the coordinates in the local coordinate system to the coordinates in the parent container coordinate system.\r\n     * @param point The local coordinate point.\r\n     * @return The converted point in the parent container coordinate system.\r\n     * @zh 将本地坐标系坐标转换到父容器坐标系。\r\n     * @param point 本地坐标点。\r\n     * @return 转换后的点。\r\n     */\r\n    toParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this.pivotX;\r\n        point.y -= this.pivotY;\r\n        if (this.transform) {\r\n            this._transform.transformPoint(point);\r\n        }\r\n        point.x += this._x;\r\n        point.y += this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x -= scroll.x;\r\n            point.y -= scroll.y;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * @en Converts the coordinates in the parent container coordinate system to the coordinates in the local coordinate system.\r\n     * @param point The point in the parent container coordinate system.\r\n     * @return The converted point in the local coordinate system.\r\n     * @zh 将父容器坐标系坐标转换到本地坐标系。\r\n     * @param point 父容器坐标点。\r\n     * @return 转换后的点。\r\n     */\r\n    fromParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this._x;\r\n        point.y -= this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x += scroll.x;\r\n            point.y += scroll.y;\r\n        }\r\n        if (this.transform) {\r\n            //_transform.setTranslate(0,0);\r\n            this._transform.invertTransformPoint(point);\r\n        }\r\n        point.x += this.pivotX;\r\n        point.y += this.pivotY;\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Starts listening to a specific event type. This method is called when a new event listener is added.\r\n     * If it is a mouse event, it sets itself and its parent objects to accept mouse interaction events.\r\n     * @param type The event type.\r\n     * @zh 开始监听特定事件类型。当添加新的事件侦听器时调用此方法。\r\n     * 如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件。\r\n     * @param type 事件类型。\r\n     */\r\n    protected onStartListeningToType(type: string) {\r\n        super.onStartListeningToType(type);\r\n\r\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n            if (this._parent) {\r\n                this._onDisplay();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * @internal\r\n    * @protected\r\n    * @en Ensures that when the node is set to accept mouse interaction events, all parent objects are also set to accept mouse interaction events.\r\n    * @zh 当节点设置为接受鼠标交互事件时，确保所有父对象也被设置为接受鼠标交互事件。\r\n    */\r\n    protected _onDisplay(v?: boolean): void {\r\n        if (this._mouseState !== 1) {\r\n            var ele: Sprite = this;\r\n            ele = (<Sprite>ele.parent);\r\n            while (ele && ele._mouseState !== 1) {\r\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\r\n                ele.mouseEnabled = true;\r\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected \r\n     * @override\r\n     * @en Set the parent node of the current node.\r\n     * @param value The new parent node.\r\n     * @zh 设置当前节点的父节点。\r\n     * @param value 新的父节点。\r\n     */\r\n    protected _setParent(value: Node): void {\r\n        super._setParent(value);\r\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\r\n            this._onDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Load and display an image. Equivalent to loading the image and then setting the texture property. Note: calling this method multiple times will only display one image.\r\n     * @param url The image URL.\r\n     * @param complete (Optional) The callback function when loading is complete.\r\n     * @returns Returns the Sprite object itself.\r\n     * @zh 加载并显示一个图片。相当于加载图片后，设置texture属性。注意：多次调用，只会显示一个图片。\r\n     * @param url 图片地址。\r\n     * @param complete （可选）加载完成回调。\r\n     * @returns 返回精灵对象本身。\r\n     */\r\n    loadImage(url: string, complete: Handler = null): Sprite {\r\n        if (!url) {\r\n            this.texture = null;\r\n            this.repaint(SpriteConst.REPAINT_ALL);\r\n            complete && complete.run();\r\n        } else {\r\n            let tex = ILaya.loader.getRes(url);\r\n            if (tex) {\r\n                this.texture = tex;\r\n                this.repaint(SpriteConst.REPAINT_ALL);\r\n                complete && complete.run();\r\n            }\r\n            else {\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                ILaya.loader.load(url).then((tex: Texture) => {\r\n                    this.texture = tex;\r\n                    this.repaint(SpriteConst.REPAINT_ALL);\r\n                    complete && complete.run();\r\n                });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Create a new `Sprite` object based on the image URL to load and display the image.\r\n     * @param url The image URL.\r\n     * @returns Returns a new `Sprite` object.\r\n     * @zh 根据图片地址创建一个新的 `Sprite` 对象用于加载并显示此图片。\r\n     * @param url 图片地址。\r\n     * @returns 返回新的 `Sprite`  对象。\r\n     */\r\n    static fromImage(url: string): Sprite {\r\n        return new Sprite().loadImage(url);\r\n    }\r\n\r\n    /**\r\n    * @en Redraw the Sprite and invalidate its own and parent's cache after setting cacheAs.\r\n    * @param type The redraw type.\r\n    * @zh 重新绘制，cacheAs后，设置自己和父对象缓存失效。\r\n    * @param type 重新绘制类型。\r\n    */\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        if (!(this._repaint & type)) {\r\n            this._repaint |= type;\r\n            this.parentRepaint(type);\r\n        }\r\n        this._getCacheStyle();\r\n        if (this._cacheStyle) {\r\n            this._cacheStyle.renderTexture = null;//TODO 重用\r\n        }\r\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\r\n            this._cacheStyle.maskParent.repaint(type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Check if it is re-cached.\r\n     * @returns True if it is re-cached, otherwise false.\r\n     * @zh 检查是否重新缓存。\r\n     * @returns 如果重新缓存值为 true，否则值为 false。\r\n     */\r\n    _needRepaint(): boolean {\r\n        //return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\r\n        return !!(this._repaint & SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    * @protected\r\n    * @override\r\n    * @en Callback when a child node changes.\r\n    * @param child The child node that has changed.\r\n    * @zh 子节点发生变化时的回调。\r\n    * @param child 发生变化的子节点。\r\n    */\r\n    protected _childChanged(child: Node = null): void {\r\n        super._childChanged(child);\r\n\r\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\r\n        else this._renderType &= ~SpriteConst.CHILDS;\r\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\r\n        this.repaint(SpriteConst.REPAINT_ALL);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Repaint the parent node. When `cacheAs` is enabled, set all parent object caches to invalid.\r\n     * @param type The type of repaint. Default is SpriteConst.REPAINT_CACHE.\r\n     * @zh 重新绘制父节点。启用 `cacheAs` 时，设置所有父对象缓存失效。\r\n     * @param type 重新绘制类型。默认为 SpriteConst.REPAINT_CACHE。\r\n     */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        var p: Sprite = <Sprite>this._parent;\r\n        if (p && !(p._repaint & type)) {\r\n            p._repaint |= type;\r\n            p.parentRepaint(type);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * @en Reference to the stage.\r\n     * @zh 对舞台的引用。\r\n     */\r\n    get stage(): Stage {\r\n        return ILaya.stage;\r\n    }\r\n\r\n    /**\r\n     * @enYou can set a rectangular area as the clickable region, or set a HitArea instance as the clickable region. The HitArea can have both clickable and non-clickable areas defined. If the hitArea is not set, the mouse collision detection will be based on the area formed by the width and height of the object.\r\n     * @zh 可以设置一个矩形区域作为点击区域，或者设置一个 `HitArea` 实例作为点击区域，HitArea 内可以设置可点击和不可点击区域。如果不设置 hitArea，则根据宽高形成的区域进行鼠标碰撞检测。\r\n     */\r\n    get hitArea(): IHitArea {\r\n        return this._style.hitArea;\r\n    }\r\n\r\n    set hitArea(value: IHitArea) {\r\n        this.getStyle().hitArea = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setMask(value: Sprite): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Masking allows setting an object (bitmap or vector graphic) as a mask, displaying content based on the object's shape. \r\n     * @zh 遮罩，可以设置一个对象（支持位图和矢量图），根据对象形状进行遮罩显示。\r\n     */\r\n    get mask(): Sprite {\r\n        return this._cacheStyle.mask;\r\n    }\r\n\r\n    set mask(value: Sprite) {\r\n        if (value == this || (value && this.mask == value && value._cacheStyle.maskParent == this))\r\n            return;\r\n\r\n        if (this.mask)\r\n            this.mask._getCacheStyle().maskParent = null;\r\n\r\n        this._getCacheStyle().mask = value;\r\n        this._setMask(value);\r\n        //this._checkCanvasEnable();\r\n\r\n        if (value) {\r\n            value._getCacheStyle().maskParent = this;\r\n            this._renderType |= SpriteConst.MASK;\r\n        }\r\n        else\r\n            this._renderType &= ~SpriteConst.MASK;\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the object receives mouse events.\r\n     * The default is false. If you listen to mouse events, this value and the value of mouseEnable for parent nodes will be automatically set to true (unless the parent node is manually set to false).\r\n     * @zh 是否接受鼠标事件。\r\n     * 默认为 false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为 false，则不会更改）。\r\n     */\r\n    get mouseEnabled(): boolean {\r\n        return this._mouseState > 1;\r\n    }\r\n\r\n    set mouseEnabled(value: boolean) {\r\n        this._mouseState = value ? 2 : 1;\r\n    }\r\n\r\n    /**\r\n     * @en Starts dragging this object.\r\n     * @param area (Optional) The drag area, which is the active area of the object's registration point (excluding the object's width and height).\r\n     * @param hasInertia (Optional) Whether the object has inertia when the mouse is released. The default is false.\r\n     * @param elasticDistance (Optional) The distance value of the elastic effect. A value of 0 means no elastic effect. The default is 0.\r\n     * @param elasticBackTime (Optional) The bounce-back time for the elastic effect in milliseconds. The default is 300 milliseconds.\r\n     * @param data (Optional) The data carried by the drag event. \r\n     * @param ratio (Optional) The inertia damping coefficient, which affects the strength and duration of inertia.\r\n     * @zh 开始拖动此对象。\r\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高） 。\r\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false。\r\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0。\r\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒。\r\n     * @param data\t\t\t\t（可选）拖动事件携带的数据。\r\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\r\n     */\r\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\r\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\r\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\r\n    }\r\n\r\n    /**\r\n     * @en Stops dragging this object.\r\n     * @zh 停止拖动此对象。\r\n     */\r\n    stopDrag(): void {\r\n        this._style.dragging && this._style.dragging.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     * @en Set the display status of the node.\r\n     * @param value The display status.\r\n     * @zh 设置节点的显示状态。\r\n     * @param value 显示状态。\r\n     */\r\n    _setDisplay(value: boolean): void {\r\n        this._getCacheStyle();\r\n        if (!value) {\r\n            this._cacheStyle.onInvisible();\r\n        }\r\n        super._setDisplay(value);\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether a point is within this object.\r\n     * @param x Global x-coordinate.\r\n     * @param y Global y-coordinate.\r\n     * @returns Indicates whether the point is inside the object.\r\n     * @zh 检测某个点是否在此对象内。\r\n     * @param x 全局x坐标。\r\n     * @param y 全局y坐标。\r\n     * @returns 表示是否在对象内。\r\n     */\r\n    hitTestPoint(x: number, y: number): boolean {\r\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\r\n        x = point.x;\r\n        y = point.y;\r\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\r\n        return rect.contains(x, y, this);\r\n    }\r\n\r\n    /**\r\n     * @en Get the mouse coordinates relative to this object.\r\n     * @returns The screen point information.\r\n     * @zh 获得相对于本对象上的鼠标坐标信息。\r\n     * @returns 屏幕点信息。\r\n     */\r\n    getMousePoint(): Point {\r\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n    }\r\n    /**\r\n     * @en The X-axis coordinate of the mouse in this object's coordinate system.\r\n     * @zh 鼠标在此对象坐标系上的 X 轴坐标信息。\r\n     */\r\n    get mouseX(): number {\r\n        return this.getMousePoint().x;\r\n    }\r\n\r\n    /**\r\n     * @en The Y-axis coordinate of the mouse in this object's coordinate system.\r\n     * @zh 鼠标在此对象坐标系上的 Y 轴坐标信息。\r\n     */\r\n    get mouseY(): number {\r\n        return this.getMousePoint().y;\r\n    }\r\n\r\n    /**\r\n     * @en The z-order. If this value is changed, all objects of the same container will be re-sorted according to the value. The larger the value, the higher it is. The default is 0, which is sorted according to the order of addition.\r\n     * @zh z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。\r\n     */\r\n    get zOrder(): number {\r\n        return this._zOrder;\r\n    }\r\n\r\n    set zOrder(value: number) {\r\n        if (this._zOrder != value) {\r\n            this._zOrder = value;\r\n            if (this._parent) {\r\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\r\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set a Texture instance and display the image (if there are other drawings before, it will be cleared).\r\n     * Equivalent to graphics.clear();graphics.drawImage(), but with better performance.\r\n     * You can also assign an image address, which will automatically load the image and then display it.\r\n     * @zh 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\r\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高。\r\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示。\r\n     */\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTexture(value: Texture | string): void {\r\n\r\n    }\r\n\r\n    set texture(value: Texture) {\r\n        if (typeof (value) == 'string') {\r\n            this.loadImage((<string>((<any>value))));\r\n        } else if (this._texture != value) {\r\n            this._texture && this._texture._removeReference();\r\n            this._texture = value;\r\n            value && value._addReference();\r\n            this._setTexture(value);\r\n            this._setWidth(this.width);\r\n            this._setHeight(this.height);\r\n            if (value) this._renderType |= SpriteConst.TEXTURE;\r\n            else this._renderType &= ~SpriteConst.TEXTURE;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**@internal */\r\n    _setTranformChange(): void {\r\n        this._tfChanged = true;\r\n        this._renderType |= SpriteConst.TRANSFORM;\r\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    /**\r\n     * @en Draw call optimization: when set to true, draw call optimization is enabled. During engine rendering, all text is automatically brought to the top layer to avoid interruptions by text when drawing images from the same atlas, thus reducing the number of draw calls.\r\n     * Enabling this will cause text to be non-obstructable. Use this feature cautiously if your project requires text to be obstructed.\r\n     * @zh 绘制调用优化，为true时，开启drawcall优化。引擎绘制时自动将所有文本提到显示最上层，避免同一个图集内的图像绘制时被文本打断，可以减少drawcall数量。\r\n     * 开启后，会导致文本无法被遮挡，存在文本遮挡需求的项目，请谨慎使用该功能。\r\n     */\r\n    set drawCallOptimize(value: boolean) {\r\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\r\n    }\r\n\r\n    get drawCallOptimize(): boolean {\r\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._gcmds) {\r\n                this.graphics.cmds = (<any>this)._gcmds;\r\n                delete (<any>this)._gcmds;\r\n            }\r\n\r\n            if ((<any>this)._filters) {\r\n                this.filters = (<any>this)._filters;\r\n                delete (<any>this)._filters;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //miner 为了不破坏之前的local性能架构，采用标致开启的方式来增加GlobalMode的更新系统，优化需要高频调用Global数据的\r\n    //因为此块功能比较集中，顾单独写在下方\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_X: number = 0x01;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_Y: number = 0x02;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Rotation: number = 0x04;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_X: number = 0x08;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_Y: number = 0x10;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Matrix: number = 0x20;\r\n    /**@internal */\r\n    private _globalDeltaFlages: number = 0;\r\n    /**@internal */\r\n    private _cacheGlobal: boolean = false;\r\n    /**@internal */\r\n    private _globalPosx: number = 0.0;\r\n    /**@internal */\r\n    private _globalPosy: number = 0.0;\r\n    /**@internal */\r\n    private _globalRotate: number = 0.0;\r\n    /**@internal */\r\n    private _globalScalex: number = 1.0;\r\n    /**@internal */\r\n    private _globalScaley: number = 1.0;\r\n    /**@internal */\r\n    private _globalMatrix: Matrix;\r\n\r\n    /**\r\n     * @internal\r\n     * @en cacheGlobal mode. This mode provides higher performance for the getGlobal property.\r\n     * If this node's cacheGlobal is set to true, all parent nodes up to the root node will be forced to true.\r\n     * If this node is set to false, all child nodes' cacheGlobal will be forced to false.\r\n     * @zh cacheGlobal模式。此模式会获得更高的getGlobal属性性能。\r\n     * 如果此节点的cacheGlobal设置为true，那所有父节点直到根节点都会被强制改为true。\r\n     * 如果此节点设置为false，将强制所有子节点的cacheGlobal改为false。\r\n     */\r\n    get cacheGlobal(): boolean {\r\n        return this._cacheGlobal;\r\n    }\r\n\r\n    set cacheGlobal(value: boolean) {\r\n        if (this._cacheGlobal == value)\r\n            return;\r\n        this._cacheGlobal = value;\r\n        if (value) {\r\n            //缓存全局变量\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            //更新父节点\r\n            if (this._parent == ILaya.stage || !this._parent) {\r\n                return;\r\n            } else {\r\n                (this._parent as Sprite).cacheGlobal = value;\r\n            }\r\n        } else {\r\n            //更新子节点\r\n            this._children.forEach(element => {\r\n                (element as Sprite).cacheGlobal = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the global matrix of the sprite.\r\n     * @returns The global transformation matrix of the sprite.\r\n     * @zh 获取精灵的全局矩阵。\r\n     * @returns 精灵的全局变换矩阵。\r\n     */\r\n    getGlobalMatrix() {\r\n        if (this._globalMatrix == null) this._globalMatrix = Matrix.create()\r\n        if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix)) {\r\n            this._globalMatrix.identity();\r\n            this._globalMatrix.translate(-this.pivotX, -this.pivotY);\r\n            this._globalMatrix.scale(this.globalScaleX, this.globalScaleY);\r\n            this._globalMatrix.rotate(Utils.toRadian(this.globalRotation));\r\n            this._globalMatrix.translate(this.globalPosX, this.globalPosY);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, false);\r\n        }\r\n        return this._globalMatrix;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en The global X position.\r\n     * @zh 全局X位置。\r\n     */\r\n    set globalPosX(value: number) {\r\n        this.setGlobalPos(value, this._globalPosy);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Sets the global position of the node.\r\n     * @param globalx The global X position.\r\n     * @param globaly The global Y position.\r\n     * @zh 设置节点对象在全局坐标系中的位置。\r\n     * @param globalx 全局X位置。\r\n     * @param globaly 全局Y位置。\r\n     */\r\n    setGlobalPos(globalx: number, globaly: number) {\r\n        if (globalx == this.globalPosX && globaly == this.globalPosY) {\r\n            return;\r\n        }\r\n        if (!this._cacheGlobal) {\r\n            Point.TEMP.setTo(globalx, globaly);\r\n            let point = this.globalToLocal(Point.TEMP, false, null);\r\n            point = this.toParentPoint(point);\r\n            this.x = point.x;\r\n            this.y = point.y;\r\n        } else {\r\n\r\n            let point = (<Sprite>this.parent).getGlobalMatrix().invertTransformPoint(Point.TEMP.setTo(globalx, globaly));\r\n            this._setX(point.x);\r\n            this._setY(point.y);\r\n            this._globalPosx = globalx;\r\n            this._globalPosy = globaly;\r\n            let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n            this._setGlobalCacheFlag(flag, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(flag | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en The X-axis position in global coordinates.\r\n     * @zh 全局坐标中的 X 轴位置。\r\n     */\r\n    get globalPosX(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.x;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosx = point.x;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosx;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en The Y-axis position in global coordinates.\r\n     * @zh 全局坐标中的 Y 轴位置。\r\n     */\r\n    get globalPosY(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.y;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosy = point.y;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosy;\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosY(value: number) {\r\n        this.setGlobalPos(this._globalPosx, value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en global rotation value relative to the stage (this value includes the rotation of parent nodes).\r\n     * @zh 相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\r\n     */\r\n    get globalRotation(): number {\r\n        if (!this._cacheGlobal) {\r\n            //循环算法\r\n            var angle: number = 0;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                angle += ele.rotation;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return angle;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalRotate = this.rotation;\r\n                else {\r\n                    this._globalRotate = this.rotation + (this.parent as Sprite).globalRotation;\r\n                }\r\n            }\r\n            return this._globalRotate;\r\n        }\r\n    }\r\n\r\n    set globalRotation(value: number) {\r\n        if (value == this.globalRotation) {\r\n            return;\r\n        }\r\n        //set local\r\n        if (this._parent == ILaya.stage || !this._parent) {\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        } else {\r\n            this._setRotation(value - (this.parent as Sprite).globalRotation);\r\n            this._setTranformChange();\r\n        }\r\n        if (this._cacheGlobal) {\r\n            this._globalRotate = value;\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the global X-axis scale relative to the stage (this value includes the scaling of parent nodes).\r\n     * @returns The global X-axis scale.\r\n     * @zh 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\r\n     * @returns 全局X轴缩放值。\r\n     */\r\n    get globalScaleX(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleX;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScalex = this.scaleX;\r\n                else {\r\n                    this._globalScalex = this.scaleX * (this.parent as Sprite).globalScaleX;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScalex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the global Y-axis scale relative to the stage (this value includes the scaling of parent nodes).\r\n     * @returns The global Y-axis scale.\r\n     * @zh 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\r\n     * @returns 全局Y轴缩放值。\r\n     */\r\n    get globalScaleY(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleY;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScaley = this.scaleY;\r\n                else {\r\n                    this._globalScaley = this.scaleY * (this.parent as Sprite).globalScaleY;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScaley;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getGlobalCacheFlag(type: number): boolean {\r\n        return (this._globalDeltaFlages & type) != 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    _getGlobalCacheLocalToGlobal(x: number, y: number): Point {\r\n        if (this._cacheGlobal) {\r\n            return this.getGlobalMatrix().transformPoint(Point.TEMP.setTo(this.pivotX + x, this.pivotY + y));\r\n        } else {\r\n            return this.localToGlobal(Point.TEMP.setTo(x, y), false, null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    _getGlobalCacheGlobalToLocal(x: number, y: number): Point {\r\n        if (this._cacheGlobal) {\r\n            let point = this.getGlobalMatrix().invertTransformPoint(Point.TEMP.setTo(x, y));\r\n            point.x -= this.pivotX;\r\n            point.y -= this.pivotY;\r\n            return point;\r\n        } else {\r\n            return this.globalToLocal(Point.TEMP.setTo(x, y), false, null);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal \r\n    * @en Sets a global cache flag for a specific type.\r\n    * @param type The type of cache flag to set.\r\n    * @param value Whether to enable the cache flag.\r\n    * @zh 设置特定类型的全局缓存标志。\r\n    * @param type 要设置的缓存标志类型。\r\n    * @param value 是否启用缓存标志。\r\n    */\r\n    private _setGlobalCacheFlag(type: number, value: boolean): void {\r\n        if (value)\r\n            this._globalDeltaFlages |= type;\r\n        else\r\n            this._globalDeltaFlages &= ~type;\r\n        if (value) {\r\n            this.event(\"GlobaChange\", type)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal \r\n    */\r\n    get globalDeltaFlages(): number {\r\n        return this._globalDeltaFlages;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param flag \r\n     * @param value \r\n     */\r\n    _syncGlobalFlag(flag: number, value: boolean) {\r\n        if (this.cacheGlobal) {\r\n            this._children.forEach(element => {\r\n                (element as Sprite)._setGlobalCacheFlag(flag, value);\r\n                (element as Sprite)._syncGlobalFlag(flag, value);\r\n            });\r\n        }\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Config } from \"./../../Config\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * @en Dispatched when the animation playback is complete.\r\n * @zh 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en Dispatched when a specific label is reached during playback.\r\n * @zh 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en Base class for animations, providing basic animation playback control methods and frame label event-related functionality.\r\n * This class can be inherited, but should not be instantiated directly as some methods need to be implemented by subclasses.\r\n * @zh 动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。\r\n * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n */\r\nexport class AnimationBase extends Sprite {\r\n    /**\r\n     * @en Animation playback order type: Forward playback.\r\n     * @zh 动画播放顺序类型：正序播放。\r\n     */\r\n    static WRAP_POSITIVE: number = 0;\r\n    /**\r\n     * @en Animation playback order type: Reverse playback.\r\n     * @zh 动画播放顺序类型：逆序播放。\r\n     */\r\n    static WRAP_REVERSE: number = 1;\r\n    /**\r\n     * @en Animation playback order type: Ping-pong playback (changes playback direction after reaching the end when continuing to play).\r\n     * @zh 动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。\r\n     */\r\n    static WRAP_PINGPONG: number = 2;\r\n\r\n    /**\r\n     * @en Whether to loop playback. This value is set to the specified parameter value when calling the play(...) method.\r\n     * @zh 是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。\r\n     */\r\n    loop: boolean;\r\n    /**\r\n     * @en Playback order type: AnimationBase.WRAP_POSITIVE for forward playback (default), AnimationBase.WRAP_REVERSE for reverse playback, AnimationBase.WRAP_PINGPONG for ping-pong playback.\r\n     * @zh 播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。\r\n     */\r\n    wrapMode: number = 0;\r\n    /**@private 播放间隔(单位：毫秒)。*/\r\n    protected _interval: number = Config.animationInterval;\r\n    /**@private */\r\n    protected _index: number;\r\n    /**@private */\r\n    protected _count: number;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _labels: any;\r\n    /**是否是逆序播放*/\r\n    protected _isReverse: boolean = false;\r\n    /**@private */\r\n    protected _frameRateChanged: boolean = false;\r\n    /**@private */\r\n    protected _actionName: string;\r\n    /**@private */\r\n    private _controlNode: Sprite;\r\n\r\n    /**\r\n     * @en constructor method, This class can be extended, but should not be instantiated directly as some methods need to be implemented by subclasses.\r\n     * @zh 构造方法，可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * @en Starts playing the animation. The play(...) method is designed to be called at any time after creating an instance.\r\n     * When the corresponding resources are loaded, the animation frame filling method (set frames) is called, or the instance is displayed on the stage,\r\n     * it will check if it's currently playing, and if so, it will start playing.\r\n     * Combined with the wrapMode property, you can set the animation playback order type.\r\n     * @param start (Optional) Specifies the starting index (int) or frame label (String) for animation playback. Frame labels can be added and removed using addLabel(...) and removeLabel(...).\r\n     * @param loop (Optional) Whether to loop playback.\r\n     * @param name (Optional) Animation name.\r\n     * @zh 开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。\r\n     * 配合wrapMode属性，可设置动画播放顺序类型。\r\n     * @param start （可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param loop （可选）是否循环播放。\r\n     * @param name （可选）动画名称。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        this._isPlaying = true;\r\n        this._actionName = name;\r\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\r\n        this.loop = loop;\r\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\r\n        if (this.index == 0 && this._isReverse) {\r\n            this.index = this.count - 1;\r\n        }\r\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\r\n    }\r\n\r\n    /**\r\n     * @en Gets or sets the frame interval time (in milliseconds) for animation playback.\r\n     * The default value depends on Config.animationInterval=50, which can be modified through Config.animationInterval.\r\n     * To set an independent frame interval time for a specific animation, you can use set interval.\r\n     * Note: If the animation is currently playing, setting this will reset the frame loop timer's start time to the current time.\r\n     * Frequent setting of interval may cause the animation frame update interval to be slower than expected, or even not update.\r\n     * @zh 动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。\r\n     * 要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._frameRateChanged = true;\r\n            this._interval = value;\r\n            if (this._isPlaying && value > 0) {\r\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _getFrameByLabel(label: string): number {\r\n        for (var i: number = 0; i < this._count; i++) {\r\n            var item: any = this._labels[i];\r\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**@private */\r\n    protected _frameLoop(): void {\r\n        if (!this._controlNode || this._controlNode._destroyed) {\r\n            this.clearTimer(this, this._frameLoop);\r\n            return;\r\n        }\r\n        if (this._isReverse) {\r\n            this._index--;\r\n            if (this._index < 0) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count > 0 ? 1 : 0;\r\n                        this._isReverse = false;\r\n                    } else {\r\n                        this._index = this._count - 1;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index = 0;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this._index++;\r\n            if (this._index >= this._count) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\r\n                        this._isReverse = true;\r\n                    } else {\r\n                        this._index = 0;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index--;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.index = this._index;\r\n    }\r\n\r\n    /**@internal */\r\n    _setControlNode(node: Sprite): void {\r\n        if (this._controlNode) {\r\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\r\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n        this._controlNode = node;\r\n        if (node && node != this) {\r\n            node.on(Event.DISPLAY, this, this._resumePlay);\r\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        this._resumePlay();\r\n    }\r\n\r\n    /**@private */\r\n    protected _resumePlay(): void {\r\n        if (this._isPlaying) {\r\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\r\n            else this.clearTimer(this, this._frameLoop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop the animation playback.\r\n     * @zh 停止动画播放。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        this.clearTimer(this, this._frameLoop);\r\n    }\r\n\r\n    /**\r\n     * @en Whether the animation is currently playing.\r\n     * @zh 是否正在播放中。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @en Add a frame label to the specified frame index. When the animation plays to this frame, it will dispatch an Event.LABEL event after updating the current frame.\r\n     * @param label The name of the frame label.\r\n     * @param index The frame index.\r\n     * @zh 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\r\n     * @param label 帧标签名称。\r\n     * @param index 帧索引。\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        if (!this._labels[index]) this._labels[index] = [];\r\n        this._labels[index].push(label);\r\n    }\r\n\r\n    /**\r\n     * @en Remove the specified frame label.\r\n     * @param label The name of the frame label. Note: If empty, all frame labels will be deleted!\r\n     * @zh 删除指定的帧标签。\r\n     * @param label 帧标签名称。注意：如果为空，则删除所有帧标签！\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (this._labels) {\r\n            for (var name in this._labels) {\r\n                this._removeLabelFromList(this._labels[name], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _removeLabelFromList(list: any[], label: string): void {\r\n        if (!list) return;\r\n        for (var i: number = list.length - 1; i >= 0; i--) {\r\n            if (list[i] == label) {\r\n                list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Switch the animation to the specified frame and stop there.\r\n     * @param position Frame index or frame label.\r\n     * @zh 将动画切换到指定帧并停在那里。\r\n     * @param position 帧索引或帧标签。\r\n     */\r\n    gotoAndStop(position: any): void {\r\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * @en The index of the current frame in the animation.\r\n     * @zh 动画当前帧的索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._displayToIndex(value);\r\n        if (this._labels && this._labels[value]) {\r\n            var tArr: any[] = this._labels[value];\r\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\r\n                this.event(Event.LABEL, tArr[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Displays the specified frame.\r\n     * @param value The index of the frame to display.\r\n     * @zh 显示到某帧\r\n     * @param value 帧索引\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * @en The total number of frames in the current animation.\r\n     * @zh 当前动画中帧的总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * @en Stop the animation playback and clear object properties. After this, the object can be stored in the object pool for reuse.\r\n     * @returns The object itself.\r\n     * @zh 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @returns 返回对象本身。\r\n     */\r\n    clear(): AnimationBase {\r\n        this.stop();\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n}","/**\r\n * @private\r\n * @en The MathUtil class is a utility class for data processing.\r\n * @zh MathUtil 是一个数据处理工具类。\r\n */\r\nexport class MathUtil {\r\n\r\n    /**\r\n     * @en Subtracts two 3D vectors.\r\n     * @param l The left vector.\r\n     * @param r The right vector.\r\n     * @param o The output vector to store the result.\r\n     * @zh 计算两个三维向量的差。\r\n     * @param l 左向量。\r\n     * @param r 右向量。\r\n     * @param o 用于存储结果的输出向量。\r\n     */\r\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\r\n        o[0] = l[0] - r[0];\r\n        o[1] = l[1] - r[1];\r\n        o[2] = l[2] - r[2];\r\n    }\r\n\r\n    /**\r\n     * @en Performs linear interpolation between two values.\r\n     * @param left The start value.\r\n     * @param right The end value.\r\n     * @param amount The interpolation amount (0-1).\r\n     * @returns The interpolated value.\r\n     * @zh 在两个值之间进行线性插值。\r\n     * @param left 起始值。\r\n     * @param right 终止值。\r\n     * @param amount 插值比率（0-1）。\r\n     * @returns 插值结果。\r\n     */\r\n    static lerp(left: number, right: number, amount: number): number {\r\n        return left * (1 - amount) + right * amount;\r\n    }\r\n\r\n    /**\r\n     * @en Scales a 3D vector by a scalar value.\r\n     * @param f The input vector.\r\n     * @param b The scalar value.\r\n     * @param e The output vector to store the result.\r\n     * @zh 将三维向量乘以一个标量值。\r\n     * @param f 输入向量。\r\n     * @param b 标量值。\r\n     * @param e 用于存储结果的输出向量。\r\n     */\r\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\r\n        e[0] = f[0] * b;\r\n        e[1] = f[1] * b;\r\n        e[2] = f[2] * b;\r\n    }\r\n\r\n    /**\r\n     * @en Performs linear interpolation between two 3D vectors.\r\n     * @param l The start vector.\r\n     * @param r The end vector.\r\n     * @param t The interpolation amount (0-1).\r\n     * @param o The output vector to store the result.\r\n     * @zh 在两个三维向量之间进行线性插值。\r\n     * @param l 起始向量。\r\n     * @param r 终止向量。\r\n     * @param t 插值比率（0-1）。\r\n     * @param o 用于存储结果的输出向量。\r\n     */\r\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n    }\r\n\r\n    /**\r\n     * @en Performs linear interpolation between two 4D vectors.\r\n     * @param l The start vector.\r\n     * @param r The end vector.\r\n     * @param t The interpolation amount (0-1).\r\n     * @param o The output vector to store the result.\r\n     * @zh 在两个四维向量之间进行线性插值。\r\n     * @param l 起始向量。\r\n     * @param r 终止向量。\r\n     * @param t 插值比率（0-1）。\r\n     * @param o 用于存储结果的输出向量。\r\n     */\r\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n        o[3] = aw + t * (r[3] - aw);\r\n    }\r\n\r\n    /**\r\n     * @en Performs spherical linear interpolation (slerp) between two quaternions.\r\n     * @param a The start quaternion array.\r\n     * @param Offset1 The offset in the start quaternion array.\r\n     * @param b The end quaternion array.\r\n     * @param Offset2 The offset in the end quaternion array.\r\n     * @param t The interpolation amount (0-1).\r\n     * @param out The output quaternion array to store the result.\r\n     * @param Offset3 The offset in the output quaternion array.\r\n     * @returns The output quaternion array.\r\n     * @zh 在两个四元数之间进行球面线性插值（slerp）。\r\n     * @param a 起始四元数数组。\r\n     * @param Offset1 起始四元数数组的偏移量。\r\n     * @param b 终止四元数数组。\r\n     * @param Offset2 终止四元数数组的偏移量。 \r\n     * @param t 插值比率（0-1）。\r\n     * @param out 用于存储结果的输出四元数数组。\r\n     * @param Offset3 输出四元数数组的偏移量。\r\n     * @returns 输出四元数数组。\r\n     */\r\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\r\n\r\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\r\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\r\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\r\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Gets the angle value of the line segment formed by two specified points.\r\n     * @param x0 The X coordinate of the first point.\r\n     * @param y0 The Y coordinate of the first point.\r\n     * @param x1 The X coordinate of the second point.\r\n     * @param y1 The Y coordinate of the second point.\r\n     * @returns The angle value in degrees.\r\n     * @zh 获取由两个指定点组成的线段的角度值。\r\n     * @param x0 第一个点的 X 坐标。\r\n     * @param y0 第一个点的 Y 坐标。\r\n     * @param x1 第二个点的 X 坐标。\r\n     * @param y1 第二个点的 Y 坐标。\r\n     * @returns 角度值，单位为度。\r\n     */\r\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\r\n    }\r\n\r\n    /**\r\n     * @en A comparison function to determine the sorting order of array elements.\r\n     * @param a The first number to compare.\r\n     * @param b The second number to compare.\r\n     * @returns 0 if a equals b, 1 if b > a, -1 if b < a.\r\n     * @zh 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param a 待比较数字。\r\n     * @param b 待比较数字。\r\n     * @returns 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\r\n     */\r\n    static sortBigFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * @en A comparison function to determine the sorting order of array elements.\r\n     * @param a The first number to compare.\r\n     * @param b The second number to compare.\r\n     * @returns 0 if a equals b, -1 if b > a, 1 if b < a.\r\n     * @zh 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @returns 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\r\n     */\r\n    static sortSmallFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * @en Compares the specified elements by converting them to numbers.\r\n     * @param a The first element to compare.\r\n     * @param b The second element to compare.\r\n     * @returns The difference between b and a as numbers (b-a).\r\n     * @zh 将指定的元素转为数字进行比较。\r\n     * @param a 待比较元素。\r\n     * @param b 待比较元素。\r\n     * @returns b、a转化成数字的差值 (b-a)。\r\n     */\r\n    static sortNumBigFirst(a: any, b: any): number {\r\n        return parseFloat(b) - parseFloat(a);\r\n    }\r\n\r\n    /**\r\n     * @en Compares the specified elements by converting them to numbers.\r\n     * @param a The first element to compare.\r\n     * @param b The second element to compare.\r\n     * @returns The difference between a and b as numbers (a-b).\r\n     * @zh 将指定的元素转为数字进行比较。\r\n     * @param a 待比较元素。\r\n     * @param b 待比较元素。\r\n     * @returns a、b转化成数字的差值 (a-b)。\r\n     */\r\n    static sortNumSmallFirst(a: any, b: any): number {\r\n        return parseFloat(a) - parseFloat(b);\r\n    }\r\n\r\n    /**\r\n     * @en Returns a comparison function for sorting objects based on a specified property.\r\n     * @param key The name of the object property to sort by.\r\n     * @param bigFirst If true, sort from big to small; otherwise, sort from small to big.\r\n     * @param forceNum If true, convert the sorting elements to numbers for comparison.\r\n     * @returns The sorting function.\r\n     * @zh 返回根据对象指定的属性进行排序的比较函数。\r\n     * @param key 排序要依据的元素属性名。\r\n     * @param bigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\r\n     * @param forceNum 如果值为true，则将排序的元素转为数字进行比较。\r\n     * @return 排序函数。\r\n     */\r\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\r\n        var _sortFun: Function;\r\n        if (bigFirst) {\r\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\r\n        } else {\r\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\r\n        }\r\n        return function (a: any, b: any): number {\r\n            return _sortFun(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { MathUtil } from \"../maths/MathUtil\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * @en Dispatched when the animation playback is complete.\r\n * @zh 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en Dispatched when the animation plays to a certain label.\r\n * @zh 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Node keyframe animation playback class. Parses and plays node animations created in the IDE.\r\n * @zh 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\r\n */\r\nexport class FrameAnimation extends AnimationBase {\r\n\r\n    /**@private */\r\n    private static _sortIndexFun(objpre: any, objnext: any) {\r\n        return objpre.index - objnext.index\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @en ID Object Table\r\n     * @zh id对象表\r\n     */\r\n    _targetDic: any;\r\n    /**\r\n     * @internal \r\n     * @en Animation Data\r\n     * @zh 动画数据\r\n     */\r\n    _animationData: any;\r\n    /**@private */\r\n    protected _usedFrames: any[];\r\n\r\n    constructor() {\r\n        super();\r\n        if (FrameAnimation._sortIndexFun === undefined) {\r\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Initialize animation data\r\n     * @param targetDic Node ID index\r\n     * @param animationData Animation data\r\n     * @zh 初始化动画数据\r\n     * @param targetDic 节点ID索引\r\n     * @param animationData 动画数据\r\n     */\r\n    _setUp(targetDic: any, animationData: any): void {\r\n        this._targetDic = targetDic;\r\n        this._animationData = animationData;\r\n        this.interval = 1000 / animationData.frameRate;\r\n        if (animationData.parsed) {\r\n            this._count = animationData.count;\r\n            this._labels = animationData.labels;\r\n            this._usedFrames = animationData.animationNewFrames;\r\n        } else {\r\n            this._usedFrames = [];\r\n            this._calculateDatas();\r\n\r\n            animationData.parsed = true;\r\n            animationData.labels = this._labels;\r\n            animationData.count = this._count;\r\n            animationData.animationNewFrames = this._usedFrames;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     * @en Clears the animation data and resets the animation to its initial state.\r\n     * @returns The instance of the AnimationBase.\r\n     * @zh 清除动画数据并将动画重置为初始状态。\r\n     * @returns AnimationBase 实例。\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this._targetDic = null;\r\n        this._animationData = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 将节点设置到某一帧的状态\r\n     * @param node 节点ID\r\n     * @param frame\r\n     * @param targetDic 节点表\r\n     */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!targetDic) targetDic = this._targetDic;\r\n        var target: any = targetDic[node.target];\r\n        if (!target) {\r\n            //trace(\"loseTarget:\",node.target);\r\n            return;\r\n        }\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            if (propFrames.length > frame) {\r\n                value = propFrames[frame];\r\n            } else {\r\n                value = propFrames[propFrames.length - 1];\r\n            }\r\n            target[key] = value;\r\n        }\r\n        var funkeys: any[] = node.funkeys;\r\n        len = funkeys.length;\r\n        var funFrames: any;\r\n        if (len == 0) return;\r\n        for (i = 0; i < len; i++) {\r\n            key = funkeys[i];\r\n            funFrames = frames[key];\r\n            if (funFrames[frame] !== undefined) {\r\n                target[key] && target[key].apply(target, funFrames[frame]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算帧数据\r\n     */\r\n    private _calculateDatas(): void {\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\r\n        this._count = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            this._calculateKeyFrames(tNode);\r\n        }\r\n        this._count += 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算某个节点的帧数据\r\n     */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n        if (!node.frames) node.frames = {};\r\n        if (!node.keys) node.keys = [];\r\n        else node.keys.length = 0;\r\n\r\n        if (!node.funkeys) node.funkeys = [];\r\n        else node.funkeys.length = 0;\r\n\r\n        if (!node.initValues) node.initValues = {};\r\n        for (key in keyFrames) {\r\n            var isFun: boolean = key.indexOf(\"()\") != -1;\r\n            tKeyFrames = keyFrames[key];\r\n            if (isFun) key = key.substr(0, key.length - 2);\r\n            if (!node.frames[key]) {\r\n                node.frames[key] = [];\r\n            }\r\n            if (!isFun) {\r\n                if (this._targetDic && this._targetDic[target]) {\r\n                    node.initValues[key] = this._targetDic[target][key];\r\n                }\r\n\r\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\r\n                node.keys.push(key);\r\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\r\n            }\r\n            else {\r\n                node.funkeys.push(key);\r\n                var map: any[] = node.frames[key];\r\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\r\n                    var temp: any = tKeyFrames[i];\r\n                    map[temp.index] = temp.value;\r\n                    if (temp.index > this._count) this._count = temp.index;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Reset nodes to restore them to their state before the animation, facilitating control by other animations.\r\n     * This method iterates through all nodes in the animation data, resetting their properties to initial values.\r\n     * @zh 重置节点，使节点恢复到动画之前的状态，方便其他动画控制。\r\n     * 此方法遍历动画数据中的所有节点，将它们的属性重置为初始值。\r\n     */\r\n    resetNodes(): void {\r\n        if (!this._targetDic) return;\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        var tNode: any;\r\n        var initValues: any;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            initValues = tNode.initValues;\r\n            if (!initValues) continue;\r\n            var target: any = this._targetDic[tNode.target];\r\n            if (!target) continue;\r\n            var key: string;\r\n            for (key in initValues) {\r\n                target[key] = initValues[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算节点某个属性的帧数据\r\n     */\r\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\r\n        var i: number, len: number = keyframes.length - 1;\r\n        frames.length = keyframes[len].index + 1;\r\n        for (i = 0; i < len; i++) {\r\n            this._dealKeyFrame(keyframes[i]);\r\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\r\n        }\r\n        if (len == 0) {\r\n            frames[0] = keyframes[0].value;\r\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\r\n        }\r\n        this._dealKeyFrame(keyframes[i]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _dealKeyFrame(keyFrame: any): void {\r\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算两个关键帧直接的帧数据\r\n     */\r\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\r\n        var i: number, easeFun: Function;\r\n        var start: number = startFrame.index, end: number = endFrame.index;\r\n        var startValue: number = startFrame.value;\r\n        var dValue: number = endFrame.value - startFrame.value;\r\n        var dLen: number = end - start;\r\n        var frames: any[] = this._usedFrames;\r\n        if (end > this._count) this._count = end;\r\n        if (startFrame.tween) {\r\n            easeFun = (Ease as any)[startFrame.tweenMethod];\r\n            if (easeFun == null) easeFun = Ease.linearNone;\r\n            for (i = start; i < end; i++) {\r\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\r\n                if (frames) frames[i] = true;\r\n            }\r\n        } else {\r\n            for (i = start; i < end; i++) {\r\n                result[i] = startValue;\r\n            }\r\n        }\r\n        if (frames) {\r\n            frames[startFrame.index] = true;\r\n            frames[endFrame.index] = true;\r\n        }\r\n        result[endFrame.index] = endFrame.value;\r\n    }\r\n}\r\n","import { FrameAnimation } from \"./FrameAnimation\"\r\nimport { Graphics } from \"./Graphics\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\n\r\n/**\r\n * @private\r\n * @en Graphics animation parser\r\n * @zh Graphics动画解析器\r\n */\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * @en List of animations\r\n     * @zh 动画列表\r\n     */\r\n    animationList: any[];\r\n    /**\r\n     * @private\r\n     * @en Dictionary of animations\r\n     * @zh 动画字典\r\n     */\r\n    animationDic: any;\r\n    /**@private */\r\n    protected _nodeList: any[];\r\n    /**@private */\r\n    protected _nodeDefaultProps: any;\r\n    /**@private */\r\n    protected _gList: any[];\r\n    /**@private */\r\n    protected _nodeIDAniDic: any = {};\r\n\r\n    /**@private */\r\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\n    /**@private */\r\n    protected static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _I: GraphicAnimation;\r\n    /**@private */\r\n    private static _rootMatrix: Matrix;\r\n    /**@private */\r\n    private _rootNode: any;\r\n    /**@private */\r\n    protected _nodeGDic: any;\r\n\r\n    /**@private */\r\n    private _parseNodeList(uiView: any): void {\r\n        if (!this._nodeList) this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId) this._nodeList.push(uiView.compId);\r\n        var childs: any[] = uiView.child;\r\n        if (childs) {\r\n            var i: number, len: number = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _calGraphicData(aniData: any): void {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key: string;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _createGraphicData(): void {\r\n        var gList: any[] = [];\r\n        var i: number, len: number = this.count;\r\n        var animationDataNew: any[] = this._usedFrames;\r\n        if (!animationDataNew) animationDataNew = [];\r\n        var preGraphic: Graphics;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n\r\n    /**@private */\r\n    protected _createFrameGraphic(frame: number): any {\r\n        var g: Graphics = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        //_updateNodeGraphic2(_rootNode, frame, g);\r\n        return g;\r\n    }\r\n\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform: Matrix;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex: Texture;\r\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01) return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                } else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs: any[] = node.child;\r\n        if (!childs) return;\r\n        var i: number, len: number;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param tNodeG \r\n     * @param g \r\n     */\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\r\n        if (!tNodeG.skin) return;\r\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex) return;\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        } else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans: boolean;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave: boolean;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave) g.save();\r\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate) g.transform(tTransform.clone());\r\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\r\n\r\n        var childs: any[] = node.child;\r\n        var tTex: Texture;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n\r\n        if (childs) {\r\n            var i: number, len: number;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n\r\n        if (ifSave) {\r\n            g.restore();\r\n        } else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            } else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n\r\n    /**@private */\r\n    protected getNodeDataByID(nodeID: number): any {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n\r\n    /**@private */\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\r\n        var rst: any[] = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private */\r\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\r\n        if (key in obj) {\r\n            var vArr: any[] = obj[key];\r\n            if (frame >= vArr.length) frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param nodeID \r\n     * @param frame \r\n     * @param rst \r\n     */\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        } else {\r\n            rst.transform.identity();\r\n        }\r\n\r\n        var node: any = this.getNodeDataByID(nodeID);\r\n        if (!node) return rst;\r\n        var frameData: any = node.frames;\r\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url: string = params[0];\r\n        var width: number, height: number;\r\n        var px: number = params[5], py: number = params[6];\r\n        var aX: number = params[13], aY: number = params[14];\r\n        var sx: number = params[7], sy: number = params[8];\r\n        var rotate: number = params[9];\r\n        var skewX: number = params[11], skewY: number = params[12]\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0) url = null;\r\n        if (width == -1) width = 0;\r\n        if (height == -1) height = 0;\r\n        var tex: Texture;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            } else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n\r\n        rst.alpha = params[10];\r\n\r\n        var m: Matrix = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm: Matrix = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\r\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n\r\n        m.translate(params[1], params[2]);\r\n\r\n        return rst;\r\n    }\r\n    private static _tempMt: Matrix = new Matrix();\r\n\r\n    /**@private */\r\n    protected _getTextureByUrl(url: string): any {\r\n        return Loader.getRes(url);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Set animation data\r\n     * @param uiView The UI view containing animation data\r\n     * @param aniName The name of the animation to set \r\n     * @zh 设置动画数据\r\n     * @param uiView 包含动画数据的UI视图\r\n     * @param aniName 要设置的动画名称\r\n     */\r\n    setAniData(uiView: any, aniName: string = null): void {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList) this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                } catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO: any = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Parse animation data\r\n     * @param aniData The animation data to parse\r\n     * @returns Parsed animation frame object\r\n     * @zh 解析动画数据\r\n     * @param aniData 要解析的动画数据\r\n     * @returns 解析后的动画帧对象\r\n     */\r\n    parseByData(aniData: any): any {\r\n        var rootNode: any, aniO: any;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList) this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        } catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO: any = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Set up animation data\r\n     * This method processes the animations in the UI view, creating a list and dictionary of animation frames.\r\n     * @param uiView The UI view containing animation data\r\n     * @zh 设置动画数据\r\n     * 此方法处理UI视图中的动画，创建动画帧的列表和字典。\r\n     * @param uiView 包含动画数据的UI视图\r\n     */\r\n    setUpAniData(uiView: any): void {\r\n        if (uiView.animations) {\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO) continue;\r\n                var frameO: any = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _clear(): void {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n\r\n    /**\r\n     * @en Parse animation by data\r\n     * @param animationObject The animation object to parse\r\n     * @returns Parsed animation data\r\n     * @zh 通过数据解析动画\r\n     * @param animationObject 要解析的动画对象\r\n     * @returns 解析后的动画数据\r\n     */\r\n    static parseAnimationByData(animationObject: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        var rst: any;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @en Parse animation data\r\n     * @param aniData The animation data to parse\r\n     * @returns An object containing parsed animation list and dictionary\r\n     * @zh 解析动画数据\r\n     * @param aniData 要解析的动画数据\r\n     * @returns 包含解析后的动画列表和字典的对象\r\n     */\r\n    static parseAnimationData(aniData: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst: any;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\n\r\n\r\n/**@internal */\r\nclass GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number = 1;\r\n}\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Loader } from \"../net/Loader\"\r\nimport { GraphicAnimation } from \"./GraphicAnimation\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\n\r\n/**\r\n * @en Dispatched when the animation playback is complete.\r\n * @zh 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en Dispatched when a specific label is reached during playback.\r\n * @zh 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en The Animation class is a Graphics-based animation class. It implements interfaces for creating, playing, and controlling animations based on Graphics.\r\n * The animation template cache pool stores key-value pairs, where the key can be customized or read from a specified configuration file, and the value is the corresponding animation template, which is an array of Graphics objects. Each Graphics object corresponds to a frame image, and the essence of animation playback is switching Graphics objects at regular intervals.\r\n * This class uses an animation template cache pool, which trades some memory overhead for CPU savings. When the same animation template is used multiple times, compared to creating a new animation template each time, using the animation template cache pool only requires creation once, caching it for multiple reuses, thus saving the overhead of creating animation templates.\r\n * Use the set source, loadImages(...), loadAtlas(...), loadAnimation(...) methods to create animation templates. Use play(...) to play the specified animation.\r\n * @zh Animation 是基于 Graphics 的动画类。实现了基于 Graphics 的动画创建、播放、控制接口。\r\n * 本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。\r\n * 动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。\r\n * 使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。\r\n */\r\nexport class Animation extends AnimationBase {\r\n    /**\r\n     * @en The animation template cache pool, stored as key-value pairs. The key can be customized or read from a specified configuration file, and the value is the corresponding animation template, which is an array of Graphics objects. Each Graphics object corresponds to a frame image, and the essence of animation playback is switching Graphics objects at regular intervals.\r\n     * Use loadImages(...), loadAtlas(...), loadAnimation(...), set source methods to create animation templates. Use play(...) to play the specified animation.\r\n     * @zh 动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。\r\n     * 使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。\r\n     */\r\n    static framesMap: any = {};\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    protected _frames: any[];\r\n\r\n    private _source: string;\r\n\r\n    private _autoPlay = false;\r\n\r\n    /**\r\n     * @en The currently used atlas resources.\r\n     * @zh 当前正在使用的图集资源\r\n     */\r\n    private _atlasCatch: AtlasResource[];\r\n\r\n\r\n    /**\r\n     * @en Constructor method of Animation.\r\n     * @zh 动画类的构造方法\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setControlNode(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     * @en Destroys the object.\r\n     * @param destroyChild Whether to destroy child nodes\r\n     * @zh 销毁对象。\r\n     * @param destroyChild 是否销毁子节点\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stop();\r\n        super.destroy(destroyChild);\r\n        if (this._atlasCatch) {\r\n            for (let alias of this._atlasCatch) {\r\n                alias._removeReference();\r\n                if (0 == alias.referenceCount) {\r\n                    alias.destroy();\r\n                }\r\n            }\r\n        }\r\n        this._atlasCatch = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Starts playing the animation. It will search for an animation template with the key value \"name\" in the animation template cache pool. If it exists, it will initialize the current sequence frame with this animation template. If it doesn't exist, it will use the current sequence frame.\r\n     * The play(...) method is designed to be called at any time after creating an instance. After calling, it will be in a playing state. When the corresponding resources are loaded, the animation frame filling method (set frames) is called, or the instance is displayed on the stage, it will determine whether it is in a playing state. If so, it will start playing.\r\n     * Combined with the wrapMode property, you can set the animation playback order type.\r\n     * @param start (Optional) Specifies the index (int) or frame label (String) where the animation playback starts. Frame labels can be added and removed using addLabel(...) and removeLabel(...).\r\n     * @param loop (Optional) Whether to loop playback.\r\n     * @param name (Optional) The key of the animation template in the animation template cache pool, which can also be considered as the animation name. If name is empty, it will play the current animation sequence frame; if it is not empty, it will look for an animation template with the key value \"name\" in the animation template cache pool. If it exists, it will initialize the current sequence frame with this animation template and play it. If it doesn't exist, it will still play the current animation sequence frame. If there is no frame data for the current animation, it will not play, but the instance will still be in a playing state.\r\n     * @zh 开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。\r\n     * play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。\r\n     * 配合wrapMode属性，可设置动画播放顺序类型。\r\n     * @param start （可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param loop （可选）是否循环播放。\r\n     * @param name （可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (name) this._setFramesFromCache(name, true);\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @internal\r\n     */\r\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\r\n        if (this._url) name = this._url + \"#\" + name;\r\n        if (name && Animation.framesMap[name]) {\r\n            var tAniO: any = Animation.framesMap[name];\r\n            if (tAniO instanceof Array) {\r\n                this._frames = Animation.framesMap[name];\r\n                this._count = this._frames.length;\r\n            } else {\r\n                if (tAniO.nodeRoot) {\r\n                    //如果动画数据未解析过,则先进行解析\r\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\r\n                    tAniO = Animation.framesMap[name];\r\n                }\r\n                this._frames = tAniO.frames;\r\n                this._count = this._frames.length;\r\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\r\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\r\n                this._labels = this._copyLabels(tAniO.labels);\r\n            }\r\n            return true;\r\n        } else {\r\n            if (showWarn) console.log(\"ani not found:\", name);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@private */\r\n    private _copyLabels(labels: any): any {\r\n        if (!labels) return null;\r\n        var rst: any;\r\n        rst = {};\r\n        var key: string;\r\n        for (key in labels) {\r\n            rst[key] = Utils.copyArray([], labels[key]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n     * @internal\r\n    */\r\n    protected _frameLoop(): void {\r\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\r\n            super._frameLoop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (this._frames) this.graphics = this._frames[value];\r\n    }\r\n\r\n    /**\r\n     * @en The current animation frame image array. In this class, each frame image is a Graphics object, and animation playback is essentially the process of switching Graphics objects at regular intervals.\r\n     * @zh 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\r\n     */\r\n    get frames(): any[] {\r\n        return this._frames;\r\n    }\r\n\r\n    set frames(value: any[]) {\r\n        this._frames = value;\r\n        if (value) {\r\n            this._count = value.length;\r\n            //if (_isPlaying) play(_index, loop, _actionName);\r\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Animation data source.\r\n     * Types are as follows:\r\n     * 1. LayaAir IDE animation file path: Using this type requires preloading the required atlas resources, otherwise it will fail to create. If you don't want to preload or need a callback when creation is complete, please use the loadAnimation(...) method.\r\n     * 2. Atlas path: Animation templates created using this type will not be cached in the animation template cache pool. If you need caching or a callback when creation is complete, please use the loadAtlas(...) method.\r\n     * 3. Image path collection: Animation templates created using this type will not be cached in the animation template cache pool. If you need caching, please use the loadImages(...) method.\r\n     * @param value Data source. For example: Atlas: \"xx/a1.atlas\"; Image collection: \"a1.png,a2.png,a3.png\"; LayaAir IDE animation: \"xx/a1.ani\".\r\n     * @zh 动画数据源。\r\n     * 类型如下：\r\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；\r\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；\r\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。\r\n     * @param value 数据源。例如：图集：\"xx/a1.atlas\"; 图片集合：\"a1.png,a2.png,a3.png\"; LayaAir IDE动画：\"xx/a1.ani\"。\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (!value)\r\n            this.clear();\r\n        else if (value.indexOf(\".ani\") > -1)\r\n            this.loadAnimation(value);\r\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\r\n            this.loadAtlas(value);\r\n        else\r\n            this.loadImages(value.split(\",\"));\r\n    }\r\n\r\n    /**\r\n     * @en Whether to auto-play, default is false. If set to true, the animation will automatically play after being created and added to the stage.\r\n     * @zh 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\r\n     */\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value)\r\n            this.play();\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Stops animation playback and clears object properties. It can then be stored in the object pool for easy object reuse.\r\n     * @returns AnimationBase\r\n     * @zh 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @returns AnimationBase\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this.stop();\r\n        this.graphics = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Initializes the current animation sequence frame based on the specified animation template. The process of selecting an animation template is as follows: 1. The animation template with the key cacheName in the animation template cache pool; 2. If it doesn't exist, load the specified image collection and create an animation template. Note: Only when a non-empty cacheName is specified can the created animation template be cached in the animation template cache pool with this as the key, otherwise no caching is performed.\r\n     * The animation template cache pool trades a certain memory overhead for CPU savings. When the same animation template is used multiple times, compared to creating a new animation template each time, using the animation template cache pool only needs to be created once, cached, and reused multiple times, thus saving the overhead of creating animation templates.\r\n     * Because the return value is the Animation object itself, you can use the following syntax: loadImages(...).loadImages(...).play(...);\r\n     * @param urls Image path collection. When creating an animation template, this will be used as the data source. The parameter is in the form: [url1,url2,url3,...].\r\n     * @param cacheName (Optional) The key of the animation template in the animation template cache pool. If this parameter is not empty, it means using the animation template cache pool. If an animation template with the key cacheName exists in the animation template cache pool, this template is used. Otherwise, a new animation template is created. If cacheName is not empty, it is cached in the animation template cache pool with cacheName as the key. If cacheName is empty, no caching is performed.\r\n     * @returns Returns the Animation object itself.\r\n     * @zh 根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。\r\n     * 动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。\r\n     * 因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。\r\n     * @param urls 图片路径集合。创建动画模版时，将以此为数据源。参数形式为：[url1,url2,url3,...]。\r\n     * @param cacheName （可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @returns 返回动画本身。\r\n     */\r\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\r\n        }\r\n        if (!this._isPlaying && this._autoPlay)\r\n            this.play();\r\n        return this;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Initializes the current animation sequence frame based on the specified animation template. The process of selecting an animation template is as follows: 1. The animation template with the key cacheName in the animation template cache pool; 2. If it doesn't exist, load the specified atlas and create an animation template.\r\n     * Note: Only when a non-empty cacheName is specified can the created animation template be cached in the animation template cache pool with this as the key, otherwise no caching is performed.\r\n     * The animation template cache pool trades a certain memory overhead for CPU savings. When the same animation template is used multiple times, compared to creating a new animation template each time, using the animation template cache pool only needs to be created once, cached, and reused multiple times, thus saving the overhead of creating animation templates.\r\n     * Because the return value is the Animation object itself, you can use the following syntax: loadAtlas(...).loadAtlas(...).play(...);\r\n     * @param url Atlas path. When creating an animation template, this will be used as the data source.\r\n     * @param loaded (Optional) Callback when the animation is initialized using the specified atlas.\r\n     * @param cacheName (Optional) The key of the animation template in the animation template cache pool. If this parameter is not empty, it means using the animation template cache pool. If an animation template with the key cacheName exists in the animation template cache pool, this template is used. Otherwise, a new animation template is created. If cacheName is not empty, it is cached in the animation template cache pool with cacheName as the key. If cacheName is empty, no caching is performed.\r\n     * @returns Returns the Animation object itself.\r\n     * @zh 根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。\r\n     * 注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。\r\n     * 动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。\r\n     * 因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。\r\n     * @param\turl\t图集路径。需要创建动画模版时，会以此为数据源。\r\n     * @param\tloaded（可选）使用指定图集初始化动画完毕的回调。\r\n     * @param\tcacheName（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            let onLoaded = (loadUrl: string, data: AtlasResource) => {\r\n                if (null == this._atlasCatch) this._atlasCatch = [];\r\n                if (0 > this._atlasCatch.indexOf(data)) {\r\n                    this._atlasCatch.push(data);\r\n                    data._addReference();\r\n                }\r\n                if (url === loadUrl) {\r\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\r\n                    if (!this._isPlaying && this._autoPlay)\r\n                        this.play();\r\n                    if (loaded) loaded.run();\r\n                }\r\n            }\r\n            let atlas: AtlasResource = Loader.getAtlas(url);\r\n            if (atlas) onLoaded(url, atlas);\r\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * @en Loads and parses an animation file created by LayaAir IDE, which may contain multiple animations. The default frame rate is the frame rate designed in the IDE. If set interval has been called, the frame rate corresponding to this frame interval is used. After loading, it creates an animation template and caches it in the animation template cache pool. The key \"url#animation name\" corresponds to the animation template of the corresponding animation name, and the key \"url#\" corresponds to the default animation template of the animation template collection.\r\n     * Note: If you haven't preloaded the atlas used by the animation before calling this method, please specify the atlas parameter as the corresponding atlas path, otherwise it will cause the animation creation to fail.\r\n     * The animation template cache pool trades a certain memory overhead for CPU savings. When the same animation template is used multiple times, compared to creating a new animation template each time, using the animation template cache pool only needs to be created once, cached, and reused multiple times, thus saving the overhead of creating animation templates.\r\n     * Because the return value is the Animation object itself, you can use the following syntax: loadAnimation(...).loadAnimation(...).play(...);\r\n     * @param url Animation file path. Can be created and published by LayaAir IDE.\r\n     * @param loaded (Optional) Callback when the animation is initialized using the specified animation resource.\r\n     * @param atlas (Optional) The atlas address used by the animation (optional).\r\n     * @returns Returns the Animation object itself.\r\n     * @zh 加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。\r\n     * 注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。\r\n     * 动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。\r\n     * 因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。\r\n     * @param\turl 动画文件路径。可由LayaAir IDE创建并发布。\r\n     * @param\tloaded（可选）使用指定动画资源初始化动画完毕的回调。\r\n     * @param\tatlas（可选）动画用到的图集地址（可选）。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\r\n        this._url = url;\r\n        var _this: Animation = this;\r\n        if (!this._actionName) this._actionName = \"\";\r\n        if (!_this._setFramesFromCache(this._actionName)) {\r\n            if (!atlas || Loader.getAtlas(atlas)) {\r\n                this._loadAnimationData(url, loaded, atlas);\r\n            } else {\r\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\r\n            }\r\n        } else {\r\n            _this._setFramesFromCache(this._actionName, true);\r\n            this.index = 0;\r\n            if (loaded) loaded.run();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**@private */\r\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\r\n        if (atlas && !Loader.getAtlas(atlas)) {\r\n            console.warn(\"atlas load fail:\" + atlas);\r\n            return;\r\n        }\r\n\r\n        ILaya.loader.fetch(url, \"json\").then(data => {\r\n            if (this._url !== url)\r\n                return;\r\n\r\n            if (!data) {\r\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\r\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\r\n                if (Animation.framesMap[url + \"#\"]) {\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                    this._resumePlay();\r\n                    if (loaded) loaded.run();\r\n                }\r\n                return;\r\n            }\r\n\r\n            let tAniO: any;\r\n            if (!Animation.framesMap[url + \"#\"]) {\r\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\r\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\r\n                if (!aniData) return;\r\n                //缓存动画数据\r\n                let aniList: any[] = aniData.animationList;\r\n                let len: number = aniList.length;\r\n                let defaultO: any;\r\n                for (let i = 0; i < len; i++) {\r\n                    tAniO = aniList[i];\r\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\r\n                    if (!defaultO) defaultO = tAniO;\r\n                }\r\n                if (defaultO) {\r\n                    Animation.framesMap[url + \"#\"] = defaultO;\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                }\r\n                this._resumePlay();\r\n            } else {\r\n                this._setFramesFromCache(this._actionName, true);\r\n                this.index = 0;\r\n                this._resumePlay();\r\n            }\r\n            if (loaded) loaded.run();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Creates an animation template. Multiple animations can share the same animation template without having to create a new one each time, thus saving the overhead of creating a Graphics collection.\r\n     * @param url Atlas path or image path array. If it's an atlas path, the corresponding atlas needs to be preloaded. If it's not preloaded, it will cause creation failure.\r\n     * @param name The key of the animation template in the animation template cache pool. If it's not empty, the animation template is cached with this as the key, otherwise it's not cached.\r\n     * @returns Animation template.\r\n     * @zh 创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。\r\n     * @param\turl\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\r\n     * @param\tname 动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\r\n     * @return\t动画模板。\r\n     */\r\n    static createFrames(url: string | string[], name: string): any[] {\r\n        var arr: any[];\r\n        if (typeof (url) == 'string') {\r\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\r\n            if (atlas && atlas.frames.length) {\r\n                let frames = atlas.frames;\r\n                arr = [];\r\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\r\n                    var g: Graphics = new Graphics();\r\n                    g.drawImage(frames[i], 0, 0);\r\n                    arr.push(g);\r\n                }\r\n            }\r\n        } else if (url instanceof Array) {\r\n            arr = [];\r\n            for (i = 0, n = url.length; i < n; i++) {\r\n                g = new Graphics();\r\n                g.loadImage(url[i], 0, 0);\r\n                arr.push(g);\r\n            }\r\n        }\r\n        if (name) Animation.framesMap[name] = arr;\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the animation data with the specified key value from the animation template cache pool.\r\n     * When calling the function to create an animation template, developers can manually specify this value. For animation sets created by LayaAir IDE, the parsed key format is: \"url#\": represents the default animation template of the animation set, if this value is used as a parameter, it will clear the entire animation set data; \"url#aniName\": represents the animation template with the corresponding name.\r\n     * @param key The key of the animation template in the animation template cache pool.\r\n     * @zh 从动画模版缓存池中清除指定key值的动画数据。\r\n     * 开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。\r\n     * @param key 动画模板在动画模版缓存池中的key。\r\n     */\r\n    static clearCache(key: string): void {\r\n        var cache: any = Animation.framesMap;\r\n        var val: string;\r\n        var key2: string = key + \"#\";\r\n        for (val in cache) {\r\n            if (val === key || val.indexOf(key2) === 0) {\r\n                delete Animation.framesMap[val];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Called after the object is deserialized.\r\n     * @zh 在对象反序列化后调用。\r\n     */\r\n    onAfterDeserialize(): void {\r\n        super.onAfterDeserialize();\r\n\r\n        if ((<any>this).images) {\r\n            if (!this._source)\r\n                this.loadImages((<any>this).images);\r\n            delete (<any>this).images;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * @en BitmapFont is a bitmap font class used to define bitmap font information.\r\n * @zh BitmapFont 是位图字体类，用于定义位图字体信息。\r\n */\r\nexport class BitmapFont extends Resource {\r\n    /**\r\n     * @en Bitmap font texture\r\n     * @zh 位图字体纹理\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * @en Bitmap font key-value mapping\r\n     * @zh 位图字体键值对映射\r\n     */\r\n    dict: Record<string, BMGlyph> = {};\r\n    /**\r\n     * @en Font padding\r\n     * @zh 字体边距\r\n     */\r\n    padding: any[];\r\n\r\n    /**\r\n     * @en Current bitmap font size. When used, if the font size is different from the setting and autoScaleSize=true, it will be scaled according to the set font size ratio.\r\n     * @zh 当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。\r\n     */\r\n    fontSize: number = 12;\r\n    /**\r\n     * @en Indicates whether to scale the bitmap font size according to the actual font size used.\r\n     * @zh 表示是否根据实际使用的字体大小缩放位图字体大小。\r\n     */\r\n    autoScaleSize: boolean = false;\r\n    /**\r\n     * @en Whether it is a font\r\n     * @zh 是否是字体\r\n     */\r\n    tint: boolean = true;\r\n    /**\r\n     * @en Maximum width\r\n     * @zh 最大宽度\r\n     */\r\n    maxWidth: number = 0;\r\n    /**\r\n     * @en Line height\r\n     * @zh 行高\r\n     */\r\n    lineHeight: number = 12;\r\n    /**\r\n     * @en Letter spacing\r\n     * @zh 字符间隔\r\n     */\r\n    letterSpacing = 0;\r\n\r\n    /**\r\n     * @en Load the bitmap font file by specifying the file path. After loading, it will be automatically parsed.\r\n     * @param path The path of the bitmap font file.\r\n     * @param complete The callback function after loading and parsing are completed.\r\n     * @zh 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\r\n     * @param path 位图字体文件的路径。\r\n     * @param complete 加载并解析完成的回调。\r\n     */\r\n    static loadFont(path: string, complete: Handler): void {\r\n        ILaya.loader.load(path, Loader.FONT).then(font => {\r\n            complete && complete.runWith(font);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en BitmapFont constructor.\r\n     * @zh 位图字体构造方法。\r\n     */\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    /**\r\n     * @en Parse the font file.\r\n     * @param xml The XML of the font file.\r\n     * @param texture The texture of the font.\r\n     * @zh 解析字体文件。\r\n     * @param xml 字体文件XML。\r\n     * @param texture 字体的纹理。\r\n     */\r\n    parseFont(xml: XML, texture: Texture): void {\r\n        if (xml == null || texture == null) return;\r\n        this.texture = texture;\r\n        texture._addReference();\r\n\r\n        let scale: number = 1;\r\n        let info = xml.getNode(\"info\");\r\n        this.fontSize = info.getAttrInt(\"size\", 12);\r\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\r\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\r\n        if (this.lineHeight == 0)\r\n            this.lineHeight = this.fontSize;\r\n\r\n        let padding: string = info.getAttrString(\"padding\", \"\");\r\n        let paddingArray: any[] = padding.split(\",\");\r\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\r\n\r\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\r\n        let maxWidth = 0;\r\n        let dict = this.dict;\r\n        for (let i = 0, n = chars.length; i < n; i++) {\r\n            let ct = chars[i];\r\n            let id = ct.getAttrInt(\"id\");\r\n\r\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\r\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\r\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\r\n\r\n            let x = ct.getAttrInt(\"x\");\r\n            let y = ct.getAttrInt(\"y\");\r\n            let width = ct.getAttrInt(\"width\");\r\n            let height = ct.getAttrInt(\"height\");\r\n\r\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\r\n\r\n            if (advance == 0)\r\n                advance = width;\r\n            advance += this.letterSpacing;\r\n            maxWidth = Math.max(maxWidth, advance);\r\n\r\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\r\n        }\r\n\r\n        if (maxWidth > 0)\r\n            this.maxWidth = maxWidth;\r\n        else\r\n            this.maxWidth = this.fontSize;\r\n\r\n        if (!dict[32]) //space\r\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Destroys the bitmap font. This is called by default when Text.unregisterBitmapFont is invoked.\r\n     * @zh 销毁位图字体，调用 Text.unregisterBitmapFont 时，默认会销毁。\r\n     */\r\n\r\n    protected _disposeResource(): void {\r\n        if (this.texture) {\r\n            for (let k in this.dict) {\r\n                this.dict[k].texture?.destroy();\r\n            }\r\n            this.texture._removeReference();\r\n            this.dict = null;\r\n            this.texture = null;\r\n            this.padding = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the width of the specified text content.\r\n     * @param text The text content.\r\n     * @param fontSize The font size.\r\n     * @return The width of the text content.\r\n     * @zh 获取指定文本内容的宽度。\r\n     * @param text 文本内容。\r\n     * @param fontSize 字体大小。\r\n     * @return 文本内容的宽度。\r\n     */\r\n    getTextWidth(text: string, fontSize?: number): number {\r\n        let w = 0;\r\n        for (let i = 0, n = text.length; i < n; i++) {\r\n            let g = this.dict[text.charCodeAt(i)];\r\n            if (g) {\r\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\r\n                w += Math.round(g.advance * scale);\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * @en Get the maximum character width.\r\n     * @param fontSize The font size.\r\n     * @zh 获取最大字符宽度。\r\n     * @param fontSize 字体大小。\r\n     */\r\n    getMaxWidth(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\r\n        else\r\n            return this.maxWidth;\r\n    }\r\n\r\n    /**\r\n     * @en Get the maximum character height.\r\n     * @param fontSize The font size.\r\n     * @zh 获取最大字符高度。\r\n     * @param fontSize 字体大小。\r\n     */\r\n    getMaxHeight(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\r\n        else\r\n            return this.lineHeight;\r\n    }\r\n}\r\n\r\nexport interface BMGlyph {\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    advance?: number;\r\n    texture?: Texture;\r\n}","import { FrameAnimation } from \"./FrameAnimation\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * @en Effect template. Used to add animation effects to specified target objects. Each effect has a unique target object, while the same object can add multiple effects. When one effect starts playing, other effects will automatically stop playing.\r\n * @zh 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。当一个动效开始播放时，其他动效会自动停止播放。\r\n */\r\nexport class EffectAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * 动效开始事件。\r\n     */\r\n    private static EFFECT_BEGIN: string = \"effectbegin\";\r\n\r\n    /**@internal */\r\n    private _target: any;\r\n    /**@internal */\r\n    private _playEvent: string;\r\n    /**@internal */\r\n    private _initData: any = {};\r\n    /**@internal */\r\n    private _aniKeys: any[];\r\n    /**@internal */\r\n    private _effectClass: new () => any;\r\n\r\n    /**\r\n     * @en The target object of this instance. Controls the property changes of the target object through this instance.\r\n     * @zh 本实例的目标对象。通过本实例控制目标对象的属性变化。\r\n     */\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n    set target(v: any) {\r\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._target = v;\r\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@private */\r\n    private _onOtherBegin(effect: any): void {\r\n        if (effect === this) return;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * @en The event name to trigger the animation. This instance will listen for the specified event of the target object and play the corresponding animation effect when triggered.\r\n     * @zh 触发动画的事件名称。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\r\n     */\r\n    set playEvent(event: string) {\r\n        this._playEvent = event;\r\n        if (!event) return;\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@internal */\r\n    private _addEvent(): void {\r\n        if (!this._target || !this._playEvent) return;\r\n        this._setControlNode(this._target);\r\n        this._target.on(this._playEvent, this, this._onPlayAction);\r\n    }\r\n\r\n    /**@internal */\r\n    private _onPlayAction(): void {\r\n        this.play(0, false);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Play the animation effect.\r\n     * @param start The starting position of the animation. Default is 0.\r\n     * @param loop Whether to loop the animation. Default is true.\r\n     * @param name The name of the animation to play. Default is an empty string.\r\n     * @zh 播放动画效果。\r\n     * @param start 动画的起始位置。默认为0。\r\n     * @param loop 是否循环播放动画。默认为true。\r\n     * @param name 要播放的动画名称。默认为空字符串。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (!this._target)\r\n            return;\r\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\r\n        this._recordInitData();\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    private _recordInitData(): void {\r\n        if (!this._aniKeys) return;\r\n        var i: number, len: number;\r\n        len = this._aniKeys.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = this._aniKeys[i];\r\n            this._initData[key] = this._target[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Provide the path of the class that provides the data.\r\n     * @zh 提供数据的类的路径。\r\n     */\r\n    set effectClass(classStr: string) {\r\n        this._effectClass = ClassUtils.getClass(classStr);\r\n        if (this._effectClass) {\r\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\r\n            if (uiData) {\r\n                var aniData: any[] = uiData[\"animations\"];\r\n                if (aniData && aniData[0]) {\r\n                    var data: any = aniData[0];\r\n                    this._setUp({}, data);\r\n                    if (data.nodes && data.nodes[0]) {\r\n                        this._aniKeys = data.nodes[0].keys;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The UI data containing animation information.\r\n     * @zh 包含动画信息的UI数据。\r\n     */\r\n    set effectData(uiData: any) {\r\n        if (uiData) {\r\n            var aniData: any[] = uiData[\"animations\"];\r\n            if (aniData && aniData[0]) {\r\n                var data: any = aniData[0];\r\n                this._setUp({}, data);\r\n                if (data.nodes && data.nodes[0]) {\r\n                    this._aniKeys = data.nodes[0].keys;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        len = len > 1 ? 1 : len;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n    */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!this._target) return;\r\n        var target: any = this._target;\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        var secondFrames: any = node.secondFrames;\r\n        var tSecondFrame: number;\r\n        var easeFun: Function;\r\n        var tKeyFrames: any[];\r\n        var startFrame: any;\r\n        var endFrame: any;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            tSecondFrame = secondFrames[key];\r\n            if (tSecondFrame == -1) {\r\n                value = this._initData[key];\r\n            } else {\r\n                if (frame < tSecondFrame) {\r\n                    tKeyFrames = node.keyframes[key];\r\n                    startFrame = tKeyFrames[0];\r\n                    if (startFrame.tween) {\r\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\r\n                        if (easeFun == null) easeFun = Ease.linearNone;\r\n                        endFrame = tKeyFrames[1];\r\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\r\n                    } else {\r\n                        value = this._initData[key];\r\n                    }\r\n\r\n                } else {\r\n                    if (propFrames.length > frame) value = propFrames[frame];\r\n                    else value = propFrames[propFrames.length - 1];\r\n                }\r\n            }\r\n            target[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n\r\n        var secondFrames: any = {};\r\n        node.secondFrames = secondFrames;\r\n        for (key in keyFrames) {\r\n            tKeyFrames = keyFrames[key];\r\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\r\n            else secondFrames[key] = tKeyFrames[1].index;\r\n        }\r\n    }\r\n}","/**\r\n * @en Text style class\r\n * @zh 文本的样式类\r\n */\r\nexport class TextStyle {\r\n    /**\r\n     * @en Font\r\n     * @zh 字体\r\n     */\r\n    font = \"\";\r\n    /**\r\n     * @en Font size\r\n     * @zh 字号\r\n     */\r\n    fontSize = 12;\r\n    /**\r\n     * @en Text color\r\n     * @zh 文字颜色\r\n     */\r\n    color = \"#000000\";\r\n    /**\r\n     * @en Whether the text is bold\r\n     * @zh 是否为粗体\r\n     */\r\n    bold = false;\r\n    /**\r\n     * @en Whether the text is italic\r\n     * @zh 是否为斜体\r\n     */\r\n    italic = false;\r\n\r\n    /**\r\n     * @en Whether to show underline\r\n     * @zh 是否显示下划线\r\n     */\r\n    underline = false;\r\n    /**\r\n     * @en Underline color\r\n     * @zh 下划线颜色\r\n     */\r\n    underlineColor: string = null;\r\n\r\n    /**\r\n     * @en Whether to display the strikethrough.\r\n     * @zh 是否显示删除线。\r\n     */\r\n    strikethrough = false;\r\n\r\n    /**\r\n     * @en The color of the strikethrough.\r\n     * @zh 删除线颜色。\r\n     */\r\n    strikethroughColor: string = null;\r\n\r\n\r\n    /**\r\n     * @en Indicates the horizontal alignment of text paragraphs using this text format\r\n     * @zh 表示使用此文本格式的文本段落的水平对齐方式\r\n     * @default \"left\"\r\n     */\r\n    align = 'left';\r\n\r\n    /**\r\n     * @en Indicates the vertical alignment of text paragraphs using this text format\r\n     * @zh 表示使用此文本格式的文本段落的垂直对齐方式\r\n     * @default \"top\"\r\n     */\r\n    valign = 'top';\r\n\r\n    /**\r\n     * @en Alignment of images and text in mixed content. Possible values are top, middle, bottom\r\n     * @zh 图文混排时图片和文字的对齐方式。可选值是top, middle, bottom\r\n     */\r\n    alignItems: string;\r\n\r\n    /**\r\n     * @en Vertical line spacing (in pixels)\r\n     * @zh 垂直行间距（以像素为单位）\r\n     */\r\n    leading = 2;\r\n\r\n    /**\r\n     * @en Stroke width (in pixels). Default is 0, meaning no stroke\r\n     * @zh 描边宽度（以像素为单位）。默认值0，表示不描边\r\n     * @default 0\r\n     */\r\n    stroke = 0;\r\n    /**\r\n     * @en Stroke color, represented as a string\r\n     * @zh 描边颜色，以字符串表示\r\n     * @default \"#000000\"\r\n     */\r\n    strokeColor = '#000000';\r\n\r\n    constructor() {\r\n        this.font = \"\";\r\n        this.fontSize = 12;\r\n        this.color = \"#000000\";\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.align = \"left\";\r\n        this.valign = \"top\";\r\n        this.alignItems = \"middle\";\r\n        this.leading = 2;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n    }\r\n}\r\n","import { XMLIterator } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { TextStyle } from \"../display/css/TextStyle\";\r\nimport { Pool } from \"../utils/Pool\";\r\n\r\n/**\r\n * @en Enum representing the types of HTML elements.\r\n * @zh 枚举，表示 HTML 元素的类型。\r\n */\r\nexport enum HtmlElementType {\r\n    /**\r\n     * @en Text element, typically used for raw text content.\r\n     * @zh 文本元素，通常用于纯文本内容。\r\n     */\r\n    Text,\r\n    /**\r\n     * @en Link element, used for creating hyperlinks.\r\n     * @zh 链接元素，用于创建超链接。\r\n     */\r\n    Link,\r\n    /**\r\n     * @en Image element, used for embedding images.\r\n     * @zh 图像元素，用于嵌入图像。\r\n     */\r\n    Image,\r\n    /**\r\n     * @en Input element, used for creating input fields.\r\n     * @zh 输入元素，用于创建输入字段。\r\n     */\r\n    Input,\r\n    /**\r\n     * @en Select element, used for creating dropdown selects.\r\n     * @zh 选择元素，用于创建下拉选择框。\r\n     */\r\n    Select,\r\n    /**\r\n     * @en Object element, used for embedding objects like images, videos, or other media.\r\n     * @zh 对象元素，用于嵌入对象，如图像、视频或其他媒体。\r\n     */\r\n    Object,\r\n\r\n    /**\r\n     * @internal\r\n     * @en Indicates the end of link elements.\r\n     * @zh 表示链接元素的结束。\r\n     */\r\n    LinkEnd,\r\n}\r\n\r\n/**\r\n * @en The `HtmlElement` class represents HTML element.\r\n * @zh `HtmlElement` 类表示 HTML 元素。\r\n */\r\nexport class HtmlElement {\r\n    /**\r\n     * @en The type of the HTML element.\r\n     * @zh HTML 元素的类型。\r\n     */\r\n    public type: HtmlElementType;\r\n    /**\r\n     * @en The name of the HTML element.\r\n     * @zh HTML 元素的名称。\r\n     */\r\n    public name: string;\r\n    /**\r\n     * @en The text content of the HTML element.\r\n     * @zh HTML 元素的文本内容。\r\n     */\r\n    public text: string;\r\n    /**\r\n     * @en The style of the HTML element.\r\n     * @zh HTML 元素的样式。\r\n     */\r\n    public style: TextStyle;\r\n\r\n    /**\r\n     * @en The object associated with the HTML element.\r\n     * @zh 与 HTML 元素关联的对象。\r\n     */\r\n    public obj: IHtmlObject;\r\n    /**\r\n     * @en The space associated with the element, used for layout purposes.\r\n     * @zh 与元素关联的空间，用于布局目的。\r\n     */\r\n    public space: number;\r\n\r\n    public _attrs: Record<string, any>;\r\n\r\n    /**\r\n     * @en Creates a new instance of the `HtmlElement` class.\r\n     * @zh 创建 `HtmlElement` 类的新实例。\r\n     */\r\n    public constructor() {\r\n        this.style = new TextStyle();\r\n    }\r\n\r\n    /**\r\n     * @en Gets the value of an attribute from the element.\r\n     * @param attrName The name of the attribute to retrieve.\r\n     * @returns The value of the attribute.\r\n     * @zh 从元素中获取属性的值。\r\n     * @param attrName 属性名称。\r\n     * @returns 属性值。\r\n     */\r\n    public getAttr(attrName: string): any {\r\n        if (this._attrs == null)\r\n            return null;\r\n\r\n        return this._attrs[attrName];\r\n    }\r\n\r\n    /**\r\n     * @en Sets an attribute on the element with the given value.\r\n     * @param attrName The name of the attribute to set.\r\n     * @param attrValue The value to set for the attribute.\r\n     * @zh 使用给定的值在元素上设置属性。\r\n     * @param attrName 属性名称。\r\n     * @param attrValue 属性值。\r\n     */\r\n    public setAttr(attrName: string, attrValue: any) {\r\n        if (this._attrs == null)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    /**\r\n     * @en Gets a string attribute value, with an optional default.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value to use if the attribute is not found or is not a string.\r\n     * @returns The string value of the attribute or the default value.\r\n     * @zh 获取字符串属性值，可设置默认值。\r\n     * @param attrName 属性名称。\r\n     * @param defValue 默认值，如果属性不存在或不是字符串。\r\n     * @returns 属性值或默认值。\r\n     */\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Gets an integer attribute value, with an optional default.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value to use if the attribute is not found or is not an integer.\r\n     * @returns The integer value of the attribute or the default value.\r\n     * @zh 获取整数属性值，可设置默认值。\r\n     * @param attrName 属性名称。\r\n     * @param defValue 默认值，如果属性不存在或不是整数。\r\n     * @returns 属性值或默认值。\r\n     */\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a float attribute value, with an optional default.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value to use if the attribute is not found or is not a float.\r\n     * @returns The float value of the attribute or the default value.\r\n     * @zh 获取浮点属性值，可设置默认值。\r\n     * @param attrName 属性名称。\r\n     * @param defValue 默认值，如果属性不存在或不是浮点数。\r\n     * @returns 属性值或默认值。\r\n     */\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a boolean attribute value, with an optional default.\r\n     * @param attrName The name of the attribute.\r\n     * @param defValue The default value to use if the attribute is not found or is not a boolean.\r\n     * @returns The boolean value of the attribute or the default value.\r\n     * @zh 获取布尔属性值，可设置默认值。\r\n     * @param attrName 属性名称。\r\n     * @param defValue 默认值，如果属性不存在或不是布尔值。\r\n     * @returns 属性值或默认值。\r\n     */\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    /**\r\n     * @en Fetches attributes from an external source and assigns them to the element.\r\n     * @zh 从外部源获取属性，并将它们分配给元素。\r\n     */\r\n    public fetchAttributes() {\r\n        this._attrs = Object.assign({}, XMLIterator.attributes);\r\n    }\r\n\r\n    /**\r\n     * @en Resets the properties of the element to their default state, preparing it for reuse from the pool.\r\n     * @zh 将元素的属性重置为默认状态，准备从池中重用。\r\n     */\r\n    public reset() {\r\n        this.name = null;\r\n        this.text = null;\r\n        if (this.obj) {\r\n            this.obj.release();\r\n            Pool.recoverByClass(this.obj);\r\n            this.obj = null;\r\n        }\r\n        this._attrs = null;\r\n    }\r\n\r\n    /**\r\n     * @en A static pool of HtmlElement objects for reuse.\r\n     * @zh HtmlElement 对象的静态池。\r\n     */\r\n    static pool: Array<HtmlElement> = [];\r\n    /**\r\n     * @en Retrieves an HtmlElement from the pool with a specified type, initializing it if necessary.\r\n     * @zh 从池中检索具有指定类型的 HtmlElement，如有必要则进行初始化。\r\n     */\r\n    static getFromPool(type: HtmlElementType): HtmlElement {\r\n        let ele: HtmlElement;\r\n        if (this.pool.length > 0)\r\n            ele = this.pool.pop();\r\n        else\r\n            ele = new HtmlElement();\r\n        ele.type = type;\r\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\r\n            ele._attrs = {};\r\n        return ele;\r\n    }\r\n\r\n    /**\r\n     * @en Returns an HtmlElement or an array of HtmlElements back to the pool for reuse.\r\n     * @zh 将 HtmlElement 或 HtmlElement 数组返回到池中以供重用。\r\n     */\r\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\r\n        if (Array.isArray(ele)) {\r\n            for (let e of ele)\r\n                e.reset();\r\n            this.pool.push(...ele);\r\n            ele.length = 0;\r\n        }\r\n        else {\r\n            ele.reset();\r\n            this.pool.push(ele);\r\n        }\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\n/**\r\n * @en The `HtmlImage` class represents an image object within an HTML element.\r\n * @zh `HtmlImage` 类表示 HTML 元素中的图像对象。\r\n */\r\nexport class HtmlImage implements IHtmlObject {\r\n    /**\r\n     * @en The sprite object representing the image.\r\n     * @zh 表示图像的精灵对象。\r\n     */\r\n    public readonly obj: Sprite;\r\n\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n\r\n    /**\r\n     * @en Creates a new HtmlImage object.\r\n     * @zh 创建一个 HtmlImage 对象。\r\n     */\r\n    public constructor() {\r\n        this.obj = new Sprite();\r\n    }\r\n\r\n    /**\r\n     * @en The associated HTML element.\r\n     * @zh 关联的 HTML 元素。\r\n     */\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    /**\r\n     * @en The width of the image.\r\n     * @zh 图像的宽度。\r\n     */\r\n    public get width(): number {\r\n        return this.obj.width;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the image.\r\n     * @zh 图像的高度。\r\n     */\r\n    public get height(): number {\r\n        return this.obj.height;\r\n    }\r\n\r\n    /**\r\n     * @en Creates and loads the image with the specified owner text and HTML element.\r\n     * @param owner The owner text object.\r\n     * @param element The HTML element associated with the image.\r\n     * @zh 使用指定的文本所有者和 HTML 元素创建并加载图像。\r\n     * @param owner 文本对象的所有者。\r\n     * @param element 与图像关联的 HTML 元素。\r\n     */\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this.obj);\r\n\r\n        let src = this._element.getAttrString(\"src\");\r\n        if (src)\r\n            this.loadTexture(src);\r\n    }\r\n\r\n    protected loadTexture(src: string) {\r\n        let width = this._element.getAttrInt(\"width\", -1);\r\n        let height = this._element.getAttrInt(\"height\", -1);\r\n        if (width != -1)\r\n            this.obj.width = width;\r\n        if (height != -1)\r\n            this.obj.height = height;\r\n\r\n        let tex = Loader.getRes(src);\r\n        if (tex) {\r\n            this.obj.texture = tex;\r\n            if (width == -1)\r\n                this.obj.width = tex.sourceWidth;\r\n            if (height == -1)\r\n                this.obj.height = tex.sourceHeight;\r\n        }\r\n        else {\r\n            ILaya.loader.load(src, { silent: true }).then(tex => {\r\n                if (this.obj.destroyed) return;\r\n                let w = this.obj.width;\r\n                let h = this.obj.height;\r\n                this.obj.texture = tex;\r\n                if (width == -1)\r\n                    this.obj.width = tex ? tex.sourceWidth : 0;\r\n                if (height == -1)\r\n                    this.obj.height = tex ? tex.sourceHeight : 0;\r\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\r\n                    this._owner.refreshLayout();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Positions the image at the specified coordinates.\r\n     * @param x The x-coordinate.\r\n     * @param y The y-coordinate.\r\n     * @zh 将图像定位到指定的坐标。\r\n     * @param x x 坐标。\r\n     * @param y y 坐标。\r\n     */\r\n    public pos(x: number, y: number): void {\r\n        this.obj.pos(x, y);\r\n    }\r\n\r\n    /**\r\n     * @en Releases resources and removes the image object from its parent container.\r\n     * @zh 释放资源并从父容器中移除图像对象。\r\n     */\r\n    public release(): void {\r\n        this.obj.removeSelf();\r\n        this.obj.offAll();\r\n        this.obj.texture = null;\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the image object.\r\n     * @zh 销毁图像对象。\r\n     */\r\n    public destroy(): void {\r\n        this.obj.destroy();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\n/**\r\n * @en The `HtmlLink` class represents a clickable link area within an HTML element.\r\n * @zh `HtmlLink` 类表示 HTML 元素内可点击的链接区域。\r\n */\r\nexport class HtmlLink implements IHtmlObject, IHitArea {\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n    private _shape: Sprite;\r\n    private _rects: Array<Rectangle>;\r\n    private _rectCnt: number;\r\n\r\n    /**\r\n     * @en Creates a new instance of the `HtmlLink` class.\r\n     * @zh 创建  HtmlLink 类的新实例\r\n     */\r\n    public constructor() {\r\n        this._shape = new Sprite();\r\n        this._shape.hitArea = this;\r\n        this._shape.on(Event.CLICK, () => {\r\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\r\n        });\r\n\r\n        this._rects = [];\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    /**\r\n     * @en The associated HTML element.\r\n     * @zh 关联的 HTML 元素。\r\n     */\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    /**\r\n     * @en The width of the link area. \r\n     * @zh 链接区域的宽度。\r\n     */\r\n    public get width(): number {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @en The height of the link area.\r\n     * @zh 链接区域的高度。\r\n     */\r\n    public get height(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en Creates the link with the specified owner text and HTML element.\r\n     * @param owner The owner text object.\r\n     * @param element The HTML element associated with the link.\r\n     * @zh 使用指定的文本所有者和 HTML 元素创建链接。\r\n     * @param owner 所有者文本对象。\r\n     * @param element 与链接关联的 HTML 元素。\r\n     */\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this._shape);\r\n    }\r\n    /**\r\n     * @en Resets the link area.\r\n     * @zh 重置链接区域。\r\n     */\r\n    public resetArea() {\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a rectangle to the hit area.\r\n     * @param x The x-coordinate of the rectangle.\r\n     * @param y The y-coordinate of the rectangle.\r\n     * @param width The width of the rectangle.\r\n     * @param height The height of the rectangle.\r\n     * @zh 向点击区域添加一个矩形。\r\n     * @param x 矩形的 x 坐标。\r\n     * @param y 矩形的 y 坐标。\r\n     * @param width 矩形的宽度。\r\n     * @param height 矩形的高度。\r\n     */\r\n    public addRect(x: number, y: number, width: number, height: number) {\r\n        let rect = this._rects[this._rectCnt];\r\n        if (!rect)\r\n            rect = this._rects[this._rectCnt] = new Rectangle();\r\n        this._rectCnt++;\r\n        rect.setTo(x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the specified point is within the hit area.\r\n     * @param x The x-coordinate of the point.\r\n     * @param y The y-coordinate of the point.\r\n     * @returns `true` if the point is within the hit area, otherwise `false`.\r\n     * @zh 检查指定的点是否在点击区域内。\r\n     * @param x 点的 x 坐标。\r\n     * @param y 点的 y 坐标。\r\n     * @returns 如果点在点击区域内，则返回 `true`，否则返回 `false`。\r\n     */\r\n    public contains(x: number, y: number): boolean {\r\n        for (let i = 0; i < this._rectCnt; i++) {\r\n            if (this._rects[i].contains(x, y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Positions the link area at the specified coordinates. This method does nothing.\r\n     * @param x The x-coordinate.\r\n     * @param y The y-coordinate.\r\n     * @zh 将链接区域定位到指定的坐标。此方法不执行任何操作。\r\n     * @param x x 坐标。\r\n     * @param y y 坐标。\r\n     */\r\n    public pos(x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @en Releases resources and removes the link area from its parent container.\r\n     * @zh 释放资源并从父容器中移除链接区域。\r\n     */\r\n    public release(): void {\r\n        this._shape.removeSelf();\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the link area and its associated sprite.\r\n     * @zh 销毁链接区域及其关联的精灵。\r\n     */\r\n    public destroy(): void {\r\n        this._shape.destroy();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\n/**\r\n * @en The `HtmlParseOptions` class defines a set of options used for parsing HTML content.\r\n * @zh `HtmlParseOptions` 类定义了一组用于解析 HTML 内容的选项。\r\n */\r\nexport class HtmlParseOptions {\r\n    /**\r\n     * @en Indicates whether links should be displayed with an underline.\r\n     * @zh 指示链接是否应该显示下划线。\r\n     */\r\n    public linkUnderline: boolean;\r\n    /**\r\n     * @en The default color for links.\r\n     * @zh 链接的默认颜色。\r\n     */\r\n    public linkColor: string;\r\n    /**\r\n     * @en Indicates whether to ignore white spaces in the HTML content.\r\n     * @zh 指示是否忽略 HTML 内容中的空白。\r\n     */\r\n    public ignoreWhiteSpace: boolean;\r\n\r\n    /**\r\n     * @en The default value for the `linkUnderline` option.\r\n     * @zh `linkUnderline` 选项的默认值。\r\n     */\r\n    public static defaultLinkUnderline: boolean = true;\r\n    /**\r\n     * @en The default value for the `linkColor` option.\r\n     * @zh `linkColor` 选项的默认值。\r\n     */\r\n    public static defaultLinkColor: string = null;\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Creates a new instance of the `HtmlParseOptions` class.\r\n     * @zh 创建 HtmlParseOptions 类的新实例。\r\n     */\r\n    public constructor() {\r\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\r\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\r\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\r\nimport { HtmlImage } from \"./HtmlImage\";\r\nimport { HtmlLink } from \"./HtmlLink\";\r\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nconst s_list1 = new Array<string>();\r\nconst s_list2 = new Array<string>();\r\n\r\n/**\r\n * @en The `HtmlParser` class is responsible for parsing HTML content and converting it into a series of HTML elements with styles.\r\n * @zh `HtmlParser` 类负责解析 HTML 内容，将其转换为一系列具有样式的 HTML 元素。\r\n */\r\nexport class HtmlParser {\r\n    /**\r\n     * @en The default instance of the HtmlParser class.\r\n     * @zh HtmlParser 类的默认实例。\r\n     */\r\n    static defaultParser: HtmlParser = new HtmlParser();\r\n\r\n    /**\r\n     * @en A mapping of HTML element types to their corresponding classes.\r\n     * @zh 将 HTML 元素类型映射到它们对应的类。\r\n     */\r\n    static classMap: Record<number, new () => IHtmlObject> = {\r\n        [HtmlElementType.Image]: HtmlImage,\r\n        [HtmlElementType.Link]: HtmlLink\r\n    };\r\n\r\n    protected _styleStack: Array<TextStyle>;\r\n    protected _styleStackTop: number;\r\n    protected _style: TextStyle;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _options: HtmlParseOptions;\r\n\r\n    /** @ignore */\r\n    public constructor() {\r\n        this._styleStack = new Array<TextStyle>();\r\n        this._style = new TextStyle();\r\n        this._options = new HtmlParseOptions();\r\n    }\r\n\r\n    /**\r\n     * @en Parses the given HTML source and populates the output array with HTML elements.\r\n     * @param aSource The HTML source to parse.\r\n     * @param style The default text style to apply.\r\n     * @param out The array to populate with parsed HTML elements.\r\n     * @param options The options for parsing the HTML.\r\n     * @zh 解析给定的 HTML 源代码，并将输出数组填充为 HTML 元素。\r\n     * @param aSource 要解析的 HTML 源代码。\r\n     * @param style 要应用的默认文本样式。\r\n     * @param out 要填充解析后的 HTML 元素的数组。\r\n     * @param options 解析 HTML 的选项。\r\n     */\r\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\r\n        if (options == null)\r\n            options = this._options;\r\n\r\n        this._elements = out;\r\n        this._styleStackTop = 0;\r\n        Object.assign(this._style, style);\r\n        (<any>this._style).colorChanged = false;\r\n        let skipText: number = 0;\r\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\r\n        let skipNextCR: boolean = false;\r\n        let text: string\r\n\r\n        XMLIterator.begin(aSource, true);\r\n        while (XMLIterator.nextTag()) {\r\n            if (skipText == 0) {\r\n                text = XMLIterator.getText(ignoreWhiteSpace);\r\n                if (text.length > 0) {\r\n                    if (skipNextCR && text[0] == '\\n')\r\n                        text = text.substring(1);\r\n                    this.appendText(text);\r\n                }\r\n            }\r\n\r\n            skipNextCR = false;\r\n            switch (XMLIterator.tagName) {\r\n                case \"b\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.bold = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"i\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.italic = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"u\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.underline = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.strikethrough = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                // case \"sub\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                // case \"sup\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                case \"font\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\r\n                        let color: string = XMLIterator.getAttribute(\"color\");\r\n                        if (color != null) {\r\n                            this._style.color = color;\r\n                            (<any>this._style).colorChanged = true;\r\n                        }\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"br\":\r\n                    this.appendText(\"\\n\");\r\n                    break;\r\n\r\n                case \"img\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        element.style.underline = this._style.underline;\r\n                        element.style.underlineColor = this._style.underlineColor;\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"a\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.underline = this._style.underline || options.linkUnderline;\r\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\r\n                            this._style.color = options.linkColor;\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        this._elements.push(element);\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.popStyle();\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"input\":\r\n                    {\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        Object.assign(element.style, this._style);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"select\":\r\n                    {\r\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\r\n                            element.fetchAttributes();\r\n                            if (XMLIterator.tagType == XMLTagType.Start) {\r\n                                s_list1.length = 0;\r\n                                s_list2.length = 0;\r\n                                while (XMLIterator.nextTag()) {\r\n                                    if (XMLIterator.tagName == \"select\")\r\n                                        break;\r\n\r\n                                    if (XMLIterator.tagName == \"option\") {\r\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\r\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\r\n                                        else\r\n                                            s_list1.push(XMLIterator.getText());\r\n                                    }\r\n                                }\r\n                                element.setAttr(\"items\", s_list1.slice());\r\n                                element.setAttr(\"values\", s_list2.slice());\r\n                            }\r\n                            element.name = element.getAttrString(\"name\");\r\n                            Object.assign(element.style, this._style);\r\n                            this._elements.push(element);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"p\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.align = XMLIterator.getAttribute(\"align\");\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n\r\n                        this.popStyle();\r\n                    }\r\n                    break;\r\n\r\n                case \"ui\":\r\n                case \"div\":\r\n                case \"li\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n                    }\r\n                    break;\r\n\r\n                case \"html\":\r\n                case \"body\":\r\n                    //full html\r\n                    ignoreWhiteSpace = true;\r\n                    break;\r\n\r\n                case \"head\":\r\n                case \"style\":\r\n                case \"script\":\r\n                case \"form\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start)\r\n                        skipText++;\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        skipText--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (skipText == 0) {\r\n            text = XMLIterator.getText(ignoreWhiteSpace);\r\n            if (text.length > 0) {\r\n                if (skipNextCR && text[0] == '\\n')\r\n                    text = text.substring(1);\r\n                this.appendText(text);\r\n            }\r\n        }\r\n\r\n        this._elements = null;\r\n    }\r\n\r\n    protected pushStyle() {\r\n        let tf: TextStyle;\r\n        if (this._styleStack.length <= this._styleStackTop) {\r\n            tf = new TextStyle();\r\n            this._styleStack.push(tf);\r\n        }\r\n        else\r\n            tf = this._styleStack[this._styleStackTop];\r\n        Object.assign(tf, this._style);\r\n        this._styleStackTop++;\r\n    }\r\n\r\n    protected popStyle() {\r\n        if (this._styleStackTop > 0) {\r\n            let tf = this._styleStack[this._styleStackTop - 1];\r\n            Object.assign(this._style, tf);\r\n            this._styleStackTop--;\r\n        }\r\n    }\r\n\r\n    protected isNewLine(): boolean {\r\n        if (this._elements.length > 0) {\r\n            let element: HtmlElement = this._elements[this._elements.length - 1];\r\n            if (element && element.type == HtmlElementType.Text)\r\n                return element.text.endsWith(\"\\n\");\r\n            else\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected appendText(text: string) {\r\n        let element: HtmlElement;\r\n        if (this._elements.length > 0) {\r\n            element = this._elements[this._elements.length - 1];\r\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\r\n                element.text += text;\r\n                return;\r\n            }\r\n        }\r\n\r\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\r\n        element.text = text;\r\n        Object.assign(element.style, this._style);\r\n        this._elements.push(element);\r\n    }\r\n}\r\n\r\n/**\r\n * @en Compares two `TextStyle` objects to determine if they have the same style properties, ignoring private properties.\r\n * @param s1 The first text style object to compare.\r\n * @param s2 The second text style object to compare.\r\n * @returns `true` if the style properties of both objects are the same, otherwise `false`.\r\n * @zh 比较两个 `TextStyle` 对象，确定它们是否具有相同的样式属性，忽略私有属性。\r\n * @param s1 要比较的第一个文本样式对象。\r\n * @param s2 要比较的第二个文本样式对象。\r\n * @returns 如果两个对象的样式属性相同，则返回 `true`，否则返回 `false`。\r\n */\r\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\r\n    for (let k in s1) {\r\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n","export interface ITagHandler {\r\n    (tagName: string, end: boolean, attr: string): string;\r\n}\r\n\r\n/**\r\n * @en The `UBBParser` class is responsible for parsing UBB formatted text and converting it to HTML.\r\n * @zh `UBBParser` 类负责解析 UBB 格式的文本，并将其转换为 HTML。\r\n */\r\nexport class UBBParser {\r\n    /**\r\n     * @en The default instance of the UBBParser class.\r\n     * @zh UBBParser 类的默认实例。\r\n     */\r\n    static defaultParser: UBBParser = new UBBParser();\r\n\r\n    private _text: string;\r\n    private _readPos: number = 0;\r\n\r\n    protected _handlers: Record<string, ITagHandler>;\r\n\r\n    /**\r\n     * @en The default width for image tags.\r\n     * @zh 图像标签的默认宽度。\r\n     */\r\n    public defaultImgWidth: number = 0;\r\n    /**\r\n     * @en The default height for image tags.\r\n     * @zh 图像标签的默认高度。\r\n     */\r\n    public defaultImgHeight: number = 0;\r\n    /**\r\n     * @en The last color parsed in the text.\r\n     * @zh 文本中解析的最后颜色。\r\n     */\r\n    public lastColor: string;\r\n    /**\r\n     * @en The last size parsed in the text.\r\n     * @zh 文本中解析的最后大小。\r\n     */\r\n    public lastSize: string;\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Creates an instance of the `UBBParser` class.\r\n     * @zh 创建 `UBBParser` 类的实例。\r\n     */\r\n    constructor() {\r\n        this._handlers = {};\r\n        this._handlers[\"url\"] = this.onTag_URL;\r\n        this._handlers[\"img\"] = this.onTag_IMG;\r\n        this._handlers[\"b\"] = this.onTag_B;\r\n        this._handlers[\"i\"] = this.onTag_I;\r\n        this._handlers[\"u\"] = this.onTag_U;\r\n        this._handlers[\"sup\"] = this.onTag_Simple;\r\n        this._handlers[\"sub\"] = this.onTag_Simple;\r\n        this._handlers[\"color\"] = this.onTag_COLOR;\r\n        this._handlers[\"font\"] = this.onTag_FONT;\r\n        this._handlers[\"size\"] = this.onTag_SIZE;\r\n    }\r\n\r\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            if (attr != null)\r\n                return \"<a href=\\\"\" + attr + \"\\\">\";\r\n            else {\r\n                var href: string = this.getTagText();\r\n                return \"<a href=\\\"\" + href + \"\\\">\";\r\n            }\r\n        }\r\n        else\r\n            return \"</a>\";\r\n    }\r\n\r\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            var src: string = this.getTagText(true);\r\n            if (!src)\r\n                return null;\r\n\r\n            if (this.defaultImgWidth)\r\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\r\n            else\r\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</b>\") : (\"<b>\");\r\n    }\r\n\r\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</i>\") : (\"<i>\");\r\n    }\r\n\r\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</u>\") : (\"<u>\");\r\n    }\r\n\r\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\r\n    }\r\n\r\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastColor = attr;\r\n            return \"<font color=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\r\n        if (!end)\r\n            return \"<font face=\\\"\" + attr + \"\\\">\";\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastSize = attr;\r\n            return \"<font size=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected getTagText(remove?: boolean): string {\r\n        var pos1: number = this._readPos;\r\n        var pos2: number;\r\n        var result: string = \"\";\r\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\r\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += this._text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n            }\r\n            else {\r\n                result += this._text.substring(pos1, pos2);\r\n                break;\r\n            }\r\n        }\r\n        if (pos2 == -1)\r\n            return null;\r\n\r\n        if (remove)\r\n            this._readPos = pos2;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @en Parses the UBB formatted text and returns the corresponding HTML string.\r\n     * @param text The UBB formatted text to parse.\r\n     * @param remove Whether to remove UBB tags or convert them to HTML.\r\n     * @returns The resulting HTML string.\r\n     * @zh 解析 UBB 格式的文本，并返回相应的 HTML 字符串。\r\n     * @param text 要解析的 UBB 格式文本。\r\n     * @param remove 是否移除 UBB 标签或将其转换为 HTML。\r\n     * @returns 生成的 HTML 字符串。\r\n     */\r\n    public parse(text: string, remove?: boolean): string {\r\n        this._text = text;\r\n        this.lastColor = null;\r\n        this.lastSize = null;\r\n\r\n        var pos1: number = 0, pos2: number, pos3: number;\r\n        var end: boolean;\r\n        var tag: string, attr: string;\r\n        var repl: string;\r\n        var func: Function;\r\n        var result: string = \"\";\r\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\r\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += text.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = text.indexOf(\"]\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            end = text.charAt(pos1 + 1) == '/';\r\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\r\n            this._readPos = pos2 + 1;\r\n            attr = null;\r\n            repl = null;\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                attr = tag.substring(pos3 + 1);\r\n                tag = tag.substring(0, pos3);\r\n            }\r\n            tag = tag.toLowerCase();\r\n            func = this._handlers[tag];\r\n            if (func != null) {\r\n                if (!remove) {\r\n                    repl = func.call(this, tag, end, attr);\r\n                    if (repl != null)\r\n                        result += repl;\r\n                }\r\n            }\r\n            else\r\n                result += text.substring(pos1, this._readPos);\r\n            pos1 = this._readPos;\r\n        }\r\n\r\n        if (pos1 < text.length)\r\n            result += text.substring(pos1);\r\n\r\n        this._text = null;\r\n\r\n        return result;\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { TextStyle } from \"./css/TextStyle\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { WordText } from \"../utils/WordText\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Config } from \"../../Config\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\r\nimport { HtmlLink } from \"../html/HtmlLink\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { IHtmlObject } from \"../html/IHtmlObject\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HtmlParser } from \"../html/HtmlParser\";\r\nimport { UBBParser } from \"../html/UBBParser\";\r\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\r\n\r\n/**\r\n * @en Dispatched after the text content changes.\r\n * @zh 文本内容发生改变后调度。\r\n * @eventType Event.CHANGE\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en The Text class is used to create display objects to show text.\r\n * Note: If the runtime system cannot find the specified font, it will render the text with the system default font, which may cause display anomalies. (Usually, it displays normally on computers, but may display abnormally on some mobile devices due to the lack of the set font.)\r\n * @zh Text类用于创建显示对象以显示文本。\r\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n */\r\nexport class Text extends Sprite {\r\n\r\n    /**\r\n     * @en Visible without any clipping.\r\n     * @zh visible不进行任何裁切。\r\n     */\r\n    static VISIBLE: string = \"visible\";\r\n    /**\r\n     * @en Scroll does not display character pixels outside the text area and supports the scroll interface.\r\n     * @zh scroll 不显示文本域外的字符像素，并且支持 scroll 接口。\r\n     */\r\n    static SCROLL: string = \"scroll\";\r\n    /**\r\n     * @en Hidden does not display characters beyond the text area.\r\n     * @zh hidden 不显示超出文本域的字符。\r\n     */\r\n    static HIDDEN: string = \"hidden\";\r\n    /**\r\n     * @en Shrink the entire text to fit the text box when it exceeds the text area.\r\n     * @zh shrink 超出文本域时，文本整体缩小以适应文本框。\r\n     */\r\n    static SHRINK: string = \"shrink\";\r\n    /**\r\n     * @en Ellipsis truncates the text and displays an ellipsis at the end when it exceeds the text area.\r\n     * @zh ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。\r\n     */\r\n    static ELLIPSIS: string = \"ellipsis\";\r\n\r\n    /**\r\n     * @en Language pack, a collection of key:value pairs, indexed by key, replaced with target value language.\r\n     * @zh 语言包，是一个包含key:value的集合，用key索引，替换为目标value语言。\r\n     */\r\n    static langPacks: Record<string, string>;\r\n    /**\r\n     * @en Whether the display order is from right to left.\r\n     * @zh 是否是从右向左的显示顺序。\r\n     */\r\n    static RightToLeft: boolean = false;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Predicted length text, used to improve calculation efficiency, find the largest character for different languages.\r\n     * @zh 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可。\r\n     */\r\n    static _testWord: string = \"游\";\r\n    /**\r\n     * @internal\r\n     */\r\n    static _passwordChar = \"●\";\r\n\r\n    /**\r\n     * @internal\r\n     * @private \r\n     * @en Dictionary of bitmap fonts.\r\n     * @zh 位图字体字典。\r\n     */\r\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\r\n\r\n    /**\r\n     * @en Mark whether this text ignores the language pack.\r\n     * @zh 标记此文本是否忽略语言包。\r\n     */\r\n    ignoreLang: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Represents the text content string.\r\n     * @zh 表示文本内容字符串。\r\n     */\r\n    protected _text: string;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Represents the text overflow property.\r\n     * @zh 表示文本的溢出属性。\r\n     */\r\n    protected _overflow: string = Text.VISIBLE;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Split render.\r\n     * @zh 拆分渲染。\r\n     */\r\n    protected _singleCharRender: boolean = false;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _textStyle: TextStyle;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _prompt: string = '';\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en The color of the input prompt.\r\n     * @zh 输入提示符颜色。\r\n     */\r\n    protected _promptColor: string;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en The background color of the text, represented as a string.\r\n     * @zh 文本背景颜色，以字符串表示。\r\n     */\r\n    protected _bgColor: string;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en The border color of the text background, represented as a string.\r\n     * @zh 文本边框背景颜色，以字符串表示。\r\n     */\r\n    protected _borderColor: string;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en The default padding information.\r\n     * [top padding, right padding, bottom padding, left padding] (in pixels).\r\n     * @zh 默认边距信息\r\n     * [上边距，右边距，下边距，左边距]（边距以像素为单位）。\r\n     */\r\n    protected _padding: number[];\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Indicates whether the text field using this text format automatically wraps.\r\n     * If the value of wordWrap is true, the text field automatically wraps; if the value is false, the text field does not automatically wrap.\r\n     * @zh 表示使用此文本格式的文本字段是否自动换行。\r\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\r\n     * @default false\r\n     */\r\n    protected _wordWrap: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Specifies whether the text field is a password text field.\r\n     * If the value of this property is true, the text field is considered a password text field and uses asterisks to hide the input characters instead of the actual characters. If false, the text field is not considered a password text field.\r\n     * @zh 指定文本字段是否是密码文本字段。\r\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\r\n     */\r\n    protected _asPassword: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _htmlParseOptions: HtmlParseOptions;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _templateVars: Record<string, string>;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Indicates whether the text content has changed.\r\n     * @zh 表示文本内容是否发生改变。\r\n     */\r\n    protected _isChanged: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Indicates the width of the text in pixels.\r\n     * @zh 表示文本的宽度，以像素为单位。\r\n     */\r\n    protected _textWidth: number = 0;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Indicates the height of the text in pixels.\r\n     * @zh 表示文本的高度，以像素为单位。\r\n     */\r\n    protected _textHeight: number = 0;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _realFont: string;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _bitmapFont: BitmapFont;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _scrollPos: Point | null;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _bgDrawCmd: DrawRectCmd;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _html: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _ubb: boolean;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _lines: Array<ITextLine>;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _elements: Array<HtmlElement>;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _objContainer: Sprite;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _maxWidth: number;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _hideText: boolean;\r\n\r\n    private _updatingLayout: boolean;\r\n    private _fontSizeScale: number;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Whether to convert` \\n `and `\\t `in the string to functional characters.\r\n     * @zh 是否将字符串中的`\\n`,`\\t`转换为实际功能的字符。\r\n     */\r\n    _parseEscapeChars: boolean;\r\n    /**\r\n     * @internal\r\n     */\r\n    _onPostLayout: () => void;\r\n\r\n    /**\r\n     * @en Constructor method of Text.\r\n     * @zh 文本的构造方法\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._textStyle = new TextStyle();\r\n        this._textStyle.fontSize = Config.defaultFontSize;\r\n        this._text = \"\";\r\n        this.font = \"\";\r\n        this._elements = [];\r\n        this._lines = [];\r\n        this._padding = [0, 0, 0, 0];\r\n        this._fontSizeScale = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Register a bitmap font.\r\n     * @param name The name of the bitmap font.\r\n     * @param bitmapFont The bitmap font file.\r\n     * @zh 注册位图字体。\r\n     * @param name 位图字体的名称。\r\n     * @param bitmapFont 位图字体文件。\r\n     */\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\r\n        bitmapFont._addReference();\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n\r\n    /**\r\n     * @en Remove a registered bitmap font file.\r\n     * @param name The name of the bitmap font.\r\n     * @param destroy Whether to destroy the specified font file. Default is true.\r\n     * @zh 移除注册的位图字体文件。\r\n     * @param name 位图字体的名称。\r\n     * @param destroy 是否销毁指定的字体文件。默认为 true。\r\n     */\r\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\r\n        let font = Text._bitmapFonts[name];\r\n        if (font) {\r\n            font._removeReference();\r\n            if (destroy) font.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc \r\n     * @en Destroy the text.\r\n     * @param destroyChild Whether to destroy child nodes. Default is true.\r\n     * @zh 销毁文本。\r\n     * @param destroyChild 是否销毁子节点。默认为 true。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        recoverLines(this._lines);\r\n        HtmlElement.returnToPool(this._elements);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc\r\n     * @en Get the scrollable visible window.\r\n     * @param realSize Whether to use the real size of the image. Default is false.\r\n     * @zh 获取滚动可视视窗。\r\n     * @param realSize 是否使用图片的真实大小。默认为 false。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.textWidth;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.textHeight;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @en The width of the text in pixels.\r\n     * @zh 文本的宽度，以像素为单位。\r\n     */\r\n    get textWidth(): number {\r\n        this.typeset();\r\n        return this._textWidth;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the text in pixels.\r\n     * @zh 文本的高度，以像素为单位。\r\n     */\r\n    get textHeight(): number {\r\n        this.typeset();\r\n        return this._textHeight;\r\n    }\r\n\r\n    /**\r\n     * @en The current content string of the text.\r\n     * @zh 当前文本的内容字符串。\r\n     */\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (!this.ignoreLang && Text.langPacks)\r\n            value = Text.langPacks[value] || value;\r\n\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.markChanged();\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated \r\n     * @param text 文本\r\n     */\r\n    changeText(text: string): void {\r\n        this.text = text;\r\n    }\r\n\r\n    /**\r\n     * @en The font name of the text, represented as a string.\r\n     * The default value is \"Arial\", which can be set through Config.defaultFont.\r\n     * If the runtime system cannot find the specified font, it will render the text with the system default font, which may cause display anomalies. (Usually, it displays normally on computers, but may display abnormally on some mobile devices due to the lack of the set font.)\r\n     * @zh 文本的字体名称，以字符串形式表示。\r\n     * 默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。\r\n     * 如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n     */\r\n    get font(): string {\r\n        return this._textStyle.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._textStyle.font = value;\r\n        if (!value) {\r\n            value = Config.defaultFont;\r\n            if (!value)\r\n                value = \"Arial\";\r\n        }\r\n\r\n        this._realFont = value;\r\n        this._bitmapFont = Text._bitmapFonts[value];\r\n\r\n        if (this._bitmapFont) {\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\r\n            let t = value;\r\n            let fontObj = ILaya.loader.getRes(value);\r\n            if (!fontObj || fontObj.obsolute) {\r\n                ILaya.loader.load(value).then(fontObj => {\r\n                    if (!fontObj || this._realFont != t)\r\n                        return;\r\n\r\n                    if (fontObj instanceof BitmapFont)\r\n                        this._bitmapFont = fontObj;\r\n                    else\r\n                        this._realFont = fontObj.family;\r\n                    if (this._text)\r\n                        this.markChanged();\r\n                });\r\n            }\r\n            else {\r\n                if (fontObj instanceof BitmapFont)\r\n                    this._bitmapFont = fontObj;\r\n                else\r\n                    this._realFont = fontObj.family;\r\n                if (this._text)\r\n                    this.markChanged();\r\n            }\r\n        }\r\n        else {\r\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Specifies the font size of the text in pixels.\r\n     * The default is 20 pixels, which can be set through Config.defaultFontSize.\r\n     * @zh 指定文本的字体大小（以像素为单位）。\r\n     * 默认为20像素，可以通过 Config.defaultFontSize 设置默认大小。\r\n     */\r\n    get fontSize(): number {\r\n        return this._textStyle.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        if (this._textStyle.fontSize != value) {\r\n            this._textStyle.fontSize = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Represents the color value of the text. The default color can be set through Text.defaultColor.\r\n     * The default value is black.\r\n     * @zh 表示文本的颜色值。可以通过 Text.defaultColor 设置默认颜色。\r\n     * 默认值为黑色。\r\n     */\r\n    get color(): string {\r\n        return this._textStyle.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.set_color(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set_color(value: string): void {\r\n        if (this._textStyle.color != value) {\r\n            this._textStyle.color = value;\r\n            //如果仅仅更新颜色，无需重新排版\r\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\r\n                this._graphics.replaceTextColor(this._textStyle.color);\r\n            else\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Specifies whether the text is bold.\r\n     * The default value is false, which means bold is not used. If the value is true, the text is bold.\r\n     * @zh 指定文本是否为粗体字。\r\n     * 默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。\r\n     */\r\n    get bold(): boolean {\r\n        return this._textStyle.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        if (this._textStyle.bold != value) {\r\n            this._textStyle.bold = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the text using this text format is italic.\r\n     * The default value is false, which means italic is not used. If the value is true, the text is italic.\r\n     * @zh 表示使用此文本格式的文本是否为斜体。\r\n     * 默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。\r\n     */\r\n    get italic(): boolean {\r\n        return this._textStyle.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        if (this._textStyle.italic != value) {\r\n            this._textStyle.italic = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Represents the horizontal alignment of the text.\r\n     * Possible values:\r\n     * - \"left\": Left-aligned.\r\n     * - \"center\": Center-aligned.\r\n     * - \"right\": Right-aligned.\r\n     * @zh 表示文本的水平显示方式。\r\n     * 取值：\r\n     * - \"left\"： 居左对齐显示。\r\n     * - \"center\"： 居中对齐显示。\r\n     * - \"right\"： 居右对齐显示。\r\n     */\r\n    get align(): string {\r\n        return this._textStyle.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        if (this._textStyle.align != value) {\r\n            this._textStyle.align = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Represents the vertical alignment of the text.\r\n     * Possible values:\r\n     * - \"top\": Top-aligned.\r\n     * - \"middle\": Middle-aligned.\r\n     * - \"bottom\": Bottom-aligned.\r\n     * @zh 表示文本的垂直显示方式。\r\n     * 取值：\r\n     * - \"top\"： 居顶部对齐显示。\r\n     * - \"middle\"： 居中对齐显示。\r\n     * - \"bottom\"： 居底部对齐显示。\r\n     */\r\n    get valign(): string {\r\n        return this._textStyle.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        if (this._textStyle.valign != value) {\r\n            this._textStyle.valign = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Alignment of images and text in mixed content. Possible values are top, middle, bottom.\r\n     * @zh 图文混排时图片和文字的对齐方式。可选值是 top, middle, bottom。\r\n     */\r\n    get alignItems(): string {\r\n        return this._textStyle.alignItems;\r\n    }\r\n\r\n    set alignItems(value: string) {\r\n        if (this._textStyle.alignItems != value) {\r\n            this._textStyle.alignItems = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the text automatically wraps, default is false.\r\n     * If true, the text will automatically wrap; otherwise, it will not.\r\n     * @zh 表示文本是否自动换行，默认为 false。\r\n     * 若值为 true，则自动换行；否则不自动换行。\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (this._wordWrap != value) {\r\n            this._wordWrap = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Vertical line spacing in pixels.\r\n     * @zh 垂直行间距（以像素为单位）。\r\n     */\r\n    get leading(): number {\r\n        return this._textStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._textStyle.leading != value) {\r\n            this._textStyle.leading = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Margin information.\r\n     * Data format: [top margin, right margin, bottom margin, left margin] (margins in pixels).\r\n     * @zh 边距信息。\r\n     * 数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。\r\n     */\r\n    get padding(): number[] {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(value: number[] | string) {\r\n        if (typeof (value) == 'string') {\r\n            let arr = value.split(\",\");\r\n            this._padding.length = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = parseFloat(arr[i]);\r\n                if (isNaN(v))\r\n                    v = 0;\r\n                this._padding.push(v);\r\n            }\r\n        }\r\n        else\r\n            this._padding = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * @en Text background color, represented as a string.\r\n     * @zh 文本背景颜色，以字符串表示。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @en Text border background color, represented as a string.\r\n     * @zh 文本边框背景颜色，以字符串表示。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @en Stroke width in pixels.\r\n     * The default value is 0, which means no stroke.\r\n     * @zh 描边宽度（以像素为单位）。\r\n     * 默认值0，表示不描边。\r\n     */\r\n    get stroke(): number {\r\n        return this._textStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._textStyle.stroke != value) {\r\n            this._textStyle.stroke = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stroke color, represented as a string.\r\n     * The default value is \"#000000\" (black).\r\n     * @zh 描边颜色，以字符串表示。\r\n     * 默认值为 \"#000000\"（黑色）。\r\n     */\r\n    get strokeColor(): string {\r\n        return this._textStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._textStyle.strokeColor != value) {\r\n            this._textStyle.strokeColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Specifies the behavior when text exceeds the text area.\r\n     * Values: visible, hidden, scroll, shrink, ellipsis.\r\n     * Effects:\r\n     * - visible: All text is visible regardless of text width and height constraints.\r\n     * - hidden: Text exceeding width and height will be clipped, best for performance.\r\n     * - scroll: Parts exceeding width and height are hidden, can be controlled by scrolling.\r\n     * - shrink: Text size automatically adjusts to fit within the width and height.\r\n     * - ellipsis: When text exceeds width and height, last few characters are replaced with ellipsis.\r\n     * @zh 指定文本超出文本域后的行为。\r\n     * 值为：可见visible、隐藏hidden、滚动scroll、自动收缩shrink、显示省略号ellipsis。\r\n     * 作用：\r\n     * - 可见：文本不受文本宽高约束全部可见。\r\n     * - 隐藏：超过文本宽高就会被裁切掉，性能最好。\r\n     * - 滚动：超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域。\r\n     * - 自动收缩：文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\r\n     * - 显示省略号：当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容。\r\n     */\r\n    get overflow(): string {\r\n        return this._overflow;\r\n    }\r\n\r\n    set overflow(value: string) {\r\n        if (this._overflow != value) {\r\n            this._overflow = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether to display underline.\r\n     * @zh 是否显示下划线。\r\n     */\r\n    get underline(): boolean {\r\n        return this._textStyle.underline;\r\n    }\r\n\r\n    set underline(value: boolean) {\r\n        if (this._textStyle.underline != value) {\r\n            this._textStyle.underline = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The color of the underline. If null, it uses the font color.\r\n     * @zh 下划线的颜色。如果为null，则使用字体颜色。\r\n     */\r\n    get underlineColor(): string {\r\n        return this._textStyle.underlineColor;\r\n    }\r\n\r\n    set underlineColor(value: string) {\r\n        if (this._textStyle.underlineColor != value) {\r\n            this._textStyle.underlineColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get strikethrough(): boolean {\r\n        return this._textStyle.strikethrough;\r\n    }\r\n\r\n    set strikethrough(value: boolean) {\r\n        if (this._textStyle.strikethrough != value) {\r\n            this._textStyle.strikethrough = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 下划线的颜色，为null则使用字体颜色。\r\n     */\r\n    get strikethroughColor(): string {\r\n        return this._textStyle.strikethroughColor;\r\n    }\r\n\r\n    set strikethroughColor(value: string) {\r\n        if (this._textStyle.strikethroughColor != value) {\r\n            this._textStyle.strikethroughColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Whether single character rendering is enabled. Enable this if the text content changes frequently, such as an increasing number, to prevent inefficient use of cache.\r\n     * @zh 是否启用单个字符渲染。如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 \r\n     */\r\n    get singleCharRender(): boolean {\r\n        return this._singleCharRender;\r\n    }\r\n\r\n    set singleCharRender(value: boolean) {\r\n        this._singleCharRender = value;\r\n    }\r\n\r\n    /**\r\n     * @en Whether rich text is enabled, supporting HTML syntax.\r\n     * @zh 是否启用富文本，支持HTML语法。\r\n     */\r\n    get html(): boolean {\r\n        return this._html;\r\n    }\r\n\r\n    set html(value: boolean) {\r\n        if (this._html != value) {\r\n            this._html = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether UBB syntax parsing is enabled for text.\r\n     * @zh 是否启用UBB语法解析文本。\r\n     */\r\n    get ubb(): boolean {\r\n        return this._ubb;\r\n    }\r\n\r\n    set ubb(value: boolean) {\r\n        if (this._ubb != value) {\r\n            this._ubb = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The maximum width allowed for text. When text reaches this width, it will automatically wrap. Set to 0 to disable this limit.\r\n     * @zh 文本允许的最大宽度。当文本达到这个宽度时，将自动换行。设置为0则此限制不生效。\r\n     */\r\n    get maxWidth(): number {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    set maxWidth(value: number) {\r\n        if (this._maxWidth != value) {\r\n            this._maxWidth = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Rich text HTML mode options.\r\n     * @zh 富文本HTML模式选项。\r\n     */\r\n    get htmlParseOptions(): HtmlParseOptions {\r\n        return this._htmlParseOptions;\r\n    }\r\n\r\n    set htmlParseOptions(value: HtmlParseOptions) {\r\n        this._htmlParseOptions = value;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Parse the template content.\r\n     * @param template The template content.\r\n     * @returns The template string with placeholders substituted by their corresponding values from _templateVars.\r\n     * @zh 解析模板。\r\n     * @param template 模板内容 \r\n     * @returns 模板字符串，其中占位符由_templateVars中的相应值替换。\r\n     */\r\n    protected parseTemplate(template: string): string {\r\n        let pos1: number = 0, pos2: number, pos3: number;\r\n        let tag: string;\r\n        let value: string;\r\n        let result: string = \"\";\r\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\r\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += template.substring(pos1, pos2 - 1);\r\n                result += \"{\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += template.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = template.indexOf(\"}\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            if (pos2 == pos1 + 1) {\r\n                result += template.substring(pos1, pos1 + 2);\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            tag = template.substring(pos1 + 1, pos2);\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                value = this._templateVars[tag.substring(0, pos3)];\r\n                if (value == null)\r\n                    result += tag.substring(pos3 + 1);\r\n                else\r\n                    result += value;\r\n            }\r\n            else {\r\n                value = this._templateVars[tag];\r\n                if (value != null)\r\n                    result += value;\r\n            }\r\n            pos1 = pos2 + 1;\r\n        }\r\n\r\n        if (pos1 < template.length)\r\n            result += template.substring(pos1);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @en Text Template\r\n     * @zh 文本模板\r\n     */\r\n    public get templateVars(): Record<string, any> {\r\n        return this._templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        if (!this._templateVars && !value)\r\n            return;\r\n\r\n        if (value === true)\r\n            this._templateVars = {};\r\n        else if (value === false)\r\n            this._templateVars = null;\r\n        else\r\n            this._templateVars = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * @en Set the value of a template variable.\r\n     * @param name The name of the template variable.\r\n     * @param value The value to set.\r\n     * @returns The current Text instance.\r\n     * @zh 设置模板值。\r\n     * @param name 模板名 \r\n     * @param value 值\r\n     * @returns 当前 Text 实例。\r\n     */\r\n    public setVar(name: string, value: any): Text {\r\n        if (!this._templateVars)\r\n            this._templateVars = {};\r\n        this._templateVars[name] = value;\r\n        this.markChanged();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en The horizontal scroll amount.\r\n     * Even if a value outside the scroll range is set, it will be automatically limited to the maximum possible value.\r\n     * @zh 横向滚动量。\r\n     * 即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    get scrollX(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.x;\r\n    }\r\n\r\n    set scrollX(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollX = this.maxScrollX;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n\r\n        this._scrollPos.x = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * @en The vertical scroll amount (in pixels).\r\n     * Even if a value outside the scroll range is set, it will be automatically limited to the maximum possible value.\r\n     * @zh 纵向滚动量（以像素为单位）。\r\n     * 即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    get scrollY(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.y;\r\n    }\r\n\r\n    set scrollY(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollY = this.maxScrollY;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n\r\n        this._scrollPos.y = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * @en The maximum horizontal scrollable value.\r\n     * @zh 横向可滚动的最大值。\r\n     */\r\n    get maxScrollX(): number {\r\n        let r = this.textWidth - this._width;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * @en The maximum vertical scrollable value.\r\n     * @zh 纵向可滚动的最大值。\r\n     */\r\n    get maxScrollY(): number {\r\n        let r = this.textHeight - this._height;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * @en The text line information.\r\n     * @zh 文字行信息。\r\n     */\r\n    get lines(): ReadonlyArray<ITextLine> {\r\n        this.typeset();\r\n        return this._lines;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected markChanged() {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.systemTimer.callLater(this, this._typeset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Typeset the text.\r\n     * @zh 排版文本。\r\n     */\r\n    typeset() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\r\n    }\r\n\r\n    /**\r\n     * @en Refresh the layout with a delay.\r\n     * @zh 延迟刷新排版。\r\n     */\r\n    refreshLayout() {\r\n        ILaya.systemTimer.callLater(this, this.doLayout);\r\n    }\r\n\r\n    /**\r\n     * @en The object container.\r\n     * @zh 对象容器。\r\n     */\r\n    get objContainer(): Sprite {\r\n        if (!this._objContainer) {\r\n            this._objContainer = new Sprite();\r\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\r\n            this.addChild(this._objContainer);\r\n        }\r\n        return this._objContainer;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * 排版文本。\r\n     * 进行宽高计算，渲染、重绘文本。\r\n     */\r\n    protected _typeset(): void {\r\n        this._isChanged = false;\r\n        if (this._hideText || this._destroyed)\r\n            return;\r\n\r\n        HtmlElement.returnToPool(this._elements);\r\n        if (this._objContainer)\r\n            this._objContainer.removeChildren();\r\n\r\n        let text = this._text;\r\n        let isPrompt: boolean;\r\n        if (!text && this._prompt) {\r\n            text = this._prompt;\r\n            isPrompt = true;\r\n        }\r\n\r\n        if (!text) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n\r\n            this._textWidth = this._textHeight = 0;\r\n            this._scrollPos = null;\r\n            if (this._onPostLayout) {\r\n                this._updatingLayout = true;\r\n                this._onPostLayout();\r\n                this._updatingLayout = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let html = this._html;\r\n        text = text.replace(normalizeCR, \"\\n\");\r\n        if (this._parseEscapeChars)\r\n            text = text.replace(escapeCharsPattern, getReplaceStr);\r\n        if (!isPrompt && this._templateVars)\r\n            text = this.parseTemplate(text);\r\n\r\n        if (this._ubb) {\r\n            text = UBBParser.defaultParser.parse(text);\r\n            html = true;\r\n        }\r\n        if (!isPrompt && this._asPassword)\r\n            text = Text._passwordChar.repeat(text.length);\r\n\r\n        let saveColor: string;\r\n        if (isPrompt) {\r\n            saveColor = this._textStyle.color;\r\n            this._textStyle.color = this._promptColor;\r\n        }\r\n        if (html)\r\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\r\n        else {\r\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\r\n            Object.assign(ele.style, this._textStyle);\r\n            ele.text = text;\r\n            this._elements.push(ele);\r\n        }\r\n        if (isPrompt)\r\n            this._textStyle.color = saveColor;\r\n\r\n        this.doLayout();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * @en Analyze text wrapping.\r\n     * @zh 分析文本换行。\r\n     */\r\n    protected doLayout(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._updatingLayout = true;\r\n        this._fontSizeScale = 1;\r\n\r\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\r\n        let padding = this._padding;\r\n        let rectWidth: number;\r\n        if (this._isWidthSet)\r\n            rectWidth = this._width - padding[3] - padding[1];\r\n        else\r\n            rectWidth = Number.MAX_VALUE;\r\n        if (this._maxWidth > 0) {\r\n            let m = this._maxWidth - padding[3] - padding[1];\r\n            if (!wordWrap || m < rectWidth)\r\n                rectWidth = m;\r\n            wordWrap = true;\r\n        }\r\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\r\n        let bfont = this._bitmapFont;\r\n        let alignItems = this._textStyle.alignItems == \"middle\" ? 1 : (this._textStyle.alignItems == \"bottom\" ? 2 : 0);\r\n\r\n        let lineX: number, lineY: number;\r\n        let curLine: ITextLine;\r\n        let lastCmd: ITextCmd;\r\n        let charWidth: number, charHeight: number;\r\n        let fontSize: number;\r\n\r\n        let getTextWidth = (text: string) => {\r\n            if (bfont)\r\n                return bfont.getTextWidth(text, fontSize);\r\n            else {\r\n                let ret = ILaya.Browser.context.measureText(text);\r\n                return ret ? ret.width : 100;\r\n            }\r\n        };\r\n\r\n        let buildLines = (text: string, style: TextStyle) => {\r\n            if (bfont) {\r\n                charWidth = bfont.getMaxWidth(fontSize);\r\n                charHeight = bfont.getMaxHeight(fontSize);\r\n            } else {\r\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\r\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\r\n\r\n                ILaya.Browser.context.font = ctxFont;\r\n                let mr: any = ILaya.Browser.context.measureText(Text._testWord);\r\n\r\n                if (mr) {\r\n                    charWidth = mr.width;\r\n                    charHeight = Math.ceil(mr.height || fontSize);\r\n                }\r\n                else {\r\n                    charWidth = 100;\r\n                    charHeight = fontSize;\r\n                }\r\n            }\r\n\r\n            let lines = text.split(\"\\n\");\r\n            if (wordWrap) {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        wrapText(line, style);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        addCmd(line, style, null);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\r\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\r\n            cmd.x = lineX;\r\n            cmd.y = lineY;\r\n            if (typeof (target) === \"string\") {\r\n                if (!width)\r\n                    width = getTextWidth(target);\r\n                if (!cmd.wt)\r\n                    cmd.wt = new WordText();\r\n                cmd.wt.setText(target);\r\n                cmd.wt.width = width;\r\n                cmd.wt.splitRender = this._singleCharRender;\r\n                cmd.width = width;\r\n                cmd.height = charHeight;\r\n            }\r\n            else {\r\n                cmd.obj = target;\r\n                cmd.x++;\r\n                cmd.width = target.width + 2;\r\n                cmd.height = target.height;\r\n            }\r\n            cmd.style = style;\r\n            cmd.linkEnd = false;\r\n            cmd.next = null;\r\n            lineX += Math.round(cmd.width);\r\n\r\n            if (!curLine.cmd)\r\n                curLine.cmd = cmd;\r\n            else\r\n                lastCmd.next = cmd;\r\n            lastCmd = cmd;\r\n        };\r\n\r\n        let endLine = () => {\r\n            //计算行高\r\n            let lineHeight = 0;\r\n            let cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            //调整元素y位置\r\n            cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (alignItems == 1)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\r\n                else if (alignItems == 2)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height));\r\n                else\r\n                    cmd.y = 0;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (lineHeight == 0)\r\n                lineHeight = charHeight;\r\n            lineHeight++; //预览一个像素用来放下划线\r\n\r\n            curLine.height = lineHeight;\r\n            curLine.width = lineX;\r\n        };\r\n\r\n        let startLine = () => {\r\n            lineX = 0;\r\n            if (curLine)\r\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\r\n\r\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\r\n            curLine.x = 0;\r\n            curLine.y = lineY;\r\n            this._lines.push(curLine);\r\n\r\n            return curLine;\r\n        };\r\n\r\n        let wrapText = (text: string, style: TextStyle) => {\r\n            let remainWidth = Math.max(0, rectWidth - lineX);\r\n\r\n            let tw = getTextWidth(text);\r\n            //优化1，如果一行小于宽度，则直接跳过遍历\r\n            if (tw <= remainWidth) {\r\n                addCmd(text, style, tw);\r\n                return;\r\n            }\r\n\r\n            let maybeIndex = 0;\r\n            let wordWidth = 0;\r\n            let startIndex = 0;\r\n\r\n            let isEmoji = testEmoji(text);\r\n            if (!bfont && !isEmoji) {\r\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\r\n                maybeIndex = Math.floor(remainWidth / charWidth);\r\n                (maybeIndex == 0) && (maybeIndex = 1);\r\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\r\n                if (remainWidth < wordWidth && lineX != 0) {\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                }\r\n            }\r\n\r\n            let len = text.length;\r\n            for (let j = maybeIndex; j < len; j++) {\r\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\r\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\r\n                // 考虑性能，保留这种非方式。\r\n                tw = getTextWidth(text.charAt(j));\r\n                wordWidth += tw;\r\n                let isEmojiChar = false;\r\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\r\n                    wordWidth += tw >> 1;\r\n                    j++;\r\n                    isEmojiChar = true;\r\n                }\r\n\r\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\r\n                if (wordWidth > remainWidth) {\r\n                    if (isEmojiChar) {\r\n                        if (wordWidth == tw + (tw >> 1)) {\r\n                            //这里是代表第一个就是emoji表情的逻辑\r\n                            j++;\r\n                        } else {\r\n                            j--;\r\n                        }\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        if (lineX > 0) {\r\n                            endLine();\r\n                            startLine();\r\n                            remainWidth = rectWidth;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    //截断换行单词\r\n                    let newLine = text.substring(startIndex, j);\r\n                    wordWidth -= tw;\r\n\r\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\r\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\r\n                    if (isEnglishChar(ccode)) {\r\n                        //按照英文单词字边界截取 因此将会无视中文\r\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            //此行只够容纳这一个单词 强制换行\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            //此行有多个单词 按单词分行\r\n                            else {\r\n                                wordWidth = null;\r\n                                newLine = text.substring(startIndex, j);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //如果自动换行，则另起一行\r\n                    addCmd(newLine, style, wordWidth);\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                    //如果非自动换行，则只截取字符串\r\n\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < len) {\r\n                        if (maybeIndex != 0)\r\n                            j += maybeIndex - 1;\r\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\r\n                    } else {\r\n                        //此处执行将不会在循环结束后再push一次\r\n                        addCmd(text.substring(startIndex, len), style);\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (startIndex != -1)\r\n                addCmd(text.substring(startIndex, len), style);\r\n        };\r\n\r\n        let calcTextSize = () => {\r\n            let nw: number = 0, nh: number = 0;\r\n            for (let line of this._lines) {\r\n                if (line.width > nw)\r\n                    nw = line.width;\r\n            }\r\n            if (nw > 0)\r\n                nw += padding[1] + padding[3];\r\n            this._textWidth = nw;\r\n\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            if (lastLine)\r\n                nh = lastLine.y + lastLine.height;\r\n            if (nh > 0)\r\n                nh += padding[0] + padding[2];\r\n            this._textHeight = nh;\r\n        };\r\n\r\n        let run = () => {\r\n            lineX = lineY = charWidth = charHeight = 0;\r\n            curLine = null;\r\n            lastCmd = null;\r\n\r\n            recoverLines(this._lines);\r\n            startLine();\r\n\r\n            let elements = this._elements;\r\n            for (let i = 0, n = elements.length; i < n; i++) {\r\n                let ele = elements[i];\r\n                if (ele.type == HtmlElementType.Text) {\r\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\r\n                    if (fontSize == 0)\r\n                        fontSize = 1;\r\n                    buildLines(ele.text, ele.style);\r\n                }\r\n                else if (ele.type == HtmlElementType.LinkEnd) {\r\n                    if (lastCmd)\r\n                        lastCmd.linkEnd = true;\r\n                }\r\n                else {\r\n                    let htmlObj = ele.obj;\r\n                    if (!htmlObj) {\r\n                        let cls = HtmlParser.classMap[ele.type];\r\n                        if (cls) {\r\n                            htmlObj = Pool.createByClass(cls);\r\n                            htmlObj.create(this, ele);\r\n                            ele.obj = htmlObj;\r\n                        }\r\n                    }\r\n\r\n                    if (htmlObj) {\r\n                        if (wordWrap) {\r\n                            let remainWidth = rectWidth - lineX;\r\n                            if (remainWidth < htmlObj.width + 1) {\r\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\r\n                                    endLine();\r\n                                    startLine();\r\n                                }\r\n                            }\r\n                        }\r\n                        addCmd(htmlObj, ele.style);\r\n                    }\r\n                }\r\n            }\r\n\r\n            endLine();\r\n            calcTextSize();\r\n        };\r\n\r\n        run();\r\n\r\n        if (this._overflow == Text.SHRINK) {\r\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\r\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\r\n                let low = 0;\r\n                let high = this._textStyle.fontSize;\r\n\r\n                //先尝试猜测一个比例\r\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\r\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\r\n\r\n                while (true) {\r\n                    run();\r\n\r\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\r\n                        high = cur;\r\n                    else\r\n                        low = cur;\r\n                    if (high - low > 1 || high != low && cur == high) {\r\n                        cur = low + (high - low) / 2;\r\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._textWidth > rectWidth) {\r\n                this._fontSizeScale = rectWidth / this._textWidth;\r\n\r\n                run();\r\n\r\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\r\n                {\r\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\r\n                    size--;\r\n                    this._fontSizeScale = size / this._textStyle.fontSize;\r\n\r\n                    run();\r\n                }\r\n            }\r\n        }\r\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\r\n            //删掉超出的行\r\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\r\n            if (i == 0) i = 1;\r\n            let linesDeleted = false;\r\n            if (i != -1 && this._lines.length > i) {\r\n                recoverLines(this._lines.splice(i, this._lines.length - i));\r\n                linesDeleted = true;\r\n            }\r\n\r\n            //在最后一行加省略号\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            let cmd = lastLine.cmd;\r\n            let next: ITextCmd;\r\n            let done = false;\r\n            while (cmd) {\r\n                next = cmd.next;\r\n\r\n                if (done) {\r\n                    if (cmd.obj)\r\n                        cmd.obj = null;\r\n                    else if (cmd.wt)\r\n                        cmd.wt.cleanCache();\r\n                    cmdPool.push(cmd);\r\n                }\r\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\r\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\r\n                        cmd.obj = null;\r\n                    if (!cmd.wt)\r\n                        cmd.wt = new WordText();\r\n\r\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\r\n                    fontSize = cmd.style.fontSize;\r\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\r\n                    cmd.wt.splitRender = this._singleCharRender;\r\n                    cmd.next = null;\r\n                    done = true;\r\n                }\r\n\r\n                cmd = next;\r\n            }\r\n\r\n            if (done)\r\n                calcTextSize();\r\n        }\r\n\r\n        if (this._onPostLayout)\r\n            this._onPostLayout();\r\n\r\n        //处理水平对齐\r\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\r\n        if (align != 0 && this._isWidthSet) {\r\n            let rectWidth = this._width - padding[3] - padding[1];\r\n            for (let line of this._lines) {\r\n                let offsetX = 0;\r\n                if (align == 1)\r\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\r\n                else if (align == 2)\r\n                    offsetX = rectWidth - line.width;\r\n\r\n                if (offsetX > 0)\r\n                    line.x = offsetX;\r\n            }\r\n        }\r\n\r\n        //处理垂直对齐\r\n        if (this._isHeightSet && this._textHeight < this._height) {\r\n            let offsetY = 0;\r\n            if (this._textStyle.valign === \"middle\")\r\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\r\n            else if (this._textStyle.valign === \"bottom\")\r\n                offsetY = this._height - this._textHeight;\r\n\r\n            if (offsetY > 0) {\r\n                for (let line of this._lines) {\r\n                    line.y += offsetY;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._overflow == Text.SCROLL\r\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\r\n            if (!this._scrollPos)\r\n                this._scrollPos = new Point(0, 0);\r\n            else {\r\n                let maxScrollX = this.maxScrollX;\r\n                let maxScrollY = this.maxScrollY;\r\n                if (this._scrollPos.x > maxScrollX)\r\n                    this._scrollPos.x = maxScrollX;\r\n                if (this._scrollPos.y > maxScrollY)\r\n                    this._scrollPos.y = maxScrollY;\r\n            }\r\n        }\r\n        else\r\n            this._scrollPos = null;\r\n\r\n        if (this._objContainer) {\r\n            this._objContainer.size(this._width, this._height);\r\n\r\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\r\n                if (!this._objContainer.scrollRect)\r\n                    this._objContainer.scrollRect = new Rectangle();\r\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\r\n            }\r\n            else\r\n                this._objContainer.scrollRect = null;\r\n        }\r\n\r\n        this._updatingLayout = false;\r\n\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     * 渲染文字。\r\n     */\r\n    protected renderText(): void {\r\n        let graphics = this.graphics;\r\n        graphics.clear(true);\r\n        this.drawBg();\r\n\r\n        let padding = this._padding;\r\n        let paddingLeft = padding[3];\r\n        let paddingTop = padding[0];\r\n        let bfont = this._bitmapFont;\r\n        let scrollPos = this._scrollPos;\r\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\r\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\r\n        let bottom = rectHeight - padding[2];\r\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\r\n\r\n        if (clipped) {\r\n            graphics.save();\r\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\r\n            this.repaint();\r\n        }\r\n\r\n        rectWidth -= (padding[3] + padding[1]);\r\n        rectHeight -= (padding[0] + padding[2]);\r\n\r\n        let x = 0, y = 0;\r\n        let lines = this._lines;\r\n        let lineCnt = lines.length;\r\n        let curLink: HtmlLink;\r\n        let linkStartX: number;\r\n        for (let i = 0; i < lineCnt; i++) {\r\n            let line = lines[i];\r\n            x = paddingLeft + line.x;\r\n            y = paddingTop + line.y;\r\n            if (scrollPos) {\r\n                x -= scrollPos.x;\r\n                y -= scrollPos.y;\r\n            }\r\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\r\n\r\n            let cmd = line.cmd;\r\n            while (cmd) {\r\n                if (cmd.linkEnd) {\r\n                    if (curLink) {\r\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\r\n                        curLink = null;\r\n                    }\r\n                }\r\n\r\n                if (cmd.obj) {\r\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\r\n\r\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\r\n                        curLink = <HtmlLink>cmd.obj;\r\n                        curLink.resetArea();\r\n                        linkStartX = x + cmd.x;\r\n                    }\r\n                }\r\n                else if (!lineClipped) {\r\n                    if (bfont) {\r\n                        let tx: number = 0;\r\n                        let str = cmd.wt.text;\r\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\r\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\r\n                        for (let i = 0, n = str.length; i < n; i++) {\r\n                            let c = str.charCodeAt(i);\r\n                            let g = bfont.dict[c];\r\n                            if (g) {\r\n                                if (g.texture)\r\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\r\n                                tx += Math.round(g.advance * scale);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let ctxFont = (<any>cmd.style)._ctxFont;\r\n                        if (cmd.style.stroke)\r\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\r\n                        else\r\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\r\n                    }\r\n                }\r\n\r\n                if (!lineClipped) {\r\n                    if (cmd.style.underline) {\r\n                        let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                        graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\r\n                    }\r\n                    if (cmd.style.strikethrough) {\r\n                        //画删除线\r\n                        let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                        let stx = x + cmd.x;\r\n                        let sty = (y + line.height / 2 - thickness) | 0;\r\n                        let ext = 4;\r\n                        graphics.drawLine(stx - ext, sty, stx + cmd.width + ext, sty, cmd.style.strikethroughColor || cmd.style.color, thickness);\r\n                    }\r\n                }\r\n\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (curLink) {\r\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\r\n                linkStartX = paddingLeft;\r\n            }\r\n        }\r\n\r\n        if (clipped)\r\n            graphics.restore();\r\n    }\r\n\r\n    /**\r\n     * 绘制背景\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected drawBg() {\r\n        let cmd = this._bgDrawCmd;\r\n        if (this._bgColor || this._borderColor) {\r\n            if (!cmd) {\r\n                cmd = new DrawRectCmd();\r\n                cmd.x = cmd.y = 0;\r\n                cmd.width = cmd.height = 1;\r\n                cmd.percent = true;\r\n                this._bgDrawCmd = cmd;\r\n            }\r\n            cmd.fillColor = this._bgColor;\r\n            cmd.lineColor = this._borderColor;\r\n            cmd.lineWidth = this._borderColor ? 1 : 0;\r\n\r\n            let cmds = this.graphics.cmds;\r\n            let i = cmds.indexOf(cmd);\r\n            if (i != 0) {\r\n                if (i != -1)\r\n                    cmds.splice(i, 1);\r\n                cmds.unshift(cmd);\r\n                this.graphics.cmds = cmds;\r\n            }\r\n        }\r\n        else if (cmd) {\r\n            this.graphics.removeCmd(cmd);\r\n        }\r\n    }\r\n}\r\nexport interface ITextCmd {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    style: TextStyle;\r\n    wt: WordText;\r\n    obj: IHtmlObject;\r\n    linkEnd: boolean;\r\n    next: ITextCmd;\r\n}\r\n\r\nexport interface ITextLine {\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    cmd: ITextCmd;\r\n}\r\n\r\nconst cmdPool: Array<ITextCmd> = [];\r\nconst linePool: Array<ITextLine> = [];\r\n\r\nfunction recoverLines(lines: Array<ITextLine>) {\r\n    for (let line of lines) {\r\n        let cmd = line.cmd;\r\n        while (cmd) {\r\n            if (cmd.obj)\r\n                cmd.obj = null;\r\n            else if (cmd.wt)\r\n                cmd.wt.cleanCache();\r\n            cmdPool.push(cmd);\r\n            cmd = cmd.next;\r\n        }\r\n        line.cmd = null;\r\n    }\r\n\r\n    linePool.push(...lines);\r\n    lines.length = 0;\r\n}\r\n\r\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nfunction testEmoji(str: string) {\r\n    if (null == str) return false;\r\n    return emojiTest.test(str);\r\n}\r\nfunction isEnglishChar(unicode: number): boolean {\r\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\r\n        (unicode >= 97 && unicode <= 122) || // a-z\r\n        unicode === 39; // 单引号\r\n}\r\n\r\n\r\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\r\nconst normalizeCR = /\\r\\n/g;\r\nconst escapeCharsPattern = /\\\\(\\w)/g;\r\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\r\nconst ellipsisStr = \"…\";\r\n\r\nfunction getReplaceStr(word: string): string {\r\n    return escapeSequence[word];\r\n}","import { HideFlags, NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Event, ITouchInfo } from \"./Event\";\r\n\r\nvar _isFirstTouch = true;\r\nconst _tempPoint = new Point();\r\nconst _tempRect = new Rectangle();\r\nconst _rollOverChain: Array<Node> = [];\r\nconst _rollOutChain: Array<Node> = [];\r\nvar _inst: InputManager;\r\n\r\nexport class InputManager {\r\n\r\n    /**\r\n     * @en Whether to enable multi-touch support.\r\n     * @zh 是否开启多点触控支持。\r\n     */\r\n    static multiTouchEnabled: boolean = true;\r\n    /**\r\n     * @en Whether to enable mouse/touch events. Default is true.\r\n     * @zh 是否开启鼠标/触摸事件。默认为 true。\r\n     */\r\n    static mouseEventsEnabled: boolean = true;\r\n    /**\r\n     * @en Whether to enable keyboard events. Default is true.\r\n     * @zh 是否开启键盘事件。默认为 true。\r\n     */\r\n    static keyEventsEnabled: boolean = true;\r\n    /**\r\n     * @en The threshold for considering a mouse press and release as a click. If the distance between the press and release positions exceeds this value, it is not considered a click.\r\n     * @zh 鼠标按下和弹起位置之间的距离阀值，用以判断是否视为一次点击。如果超过这个距离，则不视为点击。\r\n     */\r\n    static clickTestThreshold = 10;\r\n\r\n    /**\r\n     * @en The X coordinate of the mouse on the canvas.\r\n     * @zh canvas 上鼠标的 X 坐标。\r\n     */\r\n    static mouseX: number = 0;\r\n    /**\r\n     * @en The Y coordinate of the mouse on the canvas.\r\n     * @zh canvas 上鼠标的 Y 坐标。\r\n     */\r\n    static mouseY: number = 0;\r\n    /**\r\n     * @en Indicates whether text input is currently active.\r\n     * @zh 表示当前是否正在输入文字。\r\n     */\r\n    static isTextInputting = false;\r\n    /**\r\n     * @en Indicates whether the current platform is iOS's WKWebView.\r\n     * @zh 表示当前是否是 iOS 的 WKWebView 平台。\r\n     */\r\n    static isiOSWKwebView: boolean = false;\r\n    /**@internal */\r\n    protected _stage: Stage;\r\n    /**@internal */\r\n    protected _mouseTouch: TouchInfo;\r\n    /**@internal */\r\n    protected _touches: TouchInfo[];\r\n    /**@internal */\r\n    protected _touchPool: TouchInfo[];\r\n    /**@internal */\r\n    protected _touchTarget: Node;\r\n\r\n    /**\r\n     * @en Used for IDE processing.\r\n     * @zh 用于IDE处理。\r\n     */\r\n    protected _eventType: number;\r\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\r\n\r\n    protected _pressKeys: Set<string | number>;\r\n    protected _keyEvent: Event;\r\n\r\n    private _lastTouchTime: number;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    constructor() {\r\n        this._touches = [];\r\n        this._touchPool = [];\r\n        this._mouseTouch = new TouchInfo(this._touches);\r\n        this._pressKeys = new Set();\r\n        this._keyEvent = new Event();\r\n        this._keyEvent._touches = this._touches;\r\n    }\r\n\r\n    static get inst() {\r\n        return _inst;\r\n    }\r\n\r\n    /**\r\n     * @en Get the touch position.\r\n     * @param touchId The ID of the touch point. If not provided, the position of the first touch point will be returned.\r\n     * @returns The position of the touch point.\r\n     * @zh 获取触摸位置。\r\n     * @param touchId 触摸点ID。如果不提供，将返回第一个触摸点的位置。\r\n     * @returns 触摸点的位置。\r\n     */\r\n    static getTouchPos(touchId?: number): Readonly<Point> {\r\n        if (touchId == null)\r\n            return _inst._touches[0]?.pos || Point.EMPTY;\r\n        else\r\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\r\n    }\r\n\r\n    /**\r\n     * @en Get the current touch target node.\r\n     * @zh 获取当前触摸目标节点。\r\n     */\r\n    static get touchTarget(): Node {\r\n        return _inst._touchTarget;\r\n    }\r\n\r\n    /**\r\n     * @en Get the array of current touch information.\r\n     * @zh 获取当前触摸信息的数组。\r\n     */\r\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return _inst._touches;\r\n    }\r\n\r\n    /**\r\n     * @en Get the number of current touches.\r\n     * @zh 获取当前触摸数量。\r\n     */\r\n    static get touchCount(): number {\r\n        return _inst._touches.length;\r\n    }\r\n\r\n    /**\r\n     * @en Cancel the click event for a touch point.\r\n     * @param touchId The ID of the touch event to cancel.\r\n     * @zh 取消指定触摸点的点击事件。\r\n     * @param touchId 要取消的触摸事件ID。\r\n     */\r\n    static cancelClick(touchId?: number): void {\r\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\r\n        if (touch)\r\n            touch.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * @en Check if a specific key is pressed.\r\n     * @param key The key value. For more information, see: https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return Whether the key is pressed.\r\n     * @zh 返回指定键是否被按下。\r\n     * @param key 键值。更多信息请参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return 是否被按下。\r\n     */\r\n    static hasKeyDown(key: string | number): boolean {\r\n        return _inst._pressKeys.has(key);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Initialization.\r\n     * @zh 初始化。\r\n     */\r\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\r\n        let inst = _inst = new InputManager();\r\n        inst._stage = stage;\r\n\r\n        canvas.oncontextmenu = () => {\r\n            return false;\r\n        };\r\n        canvas.addEventListener(\"mousedown\", ev => {\r\n            if (!Browser.onIE)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleMouse(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseup\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleMouse(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mousemove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleMouse(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseout\", ev => {\r\n            inst.handleMouse(ev, 3);\r\n        }, { passive: false });\r\n        // canvas.addEventListener(\"mouseover\", ev => {\r\n        // });\r\n\r\n        canvas.addEventListener(\"touchstart\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchend\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            _isFirstTouch = false;\r\n            inst.handleTouch(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchcancel\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 3);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"wheel\", ev => {\r\n            inst.handleMouse(ev, 4);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"pointerdown\", ev => {\r\n            canvas.setPointerCapture(ev.pointerId);\r\n        });\r\n        canvas.addEventListener(\"pointerup\", ev => {\r\n            canvas.releasePointerCapture(ev.pointerId);\r\n        }, true);\r\n\r\n        let document = <Document>Browser.document;\r\n        document.addEventListener(\"keydown\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keypress\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keyup\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n    }\r\n\r\n    /**\r\n     * @en Handling mouse events\r\n     * @param ev Mouse events\r\n     * @param type Event types\r\n     * @zh 处理鼠标事件\r\n     * @param ev 鼠标事件\r\n     * @param type 事件类型\r\n     */\r\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n        let now = Browser.now();\r\n        if (this._lastTouchTime != null && now - this._lastTouchTime < 100)\r\n            return;\r\n\r\n        //console.log(\"handleMouse\", type);\r\n        let touch: TouchInfo = this._mouseTouch;\r\n\r\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\r\n        if (this._stage._canvasTransform)\r\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n        InputManager.mouseX = _tempPoint.x;\r\n        InputManager.mouseY = _tempPoint.y;\r\n        let x = _tempPoint.x / this._stage.clientScaleX;\r\n        let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n        touch.event.nativeEvent = ev;\r\n        if (type == 3 || !InputManager.mouseEventsEnabled)\r\n            touch.target = this._touchTarget = null;\r\n        else {\r\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n\r\n            let ix = Math.round(x);\r\n            let iy = Math.round(y);\r\n\r\n            if (ix != touch.pos.x || iy != touch.pos.y) {\r\n                this._stage._mouseMoveTime = now;\r\n\r\n                touch.pos.setTo(ix, iy);\r\n                touch.move();\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                    for (let t of touch.downTargets)\r\n                        t.event(Event.MOUSE_DRAG, touch.event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (touch.lastRollOver != touch.target)\r\n            this.handleRollOver(touch);\r\n\r\n        if (type == 0) {\r\n            if (!touch.began) {\r\n                touch.begin();\r\n                this._touches[0] = touch;\r\n                touch.event.button = ev.button;\r\n                touch.downButton = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    this.handleFocus();\r\n\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\r\n                }\r\n            }\r\n        }\r\n        else if (type == 1) {\r\n            if (touch.began && ev.button == touch.downButton) {\r\n                touch.end();\r\n                this._touches.length = 0;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\r\n\r\n                    if (touch.moved) {\r\n                        for (let t of touch.downTargets)\r\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                    }\r\n\r\n                    let clickTarget = touch.clickTest();\r\n                    if (clickTarget) {\r\n                        if (ev.button == 0) {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                            if (touch.clickCount == 2)\r\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                        else {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                touch.event.button = 0;\r\n            }\r\n        }\r\n        else if (type == 4) {\r\n            if (InputManager.mouseEventsEnabled) {\r\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\r\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\r\n                touch.event.delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Handling touch screen events.\r\n     * @param ev Touch screen events.\r\n     * @param type Event types.\r\n     * @zh 处理触屏事件\r\n     * @param ev 触屏事件\r\n     * @param type 事件类型\r\n     */\r\n    handleTouch(ev: TouchEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n        this._lastTouchTime = Browser.now();\r\n\r\n        let touches = ev.changedTouches;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let uTouch: Touch = touches[i];\r\n\r\n            if (!InputManager.multiTouchEnabled\r\n                && this._touches.length > 0\r\n                && this._touches[0].touchId != uTouch.identifier)\r\n                continue;\r\n\r\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\r\n            if (this._stage._canvasTransform)\r\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n            InputManager.mouseX = _tempPoint.x;\r\n            InputManager.mouseY = _tempPoint.y;\r\n            let x = _tempPoint.x / this._stage.clientScaleX;\r\n            let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n            let touch = this.getTouch(uTouch.identifier, type == 0);\r\n            if (!touch)\r\n                continue;\r\n\r\n            touch.event.nativeEvent = ev;\r\n            touch.event.touchId = touch.touchId;\r\n            if (type == 3 || !InputManager.mouseEventsEnabled)\r\n                touch.target = this._touchTarget = null;\r\n            else {\r\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n                this._stage._mouseMoveTime = this._lastTouchTime;\r\n\r\n                let ix = Math.round(x);\r\n                let iy = Math.round(y);\r\n\r\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\r\n                    touch.pos.setTo(ix, iy);\r\n\r\n                    if (type == 2) {\r\n                        touch.move();\r\n\r\n                        if (InputManager.mouseEventsEnabled) {\r\n\r\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG, touch.event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (touch.lastRollOver != touch.target)\r\n                this.handleRollOver(touch);\r\n\r\n            if (type == 0) {\r\n                if (!touch.began) {\r\n                    touch.begin();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        this.handleFocus();\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    }\r\n                }\r\n            }\r\n            else if (type == 1 || type == 3) {\r\n                if (touch.began) {\r\n                    touch.end();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n\r\n                        if (touch.moved) {\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                        }\r\n\r\n                        if (type != 3) {\r\n                            let clickTarget = touch.clickTest();\r\n                            if (clickTarget != null) {\r\n                                touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                                if (touch.clickCount == 2)\r\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                                touch.event.isDblClick = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    touch.target = null;\r\n                    this.handleRollOver(touch);\r\n                }\r\n\r\n                touch.reset();\r\n                this._touches.splice(this._touches.indexOf(touch), 1);\r\n                this._touchPool.push(touch);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\r\n        let touch = this._touches.find(e => e.touchId == touchId);\r\n        if (touch || !shouldCreate)\r\n            return touch;\r\n\r\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\r\n        touch.touchId = touchId;\r\n        this._touches.push(touch);\r\n\r\n        return touch;\r\n    }\r\n\r\n    private handleFocus() {\r\n        if (InputManager.isTextInputting\r\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\r\n            && !this._stage.focus.contains(this._touchTarget)) {\r\n            // 从UI Input组件中取得Input引用\r\n            // _tf 是TextInput的属性\r\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\r\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\r\n\r\n            // 新的焦点是Input的情况下，不需要blur；\r\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\r\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\r\n                pre_input['_focusOut']();\r\n            else\r\n                pre_input.focus = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Handle keys events\r\n     * @param ev Keys events\r\n     * @zh 处理按键事件\r\n     * @param ev 按键事件\r\n     */\r\n    handleKeys(ev: KeyboardEvent): void {\r\n        let type = ev.type;\r\n        let keyCode = ev.keyCode;\r\n        //判断同时按下的键\r\n        if (type === \"keydown\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.add(keyCode);\r\n            this._pressKeys.add(ev.key);\r\n        }\r\n        else if (type === \"keyup\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.delete(keyCode);\r\n            this._pressKeys.delete(ev.key);\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = ev;\r\n\r\n        if (InputManager.keyEventsEnabled) {\r\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\r\n            let ct = target;\r\n            while (ct) {\r\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\r\n                ct = ct.parent;\r\n            }\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = null;\r\n    }\r\n\r\n    /**\r\n     * @en Obtain nodes under location points\r\n     * @param x The x-coordinate value.\r\n     * @param y The y-coordinate value.\r\n     * @returns The node under the point or the stage if no node is found.\r\n     * @zh 获取位置点下的节点\r\n     * @param x x坐标值。\r\n     * @param y y坐标值。\r\n     * @returns 该点下的对象节点，如果没有找到节点则返回舞台。\r\n     */\r\n    getNodeUnderPoint(x: number, y: number): Node {\r\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\r\n        if (!target)\r\n            target = this.getSprite3DUnderPoint(x, y);\r\n        return target || this._stage;\r\n    }\r\n\r\n    /**\r\n     * @en Get the sprite under the specified coordinates relative to a Sprite. The x/y values are in the local coordinates of the Sprite.\r\n     * @param sp The Sprite relative to which the coordinates are calculated.\r\n     * @param x The x-coordinate relative to the Sprite.\r\n     * @param y The y-coordinate relative to the Sprite.\r\n     * @returns The sprite under the point or null if not found.\r\n     * @zh 获取在相对Sprite指定坐标下的sprite。x/y值是Sprite的本地坐标。\r\n     * @param sp 相对哪个Sprite计算坐标。\r\n     * @param x 相对于Sprite的X坐标。\r\n     * @param y 相对于Sprite的Y坐标。\r\n     * @returns 该点下的sprite，如果没有找到则返回null。\r\n     */\r\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\r\n        //如果有裁剪，则先判断是否在裁剪范围内\r\n        let scrollRect = sp._style.scrollRect;\r\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n            if (!_tempRect.contains(x, y))\r\n                return null;\r\n        }\r\n\r\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\r\n\r\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\r\n            return null;\r\n\r\n        for (let i = sp._children.length - 1; i > -1; i--) {\r\n            let child = <Sprite>sp._children[i];\r\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\r\n            //只有接受交互事件的，才进行处理\r\n            if (!child._destroyed\r\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\r\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\r\n                _tempPoint.setTo(x, y);\r\n                child.fromParentPoint(_tempPoint);\r\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\r\n                if (ret)\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        if (editing) {\r\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\r\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\r\n                && this.hitTest(sp, x, y, editing))\r\n                return sp;\r\n        }\r\n        else if (sp != this._stage) {\r\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\r\n                return sp;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSprite3DUnderPoint(x: number, y: number): Node {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Hit test\r\n     * @param sp Relative Sprite.\r\n     * @param x The x-coordinate relative to the Sprite.\r\n     * @param y The y-coordinate relative to the Sprite.\r\n     * @param editing Whether the test is performed in editing mode.\r\n     * @returns True if the point is within the Sprite's bounds, false otherwise.\r\n     * @zh 点击测试\r\n     * @param sp 相对Sprite\r\n     * @param x 相对于Sprite的X坐标。\r\n     * @param y 相对于Sprite的Y坐标。\r\n     * @param editing 是否在编辑模式下进行测试。\r\n     * @returns 如果点在Sprite的范围内返回true，否则返回false。\r\n     */\r\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\r\n        let isHit: boolean = false;\r\n        if (sp.scrollRect) {\r\n            x -= sp._style.scrollRect.x;\r\n            y -= sp._style.scrollRect.y;\r\n        }\r\n        let hitArea = sp._style.hitArea;\r\n        let mouseThrough = sp.mouseThrough;\r\n        if (editing) {\r\n            hitArea = null;\r\n            mouseThrough = false;\r\n        }\r\n\r\n        if (hitArea) {\r\n            return hitArea.contains(x, y, sp);\r\n        }\r\n\r\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\r\n            //判断是否在矩形区域内\r\n            if (!mouseThrough)\r\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y, sp);\r\n            else //如果可穿透，则根据子对象实际大小进行碰撞\r\n                isHit = sp.getGraphicBounds().contains(x, y);\r\n        }\r\n        return isHit;\r\n    }\r\n\r\n    private handleRollOver(touch: TouchInfo) {\r\n        if (!InputManager.mouseEventsEnabled) {\r\n            touch.lastRollOver = touch.target;\r\n            return;\r\n        }\r\n\r\n        _rollOverChain.length = 0;\r\n        _rollOutChain.length = 0;\r\n\r\n        let ele = touch.lastRollOver;\r\n        while (ele) {\r\n            _rollOutChain.push(ele);\r\n            ele = ele.parent;\r\n        }\r\n        touch.lastRollOver = touch.target;\r\n\r\n        ele = touch.target;\r\n        while (ele) {\r\n            let i = _rollOutChain.indexOf(ele);\r\n            if (i != -1) {\r\n                _rollOutChain.splice(i, _rollOutChain.length - i);\r\n                break;\r\n            }\r\n\r\n            _rollOverChain.push(ele);\r\n\r\n            ele = ele.parent;\r\n        }\r\n\r\n        let cnt = _rollOutChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOutChain[i];\r\n                if (!ele._destroyed)\r\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\r\n            }\r\n            _rollOutChain.length = 0;\r\n        }\r\n\r\n        cnt = _rollOverChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOverChain[i];\r\n                if (ele.activeInHierarchy)\r\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\r\n            }\r\n            _rollOverChain.length = 0;\r\n        };\r\n    }\r\n}\r\n\r\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\r\n\r\n/**\r\n * @en Represents information about a touch event, including its position, state, and related nodes.\r\n * @zh 表示触摸事件的信息，包括其位置、状态和相关节点。\r\n */\r\nclass TouchInfo implements ITouchInfo {\r\n    /**\r\n     * @en The event object associated with this touch.\r\n     * @zh 与此触摸关联的事件对象。\r\n     */\r\n    readonly event: Event;\r\n    /**\r\n     * @en The current position of the touch.\r\n     * @zh 当前触摸的位置。\r\n     */\r\n    readonly pos: Point;\r\n    /**\r\n     * @en The ID of the touch.\r\n     * @zh 触摸的ID。\r\n     */\r\n    touchId: number;\r\n    /**\r\n     * @en The number of consecutive clicks.\r\n     * @zh 连续点击的次数。\r\n     */\r\n    clickCount: number;\r\n    /**\r\n     * @en Indicates whether the touch has begun.\r\n     * @zh 表示触摸是否已开始。\r\n     */\r\n    began: boolean;\r\n    /**\r\n     * @en The target node of the touch.\r\n     * @zh 触摸的目标节点。\r\n     */\r\n    target: Node;\r\n    /**\r\n     * @en The last node the touch rolled over.\r\n     * @zh 最后一次触摸经过的节点。\r\n     */\r\n    lastRollOver: Node;\r\n    /**\r\n     * @en Indicates whether the click was cancelled.\r\n     * @zh 表示点击是否已取消。\r\n     */\r\n    clickCancelled: boolean;\r\n    /**\r\n     * @en Indicates whether the touch has moved.\r\n     * @zh 表示触摸是否已移动。\r\n     */\r\n    moved: boolean;\r\n    /**\r\n     * @en The button pressed during the touch.\r\n     * @zh 触摸期间按下的按钮。\r\n     */\r\n    downButton: number;\r\n    /**\r\n     * @en The list of nodes that were under the touch when it began.\r\n     * @zh 触摸开始时位于其下方的节点列表。\r\n     */\r\n    readonly downTargets: Node[];\r\n    /**\r\n     * @en The position where the touch began.\r\n     * @zh 触摸开始时的位置。\r\n     */\r\n    private downPos: Point;\r\n\r\n    /** \r\n     * @ignore\r\n     * @en Creates a new instance of the TouchInfo class.\r\n     * @param touches An array of touch information.\r\n     * @zh 创建 TouchInfo 类的新实例。\r\n     * @param touches 触摸信息数组。\r\n     */\r\n    constructor(touches: Array<TouchInfo>) {\r\n        this.downPos = new Point();\r\n        this.downTargets = [];\r\n        this.event = new Event();\r\n        this.event._touches = touches;\r\n        this.pos = this.event.touchPos;\r\n        this.touchId = 0;\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * @en Marks the beginning of the touch.\r\n     * @zh 标记触摸的开始。\r\n     */\r\n    begin() {\r\n        this.began = true;\r\n        this.clickCancelled = false;\r\n        this.moved = false;\r\n        this.downPos.copy(this.pos);\r\n\r\n        this.downTargets.length = 0;\r\n        if (this.target) {\r\n            let ele = this.target;\r\n            while (ele) {\r\n                this.downTargets.push(ele);\r\n                ele = ele.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Updates the touch information when the touch moves.\r\n     * @zh 当触摸移动时更新触摸信息。\r\n     */\r\n    move() {\r\n        this.moved = true;\r\n\r\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\r\n            this.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * @en Marks the end of the touch and updates the click count.\r\n     * @zh 标记触摸的结束并更新点击次数。\r\n     */\r\n    end() {\r\n        this.began = false;\r\n        let now = performance.now();\r\n\r\n        let lastClick = clickTrack[this.touchId];\r\n        if (!lastClick) {\r\n            lastClick = { pos: new Point(), time: 0, button: 0 };\r\n            clickTrack[this.touchId] = lastClick;\r\n        }\r\n\r\n        if (this.downTargets.length == 0\r\n            || this.clickCancelled\r\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\r\n            this.clickCancelled = true;\r\n            lastClick.time = 0;\r\n            this.clickCount = 1;\r\n        }\r\n        else {\r\n            if (now - lastClick.time < 350\r\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\r\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\r\n                && lastClick.button == this.event.button) {\r\n                this.clickCount = 2;\r\n            }\r\n            else\r\n                this.clickCount = 1;\r\n            lastClick.time = now;\r\n            lastClick.pos.copy(this.pos);\r\n            lastClick.button = this.event.button;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Tests whether the touch should trigger a click event and returns the target node if successful.\r\n     * @returns The target node if the click test is successful; otherwise, null.\r\n     * @zh 测试触摸是否应触发点击事件，并在成功时返回目标节点。\r\n     * @returns 如果点击测试成功，则返回目标节点；否则返回null。\r\n     */\r\n    clickTest(): Node {\r\n        if (this.clickCancelled) {\r\n            this.downTargets.length = 0;\r\n            return null;\r\n        }\r\n\r\n        let obj = this.downTargets[0];\r\n        if (obj.activeInHierarchy) {\r\n            this.downTargets.length = 0;\r\n            return obj;\r\n        }\r\n\r\n        obj = this.target;\r\n        while (obj) {\r\n            let i = this.downTargets.indexOf(obj);\r\n            if (i != -1 && obj.activeInHierarchy)\r\n                break;\r\n\r\n            obj = obj.parent;\r\n        }\r\n\r\n        this.downTargets.length = 0;\r\n\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the touch information to its initial state.\r\n     * @zh 将触摸信息重置为初始状态。\r\n     */\r\n    reset() {\r\n        this.pos.setTo(0, 0);\r\n        this.touchId = 0;\r\n        this.clickCount = 0;\r\n        this.began = false;\r\n        this.moved = false;\r\n        this.target = null;\r\n        this.downTargets.length = 0;\r\n        this.lastRollOver = null;\r\n        this.clickCancelled = false;\r\n        this.downButton = 0;\r\n    }\r\n}\r\n","import { CallLater } from \"./CallLater\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @en The `Timer` class is responsible for time management. It is a singleton and should not be instantiated manually. Access it via `Laya.timer`\r\n * @zh Timer 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\r\n */\r\nexport class Timer {\r\n    /**@private */\r\n    static gSysTimer: Timer = null;\r\n\r\n    /**@private */\r\n    private static _pool: any[] = [];\r\n    /**@private */\r\n    static _mid: number = 1;\r\n\r\n\r\n    /**\r\n     * @en Scale of the clock hand.\r\n     * @zh 时针的缩放比例。\r\n     */\r\n    scale: number = 1;\r\n    /**\r\n     * @en The start time of the current frame.\r\n     * @zh 当前帧的开始时间。\r\n     */\r\n    currTimer: number;\r\n    /**\r\n     * @en The current frame count.\r\n     * @zh 当前的帧数。\r\n     */\r\n    currFrame: number = 0;\r\n    /**\r\n     * @internal\r\n     * @en The time interval between two frames, in milliseconds.\r\n     * @zh 两帧之间的时间间隔，单位毫秒。\r\n     */\r\n    _delta: number = 0;\r\n    /**@internal */\r\n    _lastTimer: number;\r\n    /**@private */\r\n    private _map: { [key: string]: TimerHandler } = {};\r\n    /**@private */\r\n    private _handlers: any[] = [];\r\n    /**@private */\r\n    private _temp: any[] = [];\r\n    /**@private */\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * @en Constructor method\r\n     * @zh 构造方法\r\n     */\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n        this.currTimer = this._getNowData();\r\n        this._lastTimer = this._getNowData();\r\n    }\r\n\r\n    /**\r\n     * @en The time interval between two frames, in milliseconds.\r\n     * @zh 两帧之间的时间间隔，单位毫秒。\r\n     */\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en The frame update handling function.\r\n     * @zh 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = this._getNowData();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame: number = this.currFrame = this.currFrame + this.scale;\r\n        var now: number = this._getNowData();\r\n        var awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        //处理handler\r\n        var handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t: number = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /** @private */\r\n    private _clearHandlers(): void {\r\n        var handlers: any[] = this._handlers;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /** @private */\r\n    private _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en get now time data.\r\n     * @returns reutrn time data.\r\n     * @zh 立即获取时间数据\r\n     * @returns 返回时间数据\r\n     */\r\n    public _getNowData(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /** @internal */\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        //如果延迟为0，则立即执行\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n\r\n        //先覆盖相同函数的计时\r\n        if (coverBefore) {\r\n            var handler: TimerHandler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n\r\n        //找到一个空闲的timerHandler\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n\r\n        //索引handler\r\n        this._indexHandler(handler);\r\n\r\n        //插入数组\r\n        this._handlers.push(handler);\r\n\r\n        return handler;\r\n    }\r\n\r\n    /** @private */\r\n    private _indexHandler(handler: TimerHandler): void {\r\n        var caller: any = handler.caller;\r\n        var method: any = handler.method;\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        handler.key = cid + \"_\" + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * Executes once after a delay.\r\n     * @param delay The delay time in milliseconds.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function to be executed by the timer.\r\n     * @param args The arguments to pass to the callback function.\r\n     * @param coverBefore Whether to overwrite previous delayed execution, default is true.\r\n     * @zh 定时执行一次。\r\n     * @param delay 延迟时间(单位为毫秒)。\r\n     * @param caller 执行域(this)。\r\n     * @param method 定时器回调函数。\r\n     * @param args 回调参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * Repeatedly executes at intervals.\r\n     * @param delay The interval time in milliseconds.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function to be executed by the timer.\r\n     * @param args The arguments to pass to the callback function.\r\n     * @param coverBefore Whether to overwrite previous delayed execution, default is true.\r\n     * @param jumpFrame Whether to jump frames. For time-based callbacks, if multiple callbacks can be executed within a given time interval, the engine defaults to executing once for performance reasons. Setting `jumpFrame` to true will allow multiple executions in quick succession.\r\n     * @zh 定时重复执行。\r\n     * @param delay 间隔时间(单位毫秒)。\r\n     * @param caller 执行域(this)。\r\n     * @param method 定时器回调函数。\r\n     * @param args 回调参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param jumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次。\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * Executes once after a delay in frames.\r\n     * @param delay The delay time in frames.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function to be executed by the timer.\r\n     * @param args The arguments to pass to the callback function.\r\n     * @param coverBefore Whether to overwrite previous delayed execution, default is true.\r\n     * @zh 定时执行一次（基于帧率）。\r\n     * @param delay 延迟几帧（单位为帧）。\r\n     * @param caller 执行域（this）。\r\n     * @param method 定时器回调函数。\r\n     * @param args 回调参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行，默认为 true。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * Repeatedly executes at frame intervals.\r\n     * @param delay The interval time in frames.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function to be executed by the timer.\r\n     * @param args The arguments to pass to the callback function.\r\n     * @param coverBefore Whether to overwrite previous delayed execution, default is true.\r\n     * @zh 定时重复执行（基于帧率）。\r\n     * @param delay 间隔几帧（单位为帧）。\r\n     * @param caller 执行域（this）。\r\n     * @param method 定时器回调函数。\r\n     * @param args 回调参数。\r\n     * @param coverBefore 是否覆盖之前的延迟执行，默认为 true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * @en Return statistical information\r\n     * @zh 返回统计信息\r\n     */\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * @en Cleaning the timer.\r\n     * @param caller The scope of the object (this).\r\n     * @param method Timer callback function.\r\n     * @zh 清理定时器。\r\n     * @param caller 执行域（this）。\r\n     * @param method 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clears all timers associated with the object.\r\n     * @param caller The scope of the object (this).\r\n     * @zh 清理对象身上的所有定时器。\r\n     * @param caller  执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): TimerHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        var key: any = cid + \"_\" + mid;\r\n        return this._map[key];\r\n    }\r\n\r\n    /**\r\n     * @en Delays the execution.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The timer callback function. \r\n     * @param args The callback arguments. Default is null.\r\n     * @zh 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * @en Immediately executes the callLater.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function for the timer.\r\n     * @zh 立即执行 callLater。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n\r\n    /**\r\n     * @en Cancels the execution of callLater.\r\n     * @param caller The scope of the object (this).\r\n     * @param method The callback function for the timer.\r\n     * @zh 取消执行 callLater。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clearCallLater(caller: any, method: Function): void {\r\n        CallLater.I.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * @en Immediately advance the timer, execute it, and then remove it from the queue.\r\n     * @param caller The scope of the object (this).\r\n     * @param method Timer callback function.\r\n     * @zh 立即提前执行定时器，执行后从队列中删除。\r\n     * @param caller 执行域(this)。\r\n     * @param method 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Pause the clock.\r\n     * @zh 暂停时钟。\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Resume the clock.\r\n     * @zh 恢复时钟。\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the timer, and clear all events on the timer.\r\n     * @zh 删除定时器，同时清理定时器上的所有事件。\r\n     */\r\n    destroy() {\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            handler.clear();\r\n        }\r\n        this._handlers.length = 0;\r\n        this._map = {};\r\n        this._temp.length = 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass TimerHandler {\r\n    /**\r\n     * @en The key of the timer handler.\r\n     * @zh 定时器处理程序的键。\r\n     */\r\n    key: string;\r\n\r\n    /**\r\n     * @en Whether the timer should repeat.\r\n     * @zh 定时器是否应该重复。\r\n     */\r\n    repeat: boolean;\r\n\r\n    /**\r\n     * @en The delay between executions in milliseconds.\r\n     * @zh 执行之间的延迟，以毫秒为单位。\r\n     */\r\n    delay: number;\r\n\r\n    /**\r\n     * @en Whether to use frame-based timing.\r\n     * @zh 是否使用基于帧的计时。\r\n     */\r\n    userFrame: boolean;\r\n\r\n    /**\r\n     * @en The execution time of the timer.\r\n     * @zh 定时器的执行时间。\r\n     */\r\n    exeTime: number;\r\n\r\n    /**\r\n     * @en The caller object for the timer method.\r\n     * @zh 定时器方法的调用者对象。\r\n     */\r\n    caller: any\r\n\r\n    /**\r\n     * @en The method to be executed by the timer.\r\n     * @zh 定时器要执行的方法。\r\n     */\r\n    method: Function;\r\n\r\n    /**\r\n     * @en The arguments to be passed to the timer method.\r\n     * @zh 要传递给定时器方法的参数。\r\n     */\r\n    args: any[];\r\n\r\n    /**\r\n     * @en Whether to jump frames.\r\n     * @zh 是否跳帧。\r\n     */\r\n    jumpFrame: boolean;\r\n\r\n    /**\r\n     * @en Clear the timer handler by setting its properties to null.\r\n     * @zh 通过将其属性设置为 null 来清除定时器处理程序。\r\n     */\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    /**\r\n     * @en Run the timer handler method.\r\n     * @param withClear Whether to clear the handler after execution.\r\n     * @zh 运行定时器处理程序方法。\r\n     * @param withClear 是否在执行后清除处理程序。\r\n     */\r\n    run(withClear: boolean): void {\r\n        var caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method: Function = this.method;\r\n        var args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { Timer } from \"./Timer\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @private\r\n * @en The CallLater class is responsible for managing delayed function calls.\r\n * @zh CallLater 类用于管理延迟执行的函数调用。\r\n */\r\nexport class CallLater {\r\n    /**\r\n     * @en Instance of CallLater.\r\n     * @zh CallLater的实例。\r\n     */\r\n    static I = new CallLater();\r\n    /**@private */\r\n    private _pool: LaterHandler[] = [];\r\n    /**@private */\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    /**@private */\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * @en Frame loop processing function.\r\n     * @zh 帧循环处理。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * @en Delay execution\r\n     * @param caller The execution context (this).\r\n     * @param method Timer callback function.\r\n     * @param args The arguments to be passed to the callback function.\r\n     * @zh 延迟执行。\r\n     * @param caller 执行域（this）。\r\n     * @param method 定时器回调函数。\r\n     * @param args 要传递给回调函数的参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Immediately execute a scheduled callLater.\r\n     * @param caller The execution context (this).\r\n     * @param method The callback function to be executed.\r\n     * @zh 立即执行 callLater。\r\n     * @param caller 执行域（this）。\r\n     * @param method 要执行的回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clear the specified callLater.\r\n     * @param caller The execution context (this).\r\n     * @param method The callback function to be cleared.\r\n     * @zh 清除指定的 callLater。\r\n     * @param caller 执行域（this）。\r\n     * @param method 要清除的回调函数。\r\n     */\r\n    clear(caller: any, method: Function) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = \"\";\r\n            handler.clear();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Clear all scheduled callLater for a specific caller.\r\n     * @param caller The caller object to clear all scheduled calls for.\r\n     * @zh 清除指定执行域中的所有callLater。\r\n     * @param caller 执行域（this）。\r\n     */\r\n    clearAll(caller: any) {\r\n        if (!caller) return;\r\n        for (var i = 0, n = this._laters.length; i < n; i++) {\r\n            var handler = this._laters[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = \"\";\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    /**\r\n     * @en Clears the handler, setting the caller, method, and args to null.\r\n     * @zh 清除，将执行域、回调函数、参数均设置为 null。\r\n     */\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    /**\r\n     * @en Executes\r\n     * @zh 立即执行\r\n     */\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderState2D } from \"./utils/RenderState2D\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WebGL {\r\n    static isNativeRender_enable: boolean = false;\r\n\r\n    static _nativeRender_enable(): void {\r\n    }\r\n\r\n    //使用webgl渲染器\r\n    static enable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static onStageResize(width: number, height: number): void {\r\n        RenderState2D.width = width;\r\n        RenderState2D.height = height;\r\n        LayaGL.renderEngine.resizeOffScreen(width, height);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { WebGL } from \"../webgl/WebGL\"\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RunDriver {\r\n\r\n    /**\r\n     * @en Static method to change the width and height of the WebGL context.\r\n     * @zh 用于改变 WebGL宽高信息。\r\n     */\r\n    static changeWebGLSize: Function = function (w: number, h: number): void {\r\n        WebGL.onStageResize(w, h);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"./Component\";\r\n\r\n/**\r\n * @en Core classes for managing and driving the lifecycle of components\r\n * @zh 用于管理和驱动组件生命周期的核心类\r\n */\r\nexport class ComponentDriver {\r\n    private _onUpdates: Set<Component> = new Set();\r\n    private _onLateUpdates: Set<Component> = new Set();\r\n    private _onPreRenders: Set<Component> = new Set();\r\n    private _onPostRenders: Set<Component> = new Set();\r\n\r\n    private _toStarts: Set<Component> = new Set();\r\n    readonly _toDestroys: Set<Component> = new Set();\r\n\r\n    /**\r\n     * @internal\r\n     * @en Calling component Onstart\r\n     * @zh 调用组件Onstart\r\n     */\r\n    callStart() {\r\n        for (let ele of this._toStarts) {\r\n            if (ele._status == 2) {\r\n                ele._status = 3;\r\n\r\n                try {\r\n                    ele.onStart();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n        this._toStarts.clear();\r\n    }\r\n    /**\r\n     * @internal\r\n     * @en Calling component OnUpdate\r\n     * @zh 调用组件OnUpdate\r\n     */\r\n    callUpdate() {\r\n        for (let ele of this._onUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Calling component LayeUpdate\r\n     * @zh 调用组件LayeUpdate\r\n     */\r\n    callLateUpdate() {\r\n        for (let ele of this._onLateUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onLateUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Calling component onPreRender\r\n     * @zh 调用组件onPreRender\r\n     */\r\n    callPreRender() {\r\n        for (let ele of this._onPreRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPreRender();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Calling component onPostRender\r\n     * @zh 调用组件onPostRender\r\n     */\r\n    callPostRender() {\r\n        for (let ele of this._onPostRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPostRender();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Calling destroy\r\n     * @zh 调用销毁\r\n     */\r\n    callDestroy(): void {\r\n        for (let ele of this._toDestroys) {\r\n            try {\r\n                ele._destroy(true);\r\n            }\r\n            catch (err: any) {\r\n                this.onError(err);\r\n            }\r\n        }\r\n        this._toDestroys.clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Adds a component.\r\n     * @param comp The component to be added.\r\n     * @zh 添加一个组件。\r\n     * @param comp 要添加的组件。\r\n     */\r\n    add(comp: Component) {\r\n        if (comp._status == 1) {\r\n            if (comp.onStart) {\r\n                comp._status = 2;\r\n                this._toStarts.add(comp);\r\n            }\r\n            else\r\n                comp._status = 3;\r\n        }\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.add(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.add(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.add(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.add(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Removes a component.\r\n     * @param comp The component to be removed.\r\n     * @zh 移除一个组件。\r\n     * @param comp 要移除的组件。\r\n     */\r\n    remove(comp: Component) {\r\n        if (comp._status == 2) //starting\r\n            comp._status = 1; //cancel start\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.delete(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.delete(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.delete(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.delete(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 删除组件Driver\r\n     */\r\n    destroy() {\r\n        //TODO:\r\n    }\r\n\r\n    /**\r\n     * @en Error handling.\r\n     * @zh 错误处理。\r\n     */\r\n    onError(err: any) {\r\n        console.error(err);\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Node } from \"./Node\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Input } from \"./Input\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { InputManager } from \"../events/InputManager\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Render } from \"../renders/Render\"\r\nimport { RenderInfo } from \"../renders/RenderInfo\"\r\nimport { Context } from \"../renders/Context\"\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { CallLater } from \"../utils/CallLater\"\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { RunDriver } from \"../utils/RunDriver\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Scene3D } from \"../d3/core/scene/Scene3D\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * @en Dispatched when the stage size is resized.\r\n * @zh stage大小经过重新调整时进行调度。\r\n * @eventType Event.RESIZE\r\n */\r\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the stage gains focus. For example, when the browser or current tab is switched back from the background.\r\n * @zh 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the stage loses focus. For example, when the browser or current tab is switched to the background.\r\n * @zh 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the stage focus changes. Use Laya.stage.isFocused to get whether the current stage has focus.\r\n * @zh 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\r\n * @eventType Event.FOCUS_CHANGE\r\n */\r\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the stage visibility changes (e.g., when the browser or current tab is switched to the background). Use Laya.stage.isVisibility to get the current visibility state.\r\n * @zh 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\r\n * @eventType Event.VISIBILITY_CHANGE\r\n */\r\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the browser fullscreen state changes, such as entering or exiting fullscreen mode.\r\n * @zh 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\r\n * @eventType Event.FULL_SCREEN_CHANGE\r\n */\r\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en Stage is the root node of the display list. All display objects are shown on the stage. It can be accessed through the Laya.stage singleton.\r\n * Stage provides several adaptation modes. Different adaptation modes will produce different canvas sizes. The larger the canvas, the greater the rendering pressure, so it's important to choose an appropriate adaptation scheme.\r\n * Stage provides different frame rate modes. The higher the frame rate, the greater the rendering pressure and power consumption. Reasonable use of frame rates or even dynamic changes in frame rates can help improve mobile phone power consumption.\r\n * @zh Stage 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。\r\n * Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。\r\n * Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。\r\n */\r\nexport class Stage extends Sprite {\r\n    /**\r\n     * @en No scaling is applied, and the stage is displayed at its design size. The actual width and height of the canvas are set to the design width and height. This mode is suitable for applications that want to maintain the original design ratio, but it may result in blank areas or content overflow on different devices.\r\n     * @zh 不进行缩放，舞台按照设计尺寸显示，画布的实际宽度和高度设置为设计宽度和高度。这种模式适合希望保持原始设计比例的应用，但在不同设备上可能会出现空白区域或内容超出屏幕的情况。\r\n     */\r\n    static SCALE_NOSCALE: string = \"noscale\";\r\n\r\n    /**\r\n     * @en The stage is scaled to fit the screen while maintaining the aspect ratio, ensuring the entire stage content is visible. The actual width and height of the canvas are calculated based on the design width and height multiplied by the minimum scale factor. While this prevents content from being cut off, it may result in blank borders at the top/bottom or sides.\r\n     * @zh 保持纵横比的情况下，将舞台缩放以适应屏幕，确保整个舞台内容可见。画布的实际宽度和高度根据设计宽度和高度乘以最小缩放因子计算。虽然避免了内容被裁切，但可能会出现上下或左右的空白边缘。\r\n     */\r\n    static SCALE_SHOWALL: string = \"showall\";\r\n\r\n    /**\r\n     * @en The stage is scaled to fill the screen, with the actual width and height of the canvas calculated based on the design width and height multiplied by the maximum scale factor. This mode ensures that content fully covers the display area, but it may result in some content being cut off.\r\n     * @zh 将舞台缩放以填满屏幕，画布的实际宽度和高度根据设计宽度和高度乘以最大缩放因子计算。这种模式保证内容完全覆盖屏幕，但可能会导致部分设计内容被裁切。\r\n     */\r\n    static SCALE_NOBORDER: string = \"noborder\";\r\n\r\n    /**\r\n     * @en Set the stage and canvas directly to the screen's width and height. Other aspects are the same as the SCALE_NOSCALE mode, with no scaling applied to the design content itself. This mode is suitable for scenarios where you want to fully utilize the screen space and handle dynamic layout on the screen yourself.\r\n     * @zh 将舞台与画布直接设置为屏幕宽度和高度，其它方面与SCALE_NOSCALE模式一样，不对设计内容本身进行缩放。这种模式适用于希望完全利用屏幕空间，自行对屏幕动态排版的需求。\r\n     */\r\n    static SCALE_FULL: string = \"full\";\r\n\r\n    /**\r\n     * @en The stage width is kept fixed, and scaling is done based on the screen height. The canvas height is calculated based on the screen height and scale factor, and the stage height is set accordingly. This mode ensures consistent width but may alter the height ratio on different devices.\r\n     * @zh 保持舞台的宽度固定，根据屏幕高度进行缩放。画布的高度根据屏幕高度和缩放因子计算，并设置舞台的高度。这种模式确保宽度一致，但在不同设备上可能会改变高度比例。\r\n     */\r\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\r\n\r\n    /**\r\n     * @en The stage height is kept fixed, and scaling is done based on the screen width. The canvas width is calculated based on the screen width and scale factor, and the stage width is set accordingly. This mode ensures consistent height but may alter the width ratio on different devices.\r\n     * @zh 保持舞台的高度固定，根据屏幕宽度进行缩放。画布的宽度根据屏幕宽度和缩放因子计算，并设置舞台的宽度。这种模式确保高度一致，但在不同设备上可能会改变宽度比例。\r\n     */\r\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\r\n\r\n    /**\r\n     * @en The scaling method is automatically chosen based on the comparison between the screen aspect ratio and the design aspect ratio. If the screen aspect ratio is less than the design aspect ratio, the width is kept fixed with equal scale factors and the canvas height is calculated; otherwise, the height is kept fixed with equal scale factors and the canvas width is calculated. This mode flexibly adapts to different devices but may result in content being cut off or blank borders appearing.\r\n     * @zh 根据屏幕宽高比与设计宽高比的比较，自动选择缩放方式；如果屏幕宽高比小于设计宽高比，则保持宽度固定，缩放因子相等并计算画布高度；否则，保持高度固定，缩放因子相等并计算画布宽度。这种模式可以灵活适应不同的设备，但可能会导致内容被裁切或出现空白边缘。\r\n     */\r\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\r\n\r\n\r\n\r\n    /**\r\n     * @en Canvas is horizontally aligned to the left.\r\n     * @zh 画布水平居左对齐。\r\n     */\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**\r\n     * @en Canvas is horizontally aligned to the right.\r\n     * @zh 画布水平居右对齐。\r\n     */\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**\r\n     * @en Canvas is horizontally centered.\r\n     * @zh 画布水平居中对齐。\r\n     */\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**\r\n     * @en Canvas is vertically aligned to the top.\r\n     * @zh 画布垂直居上对齐。\r\n     */\r\n    static ALIGN_TOP: string = \"top\";\r\n    /**\r\n     * @en Canvas is vertically centered.\r\n     * @zh 画布垂直居中对齐。\r\n     */\r\n    static ALIGN_MIDDLE: string = \"middle\";\r\n    /**\r\n     * @en Canvas is vertically aligned to the bottom.\r\n     * @zh 画布垂直居下对齐。\r\n     */\r\n    static ALIGN_BOTTOM: string = \"bottom\";\r\n\r\n    /**\r\n     * @en Do not change the screen orientation.\r\n     * @zh 不更改屏幕。\r\n     */\r\n    static SCREEN_NONE: string = \"none\";\r\n    /**\r\n     * @en Automatically switch to landscape mode.\r\n     * @zh 自动横屏。\r\n     */\r\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\r\n    /**\r\n     * @en Automatically switch to portrait mode.\r\n     * @zh 自动竖屏。\r\n     */\r\n    static SCREEN_VERTICAL: string = \"vertical\";\r\n\r\n    /**\r\n     * @en Fast mode, running at the configured maximum frame rate (not exceeding the device's maximum frame rate).\r\n     * @zh 快速模式，以配置的最高帧率运行（不得超过设备最高帧率）。\r\n     */\r\n    static FRAME_FAST: string = \"fast\";\r\n    /**\r\n     * @en Slow mode has a frame rate that is half of the fast mode. The principle is to skip rendering every other frame. For example, if the maximum frame rate in fast mode is 60, the maximum frame rate in slow mode would be 30.\r\n     * @zh 慢速模式的帧率是快速模式的一半，其原理是每隔一帧就会跳过渲染。例如快速模式的满帧为60时，慢速模式的满帧则为30。\r\n     */\r\n    static FRAME_SLOW: string = \"slow\";\r\n    /**\r\n     * @en Mouse mode, In this mode, it checks if the last mouse movement occurred within the last two seconds. If it did, `frameMode` will be set to `FRAME_FAST`; otherwise, it will be set to `FRAME_SLOW`.\r\n     * @zh 鼠标模式，该模式下，会检查上一次鼠标移动的时间，如果是在最近的两秒内，帧率的模式会采用快速模式，否则采用慢速模式。\r\n     */\r\n    static FRAME_MOUSE: string = \"mouse\";\r\n    /**\r\n     * @en Sleep mode, running at 1 frame per second.\r\n     * @zh 休眠模式，以每秒1帧的速度运行。\r\n     */\r\n    static FRAME_SLEEP: string = \"sleep\";\r\n\r\n    /**\r\n     * @en The current focus object, which will affect the dispatch of current keyboard events.\r\n     * @zh 当前焦点对象，此对象会影响当前键盘事件的派发主体。\r\n     */\r\n    focus: Node;\r\n    /**\r\n     * @private\r\n     * @deprecated\r\n     * @en Offset relative to the browser's top-left corner, deprecated, please use _canvasTransform.\r\n     * @zh 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。\r\n     */\r\n    offset: Point = new Point();\r\n    /**\r\n     * @en Frame rate types:fast (default, full frame rate),slow (half of the full frame rate),mouse (full frame rate after mouse activity, switches to half frame rate if the mouse is idle for 2 seconds),sleep (1 frame per second)\r\n     * @zh 帧率类型：fast(默认，满帧)，slow（满帧减半），mouse（鼠标活动后满帧，鼠标不动2秒后满帧减半），sleep（每秒1帧）。\r\n     */\r\n    private _frameRate: string = \"fast\";\r\n    /**\r\n     * @en Design width (the width set during initialization Laya.init(width,height))\r\n     * @zh 设计宽度（初始化时设置的宽度Laya.init(width,height)）\r\n     */\r\n    designWidth: number = 0;\r\n    /**\r\n     * @en Design height (the height set during initialization Laya.init(width,height))\r\n     * @zh 设计高度（初始化时设置的高度Laya.init(width,height)）\r\n     */\r\n    designHeight: number = 0;\r\n    /**\r\n     * @en Whether the canvas has been flipped.\r\n     * @zh 画布是否发生翻转。\r\n     */\r\n    canvasRotation: boolean = false;\r\n    /**\r\n     * @en The rotation angle of the canvas.\r\n     * @zh 画布的旋转角度。\r\n     */\r\n    canvasDegree: number = 0;\r\n    /**\r\n     * @en Set whether to render. When set to false, rendering can be stopped, the screen will stay on the last render, reducing CPU consumption. This setting does not affect the clock.\r\n     * For example, in an inactive state, you can set renderingEnabled=false to save consumption.\r\n     * @zh 设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。\r\n     * 比如非激活状态，可以设置renderingEnabled=false以节省消耗。\r\n     */\r\n    renderingEnabled: boolean = true;\r\n    /**\r\n     * @en Whether to enable screen adaptation. After adaptation, screen adaptation can be turned off at some point to prevent unexpected screen changes caused by certain operations.\r\n     * @zh 是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变。\r\n     */\r\n    screenAdaptationEnabled: boolean = true;\r\n    /**@internal */\r\n    _canvasTransform: Matrix = new Matrix();\r\n    /**@private */\r\n    private _screenMode: string = \"none\";\r\n    /**@private */\r\n    private _scaleMode: string = \"noscale\";\r\n    /**@private */\r\n    private _alignV: string = \"top\";\r\n    /**@private */\r\n    private _alignH: string = \"left\";\r\n    /**@private */\r\n    private _bgColor: string = \"gray\";\r\n    /**@internal */\r\n    _mouseMoveTime: number = 0;\r\n    /**@private */\r\n    private _renderCount: number = 0;\r\n    /**@private */\r\n    private _safariOffsetY: number = 0;\r\n    /**@private */\r\n    private _frameStartTime: number = 0;\r\n    /**@private */\r\n    private _previousOrientation: number = Browser.window.orientation;\r\n    /**@private */\r\n    private _isFocused: boolean;\r\n    /**@private */\r\n    private _isVisibility: boolean;\r\n    /**@internal webgl Color*/\r\n    _wgColor = new Color(0, 0, 0, 0);// number[] | null = [0, 0, 0, 1];\r\n    /**@internal */\r\n    _scene3Ds: Scene3D[] = [];\r\n\r\n    /**@private */\r\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\r\n    /**@private */\r\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\r\n\r\n    /**\r\n     * @en Using physical resolution as the canvas size will improve rendering effects, but it will reduce performance\r\n     * @zh 使用物理分辨率作为画布大小，会改进渲染效果，但是会降低性能\r\n     */\r\n    useRetinalCanvas: boolean = false;\r\n\r\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\r\n    constructor() {\r\n        super();\r\n        super.set_transform(this._createTransform());\r\n        //重置默认值，请不要修改\r\n        this.mouseEnabled = true;\r\n        this.hitTestPrior = true;\r\n        this.autoSize = false;\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        this._isFocused = true;\r\n        this._isVisibility = true;\r\n\r\n        //this.drawCallOptimize=true;\r\n        this.useRetinalCanvas = LayaEnv.isConch ? true : Config.useRetinalCanvas;\r\n\r\n        var window: any = Browser.window;\r\n        //var _me = this;\t\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            this._isFocused = true;\r\n            this.event(Event.FOCUS);\r\n            this.event(Event.FOCUS_CHANGE);\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n            this._isFocused = false;\r\n            this.event(Event.BLUR);\r\n            this.event(Event.FOCUS_CHANGE);\r\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n        });\r\n\r\n        // 各种浏览器兼容\r\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\r\n        var document: any = window.document;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            visibilityChange = \"visibilitychange\";\r\n            state = \"visibilityState\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            visibilityChange = \"mozvisibilitychange\";\r\n            state = \"mozVisibilityState\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            visibilityChange = \"msvisibilitychange\";\r\n            state = \"msVisibilityState\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n            state = \"webkitVisibilityState\";\r\n        }\r\n\r\n        window.document.addEventListener(visibilityChange, () => {\r\n            if (Browser.document[state] == \"hidden\") {\r\n                this._isVisibility = false;\r\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n            } else {\r\n                this._isVisibility = true;\r\n            }\r\n            this.renderingEnabled = this._isVisibility;\r\n            this.event(Event.VISIBILITY_CHANGE);\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            // 处理屏幕旋转。旋转后收起输入法。\r\n            var orientation: any = Browser.window.orientation;\r\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\r\n                (Input[\"inputElement\"] as any).target.focus = false;\r\n            }\r\n            this._previousOrientation = orientation;\r\n\r\n            // 弹出输入法不应对画布进行resize。\r\n            if (this._isInputting()) return;\r\n\r\n            // Safari横屏工具栏偏移\r\n            if (Browser.onSafari)\r\n                this._safariOffsetY = Browser.getSafariToolbarOffset();\r\n\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize(true);\r\n            }\r\n        });\r\n\r\n        // 微信的iframe不触发orientationchange。\r\n        window.addEventListener(\"orientationchange\", (e: any) => {\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize(true);\r\n            }\r\n        });\r\n\r\n        this._componentDriver = new ComponentDriver();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\r\n     */\r\n    private _isInputting(): boolean {\r\n        return (Browser.onMobile && InputManager.isTextInputting);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     * @en Set the width of the stage.\r\n     * @param value The numeric value to set as the width.\r\n     * @zh 设置舞台的宽度。\r\n     * @param value  要设置的宽度数值。\r\n     */\r\n    set_width(value: number) {\r\n        this.designWidth = value;\r\n        super.set_width(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     * @en Get the width of the stage.\r\n     * @zh 获取舞台的宽度。\r\n     */\r\n    get_width(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_width();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     * @en Set the height of the stage.\r\n     * @param value The numeric value to set as the height.\r\n     * @zh 设置舞台的高度。\r\n     * @param value 要设置的高度数值。\r\n     */\r\n    set_height(value: number) {\r\n        this.designHeight = value;\r\n        super.set_height(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     * @en Get the height of the stage.\r\n     * @zh 获取舞台的高度。\r\n     */\r\n    get_height(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_height();\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en The matrix information of the object. By setting the matrix, node rotation, scaling, and displacement effects can be achieved.\r\n     * @zh 对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。\r\n     */\r\n    get transform(): Matrix {\r\n        if (this._tfChanged) this._adjustTransform();\r\n        return (this._transform = this._transform || this._createTransform());\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        super.set_transform(value);\r\n    }\r\n\r\n    /**\r\n     * @en Whether the stage has focus.\r\n     * @zh 舞台是否获得焦点。\r\n     */\r\n    get isFocused(): boolean {\r\n        return this._isFocused;\r\n    }\r\n\r\n    /**\r\n     * @en Indicates whether the stage is in a visible state (whether it has entered the background).\r\n     * @zh 舞台是否处于可见状态(是否进入后台)。\r\n     */\r\n    get isVisibility(): boolean {\r\n        return this._isVisibility;\r\n    }\r\n\r\n    private _needUpdateCanvasSize: boolean = false;\r\n\r\n    /**\r\n     * @en Update the canvas size\r\n     * @param delay If true, the change will be executed with a delay\r\n     * @zh 更新canvas大小\r\n     * @param delay 是否延迟执行改动，如果为true，将延迟执行\r\n     */\r\n    updateCanvasSize(delay?: boolean): void {\r\n        if (delay) {\r\n            if (!this._needUpdateCanvasSize) {\r\n                this._needUpdateCanvasSize = true;\r\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\r\n            }\r\n        }\r\n        else {\r\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Synchronize the final canvas size\r\n     * @zh 同步最终canvas大小\r\n     */\r\n    needUpdateCanvasSize() {\r\n        if (this._needUpdateCanvasSize)\r\n            this.updateCanvasSize();\r\n    }\r\n\r\n    /**\r\n     * @en Set the screen size. The scene will adapt to the screen size. This method can be called dynamically to change the game display size.\r\n     * @param screenWidth The width of the screen.\r\n     * @param screenHeight The height of the screen.\r\n     * @zh 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\r\n     * @param screenWidth 屏幕宽度。\r\n     * @param screenHeight 屏幕高度。\r\n     */\r\n    setScreenSize(screenWidth: number, screenHeight: number): void {\r\n        this._needUpdateCanvasSize = false;\r\n\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (this._screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== this._screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var mat: Matrix = this._canvasTransform.identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth;\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        this._width = this.designWidth;\r\n        this._height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = pixelRatio;\r\n                canvasWidth = screenWidth;\r\n                canvasHeight = screenHeight;\r\n                this._width = screenWidth / pixelRatio;\r\n                this._height = screenHeight / pixelRatio;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        //根据不同尺寸缩放stage画面\r\n        scaleX *= this.scaleX;\r\n        scaleY *= this.scaleY;\r\n        if (scaleX === 1 && scaleY === 1) {\r\n            this.transform.identity();\r\n        } else {\r\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\r\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\r\n        }\r\n\r\n        //处理canvas大小\r\n        canvas.size(canvasWidth, canvasHeight);\r\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\r\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\r\n\r\n        //处理水平对齐\r\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\r\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\r\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\r\n\r\n        //处理垂直对齐\r\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\r\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\r\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\r\n\r\n        //处理用户自行设置的画布偏移\r\n        this.offset.x = Math.round(this.offset.x);\r\n        this.offset.y = Math.round(this.offset.y);\r\n        mat.translate(this.offset.x, this.offset.y);\r\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\r\n\r\n        //处理横竖屏\r\n        this.canvasDegree = 0;\r\n        if (rotation) {\r\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\r\n                mat.rotate(Math.PI / 2);\r\n                mat.translate(screenHeight / pixelRatio, 0);\r\n                this.canvasDegree = 90;\r\n            } else {\r\n                mat.rotate(-Math.PI / 2);\r\n                mat.translate(0, screenWidth / pixelRatio);\r\n                this.canvasDegree = -90;\r\n            }\r\n        }\r\n\r\n        mat.a = this._formatData(mat.a);\r\n        mat.d = this._formatData(mat.d);\r\n        mat.tx = this._formatData(mat.tx);\r\n        mat.ty = this._formatData(mat.ty);\r\n\r\n        super.set_transform(this.transform);\r\n        Stage._setStageStyle(canvas, canvasWidth, canvasHeight, mat);\r\n        //修正用户自行设置的偏移\r\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\r\n        this.visible = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Adapt to Taobao mini-game\r\n     * @param mainCanv The main canvas\r\n     * @param canvasWidth The width of the canvas\r\n     * @param canvasHeight The height of the canvas\r\n     * @param mat The transformation matrix\r\n     * @zh 适配淘宝小游戏\r\n     * @param mainCanv 主画布\r\n     * @param canvasWidth 画布宽度\r\n     * @param canvasHeight 画布高度\r\n     * @param mat 变换矩阵\r\n     */\r\n    static _setStageStyle(mainCanv: HTMLCanvas, canvasWidth: number, canvasHeight: number, mat: Matrix) {\r\n        var canvasStyle: any = mainCanv.source.style;\r\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\r\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\r\n        canvasStyle.width = canvasWidth;\r\n        canvasStyle.height = canvasHeight;\r\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\r\n    }\r\n\r\n    /**\r\n     * @en Set screen size for scene rotation, required by layaverse\r\n     * @param screenWidth The width of the screen\r\n     * @param screenHeight The height of the screen\r\n     * @param screenMode The screen mode. \"none\" is the default value, \"horizontal\" for landscape mode, \"vertical\" for portrait mode\r\n     * @zh 设置场景旋转的屏幕大小，layaverse 需要\r\n     * @param screenWidth 屏幕宽度\r\n     * @param screenHeight 屏幕高度\r\n     * @param screenMode 屏幕模式。\"none\"为默认值，\"horizontal\"为横屏，\"vertical\"为竖屏\r\n     */\r\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, screenMode: string) {\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (/**this.*/screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== /**this.*/screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        // var canvas: HTMLCanvas = Render._mainCanvas;\r\n        // var canvasStyle: any = canvas.source.style;\r\n        // var mat: Matrix = this._canvasTransform.clone().identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        // var pixelRatio: number = Browser.pixelRatio;\r\n        let /**this.*/_width = this.designWidth;\r\n        let /**this.*/_height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = 1;\r\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\r\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        return {\r\n            stageWidth: _width,\r\n            stageHeight: _height,\r\n            canvasWidth: canvasWidth,\r\n            canvasHeight: canvasHeight,\r\n            scaleX: scaleX / (realWidth / canvasWidth),\r\n            scaleY: scaleY / (realHeight / canvasHeight),\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _formatData(value: number): number {\r\n        if (Math.abs(value) < 0.000001) return 0;\r\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @en The scale mode. Default value is \"noscale\".\r\n     * Available values:\r\n     * - \"noscale\": No scaling.\r\n     * - \"showall\": Scale with the minimum ratio to fit the screen.\r\n     * - \"noborder\": Scale with the maximum ratio to fit the screen.\r\n     * - \"full\": No scaling, the stage width and height equal to the screen width and height.\r\n     * - \"fixedwidth\": Fixed width, height scales according to the screen ratio.\r\n     * - \"fixedheight\": Fixed height, width scales according to the screen ratio.\r\n     * - \"fixedauto\": Automatically choose between fixedwidth or fixedheight based on the aspect ratio.\r\n     * @zh 缩放模式。默认值为 \"noscale\"。\r\n     * 取值范围：\r\n     * - \"noscale\"：不缩放，舞台与画布采用设计宽高。\r\n     * - \"showall\"：舞台与画布按最小比例缩放。\r\n     * - \"noborder\"：舞台与画布按最大比例缩放。\r\n     * - \"full\"：不缩放，舞台与画布的宽高等于屏幕宽高。\r\n     * - \"fixedwidth\"：宽度不变，高度根据屏幕比缩放。\r\n     * - \"fixedheight\"：高度不变，宽度根据屏幕比缩放。\r\n     * - \"fixedauto\"：根据宽高比，自动选择使用fixedwidth或fixedheight。\r\n     */\r\n    get scaleMode(): string {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(value: string) {\r\n        this._scaleMode = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * @en Horizontal alignment of canvas. Default value is \"left\".\r\n     * Available values:\r\n     * - \"left\": Align to the left.\r\n     * - \"center\": Align to the center.\r\n     * - \"right\": Align to the right.\r\n     * @zh 画布水平对齐方式。默认值为\"left\"。\r\n     * 取值范围：\r\n     * - \"left\"：居左对齐。\r\n     * - \"center\"：居中对齐。\r\n     * - \"right\"：居右对齐。\r\n     */\r\n    get alignH(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignH;\r\n    }\r\n\r\n    set alignH(value: string) {\r\n        this._alignH = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * @en Vertical alignment of canvas. Default value is \"top\".\r\n     * Available values:\r\n     * - \"top\": Align to the top.\r\n     * - \"middle\": Align to the middle.\r\n     * - \"bottom\": Align to the bottom.\r\n     * @zh 画布垂直对齐方式。默认值为\"top\"。\r\n     * 取值范围：\r\n     * - \"top\"：居顶部对齐。\r\n     * - \"middle\"：居中对齐。\r\n     * - \"bottom\"：居底部对齐。\r\n     */\r\n    get alignV(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignV;\r\n    }\r\n\r\n    set alignV(value: string) {\r\n        this._alignV = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * @en The background color of the stage. Default is black, null for transparent.\r\n     * @zh 舞台的背景颜色，默认为黑色，null为透明。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        if (value) {\r\n            let colorArr = ColorUtils.create(value).arrColor;\r\n            this._wgColor.setValue(colorArr[0], colorArr[1], colorArr[2], colorArr[3]);\r\n        }\r\n        else\r\n            this._wgColor = null;\r\n\r\n        Stage._setStyleBgColor(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Adapt to Taobao mini-game\r\n     * @param value The background color value\r\n     * @zh 适配淘宝小游戏\r\n     * @param value 背景颜色值\r\n     */\r\n    static _setStyleBgColor(value: string) {\r\n        if (value) {\r\n            Render.canvas.style.background = value;\r\n        } else {\r\n            Render.canvas.style.background = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en The X coordinate of the mouse on the Stage.\r\n     * @zh 鼠标在 舞台 上的 X 轴坐标。\r\n     */\r\n    get mouseX(): number {\r\n        return Math.round(InputManager.mouseX / this.clientScaleX);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en The Y coordinate of the mouse on the Stage.\r\n     * @zh 鼠标在 舞台 上的 Y 轴坐标。\r\n     */\r\n    get mouseY(): number {\r\n        return Math.round(InputManager.mouseY / this.clientScaleY);\r\n    }\r\n\r\n    /**\r\n     * @en Get the mouse coordinate information on the screen\r\n     * @returns Screen point information\r\n     * @zh 获得屏幕上的鼠标坐标信息\r\n     * @returns 屏幕点信息\r\n     */\r\n    getMousePoint(): Point {\r\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\r\n    }\r\n\r\n    /**\r\n     * @en The X-axis scaling factor caused by the current viewport scaling mode.\r\n     * @zh 当前视窗由缩放模式导致的 X 轴缩放系数。\r\n     */\r\n    get clientScaleX(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleX() : 1;\r\n    }\r\n\r\n    /**\r\n     * @en The Y-axis scaling factor caused by the current viewport scaling mode.\r\n     * @zh 当前视窗由缩放模式导致的 Y 轴缩放系数。\r\n     */\r\n    get clientScaleY(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleY() : 1;\r\n    }\r\n\r\n    /**\r\n     * @en The scene layout type.\r\n     * Available values:\r\n     * - \"none\": Do not change the screen\r\n     * - \"horizontal\": Automatic landscape mode\r\n     * - \"vertical\": Automatic portrait mode\r\n     * @zh 场景布局类型。\r\n     * 取值范围：\r\n     * - \"none\"：不更改屏幕\r\n     * - \"horizontal\"：自动横屏\r\n     * - \"vertical\"：自动竖屏\r\n     */\r\n    get screenMode(): string {\r\n        return this._screenMode;\r\n    }\r\n\r\n    set screenMode(value: string) {\r\n        this._screenMode = value;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Redraw\r\n     * @param type The type of redraw\r\n     * @zh 重新绘制\r\n     * @param type 重新绘制类型\r\n     */\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        this._repaint |= type;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Redraw the parent node\r\n     * @param type The type of redraw\r\n     * @zh 重新绘制父节点\r\n     * @param type 重新绘制类型\r\n     */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _loop(): boolean {\r\n        this._globalRepaintGet = this._globalRepaintSet;\r\n        this._globalRepaintSet = false;\r\n        this.render(Render._context, 0, 0);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Get frame start time.\r\n     * @zh 获取帧开始时间\r\n     */\r\n    getFrameTm(): number {\r\n        return this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * @en Get the time elapsed since the current frame started, in milliseconds.\r\n     * This can be used to judge the time consumption within functions, reasonably control the processing time of each frame function, avoid doing too much in one frame, and process complex calculations across frames, which can effectively reduce frame rate fluctuations.\r\n     * @zh 获得距当前帧开始后，过了多少时间，单位为毫秒。\r\n     * 可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。\r\n     */\r\n    getTimeFromFrameStart(): number {\r\n        return Browser.now() - this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Indicates whether it is visible, default is true. If set to invisible, the node will not be rendered.\r\n     * @zh 表示是否可见，默认为true。如果设置不可见，节点将不被渲染。\r\n     */\r\n    get visible() {\r\n        return super.visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        if (this.visible !== value) {\r\n            super.set_visible(value);\r\n            Stage._setVisibleStyle(value);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @en Adapt to Taobao mini-game\r\n     * @param value The visibility value\r\n     * @zh 适配淘宝小游戏\r\n     * @param value 可见性值\r\n     */\r\n    static _setVisibleStyle(value: boolean) {\r\n        var style: any = Render._mainCanvas.source.style;\r\n        style.visibility = value ? \"visible\" : \"hidden\";\r\n    }\r\n\r\n    /**\r\n     * @en Render all display objects on the stage\r\n     * @param context2D The rendering context\r\n     * @param x The x-axis coordinate\r\n     * @param y The y-axis coordinate\r\n     * @zh 渲染舞台上的所有显示对象\r\n     * @param context2D 渲染的上下文\r\n     * @param x 横轴坐标\r\n     * @param y 纵轴坐标\r\n     */\r\n    render(context2D: Context, x: number, y: number): void {\r\n        if (this._frameRate === Stage.FRAME_SLEEP) {\r\n            var now: number = Browser.now();\r\n            if (now - this._frameStartTime < 1000)\r\n                return;\r\n            this._frameStartTime = now;\r\n        } else {\r\n            if (!this._visible) {\r\n                this._renderCount++;\r\n                if (this._renderCount % 5 === 0) {\r\n                    CallLater.I._update();\r\n                    Stat.loopCount++;\r\n                    RenderInfo.loopCount = Stat.loopCount;\r\n                    this._runComponents();\r\n                    this._updateTimers();\r\n                }\r\n                return;\r\n            }\r\n            this._frameStartTime = Browser.now();\r\n            RenderInfo.loopStTm = this._frameStartTime;\r\n        }\r\n\r\n        this._renderCount++;\r\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\r\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\r\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\r\n\r\n        Stat.renderSlow = !isFastMode;\r\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\r\n            return;\r\n\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        if (this.renderingEnabled) {\r\n\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n            this._runComponents();\r\n            this._componentDriver.callPreRender();\r\n\r\n            //仅仅是clear\r\n            context2D.render2D.renderStart(!Config.preserveDrawingBuffer, this._wgColor);\r\n            //context2D.render2D.renderEnd();\r\n\r\n            //Stage.clear(this._bgColor);\r\n            //先渲染3d\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i]).renderSubmit();\r\n            //再渲染2d\r\n            this._render2d(context2D, x, y);\r\n\r\n            this._componentDriver.callPostRender();\r\n\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        this._updateTimers();\r\n\r\n        LayaGL.renderEngine.endFrame();\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @param context2D\r\n     * @param x\r\n     * @param y\r\n     * @perfTag PerformanceDefine.T_UIRender\r\n     */\r\n    private _render2d(context2D: Context, x: number, y: number) {\r\n        Stat.draw2D = 0;\r\n        context2D.startRender();\r\n        super.render(context2D, x, y);\r\n        Stat.render(context2D, x, y);\r\n        context2D.endRender();\r\n    }\r\n\r\n    private _runComponents() {\r\n        this._componentDriver.callStart();\r\n        this._componentDriver.callUpdate();\r\n        this._componentDriver.callLateUpdate();\r\n        this._componentDriver.callDestroy();\r\n    }\r\n\r\n    private _updateTimers(): void {\r\n        ILaya.systemTimer._update();\r\n        ILaya.physicsTimer._update();\r\n        ILaya.timer._update();\r\n    }\r\n\r\n    /**\r\n     * @en Whether to enable fullscreen mode. Users can enter fullscreen mode by clicking.\r\n     * Compatibility note: Some browsers, such as iPhone, do not allow entering fullscreen mode by clicking.\r\n     * @zh 是否开启全屏，用户点击后进入全屏。\r\n     * 兼容性提示：部分浏览器不允许点击进入全屏，比如iPhone等。\r\n     */\r\n    set fullScreenEnabled(value: boolean) {\r\n        var document: any = Browser.document;\r\n        var canvas: any = Render.canvas;\r\n        if (value) {\r\n            canvas.addEventListener('mousedown', requestFullscreen);\r\n            canvas.addEventListener('touchstart', requestFullscreen);\r\n            document.addEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        } else {\r\n            canvas.removeEventListener('mousedown', requestFullscreen);\r\n            canvas.removeEventListener('touchstart', requestFullscreen);\r\n            document.removeEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @zh Exit full screen mode\r\n     * @en 退出全屏模式\r\n     */\r\n    exitFullscreen(): void {\r\n        var document: any = Browser.document;\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Frame rate types:fast (default, full frame rate),slow (half of the full frame rate),mouse (full frame rate after mouse activity, switches to half frame rate if the mouse is idle for 2 seconds),sleep (1 frame per second)\r\n     * @zh 当前帧率类型：fast(默认，满帧)，slow（满帧减半），mouse（鼠标活动后满帧，鼠标不动2秒后满帧减半），sleep（每秒1帧）。\r\n     */\r\n    get frameRate(): string {\r\n        return this._frameRate;\r\n    }\r\n\r\n    set frameRate(value: string) {\r\n        this._frameRate = value;\r\n    }\r\n\r\n    /**@private */\r\n    isGlobalRepaint(): boolean {\r\n        return this._globalRepaintGet;\r\n    }\r\n\r\n    /**@private */\r\n    setGlobalRepaint(): void {\r\n        this._globalRepaintSet = true;\r\n    }\r\n}\r\n\r\nfunction requestFullscreen(): void {\r\n    var element: any = Browser.document.documentElement;\r\n    if (element.requestFullscreen) {\r\n        element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen();\r\n    }\r\n\r\n    var canvas: any = Render.canvas;\r\n    canvas.removeEventListener('mousedown', requestFullscreen);\r\n    canvas.removeEventListener('touchstart', requestFullscreen);\r\n}\r\n\r\nfunction fullScreenChanged(): void {\r\n    ILaya.stage.event(Event.FULL_SCREEN_CHANGE);\r\n}","import { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * @en The `SoundChannel` class is used to control sounds in the program. Each sound is assigned to a channel, and an application can have multiple channels mixed together.\r\n * The `SoundChannel` class contains methods for controlling sound playback, pause, stop, volume, as well as methods for getting information about the sound's playback status, total time, current playback time, total loop count, and playback address.\r\n * @zh `SoundChannel` 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。\r\n * `SoundChannel` 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。\r\n */\r\nexport class SoundChannel extends EventDispatcher {\r\n    /**\r\n     * @en The URL of the sound.\r\n     * @zh 声音地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * @en The number of loops.\r\n     * @zh 循环次数。\r\n     */\r\n    loops: number;\r\n    /**\r\n     * @en The start time of sound playback.\r\n     * @zh 播放声音开始时间。\r\n     */\r\n    startTime: number;\r\n    /**\r\n     * @en Indicates whether the sound is paused. \r\n     * @zh 表示声音是否已暂停。\r\n     */\r\n    isStopped: boolean = false;\r\n    /**\r\n     * @en The handler for playback completion.\r\n     * @zh 播放完成处理器。\r\n     */\r\n    completeHandler: Handler;\r\n\r\n    /**\r\n     * @en The volume. The volume range is from 0 (mute) to 1 (maximum volume).\r\n     * @zh 音量。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    get volume(): number {\r\n        return 1;\r\n    }\r\n\r\n    set volume(v: number) {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The current playback time in seconds.\r\n     * @zh 当前播放时间，单位是秒。\r\n     */\r\n    get position(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en The total duration in seconds.\r\n     * @zh 总时间，单位是秒。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en Play the sound.\r\n     * @zh 播放声音。\r\n     */\r\n    play(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing the sound.\r\n     * @zh 停止播放。\r\n     */\r\n    stop(): void {\r\n        if (this.completeHandler) this.completeHandler.runWith(false);\r\n    }\r\n\r\n    /**\r\n     * @en Pause the sound playback.\r\n     * @zh 暂停播放。\r\n     */\r\n    pause(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Resume the sound playback.\r\n     * @zh 继续播放。\r\n     */\r\n    resume(): void {\r\n    }\r\n\r\n    protected __runComplete(handler: Handler): void {\r\n        if (handler) {\r\n            handler.runWith(true);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Event as LayaEvent } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AudioSound } from \"./AudioSound\";\r\n\r\n/**\r\n * @en Audio tag sound track control for playing sounds\r\n * @zh audio标签播放声音的音轨控制\r\n */\r\nexport class AudioSoundChannel extends SoundChannel {\r\n\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    private _audio: HTMLAudioElement = null;\r\n    private _onEnd: (evt: Event) => void;\r\n    private _resumePlay: (evt: Event) => void;\r\n    private _src: string;\r\n    \r\n    /** @ignore */\r\n    constructor(audio: HTMLAudioElement) {\r\n        super();\r\n        this._onEnd = this.__onEnd.bind(this);\r\n        this._resumePlay = this.__resumePlay.bind(this);\r\n        audio.addEventListener(\"ended\", this._onEnd);\r\n        this._audio = audio;\r\n        this._src = audio.src;\r\n    }\r\n\r\n    private __onEnd(evt: Event): void {\r\n        if (this.loops == 1) {\r\n            if (this.completeHandler) {\r\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(LayaEvent.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    private __resumePlay(): void {\r\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\r\n        if (this.isStopped) return;\r\n        try {\r\n            this._audio.currentTime = this.startTime;\r\n            Browser.container.appendChild(this._audio);\r\n            this._audio.play();\r\n        } catch (e) {\r\n            //this.audio.play();\r\n            this.event(LayaEvent.ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Play the sound\r\n     * @zh 播放声音\r\n     */\r\n    play(): void {\r\n        this.isStopped = false;\r\n        try {\r\n            this._audio.playbackRate = SoundManager.playbackRate;\r\n            this._audio.currentTime = this.startTime;\r\n        } catch (e) {\r\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            return;\r\n        }\r\n        SoundManager.addChannel(this);\r\n        Browser.container.appendChild(this._audio);\r\n        if (\"play\" in this._audio) {\r\n            let p = this._audio.play();\r\n            if (p)\r\n                p.catch(e => { /*Auto-play was prevented*/ });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The current playback position, in seconds.\r\n     * @zh 当前播放到的位置,单位为秒\r\n     */\r\n    get position(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.currentTime;\r\n    }\r\n\r\n    /**\r\n     * @en The total duration of the sound, in seconds.\r\n     * @zh 声音的总时长,单位为秒。\r\n     */\r\n    get duration(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.duration;\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing\r\n     * @zh 停止播放\r\n     */\r\n    stop(): void {\r\n        //trace(\"stop and remove event\");\r\n        super.stop();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\r\n            if (LayaEnv.isConch) {\r\n                (this._audio as any).stop();\r\n            }\r\n        this._audio.pause();\r\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\r\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\r\n        //ie下使用对象池可能会导致后面的声音播放不出来\r\n        if (!ILaya.Browser.onIE) {\r\n            if (this._audio != AudioSound._musicAudio) {\r\n                Pool.recover(\"audio:\" + this.url, this._audio);\r\n            }\r\n        }\r\n        Browser.removeElement(this._audio);\r\n        this._audio = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n\r\n    /**\r\n     * @en Pause the sound playback\r\n     * @zh 暂停声音播放\r\n     */\r\n    pause(): void {\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            this._audio.pause();\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n\r\n    /**\r\n     * @en Resume the sound playback\r\n     * @zh 恢复声音播放\r\n     */\r\n    resume(): void {\r\n        var audio = this._audio;\r\n        if (!audio)\r\n            return;\r\n        this.isStopped = false;\r\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\r\n            audio.src = this._src;\r\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            audio.load();\r\n        }\r\n        SoundManager.addChannel(this);\r\n        if (\"play\" in audio) {\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The volume of the sound\r\n     * @zh 声音的音量\r\n     */\r\n    get volume(): number {\r\n        if (!this._audio) return 1;\r\n        return this._audio.volume;\r\n    }\r\n\r\n    set volume(v: number) {\r\n        if (!this._audio) return;\r\n        this._audio.volume = v;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AssetDb } from \"../../resource/AssetDb\";\r\n\r\n/**\r\n * @en Use Audio tag to play sound\r\n * @zh 使用Audio标签播放声音\r\n */\r\nexport class AudioSound extends EventDispatcher {\r\n\r\n    private static _audioCache: any = {};\r\n    /**\r\n     * @en Sound URL\r\n     * @zh 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * @en Audio tag used for playback\r\n     * @zh 播放用的audio标签\r\n     */\r\n    audio: HTMLAudioElement;\r\n    /**\r\n     * @en Whether it has been loaded\r\n     * @zh 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**@internal */\r\n    static _musicAudio: HTMLAudioElement;\r\n    /**\r\n     * @en Release the sound\r\n     * @zh 释放声音\r\n     */\r\n    dispose(): void {\r\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\r\n        Pool.clearBySign(\"audio:\" + this.url);\r\n        if (ad) {\r\n            if (!LayaEnv.isConch) {\r\n                ad.src = \"\";\r\n            }\r\n            delete AudioSound._audioCache[this.url];\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _initMusicAudio(): void {\r\n        if (AudioSound._musicAudio) return;\r\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        if (!LayaEnv.isConch) {\r\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        }\r\n    }\r\n\r\n    private static _makeMusicOK(): void {\r\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        if (!AudioSound._musicAudio.src) {\r\n            AudioSound._musicAudio.src = \"\";\r\n            AudioSound._musicAudio.load();\r\n        } else {\r\n            AudioSound._musicAudio.play();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Load the sound\r\n     * @param url The URL of the sound to load\r\n     * @zh 加载声音\r\n     * @param url 要加载的声音的URL\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        var ad: HTMLAudioElement;\r\n        if (url == SoundManager._bgMusic) {\r\n            AudioSound._initMusicAudio();\r\n            ad = AudioSound._musicAudio;\r\n            if ((<any>ad).originalUrl != url) {\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                ad = null;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[url];\r\n        }\r\n        if (ad && ad.readyState >= 2) {\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (!ad) {\r\n            if (url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                ad = AudioSound._musicAudio;\r\n            } else {\r\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n            }\r\n            AudioSound._audioCache[url] = ad;\r\n            AssetDb.inst.resolveURL(url, url => {\r\n                ad.src = URL.postFormatURL(URL.formatURL(url));\r\n            });\r\n        }\r\n        (<any>ad).originalUrl = url;\r\n\r\n        ad.addEventListener(\"canplaythrough\", onLoaded);\r\n        ad.addEventListener(\"error\", onErr);\r\n        var me: AudioSound = this;\r\n        function onLoaded(): void {\r\n            offs();\r\n            me.loaded = true;\r\n            me.event(Event.COMPLETE);\r\n        }\r\n\r\n        function onErr(): void {\r\n            ad.load = null;\r\n            offs();\r\n            me.event(Event.ERROR);\r\n        }\r\n\r\n        function offs(): void {\r\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\r\n            ad.removeEventListener(\"error\", onErr);\r\n        }\r\n\r\n        this.audio = ad;\r\n        if (ad.load) {\r\n            ad.load();\r\n        } else {\r\n            onErr();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Play the sound\r\n     * @param startTime The start time of playback\r\n     * @param loops The number of times to loop the sound\r\n     * @returns The sound channel\r\n     * @zh 播放声音\r\n     * @param startTime 播放的起始时间\r\n     * @param loops 循环播放次数\r\n     * @returns 声音通道\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        //trace(\"playAudioSound\");\r\n        if (!this.url)\r\n            return null;\r\n\r\n        var ad: HTMLAudioElement;\r\n        if (this.url == SoundManager._bgMusic) {\r\n            ad = AudioSound._musicAudio;\r\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                AudioSound._audioCache[this.url] = ad;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[this.url];\r\n        }\r\n\r\n        if (!ad) return null;\r\n        var tAd: HTMLAudioElement;\r\n\r\n        tAd = Pool.getItem(\"audio:\" + this.url);\r\n\r\n        if (LayaEnv.isConch) {\r\n            if (!tAd) {\r\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                tAd = AudioSound._musicAudio;\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            } else {\r\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\r\n            }\r\n        }\r\n        (<any>tAd).originalUrl = this.url;\r\n\r\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * @en Total time\r\n     * @zh 总时间。\r\n     */\r\n    get duration(): number {\r\n        var ad: HTMLAudioElement;\r\n        ad = AudioSound._audioCache[this.url];\r\n        if (!ad)\r\n            return 0;\r\n        return ad.duration;\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @en Sound track control for playing sounds using Web Audio API\r\n * @zh 使用 Web Audio API 方式播放声音的音轨控制\r\n */\r\nexport class WebAudioSoundChannel extends SoundChannel {\r\n    /**\r\n     * @en Original audio file data\r\n     * @zh 声音原始文件数据\r\n     */\r\n    audioBuffer: any;\r\n\r\n    /**\r\n     * @en Gain node for audio processing.\r\n     * @zh gain 节点\r\n     */\r\n    private gain: any;\r\n\r\n    /**\r\n     * @en Buffer source for playback.\r\n     * @zh 播放用的数据\r\n     */\r\n    private bufferSource: any = null;\r\n\r\n    /**\r\n     * @en The current playback time.\r\n     * @zh 当前时间\r\n     */\r\n    private _currentTime: number = 0;\r\n\r\n    /**\r\n     * @en The current volume level.\r\n     * @zh 当前音量\r\n     */\r\n    private _volume: number = 1;\r\n\r\n    /**\r\n     * @en Timestamp when playback starts.\r\n     * @zh 播放开始时的时间戳\r\n     */\r\n    private _startTime: number = 0;\r\n\r\n    private _pauseTime: number = 0;\r\n\r\n    /**\r\n     * @en The audio playback device.\r\n     * @zh 播放设备\r\n     */\r\n    private context: AudioContext;\r\n\r\n\r\n    private _onPlayEnd: Function;\r\n    private static _tryCleanFailed: boolean = false;\r\n    /**\r\n     * @en Target delay for audio playback (in seconds)\r\n     * @zh 音频播放的目标延迟时间（以秒为单位）\r\n     */\r\n    static SetTargetDelay: number = 0.001;\r\n\r\n    /**@ignore */\r\n    constructor() {\r\n        super();\r\n\r\n        this.context = WebAudioSound.ctx;\r\n\r\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\r\n        if (this.context[\"createGain\"]) {\r\n            this.gain = this.context[\"createGain\"]();\r\n        } else {\r\n            this.gain = (<any>this.context)[\"createGainNode\"]();\r\n        }\r\n    }\r\n    /**\r\n     * @en Play the sound\r\n     * @zh 播放声音\r\n     */\r\n    play(): void {\r\n        SoundManager.addChannel(this);\r\n        this.isStopped = false;\r\n        this._clearBufferSource();\r\n        if (!this.audioBuffer) return;\r\n        if (this.startTime >= this.duration) return this.stop();\r\n        var context: any = this.context;\r\n        var gain: any = this.gain;\r\n        var bufferSource: any = context.createBufferSource();\r\n        this.bufferSource = bufferSource;\r\n        bufferSource.buffer = this.audioBuffer;\r\n        bufferSource.connect(gain);\r\n        if (gain)\r\n            gain.disconnect();\r\n        gain.connect(context.destination);\r\n        bufferSource.onended = this._onPlayEnd;\r\n        // if (this.startTime >= this.duration) this.startTime = 0;\r\n        this._startTime = Browser.now();\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = this._volume;\r\n        if (this.loops == 0) {\r\n            bufferSource.loop = true;\r\n        }\r\n        if (bufferSource.playbackRate.setTargetAtTime) {\r\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\r\n        } else\r\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\r\n        bufferSource.start(0, this.startTime);\r\n        this._currentTime = 0;\r\n    }\r\n\r\n    private __onPlayEnd(): void {\r\n        if (this.loops == 1) {\r\n\r\n            if (this.completeHandler) {\r\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * @en The current playback position in seconds\r\n     * @zh 当前播放位置，以秒为单位\r\n     */\r\n    get position(): number {\r\n        if (this.bufferSource) {\r\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @en The duration of the audio in seconds\r\n     * @zh 音频的持续时间，以秒为单位\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private _clearBufferSource(): void {\r\n        if (this.bufferSource) {\r\n            var sourceNode: any = this.bufferSource;\r\n            if (sourceNode.stop) {\r\n                sourceNode.stop(0);\r\n            } else {\r\n                sourceNode.noteOff(0);\r\n            }\r\n            sourceNode.disconnect(0);\r\n            sourceNode.onended = null;\r\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\r\n            this.bufferSource = null;\r\n        }\r\n    }\r\n\r\n    private _tryClearBuffer(sourceNode: any): void {\r\n        try {//已经支持buffer=null\r\n            sourceNode.buffer = null;\r\n        } catch (e) {\r\n            WebAudioSoundChannel._tryCleanFailed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing \r\n     * @zh 停止播放\r\n     */\r\n    stop(): void {\r\n        super.stop();\r\n        this._clearBufferSource();\r\n        this.audioBuffer = null;\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @en Pause the audio playback\r\n     * @zh 暂停音频播放\r\n     */\r\n    pause(): void {\r\n        if (!this.isStopped) {\r\n            this._pauseTime = this.position;\r\n        }\r\n        this._clearBufferSource();\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @en Resume the audio playback\r\n     * @zh 恢复音频播放\r\n     */\r\n    resume(): void {\r\n        this.startTime = this._pauseTime;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * @en The volume of the audio\r\n     * @zh 音频的音量\r\n     */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n    set volume(v: number) {\r\n        this._volume = v;\r\n        if (this.isStopped) {\r\n            return;\r\n        }\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = v;\r\n    }\r\n}\r\n\r\n\r\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * @en Web Audio API for playing sounds\r\n * @zh Web Audio API 方式播放声音\r\n */\r\nexport class WebAudioSound extends EventDispatcher {\r\n\r\n    /**\r\n     * @en Audio playback device\r\n     * @zh 音频播放设备\r\n     */\r\n    static ctx: AudioContext;\r\n\r\n    /**\r\n     * @en Used to unlock sound playback and resolve memory release issues in iOS 9\r\n     * @zh 用于解锁声音播放以及解决 iOS 9 版本的内存释放问题\r\n     */\r\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\r\n\r\n    /**\r\n     * @en Indicates whether the sound is unlocked\r\n     * @zh 是否已解锁声音播放\r\n     */\r\n    private static _unlocked: boolean = false;\r\n\r\n    /**\r\n     * @en URL of the sound file\r\n     * @zh 声音文件的 URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * @en Indicates whether the sound has finished loading\r\n     * @zh 指示声音是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**\r\n     * @en Original audio file data\r\n     * @zh 声音原始文件数据\r\n     */\r\n    audioBuffer: AudioBuffer;\r\n    /**\r\n     * @en Channel list to be played\r\n     * @zh 待播放的声音列表\r\n     */\r\n    private __toPlays: any[];\r\n    private _disposed: boolean = false;\r\n\r\n\r\n    /**\r\n     * @en Play a sound to unlock audio on iOS.\r\n     * @zh 播放声音以解锁IOS的声音播放。\r\n     */\r\n    private static _playEmptySound(): void {\r\n        if (WebAudioSound.ctx == null) {\r\n            return;\r\n        }\r\n        var source: any = WebAudioSound.ctx.createBufferSource();\r\n        source.buffer = WebAudioSound._miniBuffer;\r\n        source.connect(WebAudioSound.ctx.destination);\r\n        source.start(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * @en Try to unlock the sound\r\n     * @zh 尝试解锁声音\r\n     */\r\n    private static _unlock(): void {\r\n        if (WebAudioSound._unlocked) {\r\n            return;\r\n        }\r\n        WebAudioSound._playEmptySound();\r\n        if (WebAudioSound.ctx.state == \"running\") {\r\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n            WebAudioSound._unlocked = true;\r\n        }\r\n    }\r\n    /**\r\n     * @en Initialize Web Audio\r\n     * @zh 初始化 Web Audio\r\n     */\r\n    static initWebAudio(): void {\r\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\r\n\r\n        if (WebAudioSound.ctx.state != \"running\") {\r\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\r\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Load the sound\r\n     * @param url The URL of the sound file to load\r\n     * @zh 加载声音\r\n     * @param url 要加载的声音文件的 URL\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        this.audioBuffer = ILaya.loader.getRes(url);\r\n        if (this.audioBuffer) {\r\n            this._loaded(this.audioBuffer);\r\n            return;\r\n        }\r\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\r\n    }\r\n\r\n    private _loaded(audioBuffer: any): void {\r\n        if (this._disposed)\r\n            return;\r\n\r\n        this.audioBuffer = audioBuffer;\r\n        this.loaded = true;\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    private __playAfterLoaded(): void {\r\n        if (!this.__toPlays) return;\r\n        var i: number, len: number;\r\n        var toPlays: any[];\r\n        toPlays = this.__toPlays;\r\n        len = toPlays.length;\r\n        var tParams: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tParams = toPlays[i];\r\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\r\n                this.play(tParams[0], tParams[1], tParams[2]);\r\n            }\r\n        }\r\n        this.__toPlays.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @en Play the sound\r\n     * @param startTime The start time of the sound playback\r\n     * @param loops The number of times to loop the sound\r\n     * @param channel The WebAudioSoundChannel to use for playback\r\n     * @returns The SoundChannel used for playback\r\n     * @zh 播放声音\r\n     * @param startTime 声音播放的起始时间\r\n     * @param loops 声音循环播放的次数\r\n     * @param channel 用于播放的 WebAudioSoundChannel\r\n     * @returns 用于播放的 SoundChannel\r\n     */\r\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\r\n        channel = channel ? channel : new WebAudioSoundChannel();\r\n        if (!this.audioBuffer) {\r\n            if (this.url) {\r\n                if (!this.__toPlays) this.__toPlays = [];\r\n                this.__toPlays.push([startTime, loops, channel]);\r\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\r\n                this.load(this.url);\r\n            }\r\n        }\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.audioBuffer = this.audioBuffer;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * @en The duration of the sound in seconds\r\n     * @zh 声音的持续时间，以秒为单位\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en Dispose of the sound and release resources\r\n     * @zh 销毁声音并释放资源\r\n     */\r\n    dispose(): void {\r\n        this._disposed = true;\r\n        if (this.audioBuffer) {\r\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\r\n            this.audioBuffer = null;\r\n        }\r\n        this.__toPlays = [];\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { Event } from \"../events/Event\"\r\nimport { AudioSound } from \"./h5audio/AudioSound\"\r\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Sound } from \"./Sound\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * @en The `SoundManager` is a sound management class. It provides control methods for playing background music and sound effects.\r\n * - The engine has two default sound schemes: WebAudio and H5Audio.\r\n * - For playing sound effects, WebAudio is prioritized. If WebAudio is not available, H5Audio is used. H5Audio may have compatibility issues on some devices (such as inability to mix sounds or playback delays).\r\n * - For playing background music, H5Audio is used (using WebAudio would significantly increase memory usage and cause a delay as it needs to wait for the sound to load completely before playing).\r\n * - It is recommended to use mp3 format for background music and wav or mp3 format for sound effects (if packaging as an app, only wav format can be used for sound effects).\r\n * @zh `SoundManager` 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\r\n * - 引擎默认有两套声音方案：WebAudio和H5Audio。\r\n * - 播放音效时，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放。H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n * - 播放背景音乐时，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）。\r\n * - 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\r\n */\r\nexport class SoundManager {\r\n    /**\r\n     * @en Background music volume. default value is 1.\r\n     * @zh 背景音乐音量。默认值为1。\r\n     */\r\n    static musicVolume: number = 1;\r\n    /**\r\n     * @en Sound effect volume. default value is 1.\r\n     * @zh 音效音量。默认值为1。\r\n     */\r\n    static soundVolume: number = 1;\r\n    /**\r\n     * @en Sound playback rate. default value is 1.\r\n     * @zh 声音播放速率。默认值为1。\r\n     */\r\n    static playbackRate: number = 1;\r\n    /**\r\n     * @en Background music uses the Audio tag for playback. The default is true.\r\n     * @zh 背景音乐使用 Audio 标签播放。 默认值为true。\r\n     */\r\n    private static _useAudioMusic: boolean = true;\r\n\r\n    /**\r\n     * @en Indicates whether the audio is muted. The default is false.\r\n     * @zh 是否静音，默认为 false。\r\n     */\r\n    private static _muted: boolean = false;\r\n\r\n    /**\r\n     * @en Indicates whether sound effects are muted. The default is false.\r\n     * @zh 是否音效静音，默认为 false。\r\n     */\r\n    private static _soundMuted: boolean = false;\r\n\r\n    /**\r\n     * @en Indicates whether background music is muted. The default is false.\r\n     * @zh 是否背景音乐静音，默认为 false。\r\n     */\r\n    private static _musicMuted: boolean = false;\r\n\r\n    /**\r\n     * @en The current background music URL.\r\n     * @zh 当前背景音乐 URL。\r\n     */\r\n    static _bgMusic: string = null;\r\n\r\n    /**\r\n     * @en The current background music channel.\r\n     * @zh 当前背景音乐声道。\r\n     */\r\n    static _musicChannel: SoundChannel = null;\r\n\r\n    /**\r\n     * @en The list of currently playing channels.\r\n     * @zh 当前播放的 Channel 列表。\r\n     */\r\n    private static _channels: any[] = [];\r\n    \r\n    private static _autoStopMusic: boolean;\r\n    \r\n    private static _blurPaused: boolean = false;\r\n    \r\n    private static _isActive: boolean = true;\r\n    /**@internal */\r\n    static _soundClass: new () => any;\r\n    /**@internal */\r\n    static _musicClass: new () => any;\r\n    \r\n    private static _lastSoundUsedTimeDic: any = {};\r\n    \r\n    private static _isCheckingDispose: boolean = false;\r\n    \r\n    private static _soundCache: Record<string, Sound> = {};\r\n\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        var win: any = ILaya.Browser.window;\r\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\r\n        if (supportWebAudio)\r\n            WebAudioSound.initWebAudio();\r\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\r\n\r\n        if (!Browser.onTBMiniGame) {\r\n            AudioSound._initMusicAudio();\r\n        }\r\n        SoundManager._musicClass = AudioSound;\r\n\r\n        return supportWebAudio;\r\n    }\r\n\r\n    /**\r\n     * @en Automatically delete sound effects after playing.default value is true.\r\n     * @zh 音效播放后自动删除。默认值是 true。\r\n     */\r\n    static autoReleaseSound: boolean = true;\r\n\r\n    /**\r\n     * @en Add a playing sound instance.\r\n     * @param channel The `SoundChannel` object.\r\n     * @zh 添加播放的声音实例。\r\n     * @param channel `SoundChannel` 对象。\r\n     */\r\n    static addChannel(channel: SoundChannel): void {\r\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\r\n        SoundManager._channels.push(channel);\r\n    }\r\n\r\n    /**\r\n     * @en Remove a playing sound instance.\r\n     * @param channel The `SoundChannel` object.\r\n     * @zh 移除播放的声音实例。\r\n     * @param channel `SoundChannel` 对象。\r\n     */\r\n    static removeChannel(channel: SoundChannel): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i] == channel) {\r\n                SoundManager._channels.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    static disposeSoundLater(url: string): void {\r\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\r\n        if (!SoundManager._isCheckingDispose) {\r\n            SoundManager._isCheckingDispose = true;\r\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n    \r\n    private static _checkDisposeSound(): void {\r\n        let tTime: number = ILaya.Browser.now();\r\n        let hasCheck: boolean = false;\r\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\r\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\r\n                delete SoundManager._lastSoundUsedTimeDic[key];\r\n                SoundManager.disposeSoundIfNotUsed(key);\r\n            } else {\r\n                hasCheck = true;\r\n            }\r\n        }\r\n        if (!hasCheck) {\r\n            SoundManager._isCheckingDispose = false;\r\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    static disposeSoundIfNotUsed(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i].url == url) {\r\n                return;\r\n            }\r\n        }\r\n        SoundManager.destroySound(url);\r\n    }\r\n\r\n    /**\r\n     * @en Whether to automatically stop background music when losing focus.\r\n     * @zh 失去焦点后是否自动停止背景音乐。\r\n     */\r\n    static get autoStopMusic(): boolean {\r\n        return SoundManager._autoStopMusic;\r\n    }\r\n\r\n    static set autoStopMusic(v: boolean) {\r\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\r\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        SoundManager._autoStopMusic = v;\r\n        if (v) {\r\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\r\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        }\r\n    }\r\n\r\n\r\n    private static _visibilityChange(): void {\r\n        if (ILaya.stage.isVisibility) {\r\n            SoundManager._stageOnFocus();\r\n        } else {\r\n            SoundManager._stageOnBlur();\r\n        }\r\n    }\r\n\r\n    private static _stageOnBlur(): void {\r\n        SoundManager._isActive = false;\r\n        if (SoundManager._musicChannel) {\r\n            if (!SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = true;\r\n                SoundManager._musicChannel.pause();\r\n\r\n            }\r\n\r\n        }\r\n        SoundManager.stopAllSound();\r\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n    }\r\n\r\n    private static _recoverWebAudio(): void {\r\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\r\n            WebAudioSound.ctx.resume();\r\n    }\r\n\r\n    private static _stageOnFocus(): void {\r\n        SoundManager._isActive = true;\r\n        SoundManager._recoverWebAudio();\r\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n        if (SoundManager._blurPaused) {\r\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = false;\r\n                SoundManager._musicChannel.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether background music and all sound effects are muted.\r\n     * @zh 背景音乐和所有音效是否静音。\r\n     */\r\n    static get muted(): boolean {\r\n        return SoundManager._muted;\r\n    }\r\n\r\n    static set muted(value: boolean) {\r\n        if (value == SoundManager._muted) return;\r\n        if (value) {\r\n            SoundManager.stopAllSound();\r\n        }\r\n        SoundManager.musicMuted = value;\r\n        SoundManager._muted = value;\r\n    }\r\n\r\n    /**\r\n     * @en Whether all sound effects (excluding background music) are muted.\r\n     * @zh 所有音效（不包括背景音乐）是否静音。\r\n     */\r\n    static get soundMuted(): boolean {\r\n        return SoundManager._soundMuted;\r\n    }\r\n\r\n    static set soundMuted(value: boolean) {\r\n        SoundManager._soundMuted = value;\r\n    }\r\n\r\n    /**\r\n     * @en Whether background music (excluding sound effects) is muted.\r\n     * @zh 背景音乐（不包括音效）是否静音。\r\n     */\r\n    static get musicMuted(): boolean {\r\n        return SoundManager._musicMuted;\r\n    }\r\n\r\n    static set musicMuted(value: boolean) {\r\n        if (value == SoundManager._musicMuted) return;\r\n        if (value) {\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.pause();\r\n                    }\r\n                } else {\r\n                    SoundManager._musicChannel = null;\r\n                }\r\n            } else {\r\n                SoundManager._musicChannel = null;\r\n            }\r\n\r\n            SoundManager._musicMuted = value;\r\n        } else {\r\n            SoundManager._musicMuted = value;\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.resume();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Determines whether background music is played using the Audio tag.\r\n     * @zh 背景音乐是否使用Audio标签播放。\r\n     */\r\n    static get useAudioMusic(): boolean {\r\n        return SoundManager._useAudioMusic;\r\n    }\r\n\r\n    static set useAudioMusic(value: boolean) {\r\n        SoundManager._useAudioMusic = value;\r\n        if (value) {\r\n            SoundManager._musicClass = AudioSound;\r\n        } else {\r\n            SoundManager._musicClass = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Play a sound effect. Multiple sound effects can be played simultaneously.\r\n     * @param url The URL of the sound file.\r\n     * @param loops The number of times to loop the sound. 0 means infinite loop.\r\n     * @param complete The callback function when the sound playback is complete. It should be a Handler object.\r\n     * @param soundClass The sound class to use for playback. If null, it will be automatically selected.\r\n     * @param startTime The start time of the sound playback.\r\n     * @returns A SoundChannel object, through which you can control the sound and get sound information.\r\n     * @zh 播放音效。音效可以同时播放多个。\r\n     * @param url 声音文件地址。\r\n     * @param loops 循环次数，0表示无限循环。\r\n     * @param complete 声音播放完成回调，应为Handler对象。\r\n     * @param soundClass 使用哪个声音类进行播放，null表示自动选择。\r\n     * @param startTime 声音播放起始时间。\r\n     * @returns SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\r\n        if (!SoundManager._isActive || !url) return null;\r\n        if (SoundManager._muted) return null;\r\n        SoundManager._recoverWebAudio();\r\n        if (url == SoundManager._bgMusic) {\r\n            if (SoundManager._musicMuted) return null;\r\n        } else {\r\n            if (SoundManager._soundMuted) return null;\r\n        }\r\n        let tSound: Sound;\r\n        if (!Browser._isMiniGame) {\r\n            tSound = SoundManager._soundCache[url];\r\n        }\r\n        if (!soundClass) soundClass = SoundManager._soundClass;\r\n        if (!tSound) {\r\n            tSound = new soundClass();\r\n            tSound.load(url);\r\n            if (!Browser._isMiniGame) {\r\n                SoundManager._soundCache[url] = tSound;\r\n            }\r\n        }\r\n        let channel = tSound.play(startTime, loops);\r\n        if (!channel) return null;\r\n        channel.url = url;\r\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\r\n        channel.completeHandler = complete;\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * @en Release sound resources.\r\n     * @param url The URL of the sound file to be released.\r\n     * @zh 释放声音资源。\r\n     * @param url 要释放的声音文件地址。\r\n     */\r\n    static destroySound(url: string): void {\r\n        let tSound = SoundManager._soundCache[url];\r\n        if (tSound) {\r\n            delete SoundManager._soundCache[url];\r\n            tSound.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Play background music. Only one background music can be played at a time. If this method is called while background music is already playing, the previous music will be stopped before playing the current one.\r\n     * @param url The URL of the sound file.\r\n     * @param loops The number of times to loop the music. 0 means infinite loop.\r\n     * @param complete The callback function when the music playback is complete. The result parameter is true if playback is completed, false/undefined if triggered by stop.\r\n     * @param startTime The start time of the music playback.\r\n     * @returns A SoundChannel object, through which you can control the sound and get sound information.\r\n     * @zh 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\r\n     * @param url 声音文件地址。\r\n     * @param loops 循环次数，0表示无限循环。\r\n     * @param complete 声音播放完成回调，complete 结果参数 true: 播放完成, false/undefined：stop触发的complete。\r\n     * @param startTime 声音播放起始时间。\r\n     * @returns SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\r\n        SoundManager._bgMusic = url;\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing a specific sound. This method can stop the playback of any sound (including background music and sound effects) by providing the corresponding sound file address.\r\n     * @param url The URL of the sound file.\r\n     * @zh 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\r\n     * @param url 声音文件地址。\r\n     */\r\n    static stopSound(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing all sounds (including background music and sound effects).\r\n     * @zh 停止播放所有声音（包括背景音乐和音效）。\r\n     */\r\n    static stopAll(): void {\r\n        SoundManager._bgMusic = null;\r\n        var i: number;\r\n        var channel: SoundChannel;\r\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            channel = SoundManager._channels[i];\r\n            channel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing all sound effects (excluding background music).\r\n     * @zh 停止播放所有音效（不包括背景音乐）。\r\n     */\r\n    static stopAllSound(): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url != SoundManager._bgMusic) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing background music (excluding sound effects).\r\n     * @zh 停止播放背景音乐（不包括音效）。\r\n     */\r\n    static stopMusic(): void {\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        SoundManager._bgMusic = null;\r\n    }\r\n\r\n    /**\r\n     * @en Set the volume of sounds. Depending on the parameters, it can set the volume for a specific sound (background music or sound effect) or all sound effects (excluding background music).\r\n     * @param volume The volume. Initial value is 1. Volume range is from 0 (mute) to 1 (maximum volume).\r\n     * @param url (default = null) The URL of the sound file. If null, it sets the volume for all sound effects (excluding background music). If not null, it sets the volume for the specified sound (background music or sound effect).\r\n     * @zh 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume 音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url (默认为 null) 声音播放地址。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    static setSoundVolume(volume: number, url: string = null): void {\r\n        if (url) {\r\n            SoundManager._setVolume(url, volume);\r\n        } else {\r\n            SoundManager.soundVolume = volume;\r\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n                let channel = SoundManager._channels[i];\r\n                if (channel.url != SoundManager._bgMusic) {\r\n                    channel.volume = volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set the volume of background music. Volume range is from 0 (mute) to 1 (maximum volume).\r\n     * @param volume The volume. Initial value is 1. Volume range is from 0 (mute) to 1 (maximum volume).\r\n     * @zh 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param volume 音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    static setMusicVolume(volume: number): void {\r\n        SoundManager.musicVolume = volume;\r\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\r\n    }\r\n\r\n    /**\r\n     * @en Set the volume for a specified sound.\r\n     * @param url The URL of the sound file.\r\n     * @param volume The volume level, with an initial value of 1.\r\n     * @zh 设置指定声音的音量。\r\n     * @param url 声音文件 URL。\r\n     * @param volume 音量。初始值为 1。\r\n     */\r\n    private static _setVolume(url: string, volume: number): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.volume = volume;\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\r\n */\r\nexport class LocalStorage {\r\n\r\n    /**@ 基础类*/\r\n    static _baseClass: any;\r\n    /**\r\n     *  数据列表。\r\n     */\r\n    static items: any;\r\n    /**\r\n     * 表示是否支持  <code>LocalStorage</code>。\r\n     */\r\n    static support: boolean = false;\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        if (!LocalStorage._baseClass) {\r\n            LocalStorage._baseClass = Storage;\r\n            Storage.init();\r\n        }\r\n        LocalStorage.items = LocalStorage._baseClass.items;\r\n        LocalStorage.support = LocalStorage._baseClass.support;\r\n        return LocalStorage.support;\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名和键值，字符串类型。\r\n     * @param key 键名。\r\n     * @param value 键值。\r\n     */\r\n    static setItem(key: string, value: string): void {\r\n        LocalStorage._baseClass.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的值。\r\n     * @param key 键名。\r\n     * @return 字符串型值。\r\n     */\r\n    static getItem(key: string): string {\r\n        return LocalStorage._baseClass.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n     */\r\n    static setJSON(key: string, value: any): void {\r\n        LocalStorage._baseClass.setJSON(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @return <code>Object</code> 类型值\r\n     */\r\n    static getJSON(key: string): any {\r\n        return LocalStorage._baseClass.getJSON(key);\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名的信息。\r\n     * @param key 键名。\r\n     */\r\n    static removeItem(key: string): void {\r\n        LocalStorage._baseClass.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * 清除本地存储信息。\r\n     */\r\n    static clear(): void {\r\n        LocalStorage._baseClass.clear();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass Storage {\r\n\r\n\t/**\r\n\t *  数据列表。\r\n\t */\r\n    static items: any;\r\n\t/**\r\n\t * 表示是否支持  <code>LocalStorage</code>。\r\n\t */\r\n    static support: boolean = false;\r\n\r\n    static init(): void {\r\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和键值，字符串类型。\r\n\t * @param key 键名。\r\n\t * @param value 键值。\r\n\t */\r\n    static setItem(key: string, value: string): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, value);\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的值。\r\n\t * @param key 键名。\r\n\t * @return 字符串型值。\r\n\t */\r\n    static getItem(key: string): string {\r\n        return Storage.support ? Storage.items.getItem(key) : null;\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n\t */\r\n    static setJSON(key: string, value: any): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @return <code>Object</code> 类型值\r\n\t */\r\n    static getJSON(key: string): any {\r\n        try{\r\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\r\n            return obj;\r\n        }catch(err){\r\n            return Storage.items.getItem(key);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除指定键名的信息。\r\n\t * @param key 键名。\r\n\t */\r\n    static removeItem(key: string): void {\r\n        Storage.support && Storage.items.removeItem(key);\r\n    }\r\n\r\n\t/**\r\n\t * 清除本地存储信息。\r\n\t */\r\n    static clear(): void {\r\n        Storage.support && Storage.items.clear();\r\n    }\r\n\r\n}\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\n\r\nexport class PrimitiveSV extends Value2D {\r\n    constructor() {\r\n        super(RenderSpriteData.Primitive);\r\n        PrimitiveSV.prototype.initialize.call(this);\r\n    }\r\n\r\n    protected initialize(): void {\r\n        this._defaultShader = Shader3D.find(\"Sprite2DPrimitive\");\r\n    }\r\n\r\n    reinit(){\r\n        super.initialize();\r\n        this.initialize();\r\n    }    \r\n\r\n}\r\n\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { Vector2 } from \"../../../../maths/Vector2\";\r\nimport { Vector4 } from \"../../../../maths/Vector4\";\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\r\n\r\nexport class TextureSV extends Value2D {\r\n    private _blurInfo: Vector2;//TODO  shader中没有用\r\n    private _u_blurInfo1: Vector4;\r\n    private _u_blurInfo2: Vector4;\r\n    private _u_TexRange: Vector4;\r\n    private _colorMat: Matrix4x4;\r\n    private _colorAlpha: Vector4;\r\n    private _strength_sig2_2sig2_gauss1: Vector4;\r\n\r\n    constructor() {\r\n        super(RenderSpriteData.Texture2D);\r\n        TextureSV.prototype.initialize.call(this);\r\n    }\r\n\r\n    protected initialize(): void {\r\n        this._blurInfo = new Vector2();//TODO  shader中没有用\r\n        this._u_blurInfo1 = new Vector4();\r\n        this._u_blurInfo2 = new Vector4();\r\n        this._u_TexRange = new Vector4();\r\n        this._colorMat = new Matrix4x4();\r\n        this._colorAlpha = new Vector4();\r\n        this._strength_sig2_2sig2_gauss1 = new Vector4();\r\n    \r\n        this._defaultShader = Shader3D.find(\"Sprite2DTexture\");\r\n        this.blurInfo = this._blurInfo;\r\n        this.u_blurInfo1 = this._u_blurInfo1;\r\n        this.u_blurInfo2 = this._u_blurInfo2;\r\n        this.u_TexRange = this._u_TexRange;\r\n        this.colorMat = this._colorMat;\r\n        this.colorAlpha = this._colorAlpha;\r\n        this.strength_sig2_2sig2_gauss1 = this._strength_sig2_2sig2_gauss1;\r\n    }\r\n\r\n    reinit(){\r\n        super.initialize();\r\n        this.initialize();\r\n    }\r\n\r\n    public get blurInfo(): Vector2 {\r\n        return this.shaderData.getVector2(ShaderDefines2D.UNIFORM_BLURINFO);\r\n    }\r\n    public set blurInfo(value: Vector2) {\r\n        this.shaderData.setVector2(ShaderDefines2D.UNIFORM_BLURINFO, value);\r\n    }\r\n\r\n    public get u_blurInfo1(): Vector4 {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_BLURINFO1);\r\n    }\r\n    public set u_blurInfo1(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_BLURINFO1, value);\r\n    }\r\n\r\n    public get u_blurInfo2(): Vector4 {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_BLURINFO2);\r\n    }\r\n    public set u_blurInfo2(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_BLURINFO2, value);\r\n    }\r\n\r\n    public get u_TexRange(): Vector4 {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_TEXRANGE)\r\n    }\r\n    public set u_TexRange(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_TEXRANGE, value);\r\n    }\r\n\r\n    public get colorMat(): Matrix4x4 {\r\n        return this.shaderData.getMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT);\r\n    }\r\n    public set colorMat(value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, value);\r\n    }\r\n\r\n    public get colorAlpha(): Vector4 {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_COLORALPHA);\r\n    }\r\n    public set colorAlpha(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, value);\r\n    }\r\n\r\n    public get strength_sig2_2sig2_gauss1(): Vector4 {\r\n        return this.shaderData.getVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1);\r\n    }\r\n    public set strength_sig2_2sig2_gauss1(value: Vector4) {\r\n        this.shaderData.setVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    // clear(): void {\r\n    //     this.shaderData.getDefineData().clear();\r\n    //     this.shaderData.destroy();\r\n    // }\r\n}\r\n","import { Browser } from \"./Browser\";\r\n/**\r\n * @en The `Mouse` class is used to control the style of the mouse cursor.\r\n * @zh `Mouse` 类用于控制鼠标光标的样式。\r\n */\r\nexport class Mouse {\r\n    /**@private */\r\n    private static _style: any;\r\n    /**@private */\r\n    private static _preCursor: string;\r\n\r\n/**\r\n * @en Sets the style of the mouse cursor.\r\n * @param cursorStr The cursor style string.\r\n * For example: auto | move | no-drop | col-resize | all-scroll | pointer | not-allowed | row-resize | crosshair | progress | e-resize | ne-resize | default | text | n-resize | nw-resize | help | vertical-text | s-resize | se-resize | inherit | wait | w-resize | sw-resize\r\n * @zh 设置鼠标样式\r\n * @param cursorStr 光标样式字符串。\r\n * 例如：auto | move | no-drop | col-resize | all-scroll | pointer | not-allowed | row-resize | crosshair | progress | e-resize | ne-resize | default | text | n-resize | nw-resize | help | vertical-text | s-resize | se-resize | inherit | wait | w-resize | sw-resize\r\n */\r\n    static set cursor(cursorStr: string) {\r\n        Mouse._style.cursor = cursorStr;\r\n    }\r\n\r\n    /**\r\n     * @en The current style of the mouse cursor.\r\n     * @zh 当前鼠标光标的样式。\r\n     */\r\n    static get cursor(): string {\r\n        return Mouse._style.cursor;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        Mouse._style = Browser.document.body.style;\r\n    }\r\n\r\n    /**\r\n     * @en Hides the mouse cursor.\r\n     * @zh 隐藏鼠标光标。\r\n     */\r\n    static hide(): void {\r\n        if (Mouse.cursor != \"none\") {\r\n            Mouse._preCursor = Mouse.cursor;\r\n            Mouse.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Shows the mouse cursor.\r\n     * @zh 显示鼠标光标。\r\n     */\r\n    static show(): void {\r\n        if (Mouse.cursor == \"none\") {\r\n            if (Mouse._preCursor) {\r\n                Mouse.cursor = Mouse._preCursor;\r\n            } else {\r\n                Mouse.cursor = \"auto\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 封装弱引用WeakMap\r\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\r\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\r\n * \r\n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\r\n */\r\nexport class WeakObject {\r\n    /**是否支持WeakMap*/\r\n    static supportWeakMap = false;\r\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\r\n    static delInterval = 10 * 60 * 1000;\r\n    /**全局WeakObject单例*/\r\n    static I: WeakObject;\r\n    /**@private */\r\n    private static _maps: any[] = [];\r\n    /**@internal */\r\n    _obj: any;\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        WeakObject.I = new WeakObject();\r\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\r\n        //如果不支持，10分钟回收一次\r\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\r\n    }\r\n\r\n    /**清理缓存，回收内存*/\r\n    static clearCache(): void {\r\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\r\n            var obj = WeakObject._maps[i];\r\n            obj._obj = {};\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this._obj = {};\r\n        WeakObject._maps.push(this);\r\n    }\r\n\r\n\t/**\r\n\t * 设置缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t * @param\tvalue object对象，可被回收\r\n\t */\r\n    set(key: any, value: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\r\n                this._obj[key as any] = value;\r\n            } else {\r\n                key.$_GID || (key.$_GID = Utils.getGID());\r\n                this._obj[key.$_GID] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t */\r\n    get(key: any): any {\r\n        if (key == null) return null;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\r\n            return this._obj[key.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除缓存\r\n\t */\r\n    del(key: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\r\n            else delete this._obj[this._obj.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 是否有缓存\r\n\t */\r\n    has(key: any): boolean {\r\n        if (key == null) return false;\r\n        if (WeakObject.supportWeakMap) {\r\n            return false;\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\r\n            return this._obj[this._obj.$_GID] != null;\r\n        }\r\n    }\r\n}\r\n\r\n//WeakObject.__init__();","import { Vector3 } from \"./laya/maths/Vector3\";\r\n\r\n/**\r\n * @en Config3D class is used to create 3D initialization configuration.\r\n * @zh Config3D 类用于创建3D初始化配置。\r\n */\r\nexport class Config3D {\r\n    /**\r\n     * @en Whether to enable dynamic batch\r\n     * @zh 是否启用动态合并\r\n     */\r\n    static enableDynamicBatch: boolean = true;\r\n\r\n    /**\r\n     * @en Whether to enable static batch\r\n     * @zh 是否启用静态合并\r\n     */\r\n    static enableStaticBatch: boolean = true;\r\n\r\n    /** \r\n     * @en Whether to enable UniformBuffer\r\n     * @zh 是否启用UniformBuffer\r\n     */\r\n    static enableUniformBufferObject = true;\r\n\r\n    /**\r\n     * @en Set 3D RT resolution multiplier\r\n     * @zh 设置3D RT分辨率倍数\r\n     */\r\n    static pixelRatio: number = 1;\r\n\r\n    /**\r\n     * @en Set custom resolution\r\n     * @zh 设置自定义分辨率\r\n     */\r\n    static customResolution: boolean = false;\r\n\r\n    /**\r\n     * @en Set the maximum value cached by RendertexturePool\r\n     * @zh 设置最大RendertexturePool缓存的值\r\n     */\r\n    static defaultCacheRTMemory: number = 256;\r\n\r\n    /**\r\n     * @en Default physics function initialization memory, in MB.\r\n     * @zh 默认物理功能初始化内存，单位为M。\r\n     */\r\n    static defaultPhysicsMemory: number = 16;\r\n\r\n    /**\r\n     * @en Whether to enable multiple lights. If the scene doesn't need multiple lights, turning it off can improve performance.\r\n     * @zh 是否启用多光源。如果场景不需要多光源，关闭后可提升性能。\r\n     */\r\n    static enableMultiLight: boolean = true;\r\n\r\n    /**\r\n     * @en Maximum number of lights.\r\n     * @zh 最大光源数量。\r\n     */\r\n    static maxLightCount: number = 32;\r\n\r\n    /**\r\n     * @en Number of light clusters on X, Y, Z axes. The Z value affects the number of area lights (point lights, spotlights) that a Cluster can receive. Math.floor(2048 / lightClusterCount.z - 1) * 4 is the maximum average number of area lights each Cluster can receive. If the average number of light sources affecting each Cluster is greater than this value, the more distant Clusters will ignore the excess light effects.\r\n     * @zh X、Y、Z轴的光照集群数量。Z值会影响Cluster接受区域光（点光、聚光）影响的数量。Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量。如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\r\n     */\r\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\r\n\r\n    /**\r\n     * @en Maximum number of morph targets\r\n     * @zh 最大形变数量\r\n     */\r\n    static maxMorphTargetCount: number = 32;\r\n\r\n    /**\r\n     * @en Set resolution size (not the actual rendering resolution)\r\n     * @param width Set resolution width, unit: pixel\r\n     * @param height Set resolution height, unit: pixel\r\n     * @zh 设置分辨率大小（并不是实际渲染分辨率）\r\n     * @param width 设置分辨率宽度，单位为像素\r\n     * @param height 设置分辨率高度，单位为像素\r\n     */\r\n    static setResolution(width: number, height: number) {\r\n        Config3D.customResolution = true;\r\n        Config3D._resoluWidth = width;\r\n        Config3D._resoluHeight = height;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to use BVH culling\r\n     * @zh 是否使用BVH裁剪\r\n     */\r\n    static useBVHCull: boolean = false;\r\n\r\n    /**\r\n     * @en Maximum number of cells in a BVH node, nodes exceeding this number will be separated\r\n     * @zh 一个BVH节点最大的cell数，超过这个数会分离\r\n     */\r\n    static BVH_max_SpatialCount = 7;\r\n\r\n    /**\r\n     * @en Maximum size of BVH node\r\n     * @zh 最大BVH节点的大小\r\n     */\r\n    static BVH_limit_size = 32;\r\n\r\n    /**\r\n     * @en Minimum number of cellbuilds, if less than this number, BVH construction will not occur\r\n     * @zh 最小cellbuild数，如果小于这个数，不会进行BVH构建\r\n     */\r\n    static BVH_Min_Build_nums = 10\r\n\r\n\r\n    //----引擎内部使用,不暴露给开发者----\r\n    /**@internal */\r\n    static _uniformBlock: boolean;\r\n    /**@internal 设置分辨率宽度*/\r\n    static _resoluWidth: number = -1;\r\n    /**@internal 设置分辨率高度*/\r\n    static _resoluHeight: number = -1;\r\n    /**@internal */\r\n    static _maxAreaLightCountPerClusterAverage: number;\r\n    /**@internal */\r\n    static _multiLighting: boolean;\r\n    /**@internal 是否开启视锥裁剪调试 */\r\n    static debugFrustumCulling: boolean = false;\r\n}","import { UniformBufferObject } from \"./UniformBufferObject\";\r\n\r\n/**\r\n * 管理\r\n */\r\nexport class UniformBufferBase {\r\n    /**@internal */\r\n    _singgle: boolean;\r\n    /**@internal */\r\n    _mapArray: UniformBufferObject[];\r\n    /**@internal bind pointer*/\r\n    _glPointerID: number;\r\n    /**@internal ubo name*/\r\n    _blockName: string;\r\n    /**@internal */\r\n    _curUniformBuffer:UniformBufferObject;\r\n    /**\r\n     * 实例化一个UBOBase\r\n     * @internal\r\n     * @param name \r\n     * @param pointer \r\n     * @param single \r\n     */\r\n    constructor(name: string, pointer: number, single: boolean) {\r\n        this._mapArray = [];\r\n        this._blockName = name;\r\n        this._singgle = single;\r\n        this._glPointerID = pointer;\r\n    }\r\n\r\n    /**\r\n     * 增加Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    add(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index == -1)\r\n            this._mapArray.push(buffer);\r\n    }\r\n\r\n    /**\r\n     * 移除Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    splitBuffer(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index != -1)\r\n            this._mapArray.splice(index, 1);\r\n    }\r\n}","import { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\r\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\r\nimport { UniformBufferBase } from \"./UniformBufferBase\";\r\nimport { UnifromBufferData } from \"./UniformBufferData\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { GLBuffer } from \"../RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLBuffer\";\r\n/**\r\n * 类封装WebGL2UniformBufferObect\r\n */\r\nexport class UniformBufferObject {\r\n    static UBONAME_SCENE = \"SceneUniformBlock\";\r\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\r\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\r\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\r\n\r\n    /**@internal */\r\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\r\n\r\n    /**\r\n     * create Uniform Buffer Base\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @param bufferUsage config usage\r\n     * @param bytelength byte length\r\n     * @returns \r\n     */\r\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\r\n        if (!UniformBufferObject._Map.get(name)) {\r\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\r\n        }\r\n        let bufferBase = UniformBufferObject._Map.get(name);\r\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\r\n            return null;\r\n        } else {\r\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\r\n            if (bufferBase._singgle) bufferBase.add(ubo);\r\n            return ubo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Uniform Buffer by name\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @returns \r\n     */\r\n    static getBuffer(name: string, index: number) {\r\n        let base = UniformBufferObject._Map.get(name);\r\n        if (!base)\r\n            return null;\r\n        return base._mapArray[index];\r\n    }\r\n\r\n\r\n    _glBuffer: GLBuffer;//TODO\r\n    /**@interanl */\r\n    _glPointer: number;\r\n\r\n    /**@internal */\r\n    _updateDataInfo: UnifromBufferData;\r\n\r\n    /**@internal */\r\n    _isSingle: boolean = false;\r\n\r\n    /**buffer name */\r\n    _name: string;\r\n\r\n    /**all byte length */\r\n    byteLength: number;\r\n    bufferType: BufferTargetType;\r\n    bufferUsage: BufferUsage;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        // super(BufferTargetType.UNIFORM_BUFFER, bufferUsage);\r\n        this.bufferType = BufferTargetType.UNIFORM_BUFFER;\r\n        this.bufferUsage = bufferUsage;\r\n        this._glPointer = glPointer;\r\n        this.byteLength = byteLength;\r\n        this._name = name;\r\n        this._isSingle = isSingle;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(BufferTargetType.UNIFORM_BUFFER, bufferUsage);\r\n        this.bind();\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * differcnt UBO bind Point\r\n     * @internal\r\n     */\r\n    _bindUniformBufferBase() {\r\n        this._glBuffer.bindBufferBase(this._glPointer);\r\n    }\r\n\r\n    /**\r\n     * 绑定一段\r\n     * @internal\r\n     */\r\n    _bindBufferRange(offset: number, byteCount: number) {\r\n        this.bind();\r\n        this._glBuffer.bindBufferRange(this._glPointer, offset, byteCount);\r\n    }\r\n\r\n    /**\r\n     * 重置buffer长度\r\n     * @param bytelength \r\n     */\r\n    _reset(bytelength: number) {\r\n\r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n        //create new\r\n        this.byteLength = bytelength;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this.bufferType, this.bufferUsage);\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    bind(): boolean {\r\n        return this._glBuffer.bindBuffer();\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param buffer Float32Array data\r\n     * @param bufferOffset byteOffset\r\n     * @param byteCount  byteCount\r\n     * @returns \r\n     */\r\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\r\n        if (byteCount < 0) return;\r\n        this.bind();\r\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\r\n        if (needSubData) {\r\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\r\n            this._glBuffer.setData(subData, bufferOffset);\r\n        }\r\n        else {\r\n            this._glBuffer.setDataEx(buffer, bufferOffset, buffer.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param bufferData \r\n     */\r\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\r\n        if (this._updateDataInfo == bufferData) {\r\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\r\n            bufferData._resetUpdateFlag();\r\n        } else {\r\n            this.setData(bufferData._buffer, 0, this.byteLength);\r\n            bufferData._resetUpdateFlag();\r\n            this._updateDataInfo = bufferData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Data by subUniformBufferData\r\n     * @param bufferData sub UniformBufferData\r\n     * @param offset \r\n     */\r\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\r\n        let datalength = bufferData.getbyteLength();//offset\r\n        let reallength = bufferData._realByte;//update Count\r\n        bufferData._resetUpdateFlag();\r\n        this.bind();\r\n        this._glBuffer.setDataEx(bufferData._buffer, offset * datalength, reallength / 4);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    destroy(): void {\r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n    }\r\n}","import { Config } from \"../../Config\";\r\nimport { Config3D } from \"../../Config3D\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { UniformBufferObject } from \"../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\nimport { Event } from \"../events/Event\";\r\nimport { ShaderDefine } from \"../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\nimport { ShaderData, ShaderDataDefaultValue, ShaderDataItem, ShaderDataType } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\r\nimport { IDefineDatas } from \"../RenderDriver/RenderModuleData/Design/IDefineDatas\";\r\nimport { IRenderElement3D } from \"../RenderDriver/DriverDesign/3DRenderPass/I3DRenderPass\";\r\n\r\n\r\n/**\r\n * @en The material render mode.\r\n * @zh 材质渲染模式。\r\n */\r\nexport enum MaterialRenderMode {\r\n    /**\r\n     * @en RenderMode: Opaque\r\n     * @zh 渲染状态：不透明。\r\n     */\r\n    RENDERMODE_OPAQUE,\r\n    /**\r\n     * @en RenderMode: Alpha Testing\r\n     * @zh 渲染状态：阿尔法测试。\r\n     */\r\n    RENDERMODE_CUTOUT,\r\n    /**\r\n     * @en RenderMode: Transparent\r\n     * @zh 渲染状态：透明。\r\n     */\r\n    RENDERMODE_TRANSPARENT,\r\n    /**\r\n     * @en RenderMode: additive mixing\r\n     * @zh 渲染状态：加色法混合。\r\n     */\r\n    RENDERMODE_ADDTIVE,\r\n    /**\r\n     * @en RenderMode: Alpha Blending mixture\r\n     * @zh 渲染状态：透明混合。\r\n     */\r\n    RENDERMODE_ALPHABLENDED,\r\n    /**\r\n     * @en RenderMode: Custom\r\n     * @zh 渲染状态：自定义 \r\n     */\r\n    RENDERMODE_CUSTOME\r\n}\r\n\r\n/**\r\n * @en The Material class is used to create materials.\r\n * @zh Material 类用于创建材质。\r\n */\r\nexport class Material extends Resource implements IClone {\r\n    /** \r\n     * @en RenderQueue: Opaque\r\n     * @zh 渲染队列：不透明。\r\n     */\r\n    static RENDERQUEUE_OPAQUE: number = 2000;\r\n    /** \r\n     * @en RenderQueue: Alpha Testing\r\n     * @zh 渲染队列：阿尔法测试。\r\n     */\r\n    static RENDERQUEUE_ALPHATEST: number = 2450;\r\n    /** \r\n     * @en RenderQueue: Transparent\r\n     * @zh 渲染队列：透明。\r\n     */\r\n    static RENDERQUEUE_TRANSPARENT: number = 3000;\r\n\r\n    /**\r\n     * @en Shader variables, transparent test values.\r\n     * @zh 着色器变量,透明测试值。\r\n     */\r\n    static ALPHATESTVALUE: number;\r\n\r\n    /**\r\n     * @en Material grade shader macro definition, transparency testing.\r\n     * @zh 材质级着色器宏定义,透明测试。\r\n     */\r\n    static SHADERDEFINE_ALPHATEST: ShaderDefine;\r\n    /**\r\n     * @en Material grade shader macro definition, main texture.\r\n     * @zh 材质级着色器宏定义,主贴图。\r\n     */\r\n    static SHADERDEFINE_MAINTEXTURE: ShaderDefine;\r\n    /**\r\n     * @en Material grade shader macro definition, additive fog.\r\n     * @zh 材质级着色器宏定义,叠加雾效。\r\n     */\r\n    static SHADERDEFINE_ADDTIVEFOG: ShaderDefine;\r\n\r\n    /**\r\n     * @en Loads a material from a URL.\r\n     * @param url The URL from which to load the material.\r\n     * @param complete A callback function that is called when the material has been loaded.\r\n     * @zh 从URL加载材质。\r\n     * @param url 材质的URL。\r\n     * @param complete 加载完成后的回调函数。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, Loader.MATERIAL);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __initDefine__(): void {\r\n        Material.SHADERDEFINE_ALPHATEST = Shader3D.getDefineByName(\"ALPHATEST\");\r\n        Material.SHADERDEFINE_MAINTEXTURE = Shader3D.getDefineByName(\"MAINTEXTURE\");\r\n        Material.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\r\n        Material.ALPHATESTVALUE = Shader3D.propertyNameToID(\"u_AlphaTestValue\");\r\n        Shader3D.CULL = Shader3D.propertyNameToID(\"s_Cull\");\r\n        Shader3D.BLEND = Shader3D.propertyNameToID(\"s_Blend\");\r\n        Shader3D.BLEND_SRC = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n        Shader3D.BLEND_DST = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n        Shader3D.BLEND_SRC_RGB = Shader3D.propertyNameToID(\"s_BlendSrcRGB\");\r\n        Shader3D.BLEND_DST_RGB = Shader3D.propertyNameToID(\"s_BlendDstRGB\");\r\n        Shader3D.BLEND_SRC_ALPHA = Shader3D.propertyNameToID(\"s_BlendSrcAlpha\");\r\n        Shader3D.BLEND_DST_ALPHA = Shader3D.propertyNameToID(\"s_BlendDstAlpha\");\r\n        Shader3D.BLEND_EQUATION = Shader3D.propertyNameToID(\"s_BlendEquation\");\r\n        Shader3D.BLEND_EQUATION_RGB = Shader3D.propertyNameToID(\"s_BlendEquationRGB\");\r\n        Shader3D.BLEND_EQUATION_ALPHA = Shader3D.propertyNameToID(\"s_BlendEquationAlpha\");\r\n        Shader3D.DEPTH_TEST = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n        Shader3D.DEPTH_WRITE = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n        Shader3D.STENCIL_Ref = Shader3D.propertyNameToID(\"s_StencilRef\");\r\n        Shader3D.STENCIL_TEST = Shader3D.propertyNameToID(\"s_StencilTest\");\r\n        Shader3D.STENCIL_WRITE = Shader3D.propertyNameToID(\"s_StencilWrite\");\r\n        Shader3D.STENCIL_Op = Shader3D.propertyNameToID(\"s_StencilOp\");\r\n    }\r\n\r\n    private _matRenderNode: MaterialRenderMode;\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _shaderValues: ShaderData | null;//TODO:剥离贴图ShaderValue\r\n    private _renderQueue: number;\r\n    /** \r\n     * @en The rendering queue of the material.\r\n     * @zh 所属渲染队列.\r\n     */\r\n    public get renderQueue(): number {\r\n        return this._renderQueue;\r\n    }\r\n    public set renderQueue(value: number) {\r\n        this._renderQueue = value;\r\n        this._notifyOwnerElements();\r\n    }\r\n\r\n    /**\r\n     * @en Owner element.\r\n     * @zh 所属元素\r\n     */\r\n    ownerElements: Set<IRenderElement3D> = new Set();\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    _setOwnerElement(element: IRenderElement3D) {\r\n        this.ownerElements.add(element);\r\n        element.materialShaderData = this.shaderData;\r\n        element.materialRenderQueue = this.renderQueue;\r\n        element.subShader = this._shader.getSubShaderAt(0);\r\n        element.materialId = this.id;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    _removeOwnerElement(element: IRenderElement3D) {\r\n        this.ownerElements.delete(element);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 通知 owner element 材质数据发生改变\r\n     */\r\n    _notifyOwnerElements() {\r\n        this.ownerElements.forEach(element => {\r\n            this._setOwnerElement(element);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en The shader data.\r\n     * @zh 着色器数据。\r\n     */\r\n    get shaderData(): ShaderData {\r\n        return this._shaderValues;\r\n    }\r\n\r\n    /**\r\n     * @en The alpha test value used for the alpha test mode of the material.\r\n     * @zh 材质用于透明测试模式的透明测试值。\r\n     */\r\n    get alphaTestValue(): number {\r\n        return this._shaderValues.getNumber(Material.ALPHATESTVALUE);\r\n    }\r\n\r\n    set alphaTestValue(value: number) {\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, value);\r\n    }\r\n\r\n    /**\r\n     * @en Whether the material uses alpha cut mode.\r\n     * @zh 材质是否使用透明裁剪模式。\r\n     */\r\n    get alphaTest(): boolean {\r\n        return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    set alphaTest(value: boolean) {\r\n        if (value)\r\n            this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST);\r\n        else\r\n            this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    /**\r\n     * @en Adds a shader define to the material's shader data.\r\n     * @param define The shader define to add.\r\n     * @zh 向材质的着色器数据添加着色器宏定义。\r\n     * @param define 要添加的着色器宏定义。\r\n     */\r\n    addDefine(define: ShaderDefine): void {\r\n        this._shaderValues.addDefine(define);\r\n    }\r\n\r\n    /**\r\n     * @en Removes a shader define from the material's shader data.\r\n     * @param define The shader define to remove.\r\n     * @zh 从材质的着色器数据移除着色器宏定义。\r\n     * @param define 要移除的着色器宏定义。\r\n     */\r\n    removeDefine(define: ShaderDefine): void {\r\n        this._shaderValues.removeDefine(define);\r\n    }\r\n\r\n    /**\r\n     * @en Enables or disables a shader define.\r\n     * @param define The shader define to enable or disable.\r\n     * @param value true to add the define, false to remove it.\r\n     * @zh 开启或关闭着色器宏定义。\r\n     * @param define 要开启或关闭的着色器宏定义。\r\n     * @param value true 表示添加宏定义，false 表示移除宏定义。\r\n     */\r\n    setDefine(define: ShaderDefine, value: boolean) {\r\n        if (value) {\r\n            this._shaderValues.addDefine(define);\r\n        }\r\n        else {\r\n            this._shaderValues.removeDefine(define);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Checks if a shader define is present.\r\n     * @param define The shader define to check for.\r\n     * @returns true if the define is present, false otherwise.\r\n     * @zh 检查是否包含特定的着色器宏定义。\r\n     * @param define 要检查的着色器宏定义。\r\n     * @returns 如果存在宏定义返回 true，否则返回 false。\r\n     */\r\n    hasDefine(define: ShaderDefine): boolean {\r\n        return this._shaderValues.hasDefine(define);\r\n    }\r\n\r\n    /**\r\n     * @en Whether depth writing is enabled for this material.\r\n     * @zh 此材质是否启用深度写入。\r\n     */\r\n    get depthWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.DEPTH_WRITE);\r\n    }\r\n\r\n    set depthWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.DEPTH_WRITE, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The culling mode for this material.\r\n     * @zh 此材质的剔除方式。\r\n     */\r\n    get cull(): number {\r\n        return this._shaderValues.getInt(Shader3D.CULL);\r\n    }\r\n\r\n    set cull(value: number) {\r\n        this._shaderValues.setInt(Shader3D.CULL, value);\r\n    }\r\n\r\n    /**\r\n     * @en The blend mode for this material.\r\n     * @zh 此材质的混合方式。\r\n     */\r\n    get blend(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND);\r\n    }\r\n\r\n    set blend(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The blend source for this material.\r\n     * @zh 此材质的混合源。\r\n     */\r\n    get blendSrc(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC);\r\n    }\r\n\r\n    set blendSrc(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC, value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @en The blend destination for this material.\r\n     * @zh 此材质的混合目标。\r\n     */\r\n    get blendDst(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST);\r\n    }\r\n\r\n    set blendDst(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST, value);\r\n    }\r\n\r\n    /**\r\n     * @en The Alpha value of the blend source for this material.\r\n     * @zh 此材质的混合源的 Alpha 值。\r\n     */\r\n    public get blendSrcAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_ALPHA);\r\n    }\r\n    public set blendSrcAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * @en The RGB value of the blend source for this material.\r\n     * @zh 此材质的混合源的 RGB 值。\r\n     */\r\n    public get blendSrcRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_RGB);\r\n    }\r\n    public set blendSrcRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * @en The RGB value of the blend destination for this material.\r\n     * @zh 此材质的混合目标的 RGB 值。\r\n     */\r\n    public get blendDstRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_RGB);\r\n    }\r\n    public set blendDstRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * @en The Alpha value of the blend destination for this material.\r\n     * @zh 此材质的混合目标的 Alpha 值。\r\n     */\r\n    public get blendDstAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_ALPHA);\r\n    }\r\n    public set blendDstAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * @en The blend equation for this material.\r\n     * @zh 此材质的混合方程。\r\n     */\r\n    public get blendEquation(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION);\r\n    }\r\n    public set blendEquation(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION, value);\r\n    }\r\n\r\n    /**\r\n     * @en The RGB value of the blend equation for this material.\r\n     * @zh 此材质的混合方程的 RGB 值。\r\n     */\r\n    public get blendEquationRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_RGB);\r\n    }\r\n    public set blendEquationRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * @en The Alpha value of the blend equation for this material.\r\n     * @zh 此材质的混合方程的 Alpha 值。\r\n     */\r\n    public get blendEquationAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_ALPHA);\r\n    }\r\n    public set blendEquationAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * @en The depth test mode.\r\n     * @zh 深度测试方式。\r\n     */\r\n    get depthTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.DEPTH_TEST);\r\n    }\r\n\r\n    set depthTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.DEPTH_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * @en The stencil test mode.\r\n     * @zh 模板测试方式\r\n     */\r\n    get stencilTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_TEST);\r\n    }\r\n\r\n    set stencilTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * @en Whether to write it into the stencil\r\n     * @zh 是否写入模板。\r\n     */\r\n    get stencilWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.STENCIL_WRITE);\r\n    }\r\n\r\n    set stencilWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.STENCIL_WRITE, value);\r\n    }\r\n\r\n    /**\r\n     * @en Stencil values\r\n     * @zh 模板值\r\n     */\r\n    get stencilRef(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_Ref);\r\n    }\r\n\r\n    set stencilRef(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_Ref, value);\r\n    }\r\n\r\n    /**\r\n     * @en The stencil operation settings for testing. The vector contains (fail, zfail, zpass) .\r\n     * @zh 模板测试设置，向量包含（fail，zfail，zpass）。\r\n     */\r\n    get stencilOp(): Vector3 {\r\n        return this._shaderValues.getVector3(Shader3D.STENCIL_Op);\r\n    }\r\n\r\n    set stencilOp(value: Vector3) {\r\n        this._shaderValues.setVector3(Shader3D.STENCIL_Op, value);\r\n    }\r\n\r\n    /**\r\n     * @en The material properties.\r\n     * @zh 材质属性。\r\n     */\r\n    get MaterialProperty(): any {\r\n        let propertyMap: any = {};\r\n        var shaderValues = this._shaderValues.getData();\r\n        for (let key in shaderValues) {\r\n            propertyMap[LayaGL.renderEngine.propertyIDToName(parseInt(key))] = shaderValues[key];\r\n        }\r\n        return propertyMap;\r\n    }\r\n\r\n    /**\r\n     * @en The material defines.\r\n     * @zh 材质宏定义。\r\n     */\r\n    get MaterialDefine(): Array<string> {\r\n        let shaderDefineArray = new Array<string>();\r\n        let defineData = this._shaderValues.getDefineData();\r\n        Shader3D._getNamesByDefineData(defineData, shaderDefineArray);\r\n        return shaderDefineArray;\r\n    }\r\n\r\n    /**\r\n     * @en Material rendering mode\r\n     * @zh 材质渲染模式\r\n     */\r\n    get materialRenderMode() {\r\n        return this._matRenderNode;\r\n    }\r\n\r\n    set materialRenderMode(value: MaterialRenderMode) {\r\n        this._matRenderNode = value;\r\n        switch (value) {\r\n            case MaterialRenderMode.RENDERMODE_OPAQUE:\r\n                this.alphaTest = false;\r\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUTOUT:\r\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n                this.alphaTest = true;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_TRANSPARENT:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ADDTIVE:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ALPHABLENDED:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUSTOME:\r\n                //TODO IDE\r\n                break;\r\n            default:\r\n                console.warn(`Material : renderMode value error - (${value}).`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Creates an instance of the Material.\r\n     * @zh 创建一个Material实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._shaderValues = LayaGL.renderDeviceFactory.createShaderData(this);\r\n        this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n        this._matRenderNode = 0;\r\n        this.alphaTest = false;\r\n        this.cull = RenderState.CULL_BACK;\r\n        this.blend = RenderState.BLEND_DISABLE;\r\n        this.blendSrc = RenderState.BLENDPARAM_ONE;\r\n        this.blendDst = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcRGB = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstRGB = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcAlpha = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstAlpha = RenderState.BLENDPARAM_ZERO;\r\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n        this.depthWrite = true;\r\n        this.stencilRef = 1;\r\n        this.stencilTest = RenderState.STENCILTEST_OFF;\r\n        this.stencilWrite = false;\r\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n    }\r\n\r\n    private _bindShaderInfo(shader: Shader3D) {\r\n        //update UBOData by Shader\r\n        let subShader = shader.getSubShaderAt(0);//TODO\t\r\n        // ubo\r\n        let shaderUBODatas = subShader._uniformBufferDataMap;\r\n        if (!shaderUBODatas)\r\n            return;\r\n        for (let key of shaderUBODatas.keys()) {\r\n            //create data\r\n            let uboData = shaderUBODatas.get(key).clone();\r\n            //create UBO\r\n            let ubo = UniformBufferObject.create(key, BufferUsage.Dynamic, uboData.getbyteLength(), false);\r\n            this._shaderValues.setUniformBuffer(Shader3D.propertyNameToID(key), ubo);\r\n            this._shaderValues._addCheckUBO(key, ubo, uboData);\r\n        }\r\n    }\r\n\r\n    private _releaseUBOData() {\r\n        this._shaderValues._releaseUBOData();\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the resources.\r\n     * @zh 销毁资源。\r\n     */\r\n    protected _disposeResource(): void {\r\n        this._releaseUBOData();\r\n        this._shaderValues.destroy();\r\n        this._shaderValues = null;\r\n        this.ownerElements.clear();\r\n    }\r\n\r\n    /**\r\n     * @en The shader of the material.\r\n     * @zh 材质的着色器。\r\n     */\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * @en Gets all uniform properties of the material.\r\n     * @returns The map of uniform properties. \r\n     * @zh 获取材质的所有uniform属性。\r\n     * @returns uniform属性的映射表。\r\n     */\r\n    effectiveProperty() {\r\n        return this._shader.getSubShaderAt(0)._uniformTypeMap;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the shader by its name.\r\n     * @param name The name of the shader to set. \r\n     * @zh 通过名称设置使用Shader。\r\n     * @param name 要设置的着色器名称。\r\n     */\r\n    setShaderName(name: string): void {\r\n        this._shader = Shader3D.find(name);\r\n        if (!this._shader) {\r\n            //throw new Error(\"Material: unknown shader name.\");\r\n            console.warn(`Material: unknown shader name '${name}'`);\r\n            this._shader = Shader3D.find(\"BLINNPHONG\");\r\n        }\r\n\r\n        if (Config3D._uniformBlock) {\r\n            this._releaseUBOData();\r\n            //bind shader info\r\n            // todo 清理残留 shader data\r\n            this._bindShaderInfo(this._shader);\r\n        }\r\n\r\n        // set default value\r\n        // todo subShader 选择\r\n        let subShader = this._shader.getSubShaderAt(0);\r\n        let defaultValue = subShader._uniformDefaultValue;\r\n        let typeMap = subShader._uniformTypeMap;\r\n        this.applyUniformDefaultValue(typeMap, defaultValue);\r\n        this._notifyOwnerElements();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    applyUniformDefaultValue(typeMap: Map<string, ShaderDataType>, defaultValue: Record<string, ShaderDataItem>) {\r\n        typeMap.forEach((type, key) => {\r\n            if (defaultValue && defaultValue[key] != undefined) {\r\n                let value = defaultValue[key];\r\n                this.setShaderData(key, type, value);\r\n            }\r\n            else {\r\n                let value = ShaderDataDefaultValue(type);\r\n                if (value) {\r\n                    this.setShaderData(key, type, value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Gets the boolean uniform value by index.\r\n     * @param uniformIndex The index of the uniform.\r\n     * @returns The boolean value of the property. \r\n     * @zh 通过uniform索引获取布尔值。\r\n     * @param uniformIndex uniform索引。\r\n     * @returns uniform索引的布尔值。\r\n     */\r\n    getBoolByIndex(uniformIndex: number): boolean {\r\n        return this.shaderData.getBool(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the boolean value by uniform index.\r\n     * @param uniformIndex The index of the uniform. \r\n     * @param value The bool value to set. \r\n     * @zh 通过uniform索引设置布尔值。\r\n     * @param uniformIndex uniform索引。\r\n     * @param value 要设置的布尔值。\r\n     */\r\n    setBoolByIndex(uniformIndex: number, value: boolean) {\r\n        this.shaderData.setBool(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a boolean value of uniformIndex by property name.\r\n     * @param name The name of the property.\r\n     * @returns The boolean value.\r\n     * @zh 根据属性名称获得uniform索引的布尔值。\r\n     * @param name 属性名称。\r\n     * @returns uniform索引的布尔值。\r\n     */\r\n    getBool(name: string): boolean {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBoolByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a boolean value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The value to set.\r\n     * @zh 设置属性名称对应的布尔值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的值。\r\n     */\r\n    setBool(name: string, value: boolean) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBoolByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a float value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The float value.\r\n     * @zh 通过属性索引获得浮点值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 浮点值。\r\n     */\r\n    getFloatByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getNumber(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a float value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The value to set.\r\n     * @zh 通过属性索引设置浮点值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的值。\r\n     */\r\n    setFloatByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setNumber(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a float value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The float value.\r\n     * @zh 根据属性名称获得浮点值。\r\n     * @param name 属性名称。\r\n     * @returns 浮点值。\r\n     */\r\n    getFloat(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getFloatByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a float value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The value to set.\r\n     * @zh 设置属性名称对应的浮点值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的值。\r\n     */\r\n    setFloat(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setFloatByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets an integer value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The integer value.\r\n     * @zh 通过属性索引获得整数值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 整数值。\r\n     */\r\n    getIntByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getInt(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets an integer value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The value to set.\r\n     * @zh 通过属性索引设置整数值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的值。\r\n     */\r\n    setIntByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setInt(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets an integer value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The integer value.\r\n     * @zh 根据属性名称获得整数值。\r\n     * @param name 属性名称。\r\n     * @returns 整数值。\r\n     */\r\n    getInt(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getIntByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets an integer value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The value to set.\r\n     * @zh 设置属性名称对应的整数值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的值。\r\n     */\r\n    setInt(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setIntByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a Vector2 value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The Vector2 value.\r\n     * @zh 通过属性索引获得Vector2值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns Vector2值。\r\n     */\r\n    getVector2ByIndex(uniformIndex: number): Vector2 {\r\n        return this.shaderData.getVector2(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector2 value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The Vector2 value to set.\r\n     * @zh 通过属性索引设置Vector2值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的Vector2值。\r\n     */\r\n    setVector2ByIndex(uniformIndex: number, value: Vector2) {\r\n        this.shaderData.setVector2(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a Vector2 value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The Vector2 value.\r\n     * @zh 根据属性名称获得Vector2值。\r\n     * @param name 属性名称。\r\n     * @returns Vector2值。\r\n     */\r\n    getVector2(name: string): Vector2 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector2ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector2 value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The Vector2 value to set.\r\n     * @zh 设置属性名称对应的Vector2值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的Vector2值。\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector2ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Vector3 value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved Vector3 value.\r\n     * @zh 通过属性索引获得Vector3值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的Vector3值。\r\n     */\r\n    getVector3ByIndex(uniformIndex: number): Vector3 {\r\n        return this.shaderData.getVector3(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector3 value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The Vector3 value to set.\r\n     * @zh 通过属性索引设置Vector3值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的Vector3值。\r\n     */\r\n    setVector3ByIndex(uniformIndex: number, value: Vector3) {\r\n        this.shaderData.setVector3(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Vector3 value by its property name.\r\n     * @param name The name of the property as defined in the shader.\r\n     * @returns The retrieved Vector3 value.\r\n     * @zh 根据属性名称获得Vector3值。\r\n     * @param name 着色器中定义的属性名称。\r\n     * @returns 检索到的Vector3值。\r\n     */\r\n    getVector3(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector3ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector3 value by its property name.\r\n     * @param name The name of the property as defined in the shader.\r\n     * @param value The Vector3 value to set.\r\n     * @zh 设置属性名称对应的Vector3值。\r\n     * @param name 着色器中定义的属性名称。\r\n     * @param value 要设置的Vector3值。\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector3ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector4 value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The Vector4 value to set.\r\n     * @zh 通过属性索引设置Vector4值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的Vector4值。\r\n     */\r\n    setVector4ByIndex(uniformIndex: number, value: Vector4) {\r\n        this.shaderData.setVector(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Vector4 value by uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved Vector4 value.\r\n     * @zh 通过属性索引获取Vector4值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的Vector4值。\r\n     */\r\n    getVector4ByIndex(uniformIndex: number): Vector4 {\r\n        return this.shaderData.getVector(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Vector4 value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The Vector4 value to set.\r\n     * @zh 设置属性名称对应的Vector4值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的Vector4值。\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Vector4 value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved Vector4 value.\r\n     * @zh 根据属性名称获得Vector4值。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的Vector4值。\r\n     */\r\n    getVector4(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Color value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved Color value.\r\n     * @zh 通过属性索引获得颜色值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的颜色值。\r\n     */\r\n    getColorByIndex(uniformIndex: number): Color {\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Color value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The Color value to set.\r\n     * @zh 通过属性索引设置颜色值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的颜色值。\r\n     */\r\n    setColorByIndex(uniformIndex: number, value: Color) {\r\n        this.shaderData.setColor(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Color value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved Color value.\r\n     * @zh 根据属性名称获得颜色值。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的颜色值。\r\n     */\r\n    getColor(name: string): Color {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Color value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The Color value to set.\r\n     * @zh 设置属性名称对应的颜色值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的颜色值。\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setColorByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Matrix4x4 value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved Matrix4x4 value.\r\n     * @zh 通过属性索引获得4x4矩阵值。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的4x4矩阵值。\r\n     */\r\n    getMatrix4x4ByIndex(uniformIndex: number): Matrix4x4 {\r\n        return this.shaderData.getMatrix4x4(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Matrix4x4 value by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The Matrix4x4 value to set.\r\n     * @zh 通过属性索引设置4x4矩阵值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的4x4矩阵值。\r\n     */\r\n    setMatrix4x4ByIndex(uniformIndex: number, value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a Matrix4x4 value by property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved Matrix4x4 value.\r\n     * @zh 根据属性名称获得4x4矩阵值。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的4x4矩阵值。\r\n     */\r\n    getMatrix4x4(name: string): Matrix4x4 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix4x4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a Matrix4x4 value by property name.\r\n     * @param name The name of the property.\r\n     * @param value The Matrix4x4 value to set.\r\n     * @zh 设置属性名称对应的4x4矩阵值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的4x4矩阵值。\r\n     */\r\n    setMatrix4x4(name: string, value: Matrix4x4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setMatrix4x4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a 3x3 matrix value by its index.\r\n     * @param index The index of the matrix within the shader data.\r\n     * @returns The retrieved 3x3 matrix value.\r\n     * @zh 通过索引获取3x3矩阵值。\r\n     * @param index 着色器数据中矩阵的索引。\r\n     * @returns 检索到的3x3矩阵值。\r\n     */\r\n    getMatrix3x3ByIndex(index: number) {\r\n        return this.shaderData.getMatrix3x3(index);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a 3x3 matrix value by its index.\r\n     * @param index The index of the matrix within the shader data.\r\n     * @param value The 3x3 matrix value to set.\r\n     * @zh 通过索引设置3x3矩阵值。\r\n     * @param index 着色器数据中矩阵的索引。\r\n     * @param value 要设置的3x3矩阵值。\r\n     */\r\n    setMatrix3x3ByIndex(index: number, value: Matrix3x3) {\r\n        this.shaderData.setMatrix3x3(index, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a 3x3 matrix value by its property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved 3x3 matrix value.\r\n     * @zh 根据属性名称获取3x3矩阵值。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的3x3矩阵值。\r\n     */\r\n    getMatrix3x3(name: string): Matrix3x3 {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix3x3ByIndex(index);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a 3x3 matrix value by its property name.\r\n     * @param name The name of the property.\r\n     * @param value The 3x3 matrix value to set.\r\n     * @zh 设置属性名称对应的3x3矩阵值。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的3x3矩阵值。\r\n     */\r\n    setMatrix3x3(name: string, value: Matrix3x3) {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        this.setMatrix3x3ByIndex(index, value);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a texture by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param texture The texture to set.\r\n     * @zh 通过属性索引设置纹理。\r\n     * @param uniformIndex 属性索引。\r\n     * @param texture 要设置的纹理。\r\n     */\r\n    setTextureByIndex(uniformIndex: number, texture: BaseTexture) {\r\n        this.shaderData.setTexture(uniformIndex, texture);\r\n        if (texture && !texture._texture)//贴图为加载完，需要重设\r\n            texture.once(Event.READY, this, this.reSetTexture, [uniformIndex, texture]);\r\n    }\r\n\r\n    private reSetTexture(uniformIndex: number, texture: BaseTexture) {\r\n        this.setTextureByIndex(uniformIndex, texture);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a texture by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved texture.\r\n     * @zh 通过属性索引获得纹理。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的纹理。\r\n     */\r\n    getTextureByIndex(uniformIndex: number) {\r\n        return this.shaderData.getTexture(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a texture by property name.\r\n     * @param name The name of the property.\r\n     * @param texture The texture to set.\r\n     * @zh 根据属性名称设置纹理。\r\n     * @param name 属性名称。\r\n     * @param texture 要设置的纹理。\r\n     */\r\n    setTexture(name: string, texture: BaseTexture) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setTextureByIndex(uniformIndex, texture);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a texture by property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved texture.\r\n     * @zh 根据属性名称获得纹理。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的纹理。\r\n     */\r\n    getTexture(name: string): BaseTexture {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getTextureByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a buffer by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @returns The retrieved buffer.\r\n     * @zh 通过属性索引获得Buffer。\r\n     * @param uniformIndex 属性索引。\r\n     * @returns 检索到的Buffer。\r\n     */\r\n    getBufferByIndex(uniformIndex: number): Float32Array {\r\n        return this.shaderData.getBuffer(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a buffer by its uniform index.\r\n     * @param uniformIndex The index of the property.\r\n     * @param value The buffer to set.\r\n     * @zh 通过属性索引设置Buffer。\r\n     * @param uniformIndex 属性索引。\r\n     * @param value 要设置的Buffer值。\r\n     */\r\n    setBufferByIndex(uniformIndex: number, value: Float32Array) {\r\n        this.shaderData.setBuffer(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a buffer by property name.\r\n     * @param name The name of the property.\r\n     * @returns The retrieved buffer.\r\n     * @zh 根据属性名称获得Buffer。\r\n     * @param name 属性名称。\r\n     * @returns 检索到的Buffer。\r\n     */\r\n    getBuffer(name: string): Float32Array {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBufferByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * @en Sets a buffer by property name.\r\n     * @param name The name of the property.\r\n     * @param value The buffer to set.\r\n     * @zh 根据属性名称设置Buffer。\r\n     * @param name 属性名称。\r\n     * @param value 要设置的Buffer值。\r\n     */\r\n    setBuffer(name: string, value: Float32Array) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBufferByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the attribute value of ShaderData by uniform index.\r\n     * @param uniformIndex The index of the attribute.\r\n     * @param type The type of the value to be set.\r\n     * @param value The value to be set.\r\n     * @zh 通过属性索引设置ShaderData的属性值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param type 要设置的值的类型。\r\n     * @param value 要设置的值。\r\n     */\r\n    setShaderDataByIndex(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem) {\r\n        this.shaderData.setShaderData(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the attribute value of ShaderData by property name.\r\n     * @param name The name of the property.\r\n     * @param type The type of the value to be set.\r\n     * @param value The value to be set.\r\n     * @zh 根据属性名称设置ShaderData的属性值。\r\n     * @param name 属性名称。\r\n     * @param type 要设置的值的类型。\r\n     * @param value 要设置的值。\r\n     */\r\n    setShaderData(name: string, type: ShaderDataType, value: ShaderDataItem) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setShaderDataByIndex(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the attribute value of ShaderData by property name.\r\n     * @param name The name of the property.\r\n     * @param type The type of the value to be retrieved.\r\n     * @returns The retrieved ShaderData attribute value.\r\n     * @zh 根据属性名称获得ShaderData的属性值。\r\n     * @param name 属性名称。\r\n     * @param type 要检索的值的类型。\r\n     * @returns 检索到的ShaderData属性值。\r\n     */\r\n    getShaderData(name: string, type: ShaderDataType): ShaderDataItem {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getShaderDataByIndex(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the attribute value of ShaderData by uniform index.\r\n     * @param uniformIndex The index of the attribute.\r\n     * @param type The type of the value to be retrieved.\r\n     * @returns The retrieved ShaderData attribute value.\r\n     * @zh 通过属性索引获得ShaderData的属性值。\r\n     * @param uniformIndex 属性索引。\r\n     * @param type 要检索的值的类型。\r\n     * @returns 检索到的ShaderData属性值。\r\n     */\r\n    getShaderDataByIndex(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\r\n        return this._shaderValues.getShaderData(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * @en Clones the current material to destination material object.\r\n     * @param destObject The destination material object.\r\n     * @zh 克隆当前材质到目标材质对象。\r\n     * @param destObject 目标材质对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destBaseMaterial: Material = (<Material>destObject);\r\n        destBaseMaterial.name = this.name;\r\n        destBaseMaterial.renderQueue = this.renderQueue;\r\n        destBaseMaterial.setShaderName(this._shader._name);\r\n        this._shaderValues.cloneTo(destBaseMaterial._shaderValues);\r\n    }\r\n\r\n    /**\r\n     * @en Creates a clone of the current material.\r\n     * @returns A new material instance that is a clone of the current material.\r\n     * @zh 创建当前材质的克隆副本。\r\n     * @returns 一个克隆自当前材质的新材质实例。\r\n     */\r\n    clone(): any {\r\n        var dest: Material = new Material();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    //--------------------------------------------兼容-------------------------------------------------\r\n\r\n    /**\r\n     * @en The material define.\r\n     * @zh 材质宏\r\n     */\r\n    get _defineDatas(): IDefineDatas {\r\n        return this._shaderValues.getDefineData();\r\n    }\r\n\r\n    /**\r\n     * @en Compatible with old parsing end events\r\n     * @zh 兼容老的解析结束事件\r\n     */\r\n    oldparseEndEvent() {\r\n        //TODO\r\n    }\r\n}\r\n\r\n\r\n","﻿import { ILaya } from \"./ILaya\";\r\nimport { Input } from \"./laya/display/Input\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\nimport { InputManager } from \"./laya/events/InputManager\";\r\nimport { SoundManager } from \"./laya/media/SoundManager\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\r\nimport { Render } from \"./laya/renders/Render\";\r\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\r\nimport { Context } from \"./laya/renders/Context\";\r\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { CacheManger } from \"./laya/utils/CacheManger\";\r\nimport { Timer } from \"./laya/utils/Timer\";\r\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\r\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\r\nimport { WebGL } from \"./laya/webgl/WebGL\";\r\nimport { Mouse } from \"./laya/utils/Mouse\";\r\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\r\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\r\nimport { WeakObject } from \"./laya/utils/WeakObject\";\r\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\r\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\r\nimport { URL } from \"./laya/net/URL\";\r\nimport { RunDriver } from \"./laya/utils/RunDriver\";\r\nimport { Config } from \"./Config\";\r\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\r\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\r\nimport { Material } from \"./laya/resource/Material\";\r\nimport { VertexElementFormat } from \"./laya/renders/VertexElementFormat\";\r\nimport { DrawStyle } from \"./laya/webgl/canvas/DrawStyle\";\r\nimport { Stat } from \"./laya/utils/Stat\";\r\nimport { RenderPassStatisticsInfo } from \"./laya/RenderEngine/RenderEnum/RenderStatInfo\";\r\n\r\n/**\r\n * @en Laya is the reference entry for global objects.\r\n * @en The Laya class refers to some commonly used global objects, such as Laya.stage: stage, Laya.timer: time manager, Laya.loader: loading manager. Pay attention to case when using.\r\n * @zh Laya是全局对象的引用入口集。\r\n * @zh Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\r\n */\r\nexport class Laya {\r\n    /**\r\n     * @en Reference to the stage object.\r\n     * @zh 舞台对象的引用。\r\n     */\r\n    static stage: Stage = null;\r\n\r\n    /**\r\n     * @ignore \r\n     * @en System clock manager, used by the engine internally.\r\n     * @zh 系统时钟管理器，引擎内部使用。\r\n     */\r\n    static systemTimer: Timer = null;\r\n    /**\r\n     * @ignore\r\n     * @en physics clock manager for components.\r\n     * @zh 组件的物理时钟管理器\r\n     */\r\n    static physicsTimer: Timer = null;\r\n    /**\r\n     * @en Main game timer, also manages scene, animation, tween effects clock. By controlling this timer's scale, fast-forward and slow-motion effects can be achieved.\r\n     * @zh 游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果。\r\n     */\r\n    static timer: Timer = null;\r\n    /**\r\n     * @en Reference to the loading manager.\r\n     * @zh 加载管理器的引用。\r\n     */\r\n    static loader: Loader = null;\r\n    /**\r\n     * @ignore\r\n     * @en Reference to the Render class.\r\n     * @zh Render类的引用。\r\n     */\r\n    static render: Render;\r\n    private static _inited = false;\r\n    private static _initCallbacks: Array<() => void | Promise<void>> = [];\r\n    private static _beforeInitCallbacks: Array<(stageConfig: IStageConfig) => void | Promise<void>> = [];\r\n    private static _afterInitCallbacks: Array<() => void | Promise<void>> = [];\r\n    private static _evcode: string = \"eva\" + \"l\";\r\n    private static isNativeRender_enable: boolean = false;\r\n\r\n    /**\r\n     * @en Initialize the engine. To use the engine, you need to initialize it first.\r\n     * @param stageConfig Stage settings used to initialize the engine\r\n     * @zh 初始化引擎。使用引擎需要先初始化引擎。\r\n     * @param stageConfig 初始化引擎的舞台设置。\r\n     */\r\n    static init(stageConfig?: IStageConfig): Promise<void>;\r\n\r\n    /**\r\n     * @en Initialize the engine. To use the engine, you need to initialize it first.\r\n     * @param width The width of the initialized game window, also known as design width.\r\n     * @param height The height of the initialized game window, also known as design height.\r\n     * @zh 初始化引擎。使用引擎需要先初始化引擎。\r\n     * @param width 初始化的游戏窗口宽度，又称设计宽度。\r\n     * @param height 初始化的游戏窗口高度，又称设计高度。\r\n     */\r\n    static init(width: number, height: number): Promise<void>;\r\n    static init(...args: any[]): Promise<void> {\r\n        if (Laya._inited)\r\n            return Promise.resolve();\r\n        Laya._inited = true;\r\n        Stat.renderPassStatArray.length = RenderPassStatisticsInfo.RenderPassStatisticCount;\r\n        if (!WebGL.enable())\r\n            throw new Error(\"Must support webGL!\");\r\n\r\n        let stageConfig: IStageConfig;\r\n        if (typeof (args[0]) === \"number\") {\r\n            stageConfig = {\r\n                designWidth: args[0],\r\n                designHeight: args[1]\r\n            };\r\n        }\r\n        else\r\n            stageConfig = args[0];\r\n\r\n        Browser.__init__();\r\n        URL.__init__();\r\n\r\n        let laya3D = (<any>window)[\"Laya3D\"];\r\n        if (laya3D) {\r\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\r\n            Render.is3DMode = true;\r\n        }\r\n\r\n        // 创建主画布\r\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\r\n        let mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\r\n        //Render._mainCanvas = mainCanv;\r\n        Laya._setStyleInfo(mainCanv);\r\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame && !Browser.onTBMiniGame) {\r\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\r\n        }\r\n\r\n        Browser.canvas = new HTMLCanvas(true);\r\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\r\n        Browser.supportWebAudio = SoundManager.__init__();\r\n        Browser.supportLocalStorage = LocalStorage.__init__();\r\n\r\n        systemTimer = new Timer(false);\r\n        physicsTimer = new Timer(false);\r\n        timer = new Timer(false);\r\n        loader = new Loader();\r\n\r\n        Laya.systemTimer = Timer.gSysTimer = systemTimer;\r\n        Laya.timer = timer;\r\n        Laya.physicsTimer = physicsTimer;\r\n        Laya.loader = loader;\r\n\r\n        ILaya.systemTimer = systemTimer;\r\n        ILaya.physicsTimer = physicsTimer;\r\n        ILaya.timer = timer;\r\n        ILaya.loader = loader;\r\n\r\n        WeakObject.__init__();\r\n        Mouse.__init__();\r\n\r\n        CacheManger.beginCheck();\r\n\r\n        let steps: Array<() => any> = [];\r\n\r\n        if (LayaEnv.beforeInit)\r\n            steps.push(() => LayaEnv.beforeInit(stageConfig));\r\n\r\n        //beforeInitCallbacks 是按顺序执行\r\n        Laya._beforeInitCallbacks.forEach(func => steps.push(() => func(stageConfig)));\r\n\r\n\r\n        steps.push(() => LayaGL.renderOBJCreate.createEngine(null, Browser.mainCanvas));\r\n        steps.push(() => Laya.initRender2D(stageConfig));\r\n        if (laya3D)\r\n            steps.push(() => laya3D.__init__());\r\n\r\n        //initCallbacks 是并发执行\r\n        steps.push(() => Promise.all(Laya._initCallbacks.map(func => func())));\r\n\r\n        //afterInitCallbacks 是按顺序执行\r\n        steps.push(() => {\r\n            let p = Promise.resolve();\r\n            for (let func of Laya._afterInitCallbacks)\r\n                p = p.then(func);\r\n            return p;\r\n        });\r\n\r\n        if (LayaEnv.afterInit)\r\n            steps.push(() => LayaEnv.afterInit());\r\n\r\n        let p = Promise.resolve();\r\n        for (let step of steps)\r\n            p = p.then(step);\r\n\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param mainCanv \r\n     */\r\n    static _setStyleInfo(mainCanv: HTMLCanvas): void {\r\n        let style: any = mainCanv.source.style;\r\n        style.position = 'absolute';\r\n        style.top = style.left = \"0px\";\r\n        style.background = \"#000000\";\r\n    }\r\n\r\n    /**\r\n     * @en Initialize 2D rendering.\r\n     * @param stageConfig Settings used to initialize 2D rendering.\r\n     * @zh 初始化2D渲染。\r\n     * @param stageConfig 用于初始化2D的设置。\r\n     */\r\n    static initRender2D(stageConfig: IStageConfig) {\r\n        stage = ((<any>window)).stage = ILaya.stage = Laya.stage = new Stage();\r\n\r\n        VertexElementFormat.__init__();\r\n        Shader3D.init();\r\n        MeshQuadTexture.__int__();\r\n        MeshVG.__init__();\r\n        MeshTexture.__init__();\r\n\r\n        Laya.render = Laya.createRender();\r\n        render = Laya.render;\r\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\r\n        if (stageConfig.scaleMode)\r\n            stage.scaleMode = stageConfig.scaleMode;\r\n        if (stageConfig.screenMode)\r\n            stage.screenMode = stageConfig.screenMode;\r\n        if (stageConfig.alignV)\r\n            stage.alignV = stageConfig.alignV;\r\n        if (stageConfig.alignH)\r\n            stage.alignH = stageConfig.alignH;\r\n        if (Config.isAlpha)\r\n            stage.bgColor = \"#000000\";\r\n        else if (stageConfig.backgroundColor)\r\n            stage.bgColor = stageConfig.backgroundColor;\r\n\r\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\r\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\r\n        }\r\n\r\n        RenderStateContext.__init__();\r\n        RenderSprite.__init__();\r\n        Material.__initDefine__();\r\n        DrawStyle._Defaultinit();\r\n        InputManager.__init__(stage, Render.canvas);\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            Input.isAppUseNewInput = true;\r\n        }\r\n        Input.__init__();\r\n        SoundManager.autoStopMusic = true;\r\n        //Init internal 2D Value2D\r\n        Value2D._initone(RenderSpriteData.Texture2D, TextureSV);\r\n        Value2D._initone(RenderSpriteData.Primitive, PrimitiveSV);\r\n    }\r\n\r\n    /**\r\n     * hook function\r\n     * @internal\r\n     */\r\n    static createRender(): Render {\r\n        return new Render(0, 0, Browser.mainCanvas);\r\n    }\r\n\r\n    /**\r\n     * @en Pop up error information, suitable for mobile devices and other convenient debugging.\r\n     * @param value Indicates whether to capture global errors and display a prompt. When set to true, detailed error stacks can be thrown in a pop-up window if unknown errors occur. The default is false.\r\n     * @zh 弹出错误信息，适用于移动设备等不方便调试的时候，\r\n     * @param value 表示是否捕获全局错误并弹出提示。设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈,默认为false。\r\n     */\r\n    static alertGlobalError(value: boolean) {\r\n        var erralert: number = 0;\r\n        if (value) {\r\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\r\n                if (erralert++ < 5 && detail)\r\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\r\n            }\r\n        } else {\r\n            Browser.window.onerror = null;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _runScript(script: string): any {\r\n        return Browser.window[Laya._evcode](script);\r\n    }\r\n\r\n    /**\r\n     * @en Enable DebugPanel.\r\n     * @param debugJsPath Path to the laya.debugtool.js file.\r\n     * @zh 开启DebugPanel。\r\n     * @param debugJsPath laya.debugtool.js文件路径。\r\n     */\r\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\r\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\r\n            var script: any = Browser.createElement(\"script\");\r\n            script.onload = function (): void {\r\n                (window as any)['Laya'][\"DebugPanel\"].enable();\r\n            }\r\n            script.src = debugJsPath;\r\n            Browser.document.body.appendChild(script);\r\n        } else {\r\n            (window as any)['Laya'][\"DebugPanel\"].enable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Adds an initialization function. Various engine modules, such as physics, pathfinding, etc., can register their initialization logic here if needed. \r\n     * Developers typically do not use this directly. All registered callbacks are executed in parallel.\r\n     * @param callback The initialization function of the module.\r\n     * @zh 新增初始化函数，引擎各个模块，例如物理，寻路等，如果有初始化逻辑可以在这里注册初始化函数。\r\n     * 开发者一般不直接使用。所有注册的回调是并行执行。\r\n     * @param callback 模块的初始化函数。\r\n     */\r\n    static addInitCallback(callback: () => void | Promise<void>) {\r\n        Laya._initCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * @en Execute custom logic before engine initialization. At this time, the Stage has not been created yet, so you can modify stageConfig to implement dynamic stage configuration. All registered callbacks are executed in the order of registration.\r\n     * @param callback The initialization function of the module.\r\n     * @zh 在引擎初始化前执行自定义逻辑。\r\n     * 此时 Stage 尚未创建，可以修改 stageConfig 实现动态舞台配置。所有注册的回调按注册顺序依次执行。\r\n     * @param callback 模块的初始化函数。\r\n     */\r\n    static addBeforeInitCallback(callback: (stageConfig: IStageConfig) => void | Promise<void>): void {\r\n        Laya._beforeInitCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * @en Execute custom logic after engine initialization. All registered callbacks are executed in the order of registration.\r\n     * @param callback The initialization function of the module.\r\n     * @zh 在引擎初始化后执行自定义逻辑。所有注册的回调按注册顺序依次执行。\r\n     * @param callback 模块的初始化函数。\r\n     */\r\n    static addAfterInitCallback(callback: () => void | Promise<void>): void {\r\n        Laya._afterInitCallbacks.push(callback);\r\n    }\r\n}\r\n\r\nILaya.Laya = Laya;\r\nILaya.Loader = Loader;\r\nILaya.Context = Context;\r\nILaya.Browser = Browser;\r\n\r\n/**@internal */\r\nexport var init = Laya.init;\r\n/**@internal */\r\nexport var stage: Stage;\r\n/**@internal */\r\nexport var systemTimer: Timer;\r\n/**@internal */\r\nexport var physicsTimer: Timer;\r\n/**@internal */\r\nexport var timer: Timer;\r\n/**@internal */\r\nexport var loader: Loader;\r\n/**@internal */\r\nexport var render: Render;\r\n/**@internal */\r\nexport var alertGlobalError = Laya.alertGlobalError;\r\n/**@internal */\r\nexport var enableDebugPanel = Laya.enableDebugPanel;\r\n\r\nexport var addInitCallback = Laya.addInitCallback;\r\nexport var addBeforeInitCallback = Laya.addBeforeInitCallback;\r\nexport var addAfterInitCallback = Laya.addAfterInitCallback;","import { Laya } from \"../../Laya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IRenderEngine } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderEngine\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { Config } from \"./../../Config\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Context } from \"./Context\";\r\n\r\n/**\r\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\r\n */\r\nexport class Render {\r\n    /** @internal */\r\n    static _context: Context;\r\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\r\n    static _mainCanvas: HTMLCanvas;\r\n    /** 表示是否是 3D 模式。*/\r\n    static is3DMode: boolean;\r\n    /**自定义帧循环 */\r\n    static _customRequestAnimationFrame: any;\r\n    /**帧循环函数 */\r\n    static _loopFunction: any;\r\n\r\n    /** 当前的帧数 */\r\n    private static lastFrm = 0;\r\n    /** 第一次运行标记 */\r\n    private _first = true;\r\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\r\n    private _startTm = 0;\r\n\r\n    /** @internal */\r\n    private static ifps = 1000 / 60;\r\n\r\n    static _Render: Render;\r\n\r\n    static customRequestAnimationFrame(value: any, loopFun: any) {\r\n        Render._customRequestAnimationFrame = value;\r\n        Render._loopFunction = loopFun;\r\n    }\r\n\r\n    private static _customEngine: IRenderEngine;\r\n    static set customRenderEngine(engine: IRenderEngine) {\r\n        Render._customEngine = engine;\r\n    }\r\n    static get customRenderEngine() {\r\n        return Render._customEngine;\r\n    }\r\n\r\n    // static clearResources(){\r\n    //     Laya.timer.frameOnce(2, this, () => {\r\n\r\n    //         EngineUtils.gc();\r\n    //     })\r\n    // }\r\n\r\n    static gc() {\r\n        if (LayaEnv.isConch) {\r\n            (window as any).gc({ type: 'major', execution: 'async' });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化引擎。\r\n     * @param\twidth 游戏窗口宽度。\r\n     * @param\theight\t游戏窗口高度。\r\n     */\r\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\r\n        Render._Render = this;\r\n        Render._mainCanvas = mainCanv;\r\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\r\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\r\n        source.id = \"layaCanvas\";\r\n        source.width = width;\r\n        source.height = height;\r\n        if (LayaEnv.isConch) {\r\n            document.body.appendChild(source);\r\n            Render._mainCanvas.getContext(\"2d\");\r\n        }\r\n\r\n        this.initRender(Render._mainCanvas, width, height);\r\n        if (Config._enableWindowRAFFunction) {\r\n            window.requestAnimationFrame(loop);\r\n        } else {\r\n            requestAnimationFrame(loop);\r\n        }\r\n        let me = this;\r\n        let lastFrmTm = performance.now();\r\n        let fps = Config.FPS;\r\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\r\n        function loop(stamp: number) {\r\n            //let perf = PerfHUD.inst;\r\n            let sttm = performance.now();\r\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\r\n            lastFrmTm = sttm;\r\n            if (me._first) {\r\n                // 把starttm转成帧对齐\r\n                me._startTm = Math.floor(stamp / ifps) * ifps;\r\n                me._first = false;\r\n            }\r\n            // 与第一帧开始时间的delta\r\n            stamp -= me._startTm;\r\n            // 计算当前帧数\r\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\r\n            // 是否已经跨帧了\r\n            let dfrm = frm - Render.lastFrm;\r\n            //去掉了 LayaEnv.isConch 。不知道会不会有问题\r\n            if (dfrm > 0 || !Config.fixedFrames) {\r\n                //不限制\r\n                Render.lastFrm = frm;\r\n                ILaya.stage._loop();\r\n            }\r\n            //perf && perf.updateValue(1, performance.now()-sttm);\r\n\r\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\r\n                Render._customRequestAnimationFrame(Render._loopFunction);\r\n            }\r\n            else {\r\n                if (Config._enableWindowRAFFunction) {\r\n                    window.requestAnimationFrame(loop);\r\n                } else {\r\n                    requestAnimationFrame(loop);\r\n                }\r\n            }\r\n        }\r\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\r\n        LayaEnv.isConch && Laya.timer.frameOnce(2, null, Render.gc);\r\n    }\r\n\r\n    /**@private */\r\n    private _timeId: number = 0;\r\n\r\n    /**@private */\r\n    /**\r\n     * @performanceTool  func count \r\n     */\r\n    private _onVisibilitychange(): void {\r\n        if (!ILaya.stage.isVisibility) {\r\n            this._timeId = window.setInterval(this._enterFrame, 1000);\r\n        } else if (this._timeId != 0) {\r\n            window.clearInterval(this._timeId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取帧对齐的时间。\r\n     * 用这个做动画的时间参数会更平滑。\r\n     * 从render构造开始算起。\r\n     * @returns \r\n     */\r\n    static vsyncTime() {\r\n        return Render.lastFrm * Render.ifps;\r\n    }\r\n\r\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\r\n\r\n        canvas.size(w, h);\t//在ctx之后调用。\r\n        ShaderDefines2D.__init__();\r\n        Context.__init__();\r\n\r\n        var ctx = new Context();\r\n        ctx.isMain = true;\r\n        Render._context = ctx;\r\n        canvas._setContext(ctx);\r\n\r\n\r\n        Shader2D.__init__();\r\n        BlendMode._init_();\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    private _enterFrame(e: any = null): void {\r\n        ILaya.stage._loop();\r\n    }\r\n\r\n    /** 目前使用的渲染器。*/\r\n    static get context(): Context {\r\n        return Render._context;\r\n    }\r\n\r\n    /** 渲染使用的原生画布引用。 */\r\n    static get canvas(): any {\r\n        return Render._mainCanvas.source;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport const TypedArrayClasses: Record<string, any> = {\r\n    \"Int8Array\": Int8Array,\r\n    \"Uint8Array\": Uint8Array,\r\n    \"Int16Array\": Int16Array,\r\n    \"Uint16Array\": Uint16Array,\r\n    \"Int32Array\": Int32Array,\r\n    \"Uint32Array\": Uint32Array,\r\n    \"Float32Array\": Float32Array,\r\n    \"Float64Array\": Float64Array\r\n};\r\n\r\nexport interface IDecodeObjOptions {\r\n    outErrors?: Array<string>;\r\n    getNodeByRef?: (id: string | string[]) => Node;\r\n    getNodeData?: (node: Node) => any;\r\n}\r\n\r\nvar _errors: Array<string>;\r\nvar _getNodeByRef: (id: string | string[]) => Node;\r\nvar _getNodeData: (node: Node) => any;\r\n\r\nexport class SerializeUtil {\r\n    public static isDeserializing = false;\r\n\r\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\r\n        if (options) {\r\n            _errors = options.outErrors;\r\n            _getNodeByRef = options.getNodeByRef;\r\n            _getNodeData = options.getNodeData;\r\n        }\r\n        else {\r\n            _errors = null;\r\n            _getNodeByRef = null;\r\n            _getNodeData = null;\r\n        }\r\n\r\n        SerializeUtil.isDeserializing = true;\r\n        try {\r\n            return SerializeUtil._decodeObj(data, obj);\r\n        } finally {\r\n            SerializeUtil.isDeserializing = false;\r\n        }\r\n    }\r\n\r\n    private static _decodeObj(data: any, obj?: any): any {\r\n        if (data == null)\r\n            return null;\r\n        else if (Array.isArray(data)) {\r\n            let arr: any[] = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let v = data[i];\r\n                if (v != null) {\r\n                    try {\r\n                        arr[i] = SerializeUtil._decodeObj(v);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                        arr[i] = null;\r\n                    }\r\n                }\r\n                else\r\n                    arr[i] = null;\r\n            }\r\n            return arr;\r\n        }\r\n        else if (typeof (data) === \"object\") {\r\n            if (data._$uuid != null) {\r\n                let url = URL.getResURLByUUID(data._$uuid);\r\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n            }\r\n\r\n            if (data._$ref != null) {\r\n                let node = _getNodeByRef?.(data._$ref);\r\n                if (node && data._$type) {\r\n                    let cls: any = ClassUtils.getClass(data._$type);\r\n                    if (cls)\r\n                        return node.getComponent(cls);\r\n                    else\r\n                        return null;\r\n                }\r\n                else\r\n                    return node;\r\n            }\r\n\r\n            let type = data._$type;\r\n\r\n            if (type === \"any\") {\r\n                if (data._$type)\r\n                    return data.value;\r\n                else\r\n                    return data;\r\n            }\r\n\r\n            let typedArray = TypedArrayClasses[type];\r\n            if (typedArray != null) {\r\n                if (data._$type)\r\n                    return new typedArray(data.value);\r\n                else\r\n                    return new typedArray(data);\r\n            }\r\n\r\n            if (!obj) {\r\n                let cls: any = ClassUtils.getClass(type);\r\n                if (!cls) {\r\n                    //this._errors.push(new Error(`missing type '${type}'`));\r\n                    return null;\r\n                }\r\n\r\n                obj = new cls();\r\n            }\r\n\r\n            for (let key in data) {\r\n                if (key.startsWith(\"_$\"))\r\n                    continue;\r\n\r\n                let v = data[key];\r\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\r\n                    || v._$type || v._$uuid || v._$ref) {\r\n                    try {\r\n                        let v2 = SerializeUtil._decodeObj(v);\r\n                        obj[key] = v2;\r\n\r\n                        if (v2 != null && v != null && v._$tmpl)\r\n                            obj[v._$tmpl] = _getNodeData(v2);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                    }\r\n                }\r\n                else {\r\n                    let childObj = obj[key];\r\n                    if (childObj) {\r\n                        try {\r\n                            SerializeUtil._decodeObj(v, childObj);\r\n                        }\r\n                        catch (error: any) {\r\n                            if (_errors)\r\n                                _errors.push(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (obj.onAfterDeserialize)\r\n                obj.onAfterDeserialize();\r\n\r\n            return obj;\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    static getLoadTypeByEngineType(type: string) {\r\n        switch (type) {\r\n            case \"Texture2D\":\r\n            case \"RenderTexture\":\r\n                return Loader.TEXTURE2D;\r\n            case \"TextureCube\":\r\n                return Loader.TEXTURECUBE;\r\n            case \"Prefab\":\r\n                return Loader.HIERARCHY;\r\n            case \"Material\":\r\n                return Loader.MATERIAL;\r\n            case \"Mesh\":\r\n                return Loader.MESH;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    static bakeOverrideData(overrideData: any) {\r\n        let dataMap: Record<string, Array<any>> = null;\r\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\r\n            let arr = overrideData[i];\r\n            if (arr && arr.length > 0) {\r\n                for (let d of arr) {\r\n                    let od = d._$override || d._$parent;\r\n                    let k: string;\r\n                    if (Array.isArray(od))\r\n                        k = od[n - i - 1];\r\n                    else if (i == n - 1)\r\n                        k = od;\r\n\r\n                    if (k != null) {\r\n                        if (!dataMap) dataMap = {};\r\n                        let arr2 = dataMap[k];\r\n                        if (!arr2)\r\n                            dataMap[k] = arr2 = [];\r\n                        arr2.push(n - i, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataMap;\r\n    }\r\n\r\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\r\n        function test(obj: any) {\r\n            if (overrideDataMap[obj._$id])\r\n                return true;\r\n\r\n            let children: Array<any> = obj._$child;\r\n            if (children && children.find(child => test(child)))\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        function cloneTree(obj: any) {\r\n            let ret = Object.assign({}, obj);\r\n            let children: Array<any> = ret._$child;\r\n            if (children)\r\n                ret._$child = children.map(c => cloneTree(c));\r\n            let comps: Array<any> = ret._$comp;\r\n            if (comps)\r\n                ret._$comp = comps.map(c => Object.assign({}, c));\r\n            return ret;\r\n        }\r\n\r\n        function visit(data: any) {\r\n            let children: Array<any> = data._$child;\r\n            if (children) {\r\n                for (let child of children) {\r\n                    if (child._$id)\r\n                        visit(child);\r\n                }\r\n            }\r\n\r\n            let od = overrideDataMap[data._$id];\r\n            if (od) {\r\n                for (let i = 0; i < od.length; i += 2) {\r\n                    let j = od[i];\r\n                    let e = od[i + 1];\r\n                    let idPath: string | string[];\r\n                    if (idPath = e._$override) {\r\n                        let toWrite: any;\r\n                        if (Array.isArray(idPath)) {\r\n                            if (j == idPath.length - 1) {\r\n                                let k = idPath[j];\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else\r\n                                    toWrite = children.find(c => c._$override == k);\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else if (j < idPath.length - 1) {\r\n                                let k = idPath.slice(j);\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else {\r\n                                    toWrite = children.find(c => {\r\n                                        let o = c._$override;\r\n                                        return Array.isArray(o) && arrayEquals(o, k);\r\n                                    });\r\n                                }\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else\r\n                                toWrite = data;\r\n                        }\r\n                        else\r\n                            toWrite = data;\r\n\r\n                        mergeData(toWrite, e);\r\n                        if (e._$comp) {\r\n                            let comps: Array<any> = toWrite._$comp;\r\n                            if (!comps)\r\n                                toWrite._$comp = comps = [];\r\n                            for (let comp of e._$comp) {\r\n                                let typeOrId = comp._$type || comp._$override;\r\n                                let c = comps.find(c => c._$override == typeOrId || c._$type == typeOrId || c._$id == typeOrId);\r\n                                if (!c) {\r\n                                    c = {};\r\n                                    if (comp._$type)\r\n                                        c._$type = typeOrId;\r\n                                    else\r\n                                        c._$override = typeOrId;\r\n                                    comps.push(c);\r\n                                }\r\n                                mergeData(c, comp);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (idPath = e._$parent) { //增加的节点\r\n                        if (!children)\r\n                            data._$child = children = [];\r\n                        let k: string | string[];\r\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\r\n                            if (j == idPath.length - 1)\r\n                                k = idPath[j];\r\n                            else\r\n                                k = idPath.slice(j);\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            toWrite._$parent = k;\r\n                            children.push(toWrite);\r\n                        }\r\n                        else {\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            delete toWrite._$parent;\r\n                            if (data._$prefab) {\r\n                                children.push(toWrite);\r\n                            }\r\n                            else {\r\n                                delete toWrite._$index;\r\n                                if (e._$index < children.length)\r\n                                    children.splice(e._$index, 0, toWrite);\r\n                                else\r\n                                    children.push(toWrite);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (test(nodeData)) {\r\n            nodeData = cloneTree(nodeData);\r\n            visit(nodeData);\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n}\r\n\r\nfunction mergeData(target: any, overrided: any) {\r\n    for (let k in overrided) {\r\n        if (k.startsWith(\"_$\"))\r\n            continue;\r\n\r\n        let v = overrided[k];\r\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\r\n            let v2 = target[k];\r\n            if (v2 != null && typeof (v2) === \"object\") {\r\n                target[k] = v2 = Object.assign({}, v2);\r\n                mergeData(v2, v);\r\n            }\r\n            else\r\n                target[k] = v;\r\n        }\r\n        else\r\n            target[k] = v;\r\n    }\r\n}\r\n\r\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\r\n    if (a.length === b.length) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { InputManager } from \"../events/InputManager\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Config } from \"../../Config\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * @en Dispatched when one or more text characters are input by the user.\r\n * @zh 当用户输入一个或多个文本字符时后调度。\r\n * @eventType Event.INPUT\r\n * */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched after the text has changed.\r\n * @zh 文本发生变化后调度。\r\n * @eventType Event.CHANGE\r\n * */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the user presses the Enter key in the input field.\r\n * @zh 用户在输入框内敲回车键后，将会调度 enter 事件。\r\n * @eventType Event.ENTER\r\n * */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the display object receives focus.\r\n * @zh 显示对象获得焦点后调度。\r\n * @eventType Event.FOCUS\r\n * */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en Dispatched when the display object loses focus.\r\n * @zh 显示对象失去焦点后调度。\r\n * @eventType Event.BLUR\r\n * */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en The Input class is used to create display objects to display and input text.\r\n * The Input class encapsulates the native text input box. Due to differences between browsers, there may be slight deviations between the position of the default text of this object and the position of the text when the user clicks to input.\r\n * @zh Input 类用于创建显示对象以显示和输入文本。\r\n * Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。\r\n */\r\nexport class Input extends Text {\r\n    /**\r\n     * @en Regular text field.\r\n     * @zh 常规文本域。\r\n     */\r\n    static TYPE_TEXT: string = \"text\";\r\n    /**\r\n     * @en Password type for password input fields.\r\n     * @zh password 类型用于密码域输入。\r\n     */\r\n    static TYPE_PASSWORD: string = \"password\";\r\n    /**\r\n     * @en Email type for input fields that should contain an e-mail address.\r\n     * @zh email 类型用于应该包含 e-mail 地址的输入域。\r\n     */\r\n    static TYPE_EMAIL: string = \"email\";\r\n    /**\r\n     * @en URL type for input fields that should contain a URL address.\r\n     * @zh url 类型用于应该包含 URL 地址的输入域。\r\n     */\r\n    static TYPE_URL: string = \"url\";\r\n    /**\r\n     * @en Number type for input fields that should contain a numeric value.\r\n     * @zh number 类型用于应该包含数值的输入域。\r\n     */\r\n    static TYPE_NUMBER: string = \"number\";\r\n    /**\r\n     * @en Range type for input fields that should contain a numeric value within a certain range.\r\n     * The range type is displayed as a slider.\r\n     * You can also set limitations on the accepted numbers.\r\n     * @zh range 类型用于应该包含一定范围内数字值的输入域。\r\n     * range 类型显示为滑动条。\r\n     * 您还能够设定对所接受的数字的限定。\r\n     */\r\n    static TYPE_RANGE: string = \"range\";\r\n    /**\r\n     * @en Select day, month, and year.\r\n     * @zh 选取日、月、年。\r\n     */\r\n    static TYPE_DATE: string = \"date\";\r\n    /**\r\n     * @en Select month and year.\r\n     * @zh month - 选取月、年。\r\n     */\r\n    static TYPE_MONTH: string = \"month\";\r\n    /**\r\n     * @en Select week and year.\r\n     * @zh week - 选取周和年。\r\n     */\r\n    static TYPE_WEEK: string = \"week\";\r\n    /**\r\n     * @en Select time (hours and minutes).\r\n     * @zh time - 选取时间（小时和分钟）。\r\n     */\r\n    static TYPE_TIME: string = \"time\";\r\n    /**\r\n     * @en Select time, day, month, year (UTC time).\r\n     * @zh datetime - 选取时间、日、月、年（UTC 时间）。\r\n     */\r\n    static TYPE_DATE_TIME: string = \"datetime\";\r\n    /**\r\n     * @en Select time, day, month, year (local time).\r\n     * @zh datetime-local - 选取时间、日、月、年（本地时间）。\r\n     */\r\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\r\n    /**\r\n     * @en Search type for search fields, such as site search or Google search.\r\n     * The search field is displayed as a regular text field.\r\n     * @zh search 类型用于搜索域，比如站点搜索或 Google 搜索。\r\n     * search 域显示为常规的文本域。\r\n     */\r\n    static TYPE_SEARCH: string = \"search\";\r\n\r\n    /**@private */\r\n    protected static input: HTMLInputElement;\r\n    /**@private */\r\n    protected static area: HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputContainer: HTMLDivElement;\r\n    /**@private */\r\n    protected static confirmButton: any;\r\n    /**@private */\r\n    protected static promptStyleDOM: any;\r\n\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean = false;\r\n    protected _editable: boolean = true;\r\n    protected _restrict: string;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number = 0;\r\n\r\n    private _type: string = \"text\";\r\n\r\n    /**\r\n     * @private\r\n     * @en Indicates whether the application is running in an iframe on iOS.\r\n     * @zh 指示应用程序是否在iOS的iframe中运行。\r\n     */\r\n    static IOS_IFRAME: boolean = false;\r\n\r\n    /**\r\n     * @en Indicates whether the application uses the new input method.\r\n     * @zh 指示应用程序是否使用新的输入方法。\r\n     */\r\n    static isAppUseNewInput: boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this._promptColor = \"#A9A9A9\";\r\n\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        Input._createInputElement();\r\n\r\n        // 移动端通过画布的touchend调用focus\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue: boolean = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n\r\n    // 移动平台在单击事件触发后弹出输入法\r\n    private static _popupInputMethod(e: any): void {\r\n        //e.preventDefault();\r\n        if (!InputManager.isTextInputting) return;\r\n\r\n        var input: any = Input.inputElement;\r\n\r\n        // 弹出输入法。\r\n        input.focus();\r\n    }\r\n\r\n    private static _createInputElement(): void {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = '1E5';\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n\r\n    private static _initInput(input: HTMLInputElement): void {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = '1';\r\n\r\n        input.addEventListener('input', Input._processInputting);\r\n\r\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\r\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\r\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\r\n\r\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\r\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\r\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\r\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n\r\n    private static _processInputting(e: any): void {\r\n        var input: Input = (Input.inputElement as any).target;\r\n        if (!input) return;\r\n\r\n        var value = Input.inputElement.value;\r\n\r\n        // 对输入字符进行限制\r\n        if (input._restrictPattern) {\r\n            // 部分输入法兼容\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n\r\n        if (value == null) value = \"\";\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n\r\n    private static _stopEvent(e: any): void {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @en Set the cursor position and select characters.\r\n     * @param startIndex The starting position of the cursor.\r\n     * @param endIndex The ending position of the cursor.\r\n     * @zh 设置光标位置和选取字符。\r\n     * @param startIndex 光标起始位置。\r\n     * @param endIndex 光标结束位置。\r\n     */\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n\r\n    /**\r\n     * @en Whether it's a multi-line input box.\r\n     * @zh 是否是多行输入框。\r\n     */\r\n    get multiline(): boolean {\r\n        return this._multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._multiline = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n\r\n    /**\r\n     * @en Reference instance to input box\r\n     * @zh 对输入框的引用实例。\r\n     */\r\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n\r\n    private _onUnDisplay(e: Event = null): void {\r\n        this.focus = false;\r\n    }\r\n\r\n    private _onMouseDown(e: Event): void {\r\n        this.focus = true;\r\n    }\r\n    /**\r\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\r\n     */\r\n    private _syncInputTransform(): void {\r\n        var inputElement = this.nativeInput;\r\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\r\n        var inputWid = this._width - this._padding[1] - this._padding[3];\r\n        var inputHei = this._height - this._padding[0] - this._padding[2];\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\r\n            (inputElement as any).setSize(inputWid, inputHei);\r\n            (inputElement as any).setPos(transform.x, transform.y);\r\n        } else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Selects all the text in the current instance.\r\n     * @zh 选中当前实例的所有文本。\r\n     */\r\n    select(): void {\r\n        this.nativeInput.select();\r\n    }\r\n\r\n    /**\r\n     * @en Whether the focus is on this instance.\r\n     * Note: On mobile platforms, the keyboard may not immediately pop up when calling the focus interface.\r\n     * On mobile platforms, focus is usually triggered by clicking on the canvas.\r\n     * @zh 焦点是否在此实例上。\r\n     * 注意：在移动平台上，调用 focus 接口可能无法立即弹出键盘。\r\n     * 移动平台上通常是点击画布才会触发焦点。\r\n     */\r\n    get focus(): boolean {\r\n        return this._focus;\r\n    }\r\n\r\n    set focus(value: boolean) {\r\n        var input = this.nativeInput;\r\n\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if ((input as any).target) {\r\n                    (input as any).target._focusOut();\r\n                } else {\r\n                    this._setInputMethod();\r\n                }\r\n                input = this.nativeInput;\r\n                (input as any).target = this;\r\n                this._focusIn();\r\n            } else {\r\n                (input as any).target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n\r\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setInputMethod(): void {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n\r\n        // 安卓的安全键盘的问题；\r\n        // 如果设置type='password' 则会弹安全键盘\r\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\r\n        if (ILaya.Browser.onAndroid) {\r\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\r\n            Input._initInput(Input.input);\r\n        }\r\n\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n\r\n    private _focusIn(): void {\r\n        InputManager.isTextInputting = true;\r\n        var input = this.nativeInput;\r\n\r\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\r\n\r\n        this._focus = true;\r\n\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n\r\n        input.readOnly = !this._editable;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setType(this._type);\r\n            (input as any).setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\r\n\r\n        input.value = this._text;\r\n        input.placeholder = this._prompt;\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n\r\n        // PC端直接调用focus进入焦点。\r\n        if (ILaya.Browser.onPC) input.focus();\r\n\r\n        // PC浏览器隐藏文字\r\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n            this._hideText = true;\r\n        }\r\n\r\n        // PC同步输入框外观。\r\n        (input as any).setColor(this.color);\r\n        (input as any).setFontSize(this.fontSize);\r\n        (input as any).setFontFace(this._realFont);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n\r\n        // 输入框重定位。\r\n        this._syncInputTransform();\r\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n\r\n    // 设置DOM输入框提示符颜色。\r\n    private _setPromptColor(): void {\r\n        // 创建style标签\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n\r\n        // 设置style标签\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n\r\n    /**@private */\r\n    private _focusOut(): void {\r\n        if (!InputManager.isTextInputting) return;\r\n        if (!InputManager.isiOSWKwebView)\r\n            InputManager.isTextInputting = false;\r\n        this._focus = false;\r\n        this._hideText = false;\r\n\r\n        this.text = this.nativeInput.value;\r\n        this.markChanged();\r\n        this.typeset();\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\r\n        // 只有PC会注册此事件。\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n\r\n    /**@private */\r\n    private _onKeyDown(e: any): void {\r\n        if (e.keyCode === 13) {\r\n            // 移动平台单行输入状态下点击回车收回输入法。 \r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Specifically for mini-games (resolves the issue of content inconsistency between keyboard input box and game input box).\r\n     * @param value The text value to be synchronized.\r\n     * @zh 小游戏专用（解决键盘输入框内容和游戏输入框内容不同步的问题）。\r\n     * @param value 需要同步的文本值。\r\n     */\r\n    miniGameTxt(value: string) {\r\n        value += '';\r\n        if (!this._multiline)\r\n            value = value.replace(/\\r?\\n/g, '');\r\n        this.text = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     * @en The text content of the input field.\r\n     * @zh 输入框的文本内容。\r\n     */\r\n    get text(): string {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return super.text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (this._focus) {\r\n            this.nativeInput.value = value;\r\n            this.event(Event.CHANGE);\r\n        } else {\r\n            // 单行时不允许换行\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n\r\n            super.text = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     * @en Set the color of the input text.\r\n     * @zh 设置输入文本的颜色。\r\n     */\r\n    set_color(value: string) {\r\n        if (this._focus)\r\n            (this.nativeInput as any).setColor(value);\r\n\r\n        super.set_color(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     * @en The background color of the input text.\r\n     * @zh 输入文本的背景颜色。\r\n     */\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        super.bgColor = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\r\n            (this.nativeInput as any).setBgColor(value);\r\n    }\r\n\r\n    /**\r\n     * @en The restriction on input characters.\r\n     * @zh 对输入字符的限制。\r\n     */\r\n    get restrict(): string {\r\n        return this._restrict;\r\n    }\r\n\r\n    set restrict(value: string) {\r\n        this._restrict = value;\r\n        // H5保存RegExp\r\n        if (value) {\r\n            value = \"[^\" + value + \"]\";\r\n\r\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\r\n            if (value.indexOf(\"^^\") > -1)\r\n                value = value.replace(\"^^\", \"\");\r\n\r\n            this._restrictPattern = new RegExp(value, \"g\");\r\n        } else\r\n            this._restrictPattern = null;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the input text is editable.\r\n     * @zh 输入框文本是否可编辑。\r\n     */\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    set editable(value: boolean) {\r\n        this._editable = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (Input.input as any).setForbidEdit(!value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The maximum number of characters allowed in the input field. Default is 10000.\r\n     * When setting the character limit, values less than or equal to 0 will set the limit to 10000.\r\n     * @zh 输入框允许的最大字符数量，默认为10000。\r\n     * 设置字符数量限制时，小于等于0的值将会限制字符数量为10000。\r\n     */\r\n    get maxChars(): number {\r\n        return this._maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * @en The prompt text for the input field.\r\n     * @zh 输入框的提示文本。\r\n     */\r\n    get prompt(): string {\r\n        return this._prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        value = Text.langPacks?.[value] || value;\r\n        if (this._prompt != value) {\r\n            this._prompt = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Enter the prompt color.\r\n     * @zh 输入提示文本的颜色。\r\n     */\r\n    get promptColor(): string {\r\n        return this._promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        if (this._promptColor != value) {\r\n            this._promptColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The input field type, which should be one of the Input static constants.\r\n     * Available types include:\r\n     * - TYPE_TEXT\r\n     * - TYPE_PASSWORD\r\n     * - TYPE_EMAIL\r\n     * - TYPE_URL\r\n     * - TYPE_NUMBER\r\n     * - TYPE_RANGE\r\n     * - TYPE_DATE\r\n     * - TYPE_MONTH\r\n     * - TYPE_WEEK\r\n     * - TYPE_TIME\r\n     * - TYPE_DATE_TIME\r\n     * - TYPE_DATE_TIME_LOCAL\r\n     * For platform compatibility, please refer to: http://www.w3school.com.cn/html5/html_5_form_input_types.asp\r\n     * @zh 输入框类型，应为 Input 静态常量之一。\r\n     * 常用类型包括：\r\n     * - TYPE_TEXT\r\n     * - TYPE_PASSWORD\r\n     * - TYPE_EMAIL\r\n     * - TYPE_URL\r\n     * - TYPE_NUMBER\r\n     * - TYPE_RANGE\r\n     * - TYPE_DATE\r\n     * - TYPE_MONTH\r\n     * - TYPE_WEEK\r\n     * - TYPE_TIME\r\n     * - TYPE_DATE_TIME\r\n     * - TYPE_DATE_TIME_LOCAL\r\n     * @zh 平台兼容性请参考：http://www.w3school.com.cn/html5/html_5_form_input_types.asp\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._asPassword = value === \"password\";\r\n        this._type = value;\r\n        this.markChanged();\r\n    }\r\n}","import { Component } from \"./Component\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * @en Relative layout Component.\r\n * @zh 相对布局组件\r\n */\r\nexport class Widget extends Component {\r\n    /**\r\n     * @en An static instance of a Widget that has been initialized.\r\n     * @zh 一个已初始化的 Widget 静态实例。\r\n     */\r\n    static EMPTY: Widget = null;// new Widget();\r\n\r\n    private _top: number = null;\r\n    private _bottom: number = null;\r\n    private _left: number = null;\r\n    private _right: number = null;\r\n    private _centerX: number = null;\r\n    private _centerY: number = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.runInEditor = true;\r\n        this.hideFlags |= HideFlags.HideAndDontSave;\r\n    }\r\n\r\n    /**\r\n     * @en Resets the boundaries and center coordinates of the object to null.\r\n     * @zh 将对象的边界和中心坐标重置为 null。\r\n     */\r\n    onReset(): void {\r\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.owner.parent) this._onAdded();\r\n        else this.owner.once(Event.ADDED, this, this._onAdded);\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        this.owner.off(Event.ADDED, this, this._onAdded);\r\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\r\n    }\r\n\r\n    protected _onAdded(): void {\r\n        if (this.owner.parent)\r\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\r\n        this.resetLayoutX();\r\n        this.resetLayoutY();\r\n    }\r\n\r\n    /**\r\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    protected _onParentResize(): void {\r\n        var flagX = this.resetLayoutX();\r\n        var flagY = this.resetLayoutY();\r\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Resets the object's layout along the X-axis (horizontal direction).\r\n     * @zh 重置对象的水平布局（X轴方向）。\r\n     */\r\n    resetLayoutX(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerX != null) {\r\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\r\n            } else if (this._left != null) {\r\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\r\n                if (this._right != null) {\r\n                    if (!parent._width) return false;\r\n                    //TODO:如果用width，会死循环\r\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\r\n                    if (temp != owner._width) {\r\n                        owner.width = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._right != null) {\r\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Resets the object's layout along the Y-axis (vertical direction).\r\n     * @zh 重置对象的垂直布局（Y轴方向）。\r\n     */\r\n    resetLayoutY(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerY != null) {\r\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\r\n            } else if (this._top != null) {\r\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\r\n                if (this._bottom != null) {\r\n                    if (!parent._height) return false;\r\n                    //TODO:\r\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\r\n                    if (temp != owner._height) {\r\n                        owner.height = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._bottom != null) {\r\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @en Recalculate layout\r\n     * @zh 重新计算布局\r\n     */\r\n    resetLayout(): void {\r\n        if (this.owner) {\r\n            this.resetLayoutX();\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the top edge, in pixels.\r\n     * @zh 距顶边的距离（以像素为单位）。\r\n     */\r\n    get top(): number {\r\n        return this._top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._top != value) {\r\n            this._top = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the bottom edge, in pixels.\r\n     * @zh 距底边的距离（以像素为单位）。\r\n     */\r\n    get bottom(): number {\r\n        return this._bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._bottom != value) {\r\n            this._bottom = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the left edge, in pixels.\r\n     * @zh 距左边的距离（以像素为单位）。\r\n     */\r\n    get left(): number {\r\n        return this._left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._left != value) {\r\n            this._left = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the right edge, in pixels.\r\n     * @zh 距右边的距离（以像素为单位）。\r\n     */\r\n    get right(): number {\r\n        return this._right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._right != value) {\r\n            this._right = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the horizontal center axis, in pixels.\r\n     * @zh 距水平方向中心轴的距离（以像素为单位）。\r\n     */\r\n    get centerX(): number {\r\n        return this._centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerX != value) {\r\n            this._centerX = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance from the vertical center axis, in pixels.\r\n     * @zh 距垂直方向中心轴的距离（以像素为单位）。\r\n     */\r\n    get centerY(): number {\r\n        return this._centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerY != value) {\r\n            this._centerY = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n}\r\n\r\nWidget.EMPTY = new Widget();\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IHitArea } from \"./IHitArea\";\r\n\r\nconst _rect: Rectangle = new Rectangle();\r\nconst _ptPoint: Point = new Point();\r\n\r\n/**\r\n * @en The `HitArea` class represents a mouse click area that can be defined by a series of vector shapes for clickable and non-clickable regions (currently only supports circles, rectangles, and polygons).\r\n * @zh `HitArea` 类表示一个鼠标点击区域，可以通过一系列矢量图形定义为可点击和非可点击区域（目前仅支持圆形、矩形和多边形）。\r\n */\r\nexport class HitArea implements IHitArea {\r\n    /**\r\n     * @internal\r\n     */\r\n    _hit: Graphics;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _unHit: Graphics;\r\n\r\n    /**\r\n     * @en Checks whether the object contains a specified point.\r\n     * @param x The x-coordinate of the point (horizontal position).\r\n     * @param y The y-coordinate of the point (vertical position).\r\n     * @param sp The Sprite object that contains the point.\r\n     * @returns true if the object contains the specified point; otherwise false.\r\n     * @zh 检测对象是否包含指定的点。\r\n     * @param x 点的 X 轴坐标值（水平位置）。\r\n     * @param y 点的 Y 轴坐标值（垂直位置）。\r\n     * @param sp 包含该点的 Sprite 对象。\r\n     * @returns 如果包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number, sp: Sprite): boolean {\r\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\r\n            return false;\r\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Has it hit Graphic\r\n     * @zh 是否击中Graphic\r\n     */\r\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\r\n        if (!graphic) return false;\r\n        let cmds = graphic.cmds;\r\n        if (cmds.length == 0) return false;\r\n        let len = cmds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let cmd = cmds[i];\r\n            if (!cmd) continue;\r\n            switch (cmd.cmdID) {\r\n                case \"Translate\":\r\n                    x -= cmd.tx;\r\n                    y -= cmd.ty;\r\n            }\r\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Determines whether a point is hit within a specific drawing command.\r\n     * @zh 是否击中绘图指令\r\n     */\r\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\r\n        if (!cmd) return false;\r\n        var rst: boolean = false;\r\n        switch (cmd.cmdID) {\r\n            case \"DrawRect\":\r\n                if (cmd.percent)\r\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\r\n                else\r\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\r\n                rst = _rect.contains(x, y);\r\n                break;\r\n            case \"DrawCircle\":\r\n                let r = cmd.radius;\r\n                var d: number;\r\n                if (cmd.percent) {\r\n                    x -= cmd.x * sp.width;\r\n                    y -= cmd.y * sp.height;\r\n                    r *= sp.width;\r\n                }\r\n                else {\r\n                    x -= cmd.x;\r\n                    y -= cmd.y;\r\n                }\r\n                d = x * x + y * y;\r\n                rst = d < r * r;\r\n                break;\r\n            case \"DrawPoly\":\r\n                x -= cmd.x;\r\n                y -= cmd.y;\r\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\r\n                break;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Determines whether a point is inside a polygon.\r\n     * @zh 坐标是否在多边形内\r\n     */\r\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\r\n        var p: Point = _ptPoint;\r\n        p.setTo(x, y);\r\n        // 交点个数\r\n        var nCross: number = 0;\r\n        var p1x: number, p1y: number, p2x: number, p2y: number;\r\n        var len: number;\r\n        len = areaPoints.length;\r\n        for (var i: number = 0; i < len; i += 2) {\r\n            p1x = areaPoints[i];\r\n            p1y = areaPoints[i + 1];\r\n            p2x = areaPoints[(i + 2) % len];\r\n            p2y = areaPoints[(i + 3) % len];\r\n            //var p1:Point = areaPoints[i];\r\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\r\n            if (p1y == p2y) continue;\r\n            if (p.y < Math.min(p1y, p2y)) continue;\r\n            if (p.y >= Math.max(p1y, p2y)) continue;\r\n            // 求交点的x坐标\r\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\r\n            // 只统计p1p2与p向右射线的交点\r\n            if (tx > p.x) nCross++;\r\n        }\r\n        // 交点为偶数，点在多边形之外\r\n        return (nCross % 2 == 1);\r\n    }\r\n\r\n    /**\r\n     * @en The Graphics object that defines the clickable area.(currently only supports circles, rectangles, and polygons).\r\n     * @zh 定义可点击区域的 Graphics 对象。（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get hit(): Graphics {\r\n        if (!this._hit) this._hit = new Graphics();\r\n        return this._hit;\r\n    }\r\n\r\n    set hit(value: Graphics) {\r\n        this._hit = value;\r\n    }\r\n\r\n    /**\r\n     * @en The Graphics object that defines the non-clickable area,(currently only supports circles, rectangles, and polygons).\r\n     * @zh 定义不可点击区域的 Graphics 对象。（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get unHit(): Graphics {\r\n        if (!this._unHit) this._unHit = new Graphics();\r\n        return this._unHit;\r\n    }\r\n\r\n    set unHit(value: Graphics) {\r\n        this._unHit = value;\r\n    }\r\n\r\n    /**\r\n     * @en Called after deserialization.\r\n     * @zh 序列化后调用。\r\n     */\r\n    onAfterDeserialize() {\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._hitCmds) {\r\n                this.hit.cmds = (<any>this)._hitCmds;\r\n                delete (<any>this)._hitCmds;\r\n            }\r\n\r\n            if ((<any>this)._unHitCmds) {\r\n                this.unHit.cmds = (<any>this)._unHitCmds;\r\n                delete (<any>this)._unHitCmds;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HitArea\", HitArea);\r\n\r\n","import { Node } from \"../display/Node\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * @en Prefab class.\r\n * @zh 预制体类。\r\n */\r\nexport class Prefab extends Resource {\r\n    /**\r\n     * @readonly\r\n     * @en The version number of the prefab resource.\r\n     * @zh 预制体资源的版本号。\r\n     */\r\n    public readonly version: number;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Compatible with the LayaAir 2.x engine.\r\n     * @zh 兼容LayaAir2.x引擎\r\n     */\r\n    json: any;\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Create an instance of the prefab.\r\n     * @param version The version number of the prefab resource.\r\n     * @zh 创建一个预制体实例。\r\n     * @param version 预制体资源的版本号。\r\n     */\r\n    constructor(version?: number) {\r\n        super();\r\n\r\n        this.version = version;\r\n        this._traceDeps = true;\r\n    }\r\n\r\n    /**\r\n     * @en Create an instance of the prefab.\r\n     * @param options Instantiation options.\r\n     * @param errors Error content.\r\n     * @zh 创建一个预制体的实例。\r\n     * @param options 实例化选项\r\n     * @param errors 错误内容\r\n     */\r\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\r\n        if (this.json) //兼容2.0\r\n            return LegacyUIParser.createByData(null, this.json);\r\n        else\r\n            return null;\r\n    }\r\n}\r\n\r\n//旧版本兼容\r\nexport type HierarchyResource = Prefab;\r\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\r\nimport { FrameAnimation } from \"../display/FrameAnimation\"\r\nimport { Node } from \"../display/Node\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { WeakObject } from \"../utils/WeakObject\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar _listClass: any;\r\nvar _viewClass: any;\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nexport class LegacyUIParser {\r\n    /**@private */\r\n    private static _funMap: WeakObject;\r\n    /**@private */\r\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\r\n    /**@private */\r\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\r\n    /**@internal */\r\n    static _sheet: any;\r\n\r\n    static parse(data: any, options: any) {\r\n        let root: Sprite = options?.root;\r\n        if (!root) {\r\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\r\n            let clas = ClassUtils.getClass(runtime);\r\n\r\n            if (data.props.renderType == \"instance\")\r\n                root = clas.instance || (clas.instance = new clas());\r\n            else\r\n                root = new clas();\r\n        }\r\n\r\n        if (root && (<any>root)._viewCreated)\r\n            return root;\r\n\r\n        return LegacyUIParser.createByData(root, data);\r\n    }\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        let map = LegacyUIParser._funMap;\r\n        if (!map)\r\n            map = LegacyUIParser._funMap = new WeakObject();\r\n        var fun: Function = LegacyUIParser._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            LegacyUIParser._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    //TODO:coverage\r\n    static createByData(root: Sprite, uiView: any): Sprite {\r\n        var tInitTool: InitTool = InitTool.create();\r\n\r\n        //递归创建节点\r\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\r\n        if (\"_idMap\" in root) {\r\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\r\n        }\r\n\r\n        //处理动画信息\r\n        if (uiView.animations) {\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAni: FrameAnimation;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAni = new FrameAnimation();\r\n                tAniO = animations[i];\r\n                tAni._setUp(tInitTool._idMap, tAniO);\r\n                (<any>root)[tAniO.name] = tAni;\r\n                tAni._setControlNode(root);\r\n                switch (tAniO.action) {\r\n                    case 1:\r\n                        tAni.play(0, false);\r\n                        break;\r\n                    case 2:\r\n                        tAni.play(0, true);\r\n                        break;\r\n                }\r\n                anilist.push(tAni);\r\n            }\r\n            (<any>root)._aniList = anilist;\r\n        }\r\n\r\n        //设置页面穿透\r\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\r\n            root.hitTestPrior = true;\r\n\r\n        //设置组件\r\n        tInitTool.finish();\r\n        root._setBit(NodeFlags.NOT_READY, false);\r\n        if (root.parent && root.parent.activeInHierarchy && root.active)\r\n            root._processActive(true);\r\n        return root;\r\n    }\r\n\r\n    static createInitTool(): InitTool {\r\n        return InitTool.create();\r\n    }\r\n\r\n    /**\r\n     * 根据UI数据实例化组件。\r\n     * @param uiView UI数据。\r\n     * @param comp 组件本体，如果为空，会新创建一个。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     * @return 一个 Component 对象。\r\n     */\r\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\r\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\r\n        if (!comp) {\r\n            if (uiView.props && uiView.props.runtime)\r\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\r\n            else\r\n                console.warn(\"can not create:\" + uiView.type);\r\n            return null;\r\n        }\r\n\r\n        var child: any[] = uiView.child;\r\n        if (child) {\r\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var node: any = child[i];\r\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\r\n                    //如果list的itemRender\r\n                    (<any>comp)[\"itemRender\"] = node;\r\n                } else if (node.type == \"Graphic\") {\r\n                    //绘制矢量图\r\n                    this._addGraphicsToSprite(node, comp);\r\n                } else if (this._isDrawType(node.type)) {\r\n                    this._addGraphicToSprite(node, comp, true);\r\n                } else {\r\n                    if (isList) {\r\n                        //收集数据绑定信息\r\n                        var arr: any[] = [];\r\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\r\n                        if (arr.length)\r\n                            tChild[\"_$bindData\"] = arr;\r\n                    } else {\r\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\r\n                    }\r\n\r\n                    //处理脚本\r\n                    if (node.type == \"Script\") {\r\n                        if (tChild instanceof Component) {\r\n                            comp.addComponentInstance(tChild);\r\n                        } else {\r\n                            //兼容老版本\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = comp;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = comp;\r\n                            }\r\n                        }\r\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\r\n                        comp.mask = tChild;\r\n                    } else {\r\n                        tChild instanceof Node && comp.addChild(tChild);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var props: any = uiView.props;\r\n        for (var prop in props) {\r\n            var value: any = props[prop];\r\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\r\n                if (initTool) {\r\n                    initTool.addNodeRef(comp, prop, <string>value);\r\n                }\r\n            } else\r\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\r\n        }\r\n\r\n        if ((<any>comp)._afterInited) {\r\n            //if (initTool) {\r\n            //initTool.addInitItem(comp);\r\n            //} else {\r\n            (<any>comp)._afterInited();\r\n            //}\r\n        }\r\n\r\n        if (uiView.compId && initTool && initTool._idMap) {\r\n            initTool._idMap[uiView.compId] = comp;\r\n        }\r\n\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置组件的属性值。\r\n     * @param comp 组件实例。\r\n     * @param prop 属性名称。\r\n     * @param value 属性值。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     */\r\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\r\n        //处理数据绑定\r\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\r\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\r\n            if (!LegacyUIParser._sheet) {\r\n                console.warn(\"Can not find class Sheet\");\r\n                return;\r\n            }\r\n            //list的item处理\r\n            if (dataMap) {\r\n                dataMap.push(comp, prop, value);\r\n            } else if (view) {\r\n                if (value.indexOf(\"].\") == -1) {\r\n                    //TODO\r\n                    value = value.replace(\".\", \"[0].\");\r\n                }\r\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\r\n\r\n                //执行第一次数据赋值\r\n                watcher.exe(view);\r\n                var one: any[], temp: any[];\r\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\r\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\r\n                    var key1: string = one[1];\r\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\r\n                        var key2: string = temp[0];\r\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\r\n                        arr.push(watcher);\r\n                        //监听数据变化\r\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\r\n                    }\r\n                    //TODO\r\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\r\n                    arr.push(watcher);\r\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\r\n                }\r\n                //trace(view._watchMap);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (prop === \"var\" && view) {\r\n            view[value] = comp;\r\n        } else {\r\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过组建UI数据，获取组件实例。\r\n     * @param json UI数据。\r\n     * @return Component 对象。\r\n     */\r\n    static getCompInstance(json: any): any {\r\n        if (json.type == \"UIView\") {\r\n            if (json.props && json.props.pageData) {\r\n                return LegacyUIParser.createByData(null, json.props.pageData);\r\n            }\r\n        }\r\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\r\n        var compClass = ClassUtils.getClass(runtime);\r\n        if (!compClass) throw \"Can not find class \" + runtime;\r\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\r\n            var comp: any = Pool.createByClass(compClass);\r\n            comp._destroyed = false;\r\n            return comp;\r\n        }\r\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\r\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\r\n            return (compClass as any)[\"instance\"];\r\n        }\r\n\r\n        let ret = new compClass();\r\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\r\n            (<any>ret)._scene = ret;\r\n        return ret;\r\n    }\r\n\r\n    public static collectResourceLinks(uiView: any) {\r\n        let test = new Set();\r\n        let innerUrls: string[] = [];\r\n\r\n        function addInnerUrl(url: string) {\r\n            if (!test.has(url)) {\r\n                test.add(url);\r\n                innerUrls.push(url);\r\n            }\r\n        }\r\n\r\n        function check(uiView: any) {\r\n            let props: any = uiView.props;\r\n            for (let prop in props) {\r\n                let value: any = props[prop];\r\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\r\n                    let url = value.replace(\"@Prefab:\", \"\");\r\n                    addInnerUrl(url);\r\n                }\r\n            }\r\n\r\n            let child: any[] = uiView.child;\r\n            if (child) {\r\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\r\n                    let node: any = child[i];\r\n                    check(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (uiView.loadList) {\r\n            for (let url of uiView.loadList)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        if (uiView.loadList3D) {\r\n            for (let url of uiView.loadList3D)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        check(uiView);\r\n        return innerUrls;\r\n    }\r\n\r\n    /**\r\n     * 根据指定的 json 数据创建节点对象。\r\n     * 比如:\r\n     * {\r\n     * \t\"type\":\"Sprite\",\r\n     * \t\"props\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"customProps\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"child\":[\r\n     * \t\t{\r\n     * \t\t\t\"type\":\"Text\",\r\n     * \t\t\t\"props\":{\r\n     * \t\t\t\t\"text\":\"this is a test\",\r\n     * \t\t\t\t\"var\":\"label\",\r\n     * \t\t\t\t\"rumtime\":\"\"\r\n     * \t\t\t}\r\n     * \t\t}\r\n     * \t]\r\n     * }\r\n     * @param\tjson json字符串或者Object对象。\r\n     * @param\tnode node节点，如果为空，则新创建一个。\r\n     * @param\troot 根节点，用来设置var定义。\r\n     * @return\t生成的节点。\r\n     */\r\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\r\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\r\n        var props: any = json.props;\r\n\r\n        if (!node) {\r\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\r\n            if (!node) return null;\r\n        }\r\n\r\n        var child: any[] = json.child;\r\n        if (child) {\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var data: any = child[i];\r\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\r\n                    node.itemRender = data;\r\n                else {\r\n                    if (data.type == \"Graphic\") {\r\n                        this._addGraphicsToSprite(data, node);\r\n                    } else if (this._isDrawType(data.type)) {\r\n                        this._addGraphicToSprite(data, node, true);\r\n                    } else {\r\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\r\n                        if (data.type === \"Script\") {\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = node;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = node;\r\n                            }\r\n                        } else if (data.props.renderType == \"mask\") {\r\n                            node.mask = tChild;\r\n                        } else {\r\n                            node.addChild(tChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var value: any = props[prop];\r\n                if (prop === \"var\" && root) {\r\n                    (root as any)[value] = node;\r\n                } else if (value instanceof Array && node[prop] instanceof Function) {\r\n                    node[prop].apply(node, value);\r\n                } else {\r\n                    node[prop] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (customHandler && json.customProps) {\r\n            customHandler.runWith([node, json]);\r\n        }\r\n\r\n        if (node[\"created\"]) node.created();\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic对象添加到Sprite上\r\n     * @param graphicO graphic对象描述\r\n     */\r\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\r\n        var graphics: any[] = graphicO.child;\r\n        if (!graphics || graphics.length < 1) return;\r\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\r\n        var ox: number = 0;\r\n        var oy: number = 0;\r\n        if (graphicO.props) {\r\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\r\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(ox, oy);\r\n        }\r\n        var i: number, len: number;\r\n        len = graphics.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._addGraphicToGraphics(graphics[i], g);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(-ox, -oy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic绘图指令添加到sprite上\r\n     * @param graphicO 绘图指令描述\r\n     */\r\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\r\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\r\n        this._addGraphicToGraphics(graphicO, g);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\r\n        if (!dataO || !dataO.props) return sprite.graphics;\r\n        var propsName: string = dataO.props.renderType;\r\n        if (propsName === \"hit\" || propsName === \"unHit\") {\r\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\r\n            if (!hitArea[propsName]) {\r\n                hitArea[propsName] = new Graphics();\r\n            }\r\n            var g: Graphics = hitArea[propsName];\r\n        }\r\n        if (!g) g = sprite.graphics;\r\n        return g;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getTransformData(propsO: any): Matrix {\r\n        var m: Matrix;\r\n\r\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\r\n            m = m || new Matrix();\r\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\r\n        }\r\n\r\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\r\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\r\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\r\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\r\n\r\n        if (sx != 1 || sy != 1 || rotate != 0) {\r\n            m = m || new Matrix();\r\n            m.scale(sx, sy);\r\n            m.rotate(rotate * 0.0174532922222222);\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\r\n        var propsO: any;\r\n        propsO = graphicO.props;\r\n        if (!propsO) return;\r\n        var drawConfig: any;\r\n        drawConfig = this.DrawTypeDic[graphicO.type];\r\n        if (!drawConfig) return;\r\n\r\n        var g: Graphics = graphic;\r\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\r\n        var m: Matrix = this._tM;\r\n        if (m || this._alpha != 1) {\r\n            g.save();\r\n            if (m) g.transform(m);\r\n            if (this._alpha != 1) g.alpha(this._alpha);\r\n        }\r\n        (g as any)[drawConfig[0]].apply(g, params);\r\n        if (m || this._alpha != 1) {\r\n            g.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLineData(params: any[]): any[] {\r\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\r\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptTextureData(params: any[]): any[] {\r\n        params[0] = ILaya.Loader.getRes(params[0]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLinesData(params: any[]): any[] {\r\n        params[2] = this._getPointListByStr(params[2]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _isDrawType(type: string): boolean {\r\n        if (type === \"Image\") return false;\r\n        return type in this.DrawTypeDic;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\r\n        var rst: any = this._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number;\r\n        len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\r\n        }\r\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\r\n        var m: Matrix;\r\n        m = this._getTransformData(obj);\r\n        if (m) {\r\n            if (!xPos) xPos = 0;\r\n\r\n            m.translate(rst[xPos], rst[xPos + 1]);\r\n            rst[xPos] = rst[xPos + 1] = 0;\r\n            this._tM = m;\r\n        } else {\r\n            this._tM = null;\r\n        }\r\n        if (adptFun && (this as any)[adptFun]) {\r\n            rst = (this as any)[adptFun](rst);\r\n        }\r\n        return rst;\r\n    }\r\n    /**@private */\r\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\r\n    /**@private */\r\n    private static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _tM: Matrix;\r\n    /**@private */\r\n    private static _alpha: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getPointListByStr(str: string): any[] {\r\n        var pointArr: any[] = str.split(\",\");\r\n        var i: number, len: number;\r\n        len = pointArr.length;\r\n        for (i = 0; i < len; i++) {\r\n            pointArr[i] = parseFloat(pointArr[i]);\r\n        }\r\n        return pointArr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\r\n        if (key in obj) {\r\n            return obj[key];\r\n        }\r\n        return noValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass DataWatcher {\r\n    comp: any;\r\n    prop: string;\r\n    value: string;\r\n\r\n    //TODO:coverage\r\n    constructor(comp: any, prop: string, value: string) {\r\n        this.comp = comp;\r\n        this.prop = prop;\r\n        this.value = value;\r\n    }\r\n\r\n    exe(view: any): void {\r\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\r\n        this.comp[this.prop] = fun.call(this, view);\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass InitTool {\r\n    /**@private */\r\n    private _nodeRefList: any[];\r\n    /**@private */\r\n    private _initList: any[];\r\n    /**@internal */\r\n    _idMap: { [key: string]: Sprite };\r\n\r\n    //TODO:coverage\r\n    reset(): void {\r\n        this._nodeRefList = null;\r\n        this._initList = null;\r\n        this._idMap = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    recover(): void {\r\n        this.reset();\r\n        Pool.recover(\"InitTool\", this);\r\n    }\r\n\r\n    static create(): InitTool {\r\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\r\n        tool._idMap = {};\r\n        return tool;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addNodeRef(node: any, prop: string, referStr: string): void {\r\n        if (!this._nodeRefList) this._nodeRefList = [];\r\n        this._nodeRefList.push([node, prop, referStr]);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    setNodeRef(): void {\r\n        if (!this._nodeRefList) return;\r\n        if (!this._idMap) {\r\n            this._nodeRefList = null;\r\n            return;\r\n        }\r\n        var i: number, len: number;\r\n        len = this._nodeRefList.length;\r\n        var tRefInfo: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tRefInfo = this._nodeRefList[i];\r\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\r\n        }\r\n        this._nodeRefList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    getReferData(referStr: string): any {\r\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\r\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\r\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\r\n            referStr = referStr.replace(\"@arr:\", \"\");\r\n            var list: string[];\r\n            list = referStr.split(\",\");\r\n            var i: number, len: number;\r\n            var tStr: string;\r\n            len = list.length;\r\n            var list2: Sprite[] = [];\r\n            for (i = 0; i < len; i++) {\r\n                tStr = list[i];\r\n                if (tStr) {\r\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\r\n                } else {\r\n                    list2.push(null);\r\n                }\r\n            }\r\n            return list2;\r\n        } else {\r\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addInitItem(item: any): void {\r\n        if (!this._initList) this._initList = [];\r\n        this._initList.push(item);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    doInits(): void {\r\n        if (!this._initList) return;\r\n        this._initList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    finish(): void {\r\n        this.setNodeRef();\r\n        this.doInits();\r\n        this.recover();\r\n    }\r\n}","import { Node } from \"../display/Node\";\r\nimport { ILoadURL } from \"../net/Loader\";\r\nimport { Prefab } from \"./HierarchyResource\";\r\n\r\n/**\r\n * @en Hierarchy parser API.\r\n * @zh 层次结构分析器 API。\r\n */\r\nexport interface IHierarchyParserAPI {\r\n    /**\r\n     * @en Collect resource links required by the data.\r\n     * @param data The data object to process.\r\n     * @param basePath The base path used to resolve resource links.\r\n     * @returns An array of strings or ILoadURL objects representing the resource links.\r\n     * @zh 收集数据所需的资源链接。\r\n     * @param data 需要处理的数据对象。\r\n     * @param basePath 用于解析资源链接的基础路径。\r\n     * @returns 返回表示资源链接的字符串或 ILoadURL 对象数组。\r\n     */\r\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\r\n    /**\r\n     * @en Parse the data and create a hierarchy of nodes.\r\n     * @param data The data object to parse.\r\n     * @param options Optional settings for parsing.\r\n     * @param errors Array to store any errors encountered during parsing.\r\n     * @returns An array of nodes or a single node if only one is created.\r\n     * @zh 解析数据并创建节点的层次结构。\r\n     * @param data 需要解析的数据对象。\r\n     * @param options 解析的可选设置。\r\n     * @param errors 存储解析过程中遇到的错误的数组。\r\n     * @zh 返回节点数组或如果只创建了一个节点，则返回单个节点。\r\n     */\r\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\r\n}\r\n\r\n/**\r\n * @en This class is used to import prefabs.\r\n * @zh 该类用于导入预制体。\r\n */\r\nexport class PrefabImpl extends Prefab {\r\n    /**\r\n     * @en The prefab data.\r\n     * @zh 预制体数据。\r\n     */\r\n    data: any;\r\n    /**\r\n     * @en The hierarchy parser API used to parse the prefab data.\r\n     * @zh 用于解析预制体数据的层次结构 API。\r\n     */\r\n    api: IHierarchyParserAPI;\r\n\r\n    /**\r\n     * @en Create an instance of the PrefabImpl class.\r\n     * @param api The hierarchy parser API.\r\n     * @param data The data to initialize the prefab instance with.\r\n     * @param version The version of the prefab.\r\n     * @zh 创建 PrefabImpl 类的实例。\r\n     * @param api 层次结构API\r\n     * @param data 用于初始化预制体实例的数据。\r\n     * @param version 预制体的版本。\r\n     */\r\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\r\n        super(version);\r\n\r\n        this.api = api;\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * @en Create an instance of the prefab.\r\n     * @param options Optional parameters for instance creation.\r\n     * @param errors Array to store any errors encountered during instance creation.\r\n     * @returns The prefab instance.\r\n     * @zh 创建预制体的实例。\r\n     * @param options 创建实例时的可选参数。\r\n     * @param errors 存储实例创建过程中遇到的错误的数组。\r\n     * @returns 预制体实例。\r\n     */\r\n    create(options?: Record<string, any>, errors?: any[]): Node {\r\n        let ret = this.api.parse(this.data, options, errors);\r\n        if (Array.isArray(ret)) {\r\n            if (ret.length == 1) {\r\n                ret[0].url = this.url;\r\n            }\r\n            return ret[0];\r\n        }\r\n        else {\r\n            ret.url = this.url;\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { Widget } from \"../components/Widget\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Resource } from \"../resource/Resource\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { NodeFlags } from \"../Const\";\r\n\r\n/**\r\n * @en Scene class, responsible for scene creation, loading, destruction and other functions.\r\n * After the scene is removed from the node, it will not be automatically recycled by the garbage mechanism. If you want to recycle it, please call the destroy interface. \r\n * You can view the list of scenes that have not been destroyed through the unDestroyedScenes property.\r\n * @zh 场景类，负责场景创建、加载、销毁等功能。\r\n * 场景被从节点移除后，并不会被自动垃圾机制回收。如果想回收，请调用 destroy 接口。\r\n * 可以通过 unDestroyedScenes 属性查看还未被销毁的场景列表。\r\n */\r\nexport class Scene extends Sprite {\r\n    /**\r\n     * @en List of scenes that have been created but not yet destroyed. This property is read-only, please do not modify it directly.\r\n     * @zh 创建后还未被销毁的场景列表。此属性只读，请不要直接修改。用于方便查看未销毁的场景列表，便于内存管理。\r\n     */\r\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\r\n    /**获取根节点*/\r\n    private static _root: Sprite;\r\n    /**@private */\r\n    private static _loadPage: Sprite;\r\n\r\n    /**\r\n     * @en Whether to automatically destroy (destroy nodes and used resources) after the scene is closed, default is false\r\n     * @zh 场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为 false\r\n     */\r\n    autoDestroyAtClosed: boolean = false;\r\n    /**@internal */\r\n    _idMap?: any;\r\n    /**\r\n     * @internal\r\n     */\r\n    _scene3D: any;\r\n\r\n    /**\r\n     * @private\r\n     * @internal \r\n     * 相对布局组件\r\n     */\r\n    protected _widget: Widget;\r\n\r\n    /**场景时钟*/\r\n    private _timer: Timer;\r\n    /**@private */\r\n    private _viewCreated: boolean = false;\r\n\r\n    constructor(createChildren = true) {\r\n        super();\r\n\r\n        this._timer = ILaya.timer;\r\n        this._widget = Widget.EMPTY;\r\n\r\n        this._scene = this;\r\n        if (createChildren)\r\n            this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * @en Compatible loading mode, load mode setting uimap\r\n     * @param url The URL of the uimap JSON file.\r\n     * @zh 兼容加载模式，加载模式设置uimap\r\n     * @param url url uimapJSON 文件的 URL。\r\n     */\r\n    static setUIMap(url: string): void {\r\n        let uimap = ILaya.loader.getRes(url);\r\n        if (uimap) {\r\n            for (let key in uimap) {\r\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\r\n            }\r\n        } else {\r\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Load scene view. Used for loading mode. Compatible with old projects.\r\n     * @param path The scene address.\r\n     * @zh 装载场景视图。用于加载模式。兼容老项目。\r\n     * @param path 场景地址。\r\n     */\r\n    loadScene(path: string): void {\r\n        Scene.unDestroyedScenes.add(this);\r\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\r\n        let content: Prefab = ILaya.loader.getRes(url);\r\n        if (content) {\r\n            if (!this._viewCreated) {\r\n                content.create({ root: this });\r\n                this._viewCreated = true;\r\n                Scene.unDestroyedScenes.add(this);\r\n            }\r\n        } else {\r\n            this._setBit(NodeFlags.NOT_READY, true);\r\n            ILaya.loader.load(url, null, value => {\r\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            }).then((content: Prefab) => {\r\n                if (!content) throw \"Can not find scene:\" + path;\r\n                if (!this._viewCreated) {\r\n                    this.url = url;\r\n                    Scene.hideLoadingPage();\r\n\r\n                    content.create({ root: this });\r\n                    this._viewCreated = true;\r\n                    Scene.unDestroyedScenes.add(this);\r\n                }\r\n                else\r\n                    this._setBit(NodeFlags.NOT_READY, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Create view using view data. Compatible with old projects.\r\n     * @param view The view data information.\r\n     * @zh 通过视图数据创建视图。兼容老项目。\r\n     * @param view 视图数据信息。\r\n     */\r\n    createView(view: any): void {\r\n        if (view && !this._viewCreated) {\r\n            this._viewCreated = true;\r\n            LegacyUIParser.createByData(this, view);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the node instance based on the node ID in the IDE.\r\n     * @param id The node ID.\r\n     * @zh 根据IDE内的节点id，获得节点实例。\r\n     * @param id 节点ID。\r\n     */\r\n    getNodeByID(id: number): any {\r\n        if (this._idMap) return this._idMap[id];\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Open the scene. Note: If the closed scene has not set autoDestroyAtRemoved=true, resources may not be reclaimed and need to be manually reclaimed.\r\n     * @param closeOther Whether to close other scenes, default is true (optional).\r\n     * @param param Parameters for opening the page, will be passed to the onOpened method (optional).\r\n     * @zh 打开场景。注意：被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收。\r\n     * @param closeOther 是否关闭其他场景，默认为true（可选）。\r\n     * @param param 打开页面的参数，会传递给onOpened方法（可选）。\r\n     */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        if (closeOther) Scene.closeAll();\r\n        Scene.root.addChild(this);\r\n        if (this._scene3D)\r\n            ILaya.stage.addChildAt(this._scene3D, 0);\r\n        this.onOpened(param);\r\n    }\r\n\r\n    /**\r\n     * @en Called after the scene is opened (if there is a pop-up animation, it will be executed after the animation is completed).\r\n     * @param param Parameters.\r\n     * @zh 场景打开完成后调用此方法（如果有弹出动画，则在动画完成后执行）。\r\n     * @param param 参数。\r\n     */\r\n    onOpened(param: any): void {\r\n    }\r\n\r\n    /**\r\n     * @en Close the scene. Note: If the closed scene has not set autoDestroyAtRemoved=true, resources may not be reclaimed and need to be manually reclaimed.\r\n     * @param type The reason for closing, which will be passed to the onClosed function.\r\n     * @zh 关闭场景。注意：被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收。\r\n     * @param type 关闭的原因，会传递给onClosed函数。\r\n     */\r\n    close(type: string = null): void {\r\n        this.onClosed(type);\r\n        if (this.autoDestroyAtClosed) {\r\n            this.destroy();\r\n            if (this._scene3D)\r\n                this._scene3D.destroy();\r\n        }\r\n        else {\r\n            this.removeSelf();\r\n            if (this._scene3D)\r\n                this._scene3D.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Called after the scene is closed (if there is a closing animation, it will be executed after the animation is completed).\r\n     * @param type If triggered by clicking the default close button, pass the name of the close button, otherwise null.\r\n     * @zh 关闭完成后调用此方法（如果有关闭动画，则在动画完成后执行）。\r\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\r\n     */\r\n    onClosed(type: string = null): void {\r\n        //trace(\"onClosed\");\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     * @en Destroy the scene.\r\n     * @param destroyChild Whether to delete child nodes.\r\n     * @zh 场景销毁。\r\n     * @param destroyChild 是否删除子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._scene3D) {\r\n            this._scene3D.destroy();\r\n            this._scene3D = null;\r\n        }\r\n\r\n        this._idMap = null;\r\n        Scene.unDestroyedScenes.delete(this);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc \r\n     * @override\r\n     * @en Get the width of the scene.\r\n     * @zh 获取场景的宽度。\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc \r\n     * @override\r\n     * @en Get the height of the scene.\r\n     * @zh 获取场景的高度。\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @en Scene clock\r\n     * @zh 场景时钟\r\n     */\r\n    get timer(): Timer {\r\n        return this._timer;\r\n    }\r\n\r\n    set timer(value: Timer) {\r\n        this._timer = value;\r\n    }\r\n\r\n    /**\r\n     * @en 3D scene instances included in the scene\r\n     * @zh 场景包含的3D场景实例\r\n     */\r\n    get scene3D() {\r\n        return this._scene3D;\r\n    }\r\n\r\n    /**\r\n     * @en The vertical distance (in pixels) between the top edge of the component and the top edge of its content area.\r\n     * @zh 从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。\r\n     */\r\n    get top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The vertical distance (in pixels) between the bottom edge of the component and the bottom edge of its content area.\r\n     * @zh 从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。\r\n     */\r\n    get bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The horizontal distance (in pixels) between the left edge of the component and the left edge of its content area.\r\n     * @zh 从组件左边到其内容区域左边之间的水平距离（以像素为单位）。\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The horizontal distance (in pixels) between the right edge of the component and the right edge of its content area.\r\n     * @zh 从组件右边到其内容区域右边之间的水平距离（以像素为单位）。\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance (in pixels) between the horizontal axis of this object and the horizontal center line of its parent container.\r\n     * @zh 在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The distance (in pixels) between the vertical axis of this object and the vertical center line of its parent container.\r\n     * @zh 在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * @en Repositioning\r\n     * @zh 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取对象的布局样式。请不要直接修改此对象\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    //////////////////////////////////////静态方法//////////////////////////////////////////\r\n\r\n    /**\r\n     * @en Get the root container of the scene.\r\n     * @zh 获取场景根容器\r\n     */\r\n    static get root(): Sprite {\r\n        let root = Scene._root;\r\n        if (!root) {\r\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\r\n            root.name = \"root\";\r\n            root.mouseThrough = true;\r\n            ILaya.stage.on(\"resize\", null, () => {\r\n                root.size(ILaya.stage.width, ILaya.stage.height);\r\n                root.event(Event.RESIZE);\r\n            });\r\n            root.size(ILaya.stage.width, ILaya.stage.height);\r\n            root.event(Event.RESIZE);\r\n        }\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * @en Load the scene and resources used by the scene.\r\n     * @param url The scene address.\r\n     * @param complete Callback function when loading is complete, returns the scene instance (optional).\r\n     * @param progress Callback function for loading progress (optional).\r\n     * @zh 加载场景及场景使用到的资源。\r\n     * @param url 场景地址。\r\n     * @param complete 加载完成回调，返回场景实例（可选）。\r\n     * @param progress 加载进度回调（可选）。\r\n     */\r\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        return ILaya.loader.load(url, null, value => {\r\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            progress && progress.runWith(value);\r\n        }).then((content: Prefab) => {\r\n            if (!content) throw \"Can not find scene:\" + url;\r\n\r\n            let scene: Scene;\r\n            let errors: Array<any> = [];\r\n            let ret = content.create(null, errors);\r\n            if (errors.length > 0)\r\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\r\n\r\n            if (ret instanceof Scene)\r\n                scene = ret;\r\n            else if (ret._is3D) {\r\n                scene = new Scene();\r\n                scene.left = scene.right = scene.top = scene.bottom = 0;\r\n                scene._scene3D = ret;\r\n            }\r\n            else\r\n                throw \"Not a scene:\" + url;\r\n\r\n            scene._viewCreated = true;\r\n            if (scene._scene3D)\r\n                scene._scene3D._scene2D = scene;\r\n            Scene.unDestroyedScenes.add(scene);\r\n            Scene.hideLoadingPage();\r\n            complete && complete.runWith(scene);\r\n\r\n            return scene;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @en Load and open the scene.\r\n     * @param url The scene address.\r\n     * @param closeOther Whether to close other scenes, default is true (optional). Note: If the closed scene has not set autoDestroyAtRemoved=true, resources may not be reclaimed and need to be manually reclaimed.\r\n     * @param param Parameters for opening the page, will be passed to the onOpened method (optional).\r\n     * @param complete Callback function when opening is complete, returns the scene instance (optional).\r\n     * @param progress Callback function for loading progress (optional).\r\n     * @zh 加载并打开场景。\r\n     * @param url 场景地址。\r\n     * @param closeOther 是否关闭其他场景，默认为true（可选）。注意：被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收。\r\n     * @param param 打开页面的参数，会传递给onOpened方法（可选）。\r\n     * @param complete 打开完成回调，返回场景实例（可选）。\r\n     * @param progress 加载进度回调（可选）。\r\n     */\r\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        //兼容处理\r\n        if (param instanceof Handler) {\r\n            var temp: any = complete;\r\n            complete = param;\r\n            param = temp;\r\n        }\r\n        Scene.showLoadingPage();\r\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\r\n    }\r\n\r\n    /**@private */\r\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\r\n        scene.open(closeOther, param);\r\n        if (complete) complete.runWith(scene);\r\n    }\r\n\r\n    /**\r\n     * @en Close the scene (including dialog) based on the address.\r\n     * @param url The scene address.\r\n     * @param name If name is not empty, it must match to close the scene.\r\n     * @returns Returns whether the closure was successful. If the url is not found, it will not be successful.\r\n     * @zh 根据地址，关闭场景（包括对话框）。\r\n     * @param url 场景地址。\r\n     * @param name 如果name不为空，name必须相同才能关闭。\r\n     * @returns 返回是否关闭成功，如果url找不到，则不成功。\r\n     */\r\n    static close(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\r\n                scene.close();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * @en Close all scenes, not including dialogs. To close dialogs, please use Dialog.closeAll().\r\n     * Note: If the closed scene has not set autoDestroyAtRemoved=true, resources may not be reclaimed and need to be manually reclaimed.\r\n     * @zh 关闭所有场景，不包括对话框。如果要关闭对话框，请使用Dialog.closeAll()。\r\n     * 注意：被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收。\r\n     */\r\n    static closeAll(): void {\r\n        let root: Sprite = Scene.root;\r\n        for (let i = 0, n = root.numChildren; i < n; i++) {\r\n            var scene = root.getChildAt(0);\r\n            if (scene instanceof Scene)\r\n                scene.close();\r\n            else\r\n                scene.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the scene (including dialog) based on the address.\r\n     * @param url The scene address.\r\n     * @param name If name is not empty, it must match to destroy the scene.\r\n     * @returns Returns whether the destruction was successful. If the url is not found, it will not be successful.\r\n     * @zh 根据地址，销毁场景（包括对话框）。\r\n     * @param url 场景地址。\r\n     * @param name 如果name不为空，name必须相同才能销毁。\r\n     * @returns 返回是否销毁成功，如果url找不到，则不成功。\r\n     */\r\n    static destroy(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\r\n                scene.destroy();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy currently unused resources. This function will ignore resources with lock=true.\r\n     * @zh 销毁当前没有被使用的资源，该函数会忽略lock=true的资源。\r\n     */\r\n    static gc(): void {\r\n        Resource.destroyUnusedResources();\r\n    }\r\n\r\n    /**\r\n     * @en Set the loading interface. The engine will delay opening the loading interface after calling the open method, and close the loading interface after the page is added to the stage.\r\n     * @param loadPage The loading page instance.\r\n     * @zh 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面。\r\n     * @param loadPage load界面实例。\r\n     */\r\n    static setLoadingPage(loadPage: Sprite): void {\r\n        Scene._loadPage = loadPage;\r\n    }\r\n\r\n    /**\r\n     * @en Display the loading interface.\r\n     * @param param Opening parameters. If it's a scene, it will be passed to the onOpened method.\r\n     * @param delay Delay opening time, default is 500 milliseconds.\r\n     * @zh 显示loading界面。\r\n     * @param param 打开参数，如果是scene，则会传递给onOpened方法。\r\n     * @param delay 延迟打开时间，默认500毫秒。\r\n     */\r\n    static showLoadingPage(param: any = null, delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\r\n        }\r\n    }\r\n\r\n    private static _showLoading(param: any): void {\r\n        ILaya.stage.addChild(Scene._loadPage);\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.onOpened(param);\r\n    }\r\n\r\n    private static _hideLoading(): void {\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.close();\r\n        else\r\n            Scene._loadPage.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * @en Hide the loading interface.\r\n     * @param delay Delay closing time, default is 500 milliseconds.\r\n     * @zh 隐藏loading界面。\r\n     * @param delay 延迟关闭时间，默认500毫秒。\r\n     */\r\n    static hideLoadingPage(delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\r\n        }\r\n    }\r\n}","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Filter } from \"./Filter\";\r\n\r\n/**\r\n * @en Integral result cache\r\n * @zh 积分结果缓存\r\n */\r\nvar _definiteIntegralMap: { [key: number]: number } = {};\r\n/**\r\n * @en Blur filter\r\n * @zh 模糊滤镜\r\n */\r\nexport class BlurFilter extends Filter {\r\n    /**@internal */\r\n    shaderData = new TextureSV();\r\n    /**\r\n     * @en The intensity of the blur filter. The higher the value, the more indistinct the image becomes.\r\n     * @zh 模糊滤镜的强度。值越大，图像越不清晰。\r\n     */\r\n    private _strength: number;\r\n\r\n    private _shaderV1 = new Vector4();\r\n\r\n    /**\r\n     * @en Constructs a new BlurFilter instance with the specified strength.\r\n     * The strength of the blur filter, with a default value of 4. Higher values result in a more indistinct image.\r\n     * @param strength The strength of the blur filter. The default value is 4.\r\n     * @zh 创建一个新的模糊滤镜实例，并设置指定的强度值。\r\n     * 模糊滤镜的强度，默认值为4。值越大，图像越不清晰。\r\n     * @param strength 模糊滤镜的强度。默认值为4。\r\n     */\r\n    constructor(strength = 4) {\r\n        super();\r\n        this.strength = strength;\r\n        //this._glRender = new BlurFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @en The strength of the blur filter.\r\n     * @zh 模糊滤镜的强度。\r\n     */\r\n    get strength() {\r\n        return this._strength;\r\n    }\r\n\r\n    set strength(v: number) {\r\n        this._strength = Math.max(Math.abs(v), 2);//<2的话，函数太细太高不适合下面的方法\r\n        var sigma = this._strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\r\n        var sigma2 = sigma * sigma;\r\n        let v1 = this._shaderV1 = new Vector4(this.strength, sigma2,\r\n            2.0 * sigma2,\r\n            1.0 / (2.0 * Math.PI * sigma2))\r\n\r\n        //由于目前shader中写死了blur宽度是9，相当于希望3σ是4，可是实际使用的时候经常会strength超过4，\r\n        //这时候blur范围内的积分<1会导致变暗变透明，所以需要计算实际积分值进行放大\r\n        //使用公式计算误差较大，直接累加把\r\n        let s = 0;\r\n        let key = Math.floor(this.strength * 10);\r\n        if (_definiteIntegralMap[key] != undefined) {\r\n            s = _definiteIntegralMap[key];\r\n        } else {\r\n            for (let y = -4; y <= 4; ++y) {\r\n                for (let x = -4; x <= 4; ++x) {\r\n                    s += v1.w * Math.exp(-(x * x + y * y) / v1.z);\r\n                }\r\n            }\r\n            _definiteIntegralMap[key] = s;\r\n        }\r\n        v1.w /= s;\r\n        this.onChange();\r\n    }\r\n\r\n    /**\r\n     * @en Renders the blur filter effect on the given source texture.\r\n     * @param srctexture The source texture to apply the blur filter to.\r\n     * @param width The width of the rendering area.\r\n     * @param height The height of the rendering area.\r\n     * @zh 将模糊滤镜效果渲染到给定的源纹理上。\r\n     * @param srctexture 要应用模糊滤镜的源纹理。\r\n     * @param width 渲染区域的宽度。\r\n     * @param height 渲染区域的高度。\r\n     */\r\n    render(srctexture: RenderTexture2D, width: number, height: number): void {\r\n        let marginLeft = 50;\r\n        let marginTop = 50;\r\n        this.left = -marginLeft;\r\n        this.top = -marginTop;\r\n        let texwidth = width + 2 * marginLeft;\r\n        let texheight = height + 2 * marginTop;\r\n        this.width = texwidth;\r\n        this.height = texheight;\r\n        if (!this.texture || this.texture.destroyed || this.texture.width != texwidth || this.texture.height != texheight) {\r\n            if (this.texture)\r\n                this.texture.destroy();\r\n            this.texture = new RenderTexture2D(texwidth, texheight, RenderTargetFormat.R8G8B8A8);\r\n        }\r\n\r\n        let render2d = this._render2D.clone(this.texture);\r\n        //render2d.out = this.texture;\r\n        render2d.renderStart(true, new Color(0, 0, 0, 0));\r\n        //修改mesh\r\n        let rectVB = this._rectMeshVB;\r\n        let stridef32 = this._rectMesh.vertexDeclarition.vertexStride / 4;\r\n        rectVB[0] = marginLeft; rectVB[1] = marginTop;  //v0.xy\r\n        rectVB[stridef32] = marginLeft + width; rectVB[stridef32 + 1] = marginTop; //v1.xy\r\n        rectVB[stridef32 * 2] = marginLeft + width; rectVB[stridef32 * 2 + 1] = marginTop + height; //v2.xy\r\n        rectVB[stridef32 * 3] = marginTop; rectVB[stridef32 * 3 + 1] = marginTop + height;   //v3.xy\r\n        //shaderdata\r\n        let shadersv = this.shaderData;\r\n        shadersv.shaderData.addDefine(ShaderDefines2D.FILTERBLUR);\r\n        shadersv.size = new Vector2(texwidth, texheight);\r\n        shadersv.textureHost = srctexture;\r\n        shadersv.blurInfo = new Vector2(texwidth, texheight);\r\n\r\n        shadersv.strength_sig2_2sig2_gauss1 = this._shaderV1;\r\n        render2d.draw(\r\n            this._rectMesh,\r\n            0, 4 * this._rectMesh.vertexDeclarition.vertexStride,\r\n            0, 12,\r\n            shadersv, null);\r\n        render2d.renderEnd();\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { IFilter } from \"./IFilter\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { ShaderDefine } from \"../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\n\r\n/**\r\n * @en An array representing a list of contrast values.\r\n * @zh 表示对比度值列表的数组。\r\n */\r\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\r\n/**\r\n * @en An array representing a gray matrix.\r\n * @zh 表示灰色矩阵的数组。\r\n */\r\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\r\n/**\r\n * @en An array representing an identity matrix, which signifies no effect or change.\r\n * @zh 表示单位矩阵的数组，它表示没有效果或变化。\r\n */\r\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n/**\r\n * @en Standard matrix length\r\n * @zh 标准矩阵长度。\r\n */\r\nconst LENGTH: number = 25;\r\n\r\n/**\r\n * @en The `ColorFilter` class represents a color filter that applies a 4x5 matrix transformation to the RGBA color and Alpha values of each pixel of the input image to produce a result with a new set of RGBA colors and Alpha values. This class allows for saturation adjustments, hue rotation, brightness to Alpha, and various other effects. You can apply the filter to any display object (i.e., an object that inherits from the `Sprite` class).\r\n * For RGBA values, the most significant byte represents the red channel value, followed by the green, blue, and Alpha channel values respectively.\r\n * @zh `ColorFilter` 类是一个颜色滤镜，它将 4x5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。此类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即从 `Sprite` 类继承的对象）。\r\n * 注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。\r\n */\r\nexport class ColorFilter extends Filter implements IFilter {\r\n\r\n    /** @internal */\r\n    _mat: Float32Array;\r\n    /** @internal */\r\n    _alpha: Float32Array;\r\n    /**@internal \r\n     * @en Represents the current matrix being applied by the filter.\r\n     * @zh 当前使用的矩阵\r\n     */\r\n    _matrix: any[];\r\n\r\n    /**\r\n     * @en Creates an instance of the ColorFilter class with an optional 4x5 matrix for color transformation.\r\n     * @param mat An array with 20 elements arranged in a 4x5 matrix for color transformation.\r\n     * @zh 创建 `ColorFilter` 类的实例，可选择传入用于颜色转换的 4x5 矩阵。\r\n     * @param mat 用于颜色转换的由 20 个元素组成的数组（排列成 4x5 矩阵）。\r\n     */\r\n    constructor(mat: any[] = null) {\r\n        super();\r\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\r\n        this._mat = new Float32Array(16);\r\n        this._alpha = new Float32Array(4);\r\n        this.setByMatrix(mat);\r\n    }\r\n    /** @ignore */\r\n    render(srctexture: RenderTexture2D, width: number, height: number): void {\r\n        let texwidth = width;\r\n        let texheight = height;\r\n        this.width = texwidth;\r\n        this.height = texheight;\r\n        if (!this.texture || this.texture.destroyed || this.texture.width != texwidth || this.texture.height != texheight) {\r\n            if (this.texture)\r\n                this.texture.destroy();\r\n            this.texture = new RenderTexture2D(texwidth, texheight, RenderTargetFormat.R8G8B8A8);\r\n        }\r\n\r\n        let render2d = this._render2D.clone(this.texture);\r\n        //render2d.out = this.texture;\r\n        render2d.renderStart(true, new Color(0, 0, 0, 0));\r\n        //修改mesh\r\n        let rectVB = this._rectMeshVB;\r\n        let stridef32 = this._rectMesh.vertexDeclarition.vertexStride / 4;\r\n        rectVB[0] = 0; rectVB[1] = 0;  //v0.xy\r\n        rectVB[stridef32] = width; rectVB[stridef32 + 1] = 0; //v1.xy\r\n        rectVB[stridef32 * 2] = width; rectVB[stridef32 * 2 + 1] = height; //v2.xy\r\n        rectVB[stridef32 * 3] = 0; rectVB[stridef32 * 3 + 1] =  height;   //v3.xy\r\n        //shaderdata\r\n        let shadersv = new TextureSV();// this.shaderData;\r\n        shadersv.setFilter(this);\r\n        Matrix4x4.TEMPMatrix0.cloneByArray(this._mat);\r\n        shadersv.shaderData.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, Matrix4x4.TEMPMatrix0);\r\n        Vector4.tempVec4.setValue(this._alpha[0], this._alpha[1], this._alpha[2], this._alpha[3]);\r\n        shadersv.shaderData.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, Vector4.tempVec4);\r\n\r\n        shadersv.size = new Vector2(texwidth, texheight);\r\n        shadersv.textureHost = srctexture;\r\n        render2d.draw(\r\n            this._rectMesh,\r\n            0, 4 * this._rectMesh.vertexDeclarition.vertexStride,\r\n            0, 12,\r\n            shadersv, null);\r\n        render2d.renderEnd();        \r\n    }\r\n\r\n    /**\r\n     * @en Sets the filter to a grayscale filter.\r\n     * @zh 将滤镜设置为灰度滤镜。\r\n     */\r\n    gray(): ColorFilter {\r\n        return this.setByMatrix(GRAY_MATRIX);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the filter to a color transformation filter with the specified red, green, blue, and alpha coefficients.\r\n     * @param red The red coefficient, range: 0 to 1.\r\n     * @param green The green coefficient, range: 0 to 1.\r\n     * @param blue The blue coefficient, range: 0 to 1.\r\n     * @param alpha The alpha coefficient, range: 0 to 1.\r\n     * @zh 将滤镜设置为具有指定红色、绿色、蓝色和 Alpha 系数的颜色转换滤镜。\r\n     * @param red 红色系数,范围:0~1\r\n     * @param green 绿色系数,范围:0~1\r\n     * @param blue 蓝色系数,范围:0~1\r\n     * @param alpha alpha系数,范围:0~1\r\n     */\r\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\r\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the filter color using a color value.\r\n     * @param color The color value in string format.\r\n     * @zh 使用颜色值设置滤镜颜色。\r\n     * @param  color 颜色值\r\n     */\r\n    setColor(color: string): ColorFilter {\r\n        var arr: any[] = ColorUtils.create(color).arrColor;\r\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\r\n        return this.setByMatrix(mt);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the matrix data.\r\n     * @param matrix An array with 20 elements arranged in a 4x5 matrix.\r\n     * @zh 设置矩阵数据\r\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\r\n     */\r\n    setByMatrix(matrix: any[]): ColorFilter {\r\n        if (this._matrix != matrix) this._copyMatrix(matrix);\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n        for (var i: number = 0; i < 20; i++) {\r\n            if (i % 5 != 4) {\r\n                this._mat[j++] = matrix[i];\r\n            } else {\r\n                this._alpha[z++] = matrix[i];\r\n            }\r\n        }\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @override\r\n     * @en Gets the type of the filter.\r\n     * @zh 获取滤镜类型。\r\n     */\r\n    get type(): number {\r\n        return Filter.COLOR;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Gets the shader definition used for the color filter.\r\n     * @zh 获取颜色滤镜使用的着色器定义。\r\n     */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERCOLOR;\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts color properties including brightness, contrast, saturation, and hue.\r\n     * @param brightness Brightness value, range: -100 to 100.\r\n     * @param contrast Contrast value, range: -100 to 100.\r\n     * @param saturation Saturation value, range: -100 to 100.\r\n     * @param hue Hue value, range: -180 to 180.\r\n     * @zh 调整颜色属性，包括亮度、对比度、饱和度和色调。\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @param hue 色调,范围:-180~180\r\n     */\r\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\r\n        this.adjustHue(hue);\r\n        this.adjustContrast(contrast);\r\n        this.adjustBrightness(brightness);\r\n        this.adjustSaturation(saturation);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the brightness of the filter.\r\n     * @param brightness Brightness value, range: -100 to 100.\r\n     * @zh 调整滤镜的亮度。\r\n     * @param brightness 亮度,范围:-100~100\r\n     */\r\n    adjustBrightness(brightness: number): ColorFilter {\r\n        brightness = this._clampValue(brightness, 100);\r\n        if (brightness == 0 || isNaN(brightness)) return this;\r\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the contrast of the image. \r\n     * @param contrast The contrast value. The contrast value should be between -100 and 100.\r\n     * @zh 调整图像的对比度。\r\n     * @param contrast 对比度值。对比度值应在 -100 到 100 之间。\r\n     */\r\n    adjustContrast(contrast: number): ColorFilter {\r\n        contrast = this._clampValue(contrast, 100);\r\n        if (contrast == 0 || isNaN(contrast)) return this;\r\n        var x: number;\r\n        if (contrast < 0) {\r\n            x = 127 + contrast / 100 * 127\r\n        } else {\r\n            x = contrast % 1;\r\n            if (x == 0) {\r\n                x = DELTA_INDEX[contrast];\r\n            } else {\r\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\r\n            }\r\n            x = x * 127 + 127;\r\n        }\r\n        var x1: number = x / 127;\r\n        var x2: number = (127 - x) * 0.5;\r\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the saturation of the image.\r\n     * @param saturation The saturation value. The saturation value should be between -100 and 100.\r\n     * @zh 调整图像的饱和度。\r\n     * @param saturation 饱和度值。饱和度值应在 -100 到 100 之间。\r\n     */\r\n    adjustSaturation(saturation: number): ColorFilter {\r\n        saturation = this._clampValue(saturation, 100);\r\n        if (saturation == 0 || isNaN(saturation)) return this;\r\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\r\n        var dx: number = 1 - x;\r\n        var r: number = 0.3086 * dx;\r\n        var g: number = 0.6094 * dx;\r\n        var b: number = 0.0820 * dx;\r\n\r\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the hue of the image.\r\n     * @param hue The hue value.The hue value should be between -180 and 180.\r\n     * @zh 调整图像的色调。\r\n     * @param hue 色调值。色调值应在 -180 到 180 之间。\r\n     */\r\n    adjustHue(hue: number): ColorFilter {\r\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\r\n        if (hue == 0 || isNaN(hue)) return this;\r\n        var cos: number = Math.cos(hue);\r\n        var sin: number = Math.sin(hue);\r\n        var r: number = 0.213;\r\n        var g: number = 0.715;\r\n        var b: number = 0.072;\r\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * @en Resets the filter to the identity matrix, removing any filter effects.\r\n     * @zh 将滤镜重置为单位矩阵，移除所有滤镜效果。\r\n     */\r\n    reset(): ColorFilter {\r\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\r\n    }\r\n\r\n    /**\r\n     * @en Multiplication.\r\n     * @param matrix The matrix to multiply with the current one.\r\n     * @zh 矩阵乘法\r\n     * @param matrix 要与当前矩阵相乘的矩阵。\r\n     */\r\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\r\n        var col: any[] = [];\r\n        this._matrix = this._fixMatrix(this._matrix);\r\n        for (var i: number = 0; i < 5; i++) {\r\n            for (var j: number = 0; j < 5; j++) {\r\n                col[j] = this._matrix[j + i * 5];\r\n            }\r\n            for (j = 0; j < 5; j++) {\r\n                var val: number = 0;\r\n                for (var k: number = 0; k < 5; k++) {\r\n                    val += matrix[j + k * 5] * col[k];\r\n                }\r\n                this._matrix[j + i * 5] = val;\r\n            }\r\n        }\r\n        return this.setByMatrix(this._matrix);\r\n    }\r\n\r\n    /**\r\n     * @en Clamps the value to a specified range.\r\n     * @param val The current value to be clamped.\r\n     * @param limit The limit range for the value.\r\n     * @zh 规范值的范围。\r\n     * @param val 当前值。\r\n     * @param limit 值的范围限制。\r\n     */\r\n    private _clampValue(val: number, limit: number): number {\r\n        return Math.min(limit, Math.max(-limit, val));\r\n    }\r\n\r\n    /**\r\n     * @en Adjusts the matrix to the correct size.\r\n     * @param matrix The matrix to be adjusted.\r\n     * @zh 规范矩阵，确保矩阵大小正确。\r\n     * @param matrix 需要调整的矩阵。\r\n     */\r\n    private _fixMatrix(matrix: any[] = null): any[] {\r\n        if (matrix == null) return IDENTITY_MATRIX;\r\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\r\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * @en Copies the matrix\r\n     * @zh 复制矩阵\r\n     */\r\n    private _copyMatrix(matrix: any[]): any[] {\r\n        var len: number = LENGTH;\r\n        if (!this._matrix) this._matrix = [];\r\n        for (var i: number = 0; i < len; i++) {\r\n            this._matrix[i] = matrix[i];\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    /**\r\n     * @en Called after deserialization.\r\n     * @zh 反序列化后调用。\r\n     */\r\n    onAfterDeserialize() {\r\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\r\n        this.color(arr[0], arr[1], arr[2], arr[3]);\r\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\r\n    }\r\n}\r\n\r\n","import { ShaderDefine } from \"../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Filter } from \"./Filter\";\r\n\r\n/**\r\n * @en Luminous filter (can also be used as shadow filter)\r\n * @zh 发光滤镜(也可以当成阴影滤使用）\r\n */\r\nexport class GlowFilter extends Filter {\r\n\r\n    /**@internal */\r\n    _sv_blurInfo1: number[] = new Array(4);\t//x,blurWidth,offx,offy\r\n    /**@internal */\r\n    _sv_blurInfo2 = [0, 0, 1, 0];\r\n    /**滤镜的颜色*/\r\n    private _color: ColorUtils;\r\n    /**@internal */\r\n    _color_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof1_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof2_native: Float32Array;\r\n\r\n    private shaderDataBlur: TextureSV;\r\n    private shaderDataCopy: TextureSV;\r\n    private textureExtend: RenderTexture2D;    //扩展边界用\r\n    private shaderDataCopy1: TextureSV;\r\n    private _flipY = false;\r\n\r\n    /**\r\n     * @en Creates an instance of a glow filter.\r\n     * @param color The color of the glow filter. \r\n     * @param blur The size of blurred edges\r\n     * @param offX The horizontal offset for the glow effect.\r\n     * @param offY The vertical offset for the glow effect.\r\n     * @zh 创建一个发光滤镜实例。\r\n     * @param color 发光滤镜的颜色。\r\n     * @param blur 边缘模糊的大小。\r\n     * @param offX 发光效果的水平偏移。\r\n     * @param offY 发光效果的垂直偏移。\r\n     */\r\n    constructor(color: string, blur = 4, offX = 6, offY = 6) {\r\n        super();\r\n        this._color = new ColorUtils(color || \"#000\");\r\n        //限制最大效果为20\r\n        this.blur = Math.min(blur, 20);\r\n        this.offX = offX;\r\n        this.offY = offY;\r\n        this._sv_blurInfo1[1] = this.blur;\r\n        this.shaderDataBlur = new TextureSV();\r\n        this.shaderDataBlur.u_blurInfo1 = new Vector4();\r\n        this.shaderDataBlur.u_blurInfo2 = new Vector4();\r\n        this.shaderDataBlur.color = new Vector4();\r\n        this.shaderDataBlur.size = new Vector2();\r\n        this.shaderDataBlur.blurInfo = new Vector2();\r\n        this.shaderDataCopy = new TextureSV();\r\n        this.shaderDataCopy.size = new Vector2();\r\n        this.shaderDataCopy1 = new TextureSV();\r\n    }\r\n\r\n    private _fillQuad(x: number, y: number, w: number, h: number, flipY = false) {\r\n        let uvrect: number[];\r\n        if (flipY) {\r\n            uvrect = [0, 1, 1, 0];\r\n        } else {\r\n            uvrect = [0, 0, 1, 1];\r\n        }\r\n        let rectVB = this._rectMeshVB;\r\n        let stridef32 = this._rectMesh.vertexDeclarition.vertexStride / 4;\r\n        rectVB[0] = x; rectVB[1] = y; rectVB[2] = uvrect[0]; rectVB[3] = uvrect[1];\r\n        rectVB[stridef32] = x + w; rectVB[stridef32 + 1] = y; rectVB[stridef32 + 2] = uvrect[2]; rectVB[stridef32 + 3] = uvrect[1];\r\n        rectVB[stridef32 * 2] = x + w; rectVB[stridef32 * 2 + 1] = y + h; rectVB[stridef32 * 2 + 2] = uvrect[2]; rectVB[stridef32 * 2 + 3] = uvrect[3];\r\n        rectVB[stridef32 * 3] = y; rectVB[stridef32 * 3 + 1] = y + h; rectVB[stridef32 * 3 + 2] = uvrect[0]; rectVB[stridef32 * 3 + 3] = uvrect[3];\r\n    }\r\n\r\n    override useFlipY(b: boolean) {\r\n        super.useFlipY(b);\r\n        this._flipY = b;\r\n    }\r\n\r\n    /**\r\n     * @en Renders the glow effect based on the source texture.\r\n     * @param srctexture The source RenderTexture2D to apply the glow effect on.\r\n     * @param width The width of the rendering area.\r\n     * @param height The height of the rendering area.\r\n     * @zh 根据源纹理渲染发光效果。\r\n     * @param srctexture 应用发光效果的源 RenderTexture2D。\r\n     * @param width 渲染区域的宽度。\r\n     * @param height 渲染区域的高度。\r\n     */\r\n    render(srctexture: RenderTexture2D, width: number, height: number): void {\r\n        let marginLeft = 50;\r\n        let marginTop = 50;\r\n        this.left = -marginLeft;\r\n        this.top = -marginTop;\r\n        let outTexWidth = width + 2 * marginLeft;\r\n        let outTexHeight = height + 2 * marginTop;\r\n        this.width = outTexWidth;\r\n        this.height = outTexHeight;\r\n\r\n        //先把贴图画到扩展后的贴图上，这样可以避免处理边界问题。后面直接拿着扩展后的贴图处理就行了\r\n        if (!this.textureExtend || this.textureExtend.destroyed || this.textureExtend.width != outTexWidth ||\r\n            this.textureExtend.height != outTexHeight) {\r\n            if (this.textureExtend)\r\n                this.textureExtend.destroy();\r\n            this.textureExtend = new RenderTexture2D(outTexWidth, outTexHeight, RenderTargetFormat.R8G8B8A8);\r\n        }\r\n\r\n        let render2d = this._render2D.clone(this.textureExtend);\r\n        //render2d.out = this.textureExtend;\r\n        render2d.renderStart(true, new Color(0, 0, 0, 0));\r\n        this.shaderDataCopy1.size = new Vector2(outTexWidth, outTexHeight);\r\n        this.shaderDataCopy1.textureHost = srctexture;\r\n        this._fillQuad(marginLeft, marginTop, srctexture.width, srctexture.height, this._flipY);\r\n        render2d.draw(\r\n            this._rectMesh,\r\n            0, 4 * this._rectMesh.vertexDeclarition.vertexStride,\r\n            0, 12,\r\n            this.shaderDataCopy1, null);\r\n        render2d.renderEnd();\r\n\r\n        //下面要画模糊的部分\r\n        if (!this.texture || this.texture.destroyed || this.texture.width != outTexWidth || this.texture.height != outTexHeight) {\r\n            if (this.texture)\r\n                this.texture.destroy();\r\n            this.texture = new RenderTexture2D(outTexWidth, outTexHeight, RenderTargetFormat.R8G8B8A8);\r\n        }\r\n\r\n        render2d = render2d.clone(this.texture)\r\n        render2d.renderStart(true, new Color(0, 0, 0, 0));\r\n        //翻转的解释：不管上面的this._flipY的值，这里都要翻转，this._flipY表示源rt是否要翻转，跟这里没有关系\r\n        //这里是指是否要翻转 this.textureExtend，所以必须是true\r\n        this._fillQuad(0, 0, outTexWidth, outTexHeight, true);    //翻转y\r\n\r\n        //srctexture.wrapModeU = WrapMode.Clamp;\r\n        //srctexture.wrapModeV = WrapMode.Clamp;\r\n\r\n        let shadersv = this.shaderDataBlur;\r\n        shadersv.shaderData.addDefine(ShaderDefines2D.FILTERGLOW);\r\n        let size = shadersv.size;\r\n        size.setValue(outTexWidth, outTexHeight); shadersv.size = size;\r\n        shadersv.textureHost = this.textureExtend;\r\n        let blurInfo = shadersv.blurInfo;\r\n        blurInfo.setValue(outTexWidth, outTexHeight); shadersv.blurInfo = blurInfo;\r\n        let u_blurInfo1 = shadersv.u_blurInfo1;\r\n        u_blurInfo1.setValue(this._sv_blurInfo1[0], this._sv_blurInfo1[1], this._sv_blurInfo1[2], this._sv_blurInfo1[3])\r\n        shadersv.u_blurInfo1 = u_blurInfo1;\r\n        let u_blurInfo2 = shadersv.u_blurInfo2;\r\n        u_blurInfo2.setValue(srctexture.width, srctexture.height, this._sv_blurInfo2[2], this._sv_blurInfo2[3]);\r\n        shadersv.u_blurInfo2 = u_blurInfo2;\r\n        let color = this.getColor();\r\n        let svColor = shadersv.color;\r\n        svColor.setValue(color[0], color[1], color[2], color[3]); shadersv.color = svColor;\r\n        //模糊的底\r\n        render2d.draw(\r\n            this._rectMesh,\r\n            0, 4 * this._rectMesh.vertexDeclarition.vertexStride,\r\n            0, 12,\r\n            shadersv, null);\r\n        //最后覆盖一下原始图片\r\n        let shadercpy = this.shaderDataCopy;\r\n        size = shadercpy.size;\r\n        size.setValue(outTexWidth, outTexHeight);\r\n        shadercpy.size = size;\r\n        shadercpy.textureHost = srctexture;\r\n        this._fillQuad(marginLeft, marginTop, srctexture.width, srctexture.height, this._flipY);\r\n        render2d.draw(\r\n            this._rectMesh,\r\n            0, 4 * this._rectMesh.vertexDeclarition.vertexStride,\r\n            0, 12,\r\n            shadercpy, null);\r\n\r\n        render2d.renderEnd();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Internal use only. Gets the shader define associated with this filter.\r\n     * @zh 获取与此滤镜相关联的着色器定义。\r\n     */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERGLOW;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Gets Y offset value\r\n     * @zh 获取Y偏移值\r\n     */\r\n    get offY(): number {\r\n        return this._sv_blurInfo1[3];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Sets Y offset value\r\n     * @zh 设置Y偏移值\r\n     */\r\n    set offY(value: number) {\r\n        this._sv_blurInfo1[3] = value;\r\n        this.onChange();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Gets X offset value\r\n     * @zh 获取X偏移值\r\n     */\r\n    get offX(): number {\r\n        return this._sv_blurInfo1[2];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Sets X offset value\r\n     * @zh 设置X偏移值\r\n     */\r\n    set offX(value: number) {\r\n        this._sv_blurInfo1[2] = value;\r\n        this.onChange();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Gets X color value\r\n     * @zh 获取颜色值\r\n     */\r\n    get color(): string {\r\n        return this._color.strColor;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Sets X color value\r\n     * @zh 设置颜色值\r\n     */\r\n    set color(value: string) {\r\n        this._color = new ColorUtils(value);\r\n        this.onChange();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Get the color array from the color utility.\r\n     * @zh 从颜色工具获取颜色数组。\r\n     */\r\n    getColor(): any[] {\r\n        return this._color.arrColor;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Gest fuzzy value\r\n     * @zh 获取模糊值\r\n     */\r\n    get blur(): number {\r\n        return this._sv_blurInfo1[1];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en Sets fuzzy value\r\n     * @zh 设置模糊值\r\n     */\r\n    set blur(value: number) {\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\r\n        this.onChange();\r\n    }\r\n\r\n}\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { SoundManager } from \"./SoundManager\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * @en Nodes used for playing background music or sound effects\r\n * @zh 用于播放背景音乐或者音效的节点\r\n */\r\nexport class SoundNode extends Sprite {\r\n    private _channel: SoundChannel;\r\n    private _tar: Sprite;\r\n    private _playEvents: string;\r\n    private _stopEvents: string;\r\n    private _source: string;\r\n    private _isMusic: boolean;\r\n    private _autoPlay: boolean;\r\n    private _loop: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._loop = 1;\r\n\r\n        this.on(Event.ADDED, this, this._onParentChange);\r\n        this.on(Event.REMOVED, this, this._onParentChange);\r\n    }\r\n\r\n    /**\r\n     * @en Audio source\r\n     * @zh 音频源\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n        if (value) {\r\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n                this.play();\r\n        }\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    /**\r\n     * @en Determines if the audio type is background music. If true, it's background music; otherwise, it's a sound effect.\r\n     * @zh 确定音频类型是否为背景音乐。如果为true，音乐类型为背景音乐，否则为音效\r\n     */\r\n    get isMusic() {\r\n        return this._isMusic;\r\n    }\r\n\r\n    set isMusic(value: boolean) {\r\n        this._isMusic = value;\r\n    }\r\n\r\n    /**\r\n     * @en The number of times the audio should loop\r\n     * @zh 循环次数\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: number) {\r\n        this._loop = value;\r\n    }\r\n\r\n    /**\r\n     * @en Determines if the audio should auto-play\r\n     * @zh 是否自动播放\r\n     */\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n            this.play();\r\n    }\r\n\r\n    private _onParentChange(): void {\r\n        this.target = (<Sprite>this.parent);\r\n    }\r\n\r\n    /**\r\n     * @en Play the audio\r\n     * @param loops The number of times to loop the audio\r\n     * @param complete The callback function to be called when playback is complete\r\n     * @zh 播放音频\r\n     * @param loops 循环次数\r\n     * @param complete 完成回调函数\r\n     */\r\n    play(loops?: number, complete?: Handler): void {\r\n        if (!this._source) return;\r\n\r\n        if (loops == null || isNaN(loops))\r\n            loops = this._loop;\r\n\r\n        this.stop();\r\n\r\n        if (this._isMusic)\r\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\r\n        else\r\n            this._channel = SoundManager.playSound(this._source, loops, complete);\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing the audio\r\n     * @zh 停止播放音频\r\n     */\r\n    stop(): void {\r\n        if (this._channel && !this._channel.isStopped) {\r\n            this._channel.stop();\r\n        }\r\n        this._channel = null;\r\n    }\r\n\r\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\r\n        if (!(this as any)[action]) return;\r\n        if (!tar) return;\r\n        if (add) {\r\n            tar.on(event, this, (this as any)[action]);\r\n        } else {\r\n            tar.off(event, this, (this as any)[action]);\r\n        }\r\n\r\n    }\r\n\r\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\r\n        if (!tar) return;\r\n        if (!events) return;\r\n        let eventArr = events.split(\",\");\r\n        let len = eventArr.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this._setPlayAction(tar, eventArr[i], action, add);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The events string that trigger audio playback\r\n     * @zh 触发播放的事件字符串\r\n     */\r\n    set playEvent(events: string) {\r\n        this._playEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"play\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The target sprite object that controls audio playback\r\n     * @zh 控制播放的精灵对象\r\n     */\r\n    set target(tar: Sprite) {\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\r\n        }\r\n        this._tar = tar;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Set the events string that trigger audio stop\r\n     * @zh 设置触发停止的事件字符串\r\n     */\r\n    set stopEvent(events: string) {\r\n        this._stopEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"stop\");\r\n        }\r\n    }\r\n}\r\n","import { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Event as LayaEvent } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * @en VideoTexture Multimedia texture\r\n * @zh VideoTexture 多媒体纹理\r\n */\r\nexport class VideoTexture extends BaseTexture {\r\n    public readonly element: HTMLVideoElement;\r\n    static videoEvent_update: string = \"videoUpdate\";\r\n    private _source: string;\r\n    private _listeningEvents: Record<string, (evt: Event) => void>;\r\n    private immediatelyPlay: boolean;\r\n    /**\r\n     * 是否开发者自己调用Render\r\n     */\r\n    private _frameRender: boolean;\r\n    /** @inernal 避免重复的加载 */\r\n    _isLoaded: boolean;\r\n    /** @internal */\r\n    _needUpdate: boolean;\r\n    /** @inernal 是否使用了requestVideoFrameCallback 接口 */\r\n    _requestVideoFrame: boolean = false;\r\n    private _frameDelty: number;\r\n    private _updateFrame: number;\r\n    private _useFrame: boolean;\r\n    private _lastTimer: number = 0;\r\n\r\n    /**\r\n     * @en videoTexture update frame\r\n     * @zh 视频纹理更新帧率\r\n     */\r\n    set updateFrame(value: number) {\r\n        this._frameDelty = 1 / value * 1000;\r\n        this._updateFrame = value;\r\n    }\r\n\r\n    get updateFrame() {\r\n        return this._updateFrame;\r\n    }\r\n\r\n    set useFrame(value: boolean) {\r\n        this._useFrame = value;\r\n    }\r\n\r\n    get useFrame() {\r\n        return this._useFrame;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @en Creates an inst\r\n     * @zh VideoTexture对象的构造方法\r\n     */\r\n    constructor() {\r\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\r\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\r\n        this._frameRender = true;\r\n        this._isLoaded = false;\r\n        this._needUpdate = false;\r\n        this.immediatelyPlay = false;\r\n        this.element = ele;\r\n\r\n        this.useFrame = false;\r\n        this.updateFrame = 30;\r\n\r\n        this._listeningEvents = {};\r\n\r\n        this._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n        // ele.setAttribute('crossorigin', 'Anonymous');\r\n\r\n        var style: any = this.element.style;\r\n        style.position = 'absolute';\r\n        style.top = '0px';\r\n        style.left = '0px';\r\n\r\n        // 默认放开webGL对纹理数据的跨域限制\r\n        ele.setAttribute('crossorigin', 'anonymous');\r\n        if (ILaya.Browser.onMobile) {\r\n            //@ts-ignore\r\n            ele[\"x5-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"x5-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.x5PlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsInline = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.webkitPlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsinline = true;\r\n            //@ts-ignore\r\n            ele.style.playsInline = true;\r\n            ele.crossOrigin = \"anonymous\";\r\n            ele.setAttribute('playsinline', 'true');\r\n            ele.setAttribute('x5-playsinline', 'true');\r\n            ele.setAttribute('webkit-playsinline', 'true');\r\n            ele.autoplay = true;\r\n        }\r\n\r\n        ele.addEventListener(\"loadedmetadata\", () => {\r\n            this.loadedmetadata();\r\n        });\r\n\r\n\r\n        if (\"requestVideoFrameCallback\" in HTMLVideoElement.prototype) {\r\n            const scope = this;\r\n            function updateVideo() {\r\n                scope._needUpdate = true;\r\n                ele.requestVideoFrameCallback(updateVideo);\r\n            }\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n            this._requestVideoFrame = true\r\n        } else {\r\n            this._needUpdate = true;\r\n        }\r\n\r\n        // if ('requestVideoFrameCallback' in ele) {\r\n        //     const scope = this;\r\n        //     function updateVideo() {\r\n        //         scope._needUpdate = true;\r\n        //         ele.requestVideoFrameCallback(updateVideo);\r\n        //     }\r\n        //     ele.requestVideoFrameCallback(updateVideo);\r\n        //     this._requestVideoFrame = true\r\n        // } else {\r\n        //     this._needUpdate = true;\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    private isNeedUpdate() {\r\n        if (!this.useFrame)\r\n            return !this._requestVideoFrame || this._needUpdate;\r\n        else {\r\n            let timer: number = Browser.now();\r\n            if (timer - this._lastTimer > this._frameDelty) {\r\n                this._lastTimer = timer;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Handle the loadedmetadata event of the video element.\r\n     * Processes the initialization work after the video resource is loaded, ensuring that necessary texture and playback settings are made so that the video can be properly handled during rendering.\r\n     * @zh 视频元素的 loadedmetadata 事件的回调方法。\r\n     * 处理视频资源加载完毕后的初始化工作，用于在视频正确加载后，做必要的纹理和播放设置，确保视频能在渲染时被正确处理。\r\n     */\r\n    loadedmetadata() {\r\n        if (this._isLoaded)\r\n            return;\r\n        //flag only TODO\r\n        this._width = this.element.videoWidth;\r\n        this._height = this.element.videoHeight;\r\n        if (Browser.onLayaRuntime) {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\r\n        }\r\n        else {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\r\n        }\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        LayaGL.textureContext.initVideoTextureData(this._texture);\r\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\r\n        if (this.immediatelyPlay) {\r\n            this.play();\r\n        }\r\n        this._isLoaded = true;\r\n        this.event(LayaEvent.READY, this);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The gamma correction value\r\n     * @zh gamma 校正值\r\n     */\r\n    get gammaCorrection() {\r\n        return 2.2;\r\n    }\r\n\r\n    /**\r\n     * @en The source URL for the video\r\n     * @zh 视频的源 URL\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(url: string) {\r\n        this._source = url;\r\n        if (!url)\r\n            return;\r\n\r\n        AssetDb.inst.resolveURL(url, url => {\r\n            while (this.element.childElementCount)\r\n                this.element.firstChild.remove();\r\n\r\n            if (url.startsWith(\"blob:\"))\r\n                this.element.src = url;\r\n            else\r\n                this.appendSource(url);\r\n        });\r\n    }\r\n\r\n    private appendSource(source: string): void {\r\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\r\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\r\n        let extension = Utils.getFileExtension(source);\r\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\r\n        this.element.appendChild(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Render the video texture\r\n     * @zh 渲染视频纹理\r\n     */\r\n    render() {\r\n\r\n        if (this.element.readyState == 0)\r\n            return;\r\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\r\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\r\n            this._needUpdate = false;\r\n            //更新事件\r\n            this.event(VideoTexture.videoEvent_update);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether to render every frame\r\n     * @zh 是否每一帧都渲染\r\n     */\r\n    get frameRender() {\r\n        return this._frameRender;\r\n    }\r\n\r\n    set frameRender(value: boolean) {\r\n        if (this._frameRender && !value) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n        if (!this._frameRender && value) {\r\n            ILaya.timer.frameLoop(1, this, this.render);\r\n        }\r\n        this._frameRender = value;\r\n    }\r\n\r\n    /**\r\n     * @en Start playing the video\r\n     * @zh 开始播放视频\r\n     */\r\n    play() {\r\n        if (!this._texture) {\r\n            this.immediatelyPlay = true;\r\n        } else {\r\n            this.element.play().catch(() => {\r\n                this.event(\"NotAllowedError\");\r\n            });\r\n            if (this._frameRender) {\r\n                ILaya.timer.frameLoop(1, this, this.render);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _getSource() {\r\n        return this._texture ? this._texture.resource : null;\r\n    }\r\n\r\n    /**\r\n     * @en The default texture\r\n     * @zh 默认纹理\r\n     */\r\n    get defaultTexture() {\r\n        return Texture2D.whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Pause the video playback\r\n     * @zh 暂停播放视频\r\n     */\r\n    pause() {\r\n        this.element.pause();\r\n        if (this._frameRender) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Reload the video\r\n     * @zh 重新加载视频\r\n     */\r\n    load(): void {\r\n        this.element.load();\r\n    }\r\n\r\n    /**\r\n     * @en Check if the specified video format is supported for playback\r\n     * @param type Video format type, such as \"mp4\", \"ogg\", \"webm\", \"m3u8\", etc.\r\n     * @returns  The level of support. Possible values:\r\n     * - \"probably\": The browser most likely supports this audio/video type\r\n     * - \"maybe\": The browser might support this audio/video type\r\n     * - \"\": (empty string) The browser does not support this audio/video type\r\n     * @zh 检测是否支持播放指定格式视频\r\n     * @param type\t视频格式类型 \"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * - \"probably\": 浏览器最可能支持该音频/视频类型\r\n     * - \"maybe\": 浏览器也许支持该音频/视频类型\r\n     * - \"\": （空字符串）浏览器不支持该音频/视频类型\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\r\n        return this.element.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * @en Get the TimeRanges object representing the buffered parts of the audio/video\r\n     * The TimeRanges object represents the buffered time ranges of the audio/video. If the user skips around in the audio/video, multiple buffered ranges may be created.\r\n     * buffered.length returns the number of buffered ranges. \r\n     * To get the first buffered range, use buffered.start(0) and buffered.end(0). Values are in seconds.\r\n     * @returns The TimeRanges object\r\n     * @zh 获取表示音视频已缓冲部分的 TimeRanges 对象\r\n     * TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * buffered.length 返回缓冲范围个数。如获取第一个缓冲范围则是 buffered.start(0) 和 buffered.end(0)。以秒计。\r\n     * @returns TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this.element.buffered;\r\n    }\r\n\r\n    /**\r\n     * @en The current source URL of the video\r\n     * @zh 当前播放源路径\r\n     */\r\n    get currentSrc(): string {\r\n        return this.element.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback position in seconds\r\n     * @zh 当前播放头位置（以秒为单位）\r\n     */\r\n    get currentTime(): number {\r\n        return this.element.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this.element)\r\n            return;\r\n\r\n        this.element.currentTime = value;\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @en The current volume level\r\n     * @zh 当前音量\r\n     */\r\n    get volume(): number {\r\n        return this.element.volume;\r\n    }\r\n\r\n    set volume(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.volume = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The readiness state of the video element:\r\n     * - 0 = HAVE_NOTHING - No information is available about the audio/video\r\n     * - 1 = HAVE_METADATA - Metadata for the audio/video is ready\r\n     * - 2 = HAVE_CURRENT_DATA - Data for the current playback position is available, but not enough to play the next frame/millisecond\r\n     * - 3 = HAVE_FUTURE_DATA - Data for the current and at least the next frame is available\r\n     * - 4 = HAVE_ENOUGH_DATA - Enough data is available to start playing\r\n     * @zh 视频元素的就绪状态：\r\n     * - 0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息\r\n     * - 1 = HAVE_METADATA - 关于音频/视频就绪的元数据\r\n     * - 2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\r\n     * - 3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的\r\n     * - 4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放\r\n     */\r\n    get readyState(): any {\r\n        return this.element.readyState;\r\n    }\r\n\r\n    /**\r\n     * @en The width of the video source. Available after the ready event is triggered.\r\n     * @zh 视频源宽度。ready 事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this.element.videoWidth;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the video source. Available after the ready event is triggered.\r\n     * @zh 视频源高度。ready 事件触发后可用。\r\n     */\r\n    get videoHeight(): number {\r\n        return this.element.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * @en The duration of the video in seconds. Available after the ready event is triggered.\r\n     * @zh 视频长度（秒）。ready 事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this.element.duration;\r\n    }\r\n\r\n    /**\r\n     * @en If the playback of the audio/video has ended\r\n     * @zh 音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this.element.ended;\r\n    }\r\n\r\n    /**\r\n     * @en Return the MediaError object representing the error state of the audio/video\r\n     * @zh 返回表示音频/视频错误状态的 MediaError 对象\r\n     */\r\n    get error(): MediaError {\r\n        return this.element.error;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the audio/video should loop when it reaches the end\r\n     * @zh 音频/视频是否应在结束时重新播放\r\n     */\r\n    get loop(): boolean {\r\n        return this.element.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.loop = value;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback speed of the audio/video. For example:\r\n     * - 1.0: Normal speed\r\n     * - 0.5: Half speed (slower)\r\n     * - 2.0: Double speed (faster)\r\n     * - -1.0: Backwards, normal speed\r\n     * - -0.5: Backwards, half speed\r\n     * Note: Only Google Chrome and Safari support the playbackRate property.\r\n     * @zh 音频/视频的当前播放速度。如：\r\n     * - 1.0：正常速度\r\n     * - 0.5：半速（更慢）\r\n     * - 2.0：倍速（更快）\r\n     * - -1.0：向后，正常速度\r\n     * - -0.5：向后，半速\r\n     * 注意：只有 Google Chrome 和 Safari 支持 playbackRate 属性。\r\n     */\r\n    get playbackRate(): number {\r\n        return this.element.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * @en The muted state of the video\r\n     * @zh 视频的静音状态\r\n     */\r\n    get muted(): boolean {\r\n        return this.element.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.muted = value;\r\n    }\r\n\r\n    /**\r\n     * @en If the video is paused\r\n     * @zh 视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this.element.paused;\r\n    }\r\n\r\n    /**\r\n     * @en The preload attribute of the video. Possible values:\r\n     * - \"auto\": Indicates that the video should be loaded as soon as the page loads\r\n     * - \"metadata\": Indicates that only metadata should be loaded when the page loads\r\n     * - \"none\": Indicates that the video should not be loaded when the page loads\r\n     * @zh 视频的预加载属性。可赋值如下：\r\n     * - \"auto\"：指示一旦页面加载，则开始加载视频\r\n     * - \"metadata\"：指示当页面加载后仅加载音频/视频的元数据\r\n     * - \"none\"：指示页面加载后不应加载音频/视频\r\n     */\r\n    get preload(): string {\r\n        return this.element.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this.element)\r\n            return;\r\n        //@ts-ignore\r\n        this.element.preload = value;\r\n    }\r\n\r\n    /**\r\n     * @en see: http://www.w3school.com.cn/tags/av_prop_seekable.asp象\r\n     * @zh 参见：http://www.w3school.com.cn/tags/av_prop_seekable.asp\r\n     */\r\n    get seekable(): any {\r\n        return this.element.seekable;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the user is currently seeking in the audio/video.\r\n     * Seeking refers to the user moving/jumping to a new position in the audio/video.\r\n     * @zh 返回用户目前是否在音频/视频中寻址。\r\n     * 寻址（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this.element.seeking;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string): void {\r\n        if (videoEvents.has(type)) {\r\n            let func = this._listeningEvents[type];\r\n            if (!func)\r\n                func = this._listeningEvents[type] = () => {\r\n                    this.event(type);\r\n                };\r\n\r\n            this.element.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the current instance and releases resources.\r\n     * @zh 销毁当前实例并释放资源。\r\n     */\r\n    destroy() {\r\n        if (this.element) {\r\n            if (LayaEnv.isConch) {\r\n                (<any>this.element)._destroy();\r\n            }\r\n            else {\r\n                this.element.pause();\r\n                this.element.src = \"\";\r\n                while (this.element.childElementCount)\r\n                    this.element.firstChild.remove();\r\n            }\r\n        }\r\n\r\n        ILaya.timer.clear(this, this.render);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nconst videoEvents = new Set([\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\r\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\r\n]);","import { Sprite } from \"../display/Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { VideoTexture } from \"./VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n/**\r\n * @en VideoNode displays video on Canvas. Video may not be effective in all browsers.\r\n * For all events supported by Video, see: https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\r\n * Note:\r\n * On PC, you can call play() at any time, so the Video can start playing as soon as the program starts running. \r\n * However, on mobile devices, play() can only be called after the user's first touch on the screen, so it's not possible to automatically start playing Video when the program starts running on mobile devices.\r\n * MDN Video link: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\r\n * @zh VideoNode将视频显示到Canvas上。Video可能不会在所有浏览器有效。\r\n * 关于Video支持的所有事件，请参见：https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\r\n * 注意：\r\n * 在PC端可以在任何时机调用play()，因此可以在程序开始运行时就使Video开始播放。\r\n * 但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\r\n * MDN Video链接：https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\r\n */\r\nexport class VideoNode extends Sprite {\r\n    private _videoTexture: VideoTexture;\r\n    private _internalTex: Texture;\r\n\r\n    /** @ignore */\r\n    constructor() {\r\n        super();\r\n\r\n        this.texture = this._internalTex = new Texture();\r\n\r\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\r\n            let func = () => {\r\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\r\n\r\n                if (!this._videoTexture)\r\n                    return;\r\n\r\n                if (Browser.onIOS) {\r\n                    this._videoTexture.load();\r\n                } else {\r\n                    this._videoTexture.play();\r\n                    this._videoTexture.pause();\r\n                }\r\n            }\r\n\r\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Video texture\r\n     * @zh 视频纹理\r\n     */\r\n    get videoTexture(): VideoTexture {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    set videoTexture(value: VideoTexture) {\r\n        if (this._videoTexture) {\r\n            this._videoTexture._removeReference();\r\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\r\n            this._videoTexture.off(VideoTexture.videoEvent_update, this, this._repaintCachAs);\r\n        }\r\n\r\n        this._videoTexture = value;\r\n        if (value) {\r\n            this._videoTexture._addReference();\r\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\r\n            if (this._videoTexture._isLoaded)\r\n                this._internalTex.setTo(this._videoTexture);\r\n        }\r\n        else {\r\n            this._internalTex.setTo(null);\r\n        }\r\n        this._checkCachAs();\r\n    }\r\n\r\n    /**\r\n     * @en Video source\r\n     * @zh 视频源\r\n     */\r\n    get source() {\r\n        return this._videoTexture?.source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        if (value) {\r\n            if (!this._videoTexture)\r\n                this.videoTexture = new VideoTexture();\r\n            this._videoTexture.source = value;\r\n        }\r\n        else if (this._videoTexture)\r\n            this._videoTexture.source = value;\r\n        this._checkCachAs();\r\n    }\r\n\r\n\r\n    private _checkCachAs() {\r\n        if (this.videoTexture != null)\r\n            this.videoTexture.on(VideoTexture.videoEvent_update, this, this._repaintCachAs);\r\n    }\r\n\r\n    private _repaintCachAs() {\r\n        if (this.cacheAs != \"none\" || (!!this._getCacheStyle().mask)) {\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @en Set playback source\r\n     * @param url Play source path.\r\n     * @zh 设置播放源。\r\n     * @param url 播放源路径。\r\n     */\r\n    load(url: string): void {\r\n        this.source = url;\r\n    }\r\n\r\n    /**\r\n     * @en Start playing the video\r\n     * @zh 开始播放视频\r\n     */\r\n    play(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.play();\r\n    }\r\n\r\n    /**\r\n     * @en Pause video playback\r\n     * @zh 暂停视频播放\r\n     */\r\n    pause(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.pause();\r\n    }\r\n\r\n    /**\r\n     * @en Reload the video\r\n     * @zh 重新加载视频\r\n     */\r\n    reload(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.load();\r\n    }\r\n\r\n    /**\r\n     * @en Check if the specified video format is supported for playback.\r\n     * @param type The video format type, such as \"mp4\", \"ogg\", \"webm\", \"m3u8\", etc.\r\n     * @returns The level of support. Possible values:\r\n     * - \"probably\": The browser most likely supports this audio/video type\r\n     * - \"maybe\": The browser might support this audio/video type\r\n     * - \"\": (empty string) The browser does not support this audio/video type\r\n     * @zh 检测是否支持播放指定格式视频。\r\n     * @param type\t视频格式类型，如 \"mp4\"、\"ogg\"、\"webm\"、\"m3u8\" 等。\r\n     * @returns 表示支持的级别。可能的值：\r\n     * - \"probably\"：浏览器最可能支持该音频/视频类型\r\n     * - \"maybe\"：浏览器也许支持该音频/视频类型\r\n     * - \"\"：（空字符串）浏览器不支持该音频/视频类型\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        if (!this._videoTexture)\r\n            this.videoTexture = new VideoTexture();\r\n        return this._videoTexture.canPlayType(type);\r\n    }\r\n\r\n    private onVideoMetaLoaded(): void {\r\n        this._internalTex.setTo(this._videoTexture);\r\n    }\r\n\r\n    /**\r\n     * @en Get the TimeRanges object representing the buffered parts of the video.\r\n     * The TimeRanges object represents the time ranges of the buffered audio/video. If the user jumps to different parts of the audio/video, multiple buffer ranges may be created.\r\n     * buffered.length returns the number of buffer ranges.\r\n     * To get the first buffer range, use buffered.start(0) and buffered.end(0). Values are in seconds.\r\n     * @returns TimeRanges object\r\n     * @zh 获取表示视频已缓冲部分的 TimeRanges 对象。\r\n     * TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * buffered.length 返回缓冲范围个数。\r\n     * 如获取第一个缓冲范围则是 buffered.start(0) 和 buffered.end(0)。以秒计。\r\n     * @returns TimeRanges 对象\r\n     */\r\n    get buffered(): any {\r\n        return this._videoTexture?.buffered;\r\n    }\r\n\r\n    /**\r\n     * @en The current video source path.\r\n     * @zh 当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this._videoTexture?.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback position in seconds.\r\n     * @zh 当前播放头位置（以秒为单位）。\r\n     */\r\n    get currentTime(): number {\r\n        return this._videoTexture?.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.currentTime = value;\r\n    }\r\n\r\n    /**\r\n     * @en The current volume level.\r\n     * @zh 当前音量。\r\n     */\r\n    get volume(): number {\r\n        return this._videoTexture?.volume;\r\n    }\r\n\r\n    set volume(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.volume = value;\r\n    }\r\n\r\n    /**\r\n     * @en The ready state of the video element:\r\n     * - 0 = HAVE_NOTHING - No information is available about the audio/video readiness\r\n     * - 1 = HAVE_METADATA - Metadata about the audio/video is ready\r\n     * - 2 = HAVE_CURRENT_DATA - Data for the current playback position is available, but not enough to play the next frame/millisecond\r\n     * - 3 = HAVE_FUTURE_DATA - Data for the current and at least the next frame is available\r\n     * - 4 = HAVE_ENOUGH_DATA - Enough data is available to begin playback\r\n     * @zh 视频元素的就绪状态：\r\n     * - 0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息\r\n     * - 1 = HAVE_METADATA - 关于音频/视频就绪的元数据\r\n     * - 2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\r\n     * - 3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的\r\n     * - 4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放\r\n     */\r\n    get readyState(): any {\r\n        return this._videoTexture?.readyState;\r\n    }\r\n\r\n    /**\r\n     * @en The video source width. Available after the ready event is triggered.\r\n     * @zh 视频源宽度。ready 事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this._videoTexture?.videoWidth;\r\n    }\r\n\r\n    /**\r\n     * @en The video source height. Available after the ready event is triggered.\r\n     * @zh 视频源高度。ready 事件触发后可用。\r\n     */\r\n    get videoHeight(): number {\r\n        return this._videoTexture?.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * @en The video duration in seconds. Available after the ready event is triggered.\r\n     * @zh 视频长度（秒）。ready 事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this._videoTexture?.duration;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the playback of the audio/video has ended.\r\n     * @zh 返回音频/视频的播放是否已结束。\r\n     */\r\n    get ended(): boolean {\r\n        return this._videoTexture?.ended;\r\n    }\r\n\r\n    /**\r\n     * @en Returns a MediaError object representing the audio/video error state.\r\n     * @zh 返回表示音频/视频错误状态的 MediaError 对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this._videoTexture?.error;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the audio/video should loop when it ends.\r\n     * @zh 音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this._videoTexture?.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.loop = value;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback speed of the audio/video. For example:\r\n     * - 1.0: Normal speed\r\n     * - 0.5: Half speed (slower)\r\n     * - 2.0: Double speed (faster)\r\n     * - -1.0: Backwards, normal speed\r\n     * - -0.5: Backwards, half speed\r\n     * Note: Only Google Chrome and Safari support the playbackRate property.\r\n     * @zh 音频/视频的当前播放速度。例如：\r\n     * - 1.0：正常速度\r\n     * - 0.5：半速（更慢）\r\n     * - 2.0：倍速（更快）\r\n     * - -1.0：向后，正常速度\r\n     * - -0.5：向后，半速\r\n     * 注意：只有 Google Chrome 和 Safari 支持 playbackRate 属性。\r\n     */\r\n    get playbackRate(): number {\r\n        return this._videoTexture?.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * @en The muted state of the video.\r\n     * @zh 视频的静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this._videoTexture?.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.muted = value;\r\n    }\r\n\r\n    /**\r\n     * @en If the video is paused.\r\n     * @zh 视频是否暂停。\r\n     */\r\n    get paused(): boolean {\r\n        return this._videoTexture?.paused;\r\n    }\r\n\r\n    /**\r\n     * @en The preload attribute. This specifies how the video should be loaded when the page loads.\r\n     * Possible values:\r\n     * - \"auto\": Indicates that the video should be loaded entirely when the page loads.\r\n     * - \"metadata\": Indicates that only metadata should be loaded when the page loads.\r\n     * - \"none\": Indicates that the video should not be loaded when the page loads.\r\n     * @zh preload 属性。这指定了页面加载时应如何加载视频。\r\n     * 可能的值：\r\n     * - \"auto\"：指示一旦页面加载，则开始加载整个视频。\r\n     * - \"metadata\"：指示当页面加载后仅加载音频/视频的元数据。\r\n     * - \"none\"：指示页面加载后不应加载音频/视频。\r\n     */\r\n    get preload(): string {\r\n        return this._videoTexture?.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        //@ts-ignore\r\n        this._videoTexture.preload = value;\r\n    }\r\n\r\n    /**\r\n     * @en Used to represent the currently loaded and seekable time range in a video, helping the player or script to know which parts are immediately accessible.\r\n     * @zh 用于表示视频中当前已加载且可以跳转的时间范围，帮助播放器或脚本知道哪些部分可以立即访问。\r\n     * @see http://www.w3school.com.cn/tags/av_prop_seekable.asp\r\n     */\r\n    get seekable(): any {\r\n        return this._videoTexture?.seekable;\r\n    }\r\n\r\n    /**\r\n     * @en Check if the user is currently seeking in the audio/video.\r\n     * Seeking means that the user is moving/skipping to a new position in the audio/video.\r\n     * @zh 检查用户当前是否正在音频/视频中寻址。\r\n     * 寻址指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this._videoTexture?.seeking;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setX(value: number): void {\r\n        super._setX(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.left = transform.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setY(value: number): void {\r\n        super._setY(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.top = transform.y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.width = value * transform.scaleX;\r\n        }\r\n        else {\r\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.height = value * transform.scaleY;\r\n\r\n        }\r\n        else {\r\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the internal event bindings and optionally destroy child nodes\r\n     * @param destroyChildren Whether to destroy child nodes\r\n     * @zh 销毁内部事件绑定，并可选择是否删除子节点\r\n     * @param destroyChildren 是否删除子节点\r\n     */\r\n    destroy(detroyChildren: boolean = true): void {\r\n        this.videoTexture = null;\r\n        super.destroy(detroyChildren);\r\n    }\r\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\n/**\r\n * @en 2D Animator Play State.\r\n * @zh 2D 动画播放状态。\r\n */\r\nexport class AnimatorPlayState2D {\r\n\t_finish: boolean;\r\n\t/**@internal */\r\n\t_startPlayTime: number;\r\n\t/**@internal */\r\n\t_lastElapsedTime: number;\r\n\t/**\r\n\t * @internal \r\n\t * @en Animation playback time\r\n\t * @zh 动画播放时间\r\n\t */\r\n\t_elapsedTime: number;\r\n\t/**\r\n\t * @internal \r\n\t * @en Playback count\r\n\t * @zh 播放的次数\r\n\t */\r\n\t_playNum: number;\r\n\r\n\t/**\r\n\t * @en Total play time, not affected by negative speed values.\r\n\t * @zh 总播放时间，不受速度为负数的影响。\r\n\t */\r\n\t_playAllTime: number;\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @en Normalized time for a single playback.\r\n\t * @zh 单次播放的归一化时间。\r\n\t */\r\n\t_normalizedPlayTime: number;\r\n\t/**@internal */\r\n\t_duration: number;\r\n\t/**\r\n\t * @internal\r\n\t * @en The time of the last playback, used by event events.\r\n\t * @zh 上次播放的时间，用于event事件。\r\n\t */\r\n\t_parentPlayTime: number;\r\n\t/**@internal */\r\n\t_lastIsFront: boolean;\r\n\t/**@internal */\r\n\t_currentState: AnimatorState2D | null = null;\r\n\r\n\t/**\r\n\t * @en Indicates if the playback is in forward direction.\r\n\t * @zh 表示播放是否为正向。\r\n\t */\r\n\t_frontPlay = true;\r\n\r\n\r\n\t/**\r\n\t * @en The duration of the current animation, in seconds.\r\n\t * @zh 当前动画的持续时间，以秒为单位。\r\n\t */\r\n\tget duration(): number {\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\t// checkPlayNext(): Animation2DNext {\r\n\t//     var nexts = this._currentState.nexts;\r\n\t//     if (nexts) {\r\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\r\n\t//             var no = nexts[i];\r\n\t//             //TODO 需要检测next的条件\r\n\t//             return no;\r\n\t//         }\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\r\n\t/**\r\n\t * @en Animation state machine\r\n\t * @zh 动画状态机。\r\n\t */\r\n\tget animatorState(): AnimatorState2D {\r\n\t\treturn this._currentState!;\r\n\t}\r\n\r\n\t/**\r\n\t * @en Constructor method of AnimatorPlayState2D class.\r\n\t * @zh AnimatorPlayState2D类的构造方法\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_resetPlayState(startTime: number, clipDuration: number): void {\r\n\t\tthis._finish = false;\r\n\t\tthis._startPlayTime = startTime;\r\n\t\tthis._elapsedTime = startTime;\r\n\t\tthis._lastIsFront = true;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playNum = 0;\r\n\t\tthis._playAllTime = 0;\r\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\r\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\t\tthis._frontPlay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: AnimatorPlayState2D): void {\r\n\t\tdest._finish = this._finish;\r\n\t\tdest._startPlayTime = this._startPlayTime;\r\n\t\tdest._elapsedTime = this._elapsedTime;\r\n\t\tdest._playNum = this._playNum;\r\n\t\tdest._parentPlayTime = this._parentPlayTime;\r\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\r\n\t\tdest._lastIsFront = this._lastIsFront;\r\n\t\tdest._frontPlay = this._frontPlay;\r\n\t\tdest._playAllTime = this._playAllTime;\r\n\t}\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * @en Layer of 2D animation controllers\r\n * @zh 2D动画控制器层\r\n */\r\nexport class AnimatorControllerLayer2D implements IClone {\r\n\r\n    /**\r\n     * @en Mixed Mode: Overwrite\r\n     * @zh 混合模式_覆盖。\r\n     */\r\n    static BLENDINGMODE_OVERRIDE: number = 0;\r\n\r\n    /**\r\n     * @en Mixed Mode: Stacking\r\n     * @zh 混合模式_叠加。 \r\n     */\r\n    static BLENDINGMODE_ADDTIVE: number = 1;\r\n\r\n    /**@internal */\r\n    private _defaultState: AnimatorState2D | null;\r\n\r\n    /**@internal */\r\n    private _referenceCount = 0;\r\n\r\n    /**@internal */\r\n    private _defaultStateNameCatch: string;\r\n\r\n    /**@internal*/\r\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossMark: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersCount: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersIndicesMap: any = {};\r\n\r\n    /**@internal */\r\n    _srcCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _destCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _enterTransition: AnimatorTransition2D;\r\n\r\n    /**\r\n     * @en layer name\r\n     * @zh 层的名字\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * @en Whether to play when the layer is started.\r\n     * @zh 是否开始时播放\r\n     */\r\n    playOnWake = true;\r\n\r\n    /**\r\n     * @en Default weight\r\n     * @zh 默认权重\r\n     */\r\n    defaultWeight = 1.0;\r\n\r\n    /**\r\n     * @en Mixed Mode\r\n     * @zh 混合模式\r\n     */\r\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n\r\n    /**\r\n     * @en Is it enabled\r\n     * @zh 是否开启\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * @internal\r\n     * @en State machine\r\n     * @zh 状态机\r\n     */\r\n    _states: AnimatorState2D[] = [];\r\n\r\n    /**\r\n     * @internal \r\n     * @en 0:normal play, 1:dynamic fusing play, 2:fixed fusing play\r\n     * @zh 0:常规播放、1:动态融合播放、2:固定融合播放\r\n     */\r\n    _playType = -1;\r\n\r\n    /**\r\n     * @en Constructor method of 2D animator controller Layer.\r\n     * @zh 2D动画控制器层的构造方法\r\n     */\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * @en State machine\r\n     * @zh 状态机\r\n     */\r\n    get states(): ReadonlyArray<AnimatorState2D> {\r\n        return this._states;\r\n    }\r\n\r\n    set states(states: ReadonlyArray<AnimatorState2D>) {\r\n        if (this._states === states)\r\n            return;\r\n        for (let i = this.states.length - 1; i >= 0; i--) {\r\n            this.removeState(this.states[i]);\r\n        }\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            this.addState(states[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The default state name.\r\n     * @zh 默认状态名称。\r\n     */\r\n    get defaultStateName() {\r\n        if (!this._defaultState) {\r\n            return null;\r\n        }\r\n        return this._defaultState.name;\r\n    }\r\n\r\n    set defaultStateName(str: string) {\r\n        this._defaultState = this.getStateByName(str);\r\n        if (null == this._defaultState) {\r\n            if (0 == this._states.length) {\r\n                this._defaultStateNameCatch = str;\r\n            } else {\r\n                for (var i = this._states.length - 1; i >= 0; i--) {\r\n                    if (this._states[i].name == str) {\r\n                        this._defaultState = this._states[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Default animation state machine\r\n     * @zh 默认动画状态机。\r\n     */\r\n    get defaultState(): AnimatorState2D {\r\n        return this._defaultState!;\r\n    }\r\n\r\n    set defaultState(value: AnimatorState2D) {\r\n        this._defaultState = value;\r\n        //this._statesMap[value.name] = value;\r\n    }\r\n\r\n    /**\r\n     * 移除Clip\r\n     * @param clipStateInfos \r\n     * @param index \r\n     * @param state \r\n     */\r\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\r\n        clipStateInfos.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._addReference(count);\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count = 1): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._removeReference(count);\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * @en Gets the current play state of the animator.\r\n     * @returns The play state of the animation.\r\n     * @zh 获取当前的动画播放状态。\r\n     * @returns 动画的播放状态。\r\n     */\r\n    getCurrentPlayState(): AnimatorPlayState2D {\r\n        return this._playStateInfo!;\r\n    }\r\n\r\n    /**\r\n     * @en Gets an animator state by its name.\r\n     * @param str The name of the state to retrieve.\r\n     * @returns The AnimatorState2D object if found, otherwise null.\r\n     * @zh 通过状态机名称获取动画状态对象。\r\n     * @param str 要检索的状态名称。\r\n     * @returns 如果找到，返回 AnimatorState2D 对象，否则返回 null。\r\n     */\r\n    getStateByName(str: string) {\r\n        for (let i = this._states.length - 1; i >= 0; i--) {\r\n            if (this._states[i].name == str) {\r\n                return this._states[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Adds an animation state to the animator.\r\n     * @param state The AnimatorState2D to add.\r\n     * @zh 向动画机添加动画状态。\r\n     * @param state 要添加的 AnimatorState2D。\r\n     */\r\n    addState(state: AnimatorState2D): void {\r\n        var stateName = state.name;\r\n        if (this.getStateByName(stateName)) {\r\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\r\n        } else {\r\n            this._states.push(state);\r\n            if (stateName == this._defaultStateNameCatch) {\r\n                this._defaultState = state;\r\n                this._defaultStateNameCatch = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes an animation state.\r\n     * @param state The AnimatorState2D to remove.\r\n     * @zh 移除动画状态。\r\n     * @param state 要移除的 AnimatorState2D。\r\n     */\r\n    removeState(state: AnimatorState2D): void {\r\n        var states = this._states;\r\n        var index = -1;\r\n        for (var i = 0, n = states.length; i < n; i++) {\r\n            if (states[i] === state) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index)\r\n            this._removeClip(states, index, state);\r\n    }\r\n\r\n    /**\r\n     * @en Clones the current animator controller layer.\r\n     * @returns A clone of the current animator controller layer.\r\n     * @zh 克隆当前的动画控制器层。\r\n     * @returns 当前动画控制器层的克隆副本。\r\n     */\r\n    clone() {\r\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * @en Clones the current animator controller layer to a destination object.\r\n     * @param destObject The destination object to clone to.\r\n     * @zh 克隆当前的动画控制器层到目标对象。\r\n     * @param destObject 克隆到的目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\r\n        dest.name = this.name;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the animator controller layer and all its states.\r\n     * @zh 销毁动画控制器层及其所有状态。\r\n     */\r\n    destroy() {\r\n        this._removeReference();\r\n        for (var i = 0, n = this._states.length; i < n; i++) {\r\n            this._states[i].destroy();\r\n        }\r\n        this._states.length = 0;\r\n    }\r\n}","import { AvatarMask } from \"../d3/component/Animator/AvatarMask\";\r\n\r\nexport interface TypeAnimatorControllerData {\r\n    layerW: number,\r\n    controllerLayers: TypeAnimatorLayer[];\r\n    cullingMode?: number,\r\n    enable?: boolean,\r\n    animatorParams?: TypeAnimatorParams[],\r\n}\r\nexport interface TypeAnimatorParams {\r\n    id: number,\r\n    name: string,\r\n    type: AniParmType,\r\n    val: number | boolean,\r\n}\r\nexport interface TypeAnimatorLayer {\r\n    defaultStateName?: string,\r\n    name: string,\r\n    blendingMode: number,\r\n    states: TypeAnimatorState[],\r\n    playOnWake: boolean,\r\n    defaultWeight: number,\r\n    avatarMask?: any,\r\n\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\n\r\nexport enum AniParmType {\r\n    Float,\r\n    Bool,\r\n    Trigger,\r\n}\r\n\r\n/**\r\n * @en Animation state condition types\r\n * @zh 动画状态条件类型\r\n */\r\nexport enum AniStateConditionType {\r\n    Number,\r\n    Bool,\r\n    Trigger\r\n}\r\n\r\nexport interface TypeAnimatorState {\r\n    x: number,\r\n    y: number,\r\n    /**-1代表enter，-2代表exit，-3代表anyState */\r\n    id: string,\r\n    name: string,\r\n    speed?: number,\r\n    clipStart?: number,\r\n    clipEnd?: number,\r\n    loop?: number,\r\n    yoyo?: boolean,\r\n    soloTransitions?: TypeAnimatorTransition[],\r\n    clip?: { _$uuid: string, },\r\n    scripts?: string[],\r\n\r\n\r\n    states?: TypeAnimatorState[],\r\n    defaultStateName?: string,\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\nexport interface TypeAnimatorTransition {\r\n    id: string,\r\n    name?: string,\r\n    mute?: boolean,\r\n    solo?: boolean,\r\n    exitTime?: number,\r\n    transduration?: number,\r\n    transstartoffset?: number,\r\n    exitByTime?: boolean,\r\n    conditions?: TypeAnimatorConditions[],\r\n}\r\nexport interface TypeAnimatorConditions {\r\n    id?: number,\r\n    type?: AniStateConditionNumberCompressType,\r\n    checkValue?: number | boolean,\r\n    name?: string,\r\n}\r\n\r\nexport enum AniStateConditionNumberCompressType {\r\n    Less,\r\n    Greater\r\n}\r\n\r\n/**\r\n * @en Animation controller parsing and processing utility class.\r\n * @zh 解析和处理动画控制器数据的工具类。\r\n */\r\nexport class AnimatorControllerParse {\r\n    /**\r\n     * @en Parses the provided data to create a structured TypeAnimatorControllerData object..\r\n     * @zh 解析提供的数据以创建结构化的 TypeAnimatorControllerData 对象。\r\n     */\r\n    static parse(data: TypeAnimatorControllerData) {\r\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\r\n        let ret = data;\r\n        let layers = ret.controllerLayers;\r\n        if (null == layers) {\r\n            layers = [];\r\n        }\r\n\r\n        let clipsID: string[] = [];\r\n\r\n\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let states = l.states;\r\n            if (!states) {\r\n                states = [];\r\n                l.states = states;\r\n            }\r\n\r\n            l.defaultStateName = null;\r\n            let retobj = this.checkStates(states, clipsID, ret);\r\n            if (retobj) {\r\n                l.defaultStateName = retobj.enterName;\r\n            } else {\r\n                layers.splice(i, 1);\r\n            }\r\n        }\r\n        return { ret: ret, clipsID: clipsID };\r\n    }\r\n\r\n\r\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\r\n        let clipState: TypeAnimatorState[] = null;\r\n        let enterState: TypeAnimatorState = null;\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            let state = states[j];\r\n            if (state.states) {\r\n                if (null == this.checkStates(state.states, clipsID, data)) {\r\n                    states.splice(j, 1);\r\n                } else {\r\n                    if (null == clipState) {\r\n                        clipState = [];\r\n                    }\r\n                    clipState.push(state);\r\n                }\r\n            } else if (\"-1\" == state.id) {\r\n                enterState = state;\r\n                // let defName = this.checkDefault(state, states);\r\n                // if (null != defName) {\r\n                //     l.defaultStateName = defName;\r\n                // }\r\n            } else if (\"-2\" == state.id) {\r\n                //TODO any\r\n            } else if (\"-3\" == state.id) {\r\n                //TODO exit\r\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\r\n                states.splice(j, 1);\r\n            } else {\r\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\r\n                    clipsID.push(state.clip._$uuid);\r\n                }\r\n\r\n                this.checkNext(state, states, data);\r\n                if (null == clipState) {\r\n                    clipState = [];\r\n                }\r\n                clipState.push(state);\r\n            }\r\n        }\r\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\r\n        if (clipState && enterState) {\r\n            let defName = this.checkDefault(enterState, clipState);\r\n            if (null != defName) {\r\n                ret = { states: clipState, enterName: defName };\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\r\n        let nexts = state.soloTransitions;\r\n        if (nexts) {\r\n            for (let i = nexts.length - 1; i >= 0; i--) {\r\n                let next = nexts[i];\r\n                let nState = this.getStateByID(states, next.id);\r\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\r\n                    nexts.splice(i, 1);\r\n                } else {\r\n                    next.name = nState.name;\r\n\r\n                    next.conditions = this.checkConditions(next.conditions, data);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\r\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\r\n            return [];\r\n        }\r\n\r\n        let parms = data.animatorParams;\r\n\r\n        for (let i = conditions.length - 1; i >= 0; i--) {\r\n            let o = conditions[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                conditions.splice(i, 1);\r\n            } else {\r\n                o.name = parm.name;\r\n                if (parm.type == AniParmType.Float) {\r\n                    let num = Number(o.checkValue);\r\n                    if (isNaN(num)) {\r\n                        o.checkValue = 0;\r\n                    }\r\n                    num = Number(o.type);\r\n                    if (isNaN(num)) {\r\n                        o.type = 0;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return conditions;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\r\n        let nexts = state.soloTransitions;\r\n        let id: string = null;\r\n        if (nexts && 0 < nexts.length) {\r\n            id = nexts[0].id;\r\n        }\r\n\r\n        let defState: TypeAnimatorState = null;\r\n        if (null != id) {\r\n            defState = this.getStateByID(states, id);\r\n        }\r\n        if (null != defState && (null != defState.clip || null != defState.states)) {\r\n            return defState.name;\r\n        }\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            if (states[i].clip) {\r\n                return states[i].name;\r\n            }\r\n        }\r\n\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\r\n        if (states) {\r\n            for (let i = states.length - 1; i >= 0; i--) {\r\n                if (states[i].id == id) {\r\n                    return states[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","/**\r\n * @en Animation update modes\r\n * @zh 动画更新模式\r\n */\r\nexport enum AnimatorUpdateMode {\r\n    /**\r\n     * @en Normal update mode\r\n     * @zh 正常更新。\r\n     */\r\n    Normal = 0,\r\n    /**\r\n     * @en Low frame rate update mode\r\n     * @zh 低频率更新。\r\n     */\r\n    LowFrame = 1,\r\n    /**\r\n     * @en Do not update thes animations based on time\r\n     * @zh 不更新。\r\n     */\r\n    UnScaleTime = 2\r\n}\r\n","\r\n/**\r\n * @en Animation condition types\r\n * @zh 动画条件类型\r\n */\r\nexport enum AniConditionType {\r\n    /**\r\n     * @en Greater than\r\n     * @zh 大于\r\n     */\r\n    Greater,\r\n    /**\r\n     * @en Less than\r\n     * @zh 小于\r\n     */\r\n    Less,\r\n    /**\r\n     * @en Equal to\r\n     * @zh 等于\r\n     */\r\n    Equals,\r\n    /**\r\n     * @en Not equal to\r\n     * @zh 不等于\r\n     */\r\n    NotEqual,//不等于\r\n}\r\n\r\n/**\r\n * @en 2D animation types\r\n * @zh 2D动画类型\r\n */\r\nexport class Animation2DCondition {\r\n    /**\r\n     * @en ID number\r\n     * @zh id编号\r\n     */\r\n    id: number;\r\n    /**\r\n     * @en Animation conditions\r\n     * @zh 动画条件\r\n     */\r\n    type: AniConditionType;\r\n    /**\r\n     * @en Detection value\r\n     * @zh 检测值\r\n     */\r\n    checkValue: any\r\n}","import { Resource } from \"./Resource\";\r\n/**\r\n * @en Enum for text resource formats.\r\n * @zh 文字资源格式的枚举类型。\r\n */\r\nexport enum TextResourceFormat {\r\n    /**\r\n     * @en Represents the buffer format.\r\n     * @zh 表示缓冲区格式。\r\n     */\r\n    Buffer,\r\n    /**\r\n     * @en Represents the plain text format.\r\n     * @zh 表示纯文本格式。\r\n     * TODO:\r\n     */\r\n    Plain,\r\n    /**\r\n     * @en Represents the JSON format.\r\n     * @zh 表示JSON格式。\r\n     */\r\n    JSON,\r\n    /**\r\n     * @en Represents the XML format.\r\n     * @zh 表示XML格式。\r\n     */\r\n    XML\r\n}\r\n\r\n/**\r\n * @en The `TextResource` class represents a text resource.\r\n * @zh `TextResource` 类表示文字资源。\r\n */\r\nexport class TextResource extends Resource {\r\n    /**\r\n     * @en The data of the text resource, read-only.\r\n     * @zh 文字资源的数据，只读。\r\n     */\r\n    public readonly data: any;\r\n    /**\r\n     * @en The format of the text resource, read-only.\r\n     * @zh 文字资源的格式，只读。\r\n     */\r\n    public readonly format: TextResourceFormat;\r\n    /**\r\n     * @en Creates a new instance of the `TextResource` class.\r\n     * @param data The data of the text resource.\r\n     * @param format The format of the text resource.\r\n     * @zh 创建 TextResource 类的新实例。\r\n     * @param data 文字资源的数据。\r\n     * @param format 文字资源的格式\r\n     */\r\n    constructor(data: any, format: TextResourceFormat) {\r\n        super();\r\n        this.data = data;\r\n        this.format = format;\r\n    }\r\n}","import { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { InternalRenderTarget } from \"../RenderDriver/DriverDesign/RenderDevice/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderTarget\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * @en Depth texture mode\r\n * @zh 深度贴图模式\r\n */\r\nexport enum DepthTextureMode {\r\n    /**\r\n     * @en Do not generate depth texture.\r\n     * @zh 不生成深度贴图。\r\n     */\r\n    None = 0,\r\n    /**\r\n     * @en Generate depth texture.\r\n     * @zh 生成深度贴图。\r\n     */\r\n    Depth = 1,\r\n    /**\r\n     * @en Generate depth and normal textures.\r\n     * @zh 生成深度和法线贴图。\r\n     */\r\n    DepthNormals = 2,\r\n    /**\r\n     * @en Generate depth and depth normals textures, and indicate whether motion vectors should be rendered.\r\n     * @zh 生成深度和深度法线贴图，并指示是否应该渲染运动矢量。\r\n     */\r\n    DepthAndDepthNormals = 3,\r\n    /**\r\n     * @en Generate motion vectors texture.\r\n     * @zh 生成运动矢量贴图。\r\n     */\r\n    MotionVectors = 4,\r\n}\r\n\r\n/**\r\n * @en RenderTexture class used to create render texture.\r\n * @zh RenderTexture 类用于创建渲染纹理。\r\n */\r\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\r\n\r\n    private static _pool: RenderTexture[] = [];\r\n    private static _poolMemory: number = 0;\r\n\r\n    /**\r\n     * @en Creates a RenderTexture instance from the pool.\r\n     * @param width Width of the RenderTexture.\r\n     * @param height Height of the RenderTexture.\r\n     * @param colorFormat Color format of the RenderTexture.\r\n     * @param depthFormat Depth format of the RenderTexture.\r\n     * @param mipmap Whether to generate mipmaps for the RenderTexture.\r\n     * @param multiSamples Number of multisamples for the RenderTexture.\r\n     * @param depthTexture Whether to generate a depth texture.\r\n     * @param sRGB Whether the RenderTexture is in sRGB space.\r\n     * @returns A RenderTexture instance.\r\n     * @zh 从对象池中创建一个RenderTexture实例。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @param colorFormat 颜色格式。\r\n     * @param depthFormat 深度格式。\r\n     * @param mipmap 是否生成多级纹理。\r\n     * @param multiSamples 多采样次数。\r\n     * @param depthTexture 是否生成深度纹理。\r\n     * @param sRGB 是否sRGB空间。\r\n     * @returns RenderTexture实例。\r\n     */\r\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\r\n\r\n        // todo mipmap 判断\r\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\r\n\r\n        let n = RenderTexture._pool.length;\r\n        for (let index = 0; index < n; index++) {\r\n            let rt = RenderTexture._pool[index];\r\n\r\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\r\n                rt._inPool = false;\r\n                let end = RenderTexture._pool[n - 1];\r\n                RenderTexture._pool[index] = end;\r\n                RenderTexture._pool.length -= 1;\r\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n                return rt;\r\n            }\r\n        }\r\n\r\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\r\n        rt.lock = true;\r\n        return rt;\r\n    }\r\n\r\n    /**\r\n     * @en Recovers the RenderTexture to the pool for reuse.\r\n     * @param rt The RenderTexture to recover.\r\n     * @zh 回收渲染纹理到对象池以便重用。\r\n     * @param rt 要回收的渲染纹理。\r\n     */\r\n    static recoverToPool(rt: RenderTexture): void {\r\n        if (rt._inPool || rt.destroyed)\r\n            return;\r\n        RenderTexture._pool.push(rt);\r\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n        rt._inPool = true;\r\n    }\r\n\r\n    /**\r\n     * @en Clears the RenderTexture pool.\r\n     * @zh 清空渲染纹理对象池。\r\n     */\r\n    static clearPool() {\r\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\r\n            return;\r\n        }\r\n        for (var i in RenderTexture._pool) {\r\n            RenderTexture._pool[i].destroy();\r\n        }\r\n        RenderTexture._pool = [];\r\n        RenderTexture._poolMemory = 0;\r\n    }\r\n\r\n    /** 最后绑定到主画布上的结果 此值可能为null*/\r\n    private static _bindCanvasRender: RenderTexture;\r\n    /**\r\n     * @en The RenderTexture bound to the main canvas.\r\n     * @zh 绑定到主画布上的渲染纹理。\r\n     */\r\n    static get bindCanvasRender(): RenderTexture {\r\n        return RenderTexture._bindCanvasRender;\r\n    }\r\n\r\n    static set bindCanvasRender(value: RenderTexture) {\r\n        if (value != this._bindCanvasRender)\r\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\r\n            this._bindCanvasRender = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 是否在对象池中\r\n     */\r\n    _inPool: boolean = false;\r\n\r\n    /**\r\n     * 是否是相机目标纹理\r\n     * @internal\r\n     */\r\n    _isCameraTarget: boolean = false;\r\n\r\n    /**\r\n     * 渲染纹理\r\n     * @internal\r\n     */\r\n    _renderTarget: InternalRenderTarget;\r\n\r\n    private _generateDepthTexture: boolean = false;\r\n    /**\r\n     * @en Whether to generate depth texture maps.\r\n     * @zh 是否生成深度纹理贴图。\r\n     */\r\n    public get generateDepthTexture(): boolean {\r\n        return this._generateDepthTexture;\r\n    }\r\n    public set generateDepthTexture(value: boolean) {\r\n\r\n        if (this.depthStencilFormat == RenderTargetFormat.None) {\r\n            this._generateDepthTexture = false;\r\n            return;\r\n        }\r\n\r\n        // todo  重复 设置\r\n        if (value && !this._depthStencilTexture) {\r\n            // todo  base texture format 移出构造函数\r\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\r\n            // @ts-ignore\r\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\r\n\r\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTargetDepthTexture(this._renderTarget, TextureDimension.Tex2D, this.width, this.height);\r\n\r\n        }\r\n\r\n        this._generateDepthTexture = value;\r\n    }\r\n    /**\r\n     * @en Depth and stencil removal texture mapping\r\n     * @zh 深度与模板剔除纹理贴图\r\n     */\r\n    private _depthStencilTexture: BaseTexture;\r\n\r\n    /**\r\n     * @en Depth and stencil removal texture mapping\r\n     * @zh 深度与模板剔除纹理贴图\r\n     */\r\n    get depthStencilTexture(): BaseTexture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    /**\r\n     * 是否生成多级纹理\r\n     * @internal\r\n     */\r\n    _generateMipmap: boolean;\r\n\r\n    /**\r\n     * @en Color format\r\n     * @zh 颜色格式\r\n     */\r\n    get colorFormat(): RenderTargetFormat {\r\n        return this._renderTarget.colorFormat;\r\n    }\r\n    /**\r\n     * @en Depth and stencil removal format\r\n     * @zh 深度与模板剔除的格式\r\n     */\r\n    protected _depthStencilFormat: RenderTargetFormat;\r\n    /**\r\n     * @en Depth and stencil removal format\r\n     * @zh 深度与模板剔除的格式\r\n     */\r\n    get depthStencilFormat(): RenderTargetFormat {\r\n        return this._renderTarget.depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @en Number of multisamples.\r\n     * @zh 多采样次数\r\n     */\r\n    protected _multiSamples: number;\r\n    /**\r\n     * @en Number of multisamples.\r\n     * @zh 多采样次数\r\n     */\r\n    public get multiSamples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the RenderTexture is a cube texture.\r\n     * @zh 是否是立方体贴图\r\n     */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**\r\n     * @en Sampling times\r\n     * @zh 采样次数\r\n     */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * @en Whether to generate multi-level textures.\r\n     * @zh 是否生成多级纹理。\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @en Create an instance of the RenderTexture class.\r\n     * @param width Width of the RenderTexture.\r\n     * @param height Height of the RenderTexture.\r\n     * @param colorFormat Color format for the RenderTexture. \r\n     * @param depthFormat Depth format for the RenderTexture. \r\n     * @param generateMipmap Whether to generate mipmaps for the RenderTexture. \r\n     * @param multiSamples Number of multisamples for the RenderTexture.\r\n     * @param generateDepthTexture Whether to generate a depth texture for the RenderTexture. \r\n     * @param sRGB Whether the RenderTexture uses sRGB color space. \r\n     * @zh 创建 RenderTexture 类的实例。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @param colorFormat 颜色格式。\r\n     * @param depthFormat 深度格式。\r\n     * @param generateMipmap 是否生成多级纹理。\r\n     * @param multiSamples 多采样次数。\r\n     * @param generateDepthTexture 是否生成深度纹理。\r\n     * @param sRGB 是否sRGB空间。\r\n     */\r\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        super(width, height, colorFormat);\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    /**\r\n     * 创建渲染纹理\r\n     * @internal\r\n     */\r\n    _createRenderTarget() {\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        // rt 格式 宽高可能不支持\r\n        this._generateMipmap = this._renderTarget._generateMipmap;\r\n        if (this._renderTarget._texturesResolve)\r\n            this._texture = this._renderTarget._texturesResolve[0];\r\n        else this._texture = this._renderTarget._textures[0];\r\n\r\n        this.generateDepthTexture = this._generateDepthTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Recreates the RenderTexture with the specified parameters.\r\n     * @param width New width of the RenderTexture.\r\n     * @param height New height of the RenderTexture.\r\n     * @param colorFormat New color format for the RenderTexture.\r\n     * @param depthFormat New depth format for the RenderTexture. \r\n     * @param generateMipmap Whether to regenerate mipmaps for the RenderTexture. \r\n     * @param multiSamples New number of multisamples for the RenderTexture. \r\n     * @param generateDepthTexture Whether to generate a new depth texture for the RenderTexture. \r\n     * @param sRGB Whether the RenderTexture uses sRGB color space. \r\n     * @zh 使用指定参数重新创建RenderTexture。\r\n     * @param width 新宽度。\r\n     * @param height 新高度。\r\n     * @param colorFormat 新颜色格式。\r\n     * @param depthFormat 新深度格式。\r\n     * @param generateMipmap 是否重新生成多级纹理。\r\n     * @param multiSamples 新多采样次数。\r\n     * @param generateDepthTexture 是否生成新的深度纹理。\r\n     * @param sRGB 是否sRGB空间。\r\n     */\r\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = <TextureFormat><any>colorFormat;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        this._disposeResource();\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    /**\r\n     * @deprecated 请使用getDataAsync函数代替\r\n     * 获取渲染纹理的像素数据\r\n     * @param xOffset x偏移值\r\n     * @param yOffset y偏移值\r\n     * @param width 宽度\r\n     * @param height 高度\r\n     * @param out 输出\r\n     * @returns 二进制数据\r\n     */\r\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\r\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @en Asynchronously retrieves pixel data from the RenderTexture.\r\n     * @param xOffset The x-offset value.\r\n     * @param yOffset The y-offset value.\r\n     * @param width The width of the area to retrieve.\r\n     * @param height The height of the area to retrieve.\r\n     * @param out The array to hold the output data.\r\n     * @returns binary data\r\n     * @zh 异步获取渲染纹理的像素数据。\r\n     * @param xOffset x偏移值\r\n     * @param yOffset y偏移值\r\n     * @param width 要检索的区域的宽度。\r\n     * @param height 要检索的区域的高度。\r\n     * @param out 用于保存输出数据的数组。\r\n     * @returns 二进制数据\r\n     */\r\n    getDataAsync(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array) { //兼容WGSL\r\n        return LayaGL.textureContext.readRenderTargetPixelDataAsync(this._renderTarget, xOffset, yOffset, width, height, out);\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the Resource.\r\n     * @zh 销毁资源\r\n     */\r\n    protected _disposeResource(): void {\r\n        this._renderTarget.dispose();\r\n        this._renderTarget = null;\r\n        this._depthStencilTexture?.destroy();\r\n        this._depthStencilTexture = null;\r\n    }\r\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { VideoTexture } from \"../media/VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\n\r\nvar internalResources: Record<string, Texture2D>;\r\n\r\nexport class Texture2DLoader implements IResourceLoader {\r\n    constructor() {\r\n        if (!internalResources) {\r\n            internalResources = {\r\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\r\n                \"BlackTexture.png\": Texture2D.blackTexture,\r\n                \"GrayTexture.png\": Texture2D.grayTexture,\r\n                \"NormalTexture.png\": Texture2D.normalTexture,\r\n            };\r\n        }\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        if (task.url.indexOf(\"internal/\") != -1) {\r\n            let tex = internalResources[Utils.getBaseName(task.url)];\r\n            if (tex)\r\n                return Promise.resolve(tex);\r\n        }\r\n\r\n        let meta: any;\r\n        if (!task.url.startsWith(\"data:\")) {\r\n            meta = AssetDb.inst.metaMap[task.url];\r\n            if (!meta && LayaEnv.isPreview) {\r\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\r\n                    return this.load2(task, meta);\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.load2(task, meta);\r\n    }\r\n\r\n    protected load2(task: ILoadTask, meta: any) {\r\n        let constructParams: TextureConstructParams;\r\n        let propertyParams: TexturePropertyParams;\r\n        let ext = task.ext;\r\n        let url = task.url;\r\n        if (meta) {\r\n            let platform = Browser.platform;\r\n            let fileIndex = meta.platforms?.[platform] || 0;\r\n            let fileInfo = meta.files?.[fileIndex] || {};\r\n            if (fileInfo.file) {\r\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\r\n                ext = fileInfo.ext;\r\n            }\r\n\r\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\r\n            propertyParams = {\r\n                wrapModeU: meta.wrapMode,\r\n                wrapModeV: meta.wrapMode,\r\n                filterMode: meta.filterMode,\r\n                anisoLevel: meta.anisoLevel,\r\n                premultiplyAlpha: !!meta.pma,\r\n                hdrEncodeFormat: meta.hdrEncodeFormat,\r\n            };\r\n        }\r\n        else {\r\n            constructParams = task.options.constructParams;\r\n            propertyParams = task.options.propertyParams;\r\n        }\r\n\r\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\r\n        if (compress != null) {\r\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n                if (!data)\r\n                    return null;\r\n\r\n                let tex: BaseTexture;\r\n                switch (compress) {\r\n                    case \"dds\":\r\n                        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n                        if (ddsInfo.isCube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let srgb = constructParams ? !!constructParams[5] : false;\r\n                                let tc = new cls(ddsInfo.width, ddsInfo.format, ddsInfo.mipmapCount > 1, srgb);\r\n                                tc.setDDSData(ddsInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        else {\r\n                            tex = Texture2D._parseDDS(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n\r\n                    case \"ktx\":\r\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\r\n                                tc.setKTXData(ktxInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else\r\n                                return null;\r\n                        }\r\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\r\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n                    case \"pvr\":\r\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"hdr\":\r\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"lanit.ls\":\r\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\r\n                        break;\r\n                }\r\n\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (propertyParams && propertyParams.hdrEncodeFormat)\r\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n        else {\r\n            let options = task.options;\r\n            let premultiplyAlpha = (propertyParams && propertyParams.premultiplyAlpha) ? \"premultiply\" : \"none\";\r\n            if (options.useWorkerLoader && premultiplyAlpha === \"none\")\r\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha } }, options);\r\n\r\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\r\n                if (LayaGL.textureContext.needBitmap) {\r\n                    if (img instanceof ImageBitmap)\r\n                        return img;\r\n                    else\r\n                        return createImageBitmap(img, options.workerLoaderOptions || { premultiplyAlpha });\r\n                } else {\r\n                    return img;\r\n                }\r\n            }).then(bitmapimage => {\r\n                if (!bitmapimage)\r\n                    return null;\r\n                let tex: BaseTexture = Texture2D._parseImage(bitmapimage, propertyParams, constructParams);\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n                return tex;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected move(obsoluteInst: BaseTexture, tex: BaseTexture) {\r\n        obsoluteInst._texture = tex._texture;\r\n        (<any>obsoluteInst)._format = tex.format;\r\n        obsoluteInst.width = tex.width;\r\n        obsoluteInst.height = tex.height;\r\n        obsoluteInst.obsolute = false;\r\n        delete Resource._idResourcesMap[tex.id];\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nexport class RenderTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let rt = <RenderTexture>task.obsoluteInst;\r\n            if (rt)\r\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n            else\r\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n\r\n            if (null != data.anisoLevel)\r\n                rt.anisoLevel = data.anisoLevel;\r\n            if (null != data.filterMode)\r\n                rt.filterMode = data.filterMode;\r\n            if (null != data.wrapModeU)\r\n                rt.wrapModeU = data.wrapModeU;\r\n            if (null != data.wrapModeV)\r\n                rt.wrapModeV = data.wrapModeV;\r\n\r\n            return rt;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport class VideoTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\r\n        inst.source = task.url;\r\n        return Promise.resolve(inst);\r\n    }\r\n}\r\n\r\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\r\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\r\n\r\nexport class TextureLoader implements IResourceLoader {\r\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\r\n        if (!tex2D)\r\n            return null;\r\n\r\n        let tex = <Texture>task.obsoluteInst;\r\n        if (tex) { //recover\r\n            tex.setTo(tex2D);\r\n            tex.obsolute = false;\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n            tex.event(\"reload\");\r\n            if (tex._clipCache) {\r\n                tex._clipCache.forEach(t => {\r\n                    t.event(\"reload\");\r\n                    t._sizeGrid = tex._sizeGrid;\r\n                    t._stateNum = tex._stateNum;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            tex = new Texture(tex2D);\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n        }\r\n\r\n        return tex;\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\r\n        if (!tex2D || tex2D.obsolute) {\r\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\r\n\r\n            if (!task.options.propertyParams)\r\n                url.propertyParams = propertyParams2d;\r\n            else if (task.options.propertyParams.premultiplyAlpha == null)\r\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\r\n\r\n            if (!task.options.constructParams)\r\n                url.constructParams = constructParams2d;\r\n            else if (task.options.constructParams[5] == null)\r\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\r\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\r\n                return this.wrapTex2D(task, tex2D);\r\n            });\r\n        }\r\n        else\r\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\r\n    }\r\n}\r\n\r\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\r\nconst videoFormats = [\"mp4\", \"webm\"];\r\n\r\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE, true);\r\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D, true);\r\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D, true);\r\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { Component } from \"./Component\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Node } from \"../../laya/display/Node\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimatorController2D } from \"./AnimatorController2D\";\r\nimport { AniParmType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\r\n\r\n/**\r\n * @en 2D animation components\r\n * @zh 2D动画组件\r\n */\r\nexport class Animator2D extends Component {\r\n    /**@internal */\r\n    private _speed = 1;\r\n    /**@internal 更新模式*/\r\n    private _updateMode = AnimatorUpdateMode.Normal;\r\n    /**@internal 降低更新频率调整值*/\r\n    private _lowUpdateDelty = 20;\r\n    /**@internal */\r\n    private _isPlaying = true;\r\n    /**@internal */\r\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\r\n    /**@internal */\r\n    _parameters: Record<string, Animation2DParm>;\r\n    /**@internal */\r\n    _controllerLayers: AnimatorControllerLayer2D[];\r\n    /**@internal */\r\n    _controller: AnimatorController2D;\r\n    /**@internal */\r\n    _checkEnterIndex: number[];\r\n\r\n\r\n    /**\r\n     * @en Constructor method of Animator2D Component.  \r\n     * @zh 2D动画组件构造方法。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._controllerLayers = [];\r\n        this._parameters = {};\r\n    }\r\n\r\n    /**\r\n     * @en The 2D animation controller.\r\n     * @zh 2D动画控制器。\r\n     */\r\n    get controller() {\r\n        return this._controller;\r\n    }\r\n\r\n    set controller(val: AnimatorController2D) {\r\n        this._controller = val;\r\n        if (val) {\r\n            val.updateTo(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The current 2D animation controller.\r\n     * @zh 动画参数\r\n     */\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\n    set parameters(val: Record<string, Animation2DParm>) {\r\n        this._parameters = val;\r\n    }\r\n\r\n    /**\r\n     * @en The playback speed of the animation.\r\n     * @zh 播放速度\r\n     */\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    set speed(num: number) {\r\n        this._speed = num;\r\n    }\r\n\r\n    /**\r\n     * @en If the animation is currently playing.\r\n     * @zh 动画是否正在播放。\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     */\r\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\r\n        if (playState._finish) {\r\n            animatorState._eventExit();//派发播放完成的事件\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Assigns data to a Node.\r\n     * @param stateInfo The animation state information.\r\n     * @param additive Indicates if it is additive.\r\n     * @param weight The weight of the state.\r\n     * @param isFirstLayer Indicates if it is the first layer.\r\n     * @zh 赋值Node数据。\r\n     * @param stateInfo 动画状态信息。\r\n     * @param additive 是否为加法。\r\n     * @param weight 状态的权重。\r\n     * @param isFirstLayer 是否是第一层。\r\n     */\r\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, controllerLayer: AnimatorControllerLayer2D = null): void {\r\n        var realtimeDatas = stateInfo._realtimeDatas;\r\n        var nodes = stateInfo._clip!._nodes!;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            if (null == realtimeDatas[i]) continue;\r\n            var node = nodes.getNodeByIndex(i);\r\n            var o = this.getOwner(node);\r\n            o && this._applyFloat(o, additive, weight, realtimeDatas[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param o \r\n     * @param additive \r\n     * @param weight \r\n     * @param isFirstLayer \r\n     * @param data \r\n     */\r\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, data: string | number | boolean): void {\r\n        var pro = o.pro;\r\n        if (pro && pro.ower) {\r\n            if (additive && \"number\" == typeof data) {\r\n                pro.ower[pro.key] = pro.defVal + weight * data;\r\n            } else if (\"number\" == typeof data) {\r\n                pro.ower[pro.key] = weight * data;\r\n            } else {\r\n                pro.ower[pro.key] = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private getOwner(node: KeyframeNode2D) {\r\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\r\n        if (this._ownerMap) {\r\n            ret = this._ownerMap.get(node);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n\r\n        var property = this.owner;\r\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\r\n            var ownPat = node.getOwnerPathByIndex(j);\r\n            if (\"\" == ownPat) {\r\n                continue;\r\n            } else {\r\n                property = property.getChildByName(ownPat);\r\n                if (!property)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        ret = { ower: property };\r\n\r\n        if (property) {\r\n            var pobj: any = property;\r\n            var propertyCount = node.propertyCount;\r\n\r\n            if (1 == propertyCount) {\r\n                var pname = node.getPropertyByIndex(0);\r\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\r\n            } else {\r\n                for (var i = 0; i < propertyCount; i++) {\r\n                    var pname = node.getPropertyByIndex(i);\r\n\r\n                    if (i == propertyCount - 1 || null == pobj) {\r\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\r\n                        break;\r\n                    }\r\n\r\n                    if (null == pobj[pname] && property == pobj) {\r\n                        //有可能是组件,查找组件逻辑\r\n                        pobj = null;\r\n                        var classObj = ClassUtils.getClass(pname);\r\n                        if (classObj) {\r\n                            pobj = property.getComponent(classObj);\r\n                        }\r\n\r\n                    } else {\r\n                        pobj = pobj[pname];\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (null == this._ownerMap) {\r\n            this._ownerMap = new Map();\r\n        }\r\n        this._ownerMap.set(node, ret);\r\n        return ret;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新clip数据\r\n     * @internal\r\n     */\r\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\r\n        var clip = animatorState._clip;\r\n        var clipDuration = clip!._duration;\r\n\r\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\r\n        var currentFrameIndices = animatorState._currentFrameIndices;\r\n        //var frontPlay = playStateInfo._frontPlay;\r\n        let frontPlay = true;\r\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     * @param elapsedTime \r\n     * @param loop \r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\r\n\r\n        let isReplay = false;\r\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n        var lastElapsedTime = playState._elapsedTime;\r\n\r\n        let pAllTime = playState._playAllTime;\r\n\r\n        playState._playAllTime += Math.abs(elapsedTime);\r\n\r\n        //动画播放总时间\r\n        elapsedTime = lastElapsedTime + elapsedTime;\r\n        //动画播放的上次总时间\r\n        playState._lastElapsedTime = lastElapsedTime;\r\n        playState._elapsedTime = elapsedTime;\r\n        var normalizedTime = elapsedTime / clipDuration;\r\n\r\n        let scale = 1;\r\n        if (animatorState.yoyo) {\r\n            scale = 2;\r\n        }\r\n\r\n        //总播放次数\r\n        let pTime = playState._playAllTime / (clipDuration * scale);\r\n\r\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\r\n            isReplay = true;\r\n        }\r\n\r\n        var playTime = normalizedTime % 1.0;\r\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n        playState._normalizedPlayTime = normalizedPlayTime;\r\n        playState._duration = clipDuration;\r\n\r\n        if (1 != scale) {\r\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\r\n            playTime = normalizedTime % 1.0;\r\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\r\n            if (animatorState.yoyo) {\r\n                if (0.5 > normalizedPlayTime) {\r\n                    if (!playState._frontPlay) {\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        }\r\n                        playState._frontPlay = true;\r\n                    }\r\n                } else {\r\n                    if (playState._frontPlay) {\r\n                        playState._frontPlay = false;\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        animatorState._eventStateUpdate(normalizedPlayTime);\r\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\r\n\r\n        if (!ret && isReplay) {\r\n            let absTime = playState._playAllTime / (clipDuration * scale);\r\n            if (0 < loop && loop <= absTime) {\r\n                playState._finish = true;\r\n\r\n                if (0 > animatorState.speed) {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    }\r\n                } else {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                animatorState._eventLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param stateInfo \r\n     * @param playStateInfo \r\n     */\r\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\r\n        let clip = stateInfo._clip;\r\n        let events = clip!._animationEvents;\r\n        if (!events || 0 == events.length) return;\r\n        let clipDuration = clip!._duration;\r\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\r\n        let frontPlay = playStateInfo._frontPlay;\r\n        let pTime = playStateInfo._parentPlayTime;\r\n        let parentPlayTime = playStateInfo._parentPlayTime;\r\n        if (null == parentPlayTime) {\r\n            if (frontPlay) {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            } else {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n        if (frontPlay) {\r\n            if (time < parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            }\r\n        } else {\r\n            if (time > parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n\r\n        this._eventScript(events, parentPlayTime, time, frontPlay);\r\n        /**如果不相等，应该是event事件里面跳转了，被重置了动画 */\r\n        if (pTime == playStateInfo._parentPlayTime) {\r\n            playStateInfo._parentPlayTime = time;\r\n        }\r\n    }\r\n    /**\r\n    * @internal\r\n    */\r\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\r\n        let scripts = this.owner.components;\r\n        if (frontPlay) {\r\n            for (let i = 0, len = events.length; i < len; i++) {\r\n                let e = events[i];\r\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time > currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                let e = events[i];\r\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time < currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\r\n    //     let scripts = this.owner.components;\r\n    //     if (front) {\r\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time <= endTime) {\r\n    //                 if (event.time >= startTime) {\r\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                         let script = scripts[j];\r\n    //                         if (script._isScript()) {\r\n    //                             let fun: Function = (script as any)[event.eventName];\r\n    //                             (fun) && (fun.apply(script, event.params));\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (; eventIndex >= 0; eventIndex--) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time >= endTime) {\r\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                     let script = scripts[j];\r\n    //                     if (script._isScript()) {\r\n    //                         let fun = (script as any)[event.eventName];\r\n    //                         (fun) && (fun.apply(script, event.params));\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return eventIndex;\r\n    // }\r\n\r\n    /**\r\n     * 启用过渡\r\n     * @param layerindex \r\n     * @param transition \r\n     * @returns \r\n     */\r\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\r\n        if (!transition)\r\n            return false;\r\n        return this.crossFade(transition.destState.name, layerindex, transition.transstartoffset, transition.transduration);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param delta \r\n     * @returns \r\n     */\r\n    private _applyUpdateMode(delta: number): number {\r\n        let ret;\r\n        switch (this._updateMode) {\r\n            case AnimatorUpdateMode.Normal:\r\n                ret = delta;\r\n                break;\r\n            case AnimatorUpdateMode.LowFrame:\r\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\r\n                break;\r\n            case AnimatorUpdateMode.UnScaleTime:\r\n                ret = 0;\r\n                break;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @en Jump to the specified frame and stop playing the animation.\r\n     * @param name The name of the animation.\r\n     * @param layerIndex The index of the animation layer.\r\n     * @param frame The specified frame to jump to.\r\n     * @zh 跳转到指定帧并停止播放动画。\r\n     * @param name 动画名称\r\n     * @param layerIndex 动画层\r\n     * @param frame 指定帧\r\n     */\r\n    gotoAndStopByFrame(name: string, layerIndex: number, frame: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n            var allFrame = animatorState._clip!._duration * animatorState._clip!._frameRate;\r\n            let normalizedTime = frame / allFrame;\r\n            if (1 < normalizedTime) normalizedTime = 1;\r\n            this.gotoAndStop(name, layerIndex, normalizedTime);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Jump to the specified time and stop playing the animation.\r\n     * @param name The name of the animation.\r\n     * @param layerIndex The index of the layer.\r\n     * @param normalizedTime The normalized playback time of the animation.\r\n     * @zh 跳转到指定时间并停止播放动画。\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化播放动画时间\r\n     */\r\n    gotoAndStop(name: string, layerIndex: number, normalizedTime: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n            playStateInfo._normalizedPlayTime = normalizedTime;\r\n            controllerLayer._playType = 0;\r\n            if (curPlayState !== animatorState) {\r\n                playStateInfo._currentState = animatorState;\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n            let addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Play animation\r\n     * @param name The name of the animation.\r\n     * @param layerIndex The index of the layer.\r\n     * @param normalizedTime The normalized time.\r\n     * @zh 播放动画\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化时间\r\n     */\r\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        if (this._checkEnterIndex) {\r\n            let i = this._checkEnterIndex.indexOf(layerIndex);\r\n            if (0 <= i) {\r\n                this._checkEnterIndex.splice(i, 1);\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var defaultState = controllerLayer.defaultState;\r\n            if (!name && !defaultState)\r\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\r\n\r\n            if (!animatorState._clip)\r\n                return;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            // this.resetDefOwerVal();\r\n            // playStateInfo._resetPlayState(0.0, calclipduration);\r\n            // if (curPlayState != animatorState) {\r\n            //     playStateInfo._currentState = animatorState;\r\n            // }\r\n            // controllerLayer._playType = 0;、\r\n\r\n            if (curPlayState !== animatorState) {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                else\r\n                    playStateInfo._resetPlayState(0.0, calclipduration);\r\n                (curPlayState !== null && curPlayState !== animatorState);\r\n                controllerLayer._playType = 0;\r\n                playStateInfo._currentState = animatorState;\r\n            } else {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                    controllerLayer._playType = 0;\r\n                }\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n        }\r\n        // var scripts = animatorState._scripts!;\r\n        // if (scripts) {\r\n        //     for (var i = 0, n = scripts.length; i < n; i++)\r\n        //         scripts[i].onStateEnter();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * @en Stop playing animation.\r\n     * @zh 停止播放动画\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * @en Frame Loop\r\n     * @zh 帧循环 \r\n     */\r\n    onUpdate(): void {\r\n        if (!this._isPlaying) return;\r\n\r\n        if (this._checkEnterIndex) {\r\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\r\n                let index = this._checkEnterIndex[i];\r\n                let enterTransition = this._controllerLayers[index]._enterTransition;\r\n                if (enterTransition.check(0, this.parameters, true)) {\r\n                    var defaultClip = this.getDefaultState(index);\r\n                    this.play(null, index, defaultClip.cycleOffset);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        var delta = this.owner.timer._delta / 1000.0;\r\n        delta = this._applyUpdateMode(delta);\r\n        if (0 == this.speed || 0 == delta) return;\r\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\r\n\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n            var controllerLayer = this._controllerLayers[i];\r\n            if (!controllerLayer.enable)\r\n                continue;\r\n\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\r\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            switch (controllerLayer._playType) {\r\n                case 0:\r\n                    var animatorState = playStateInfo._currentState!;\r\n                    var speed = this._speed * animatorState.speed;\r\n                    var finish = playStateInfo._finish;\r\n\r\n                    var loop = animatorState.loop;\r\n                    if (-1 >= loop) {\r\n                        var clip = animatorState._clip!;\r\n                        if (clip.islooping) {\r\n                            loop = 0;\r\n                        } else {\r\n                            loop = 1;\r\n                        }\r\n                    }\r\n\r\n                    let dir = 1;\r\n                    if (!playStateInfo._frontPlay) {\r\n                        dir = -1;\r\n                    }\r\n\r\n\r\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\r\n                    playStateInfo = controllerLayer._playStateInfo!;\r\n                    animatorState = playStateInfo._currentState!;\r\n                    if (needRender) {\r\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n                        if (!finish) {\r\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n                            this._updateEventScript(animatorState, playStateInfo);\r\n                        }\r\n                    }\r\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Adds an animator controller layer.\r\n     * @param controllderLayer The animator controller layer to be added.\r\n     * @zh 增加一个动画控制器层。\r\n     * @param controllderLayer 动画控制器层.\r\n     */\r\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\r\n        this._controllerLayers.push(controllderLayer);\r\n    }\r\n\r\n    /**\r\n     * @en Cross-fades between the current and target animation states.\r\n     * @param name The name of the target animation state.\r\n     * @param layerIndex The index of the layer.\r\n     * @param normalizedTime The normalized start time for playback.\r\n     * @param transitionDuration The duration of the transition in normalized time (between 0.0 and 1.0).\r\n     * @zh 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param\tname 目标动画状态。\r\n     * @param\tlayerIndex 层索引。\r\n     * @param\tnormalizedTime 归一化的播放起始时间。\r\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\r\n     */\r\n    crossFade(name: string, layerIndex: number, normalizedTime: number, transitionDuration: number): boolean;\r\n    /**\r\n     * @en Cross-fades between the current and target animation states with an optional transition duration.\r\n     * @param name The name of the target animation state.\r\n     * @param layerIndex The index of the layer.\r\n     * @param normalizedTime The normalized start time for playback.\r\n     * @zh 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param name 目标动画状态的名称。\r\n     * @param layerIndex 层的索引。\r\n     * @param normalizedTime 归一化的播放起始时间。\r\n     */\r\n    crossFade(name: string, layerIndex: number, normalizedTime: number): boolean;\r\n    crossFade(name: string, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY, transitionDuration?: number): boolean {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var destAnimatorState = controllerLayer.getStateByName(name);\r\n            if (destAnimatorState) {\r\n                this.play(name, layerIndex, normalizedTime);\r\n                return true;\r\n            }\r\n            else {\r\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    onAfterDeserialize(): void {\r\n        let arr = (<any>this).controllerLayers;\r\n        if (!arr || null != this.controller)\r\n            return;\r\n        delete (<any>this).controllerLayers;\r\n        this._controllerLayers.length = 0;\r\n        for (let layer of arr) {\r\n            this.addControllerLayer(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onEnable() {\r\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\r\n        else this._checkEnterIndex = [];\r\n\r\n        if (this._isPlaying) {\r\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n                if (this._controllerLayers[i].playOnWake) {\r\n                    var defaultClip = this.getDefaultState(i);\r\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\r\n                    if (defaultClip) {\r\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\r\n                        if (enterTransition) {\r\n                            this._isPlaying = true;\r\n                            if (enterTransition.check(0, this.parameters, true)) {\r\n                                this.play(null, i, defaultClip.cycleOffset);\r\n                            } else {\r\n                                this._checkEnterIndex.push(i);\r\n                            }\r\n                        } else {\r\n                            this.play(null, i, defaultClip.cycleOffset);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Get the default State Machine\r\n     * @param layerIndex The index of the layer.\r\n     * @zh 获取默认状态机\r\n     * @param layerIndex 层索引\r\n     */\r\n    getDefaultState(layerIndex = 0) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        return controllerLayer.defaultState;\r\n    }\r\n\r\n    /**\r\n     * @en Set a parameter's trigger value.\r\n     * @param name The name of the parameter.\r\n     * @zh 设置参数Trigger值\r\n     * @param name 名字\r\n     */\r\n    setParamsTrigger(name: string) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\r\n    }\r\n\r\n    /**\r\n     * @en Set a parameter's float value.\r\n     * @param name The name of the parameter.\r\n     * @param value The value of the parameter.\r\n     * @zh 设置参数Number值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsNumber(name: string, value: number) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * @en Set a parameter's bool value.\r\n     * @param name The name of the parameter.\r\n     * @param value The value of the parameter.\r\n     * @zh 设置参数Bool值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsBool(name: string, value: boolean) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * @en Get a parameter's trigger value.\r\n     * @param name The name of the parameter.\r\n     * @zh 得到参数值\r\n     * @param name 名字\r\n     */\r\n    getParamsvalue(name: number) {\r\n        let parm = this._parameters[name];\r\n        if (parm) {\r\n            return parm.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onDestroy() {\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\r\n            this._controllerLayers[i].destroy();\r\n        this._controllerLayers.length = 0;\r\n        this._isPlaying = false;\r\n        this._parameters = null;\r\n    }\r\n}","\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorState2DScript } from \"./AnimatorState2DScript\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * @en The Animator class is used to create animation components.\r\n * @zh Animator 类用于创建动画组件。\r\n */\r\nexport class AnimatorState2D extends EventDispatcher implements IClone {\r\n    /**\r\n     * @internal\r\n     * @en Event triggered when entering the state\r\n     * @zh 进入状态时触发的事件\r\n     */\r\n    static EVENT_OnStateEnter = \"OnStartEnter\";\r\n\r\n    /**\r\n     * @internal\r\n     * @en Event triggered during state update\r\n     * @zh 状态更新时触发的事件\r\n     */\r\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\r\n\r\n    /**\r\n     * @internal\r\n     * @en Event triggered when exiting the state\r\n     * @zh 退出状态时触发的事件\r\n     */\r\n    static EVENT_OnStateExit = \"OnStateExit\";\r\n\r\n    /**\r\n     * @internal\r\n     * @en Event triggered when the state loops\r\n     * @zh 状态循环时触发的事件\r\n     */\r\n    static EVENT_OnStateLoop = 'OnStateLoop';\r\n\r\n    /** @internal */\r\n    private _referenceCount = 0;\r\n\r\n    /** @internal */\r\n    _clip: AnimationClip2D | null = null;\r\n\r\n    /**@internal */\r\n    _currentFrameIndices: Int16Array | null = null;\r\n\r\n    /**\r\n     * @en Play on awake start offset\r\n     * @zh 启动时播放偏移 \r\n     */\r\n    cycleOffset: number = 0;\r\n\r\n    /**\r\n     * @en name\r\n     * @zh 名称\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * @en Animation playback speed\r\n     * @zh 动画播放速度\r\n     */\r\n    speed = 1.0;\r\n\r\n    /**\r\n     * @en Action playback start time.\r\n     * @zh 动作播放起始时间\r\n     */\r\n    clipStart = 0.0;\r\n\r\n    /**\r\n     * @en The end time of the action playback.\r\n     * @zh 动作播放结束时间。\r\n     */\r\n    clipEnd = 1.0;\r\n\r\n    /**\r\n     * @en The number of animation loops. -1 or less than -1 to use the loop state of the clip, 1 for playing once, 2 for playing twice, 0 for infinite looping.\r\n     * @zh 动画循环次数，-1或小于-1使用clip的循环状态，1表示播放一次，2表示播放两次，0表示无限循环。\r\n     */\r\n    loop = -1;\r\n\r\n    /**\r\n     * @en Is it a one-time forward playback and one-time reverse playback mode\r\n     * @zh 是否为一次正播放，一次倒播放模式 \r\n     */\r\n    yoyo = false;\r\n\r\n    /**\r\n     * @internal\r\n     * @en The list of transitions for the animator.\r\n     * @zh 动画器的过渡列表。\r\n     */\r\n    transitions: AnimatorTransition2D[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * @en Priority Transition List.\r\n     * @zh 优先过渡列表。\r\n     */\r\n    soloTransitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal */\r\n    _scripts: AnimatorState2DScript[] | null = null;\r\n\r\n    /**@internal */\r\n    _realtimeDatas: Array<number | string | boolean> = [];\r\n\r\n    /**\r\n     * @en Animation Clip\r\n     * @zh 动画剪辑\r\n     */\r\n    get clip(): AnimationClip2D | null {\r\n        return this._clip;\r\n    }\r\n\r\n    set clip(value: AnimationClip2D | null) {\r\n        if (this._clip != value) {\r\n            if (this._clip)\r\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\r\n            if (value) {\r\n                var clipNodes = value._nodes!;\r\n                var count = clipNodes.count;\r\n                this._currentFrameIndices = new Int16Array(count);\r\n                this._resetFrameIndices();\r\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\r\n                this._realtimeDatas.length = count;\r\n            }\r\n            this._clip = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStateUpdate(value: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\r\n        if (this._scripts) {\r\n            for (var i = 0, n = this._scripts.length; i < n; i++)\r\n                this._scripts[i].onStateUpdate(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStart(animator: Animator2D, layerIndex: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\r\n                this._scripts[i].onStateEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventExit() {\r\n        this.event(AnimatorState2D.EVENT_OnStateExit);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].onStateExit();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventLoop() {\r\n        this.event(AnimatorState2D.EVENT_OnStateLoop);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                if (this._scripts[i].onStateLoop)\r\n                    this._scripts[i].onStateLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Dispatches the transition event and checks for transitions based on normalized time and parameters.\r\n     * @param normalizeTime The normalized time for transition checking.\r\n     * @param paramsMap The map of parameters for transition checking.\r\n     * @param isReplay Whether to repeat playback.\r\n     * @zh 派发过渡事件并根据归一化时间和参数检查过渡。\r\n     * @param normalizeTime 用于检查过渡的归一化时间。\r\n     * @param paramsMap 用于检查过渡的参数映射。\r\n     * @param isReplay 是否重复播放\r\n     */\r\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\r\n        let soloNums = this.soloTransitions.length;\r\n        if (soloNums > 0) {\r\n            for (var i = 0; i < soloNums; i++) {\r\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                    return this.soloTransitions[i];\r\n            }\r\n            return null;\r\n        }\r\n        let transNums = this.transitions.length;\r\n        for (var i = 0; i < transNums; i++) {\r\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                return this.transitions[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetFrameIndices(): void {\r\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\r\n            this._currentFrameIndices![i] = -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        (this._clip) && (this._clip._addReference(count));\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count: number): void {\r\n        (this._clip) && (this._clip._removeReference(count));\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * @en Adds a script of the specified type to the animator state.\r\n     * @param type The type of the script to be added.\r\n     * @returns The added script instance.\r\n     * @zh 向动画状态添加指定类型的脚本。\r\n     * @param type 要添加的脚本类型。\r\n     * @returns 添加的脚本实例。\r\n     */\r\n    addScript(type: typeof AnimatorState2DScript): AnimatorState2DScript {\r\n        var script: AnimatorState2DScript = new type();\r\n        this._scripts = this._scripts || [];\r\n        this._scripts.push(script);\r\n        return script;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @en Get the script of the specified type.\r\n     * @param type The type of the script to retrieve.\r\n     * @returns The script instance if found, or null if not found.\r\n     * @zh 获取指定类型的脚本。\r\n     * @param type 要检索的脚本类型。\r\n     * @returns 如果找到则返回脚本实例，如果没有找到则返回 null。\r\n     */\r\n    getScript(type: typeof AnimatorState2DScript): AnimatorState2DScript | null {\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorState2DScript = this._scripts[i];\r\n                if (script instanceof type)\r\n                    return script;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Get the collection of scripts of the specified type.\r\n     * @param type The type of scripts to retrieve.\r\n     * @returns An array of scripts if found, or null if no scripts match the type.\r\n     * @zh 获取指定类型的脚本集合。\r\n     * @param type 要检索的脚本类型。\r\n     * @returns 如果找到则返回脚本数组，如果没有找到匹配类型的脚本则返回 null。\r\n     */\r\n    getScripts(type: typeof AnimatorState2DScript): AnimatorState2DScript[] | null {\r\n        var coms: AnimatorState2DScript[] | null = null;\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorState2DScript = this._scripts[i];\r\n                if (script instanceof type) {\r\n                    coms = coms || [];\r\n                    coms.push(script);\r\n                }\r\n            }\r\n        }\r\n        return coms;\r\n    }\r\n\r\n    /**\r\n     * @en Clone of the current instance.\r\n     * @returns A new instance of AnimatorState2D that is a clone of the current instance.\r\n     * @zh 当前实例的克隆\r\n     * @returns 一个新的 AnimatorState2D 实例，是当前实例的克隆。\r\n     */\r\n    clone() {\r\n        var dest: AnimatorState2D = new AnimatorState2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * @en Copies the properties of the current animator state to a target object.\r\n     * @param destObject The target object to which the properties are copied.\r\n     * @zh 将当前动画状态的属性拷贝到目标对象。\r\n     * @param destObject 要拷贝属性的目标对象。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\r\n        dest.name = this.name;\r\n        dest.speed = this.speed;\r\n        dest.clip = this._clip;\r\n    }\r\n\r\n    /**\r\n     * @en Destroys .\r\n     * @zh 销毁。\r\n     */\r\n    destroy() {\r\n        this._clip = null;\r\n        this._currentFrameIndices = null;\r\n        this._scripts = null;\r\n        //this.nexts = null;\r\n        this._realtimeDatas.length = 0;\r\n    }\r\n\r\n}","import { Keyframe2D } from \"./KeyFrame2D\";\r\n\r\n/**\r\n * @en 2D animation keyframe nodes.\r\n * @zh 2D 动画关键帧节点的类。\r\n */\r\nexport class KeyframeNode2D {\r\n    _ownerPath: string[] = [];\r\n    _propertys: string[] = [];\r\n    fullPath: string;\r\n    nodePath: string;\r\n    _indexInList: number;\r\n\r\n\r\n\r\n    _keyFrames: Keyframe2D[] = [];\r\n    /**\r\n     * @en Number of frames\r\n     * @zh 帧个数。\r\n     */\r\n    get keyFramesCount(): number {\r\n        return this._keyFrames.length;\r\n    }\r\n    _setOwnerPathCount(value: number) {\r\n        this._ownerPath.length = value;\r\n    }\r\n    _setOwnerPathByIndex(index: number, value: string) {\r\n        this._ownerPath[index] = value;\r\n    }\r\n    _setPropertyCount(value: number) {\r\n        this._propertys.length = value;\r\n    }\r\n    _setPropertyByIndex(index: number, value: string) {\r\n        this._propertys[index] = value;\r\n    }\r\n    _setKeyframeCount(value: number) {\r\n        this._keyFrames.length = value;\r\n    }\r\n\r\n    _joinOwnerPath(sep: string): string {\r\n        return this._ownerPath.join(sep);\r\n    }\r\n    _joinProperty(sep: string): string {\r\n        return this._propertys.join(sep);\r\n    }\r\n\r\n    /**\r\n     * @en Gets a keyframe by its index in the animation timeline.\r\n     * @param index The index of the keyframe to retrieve.\r\n     * @zh 通过索引获取动画时间线上的关键帧。\r\n     * @param index 要检索的关键帧的索引。\r\n     */\r\n    getKeyframeByIndex(index: number): Keyframe2D {\r\n        return this._keyFrames[index];\r\n    }\r\n\r\n    /**\r\n     * @en The number of owner paths in the animation.\r\n     * @zh 动画中的精灵路径个数。\r\n     */\r\n    get ownerPathCount(): number {\r\n        return this._ownerPath.length;\r\n    }\r\n\r\n    /**\r\n     * @en The number of property paths in the animation.\r\n     * @zh 动画中的属性路径个数。\r\n     */\r\n    get propertyCount(): number {\r\n        return this._propertys.length;\r\n    }\r\n\r\n    /**\r\n     * @en Gets an owner path by its index in the list of owner paths.\r\n     * @param index The index of the owner path to retrieve.\r\n     * @zh 通过索引获取精灵路径列表中的精灵路径。\r\n     * @param index 要检索的精灵路径的索引。\r\n     */\r\n    getOwnerPathByIndex(index: number): string {\r\n        return this._ownerPath[index];\r\n    }\r\n\r\n    /**\r\n     * @en Gets a property path by its index in the list of property paths.\r\n     * @param index The index of the property path to retrieve.\r\n     * @zh 通过索引获取属性路径列表中的属性路径。\r\n     * @param index 要检索的属性路径的索引。\r\n     */\r\n    getPropertyByIndex(index: number): string {\r\n        return this._propertys[index];\r\n    }\r\n\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\nexport interface TypeAniKey {\r\n    /**\r\n     * @en The frame index.\r\n     * @zh 第几帧 \r\n     */\r\n    f: number,\r\n    val: number | string | boolean,\r\n    /**\r\n     * @en Currently used for 2D animation, it is used to record the types of animation gaps, for example (Linear|Quad_EaseIn)...\r\n     * @zh 目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... \r\n     */\r\n    tweenType?: string,\r\n    /**\r\n     * @en Extension\r\n     * @zh 扩展，如果有一些其它数据需要加入到关键帧中可以写在这里\r\n     */\r\n    extend?: any,\r\n    /**\r\n     * @en The tween information.\r\n     * @zh tween的信息\r\n     */\r\n    tweenInfo?: TypeTweenInfo,\r\n}\r\n\r\nexport interface TypeTweenInfo {\r\n    outTangent?: number,\r\n    outWeight?: number,\r\n    inTangent?: number,\r\n    inWeight?: number,\r\n    inWeightLock?: boolean,\r\n    outWeightLock?: boolean,\r\n    broken?: boolean,\r\n}\r\n\r\n/**\r\n * @en Class used to represent 2D animation keyframes\r\n * @zh 用于表示2D动画关键帧的类\r\n */\r\nexport class Keyframe2D implements IClone {\r\n    static defaultWeight = 0.33333;\r\n    /**\r\n     * @en time\r\n     * @zh 时间。\r\n     */\r\n    time: number;\r\n    /**\r\n     * @en Specific data within the frame\r\n     * @zh 帧里面的具体数据\r\n     */\r\n    data: TypeAniKey;\r\n\r\n\r\n    /**\r\n     * @en Creates a clone of the current keyframe.\r\n     * @returns A new instance of Keyframe2D that is a clone of the current keyframe.\r\n     * @zh 创建当前关键帧的克隆。\r\n     * @returns 一个新实例的 Keyframe2D，是当前关键帧的克隆。\r\n     */\r\n    clone() {\r\n        var dest = new Keyframe2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    /**\r\n     * @en Copies the properties of the current keyframe to another Keyframe2D instance.\r\n     * @param destObject The Keyframe2D instance to which the properties are copied.\r\n     * @zh 将当前关键帧的属性复制到另一个 Keyframe2D 实例。\r\n     * @param destObject 要复制属性的 Keyframe2D 实例。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\r\n        destKeyFrame.time = this.time;\r\n    }\r\n\r\n}","/**\r\n * @en Animation2DEvent class is used to implement animation events.\r\n * @zh Animation2DEvent 类用于实现动画事件。\r\n */\r\nexport class Animation2DEvent {\r\n    /**\r\n     * @en The time at which the event is triggered.\r\n     * @zh 事件触发的时间。\r\n     */\r\n    time: number;\r\n    /**\r\n     * @en The name of the event that is triggered.\r\n     * @zh 被触发的事件名称。\r\n     */\r\n    eventName: string;\r\n    /**\r\n     * @en Event triggering parameters\r\n     * @zh 事件触发参数。\r\n     */\r\n    params: any[];\r\n\r\n    /**\r\n     * @en Constructor method, instance of Animation2DEvent.\r\n     * @zh 2D动画事件类实例\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @en Class for AnimationClip resource parsing\r\n * @zh 用于AnimationClip资源解析\r\n */\r\nexport class AnimationClip2DParse01 {\r\n    /**@internal */\r\n    private static _clip: AnimationClip2D | null;\r\n    /**@internal */\r\n    private static _reader: Byte | null;\r\n    /**@internal */\r\n    private static _version: string | null;\r\n    /**@internal */\r\n    private static _strings: string[] = [];\r\n    /**@internal */\r\n    private static _DATA = { offset: 0, size: 0 };\r\n    /**@internal */\r\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_DATA() {\r\n        this._DATA.offset = this._reader!.getUint32();\r\n        this._DATA.size = this._reader!.getUint32();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_BLOCK() {\r\n        var count = this._BLOCK.count = this._reader!.getUint16();\r\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\r\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\r\n        for (var i = 0; i < count; i++) {\r\n            blockStarts.push(this._reader!.getUint32());\r\n            blockLengths.push(this._reader!.getUint32());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_STRINGS() {\r\n        var offset = this._reader!.getUint32();\r\n        var count = this._reader!.getUint16();\r\n        var prePos = this._reader!.pos;\r\n        this._reader!.pos = offset + this._DATA.offset;\r\n\r\n        for (var i = 0; i < count; i++)\r\n            this._strings[i] = this._reader!.readUTFString();\r\n        this._reader!.pos = prePos;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Parses the animation data from the specified reader and clip, based on the given version.\r\n     * @param clip The animation clip to be parsed into.\r\n     * @param reader The reader containing the binary data of the animation.\r\n     * @param version The version of the animation file format.\r\n     * @zh 根据指定的版本，从指定的读取器和剪辑解析动画数据.\r\n     * @param clip 要解析的动画剪辑.\r\n     * @param reader 包含动画二进制数据的读取器.\r\n     * @param version 动画文件格式的版本.\r\n     */\r\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\r\n        this._clip = clip;\r\n        this._reader = reader;\r\n        this._version = version;\r\n        this.READ_DATA();\r\n        this.READ_BLOCK();\r\n        this.READ_STRINGS();\r\n\r\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\r\n            var index = reader.getUint16();\r\n            var blockName = this._strings[index];\r\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\r\n            if (!fn) {\r\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n            }\r\n            else\r\n                fn.call(this);\r\n        }\r\n\r\n        this._version = null;\r\n        this._reader = null;\r\n        this._clip = null;\r\n        this._strings.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param second \r\n     * @param fps \r\n     * @returns \r\n     */\r\n    private static timeToFrame(second: number, fps: number): number {\r\n        return Math.round(second * fps);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static READ_ANIMATIONS2D(): void {\r\n        var i: number, j: number;\r\n\r\n        var reader = this._reader!;\r\n        var clip = this._clip!;\r\n        var node: KeyframeNode2D;\r\n\r\n        var numList: number[] = [];\r\n        var numCount = reader.getUint16();\r\n        numList.length = numCount;\r\n        for (i = 0; i < numCount; i++) {\r\n            numList[i] = reader.getFloat32();\r\n        }\r\n\r\n        var clipDur = clip._duration = numList[reader.getInt16()];\r\n        clip.islooping = !!reader.getByte();\r\n        clip._frameRate = reader.getInt16();\r\n        var nodeCount = reader.getInt16();\r\n\r\n        var nodes = clip._nodes!;\r\n        nodes.count = nodeCount;\r\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\r\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\r\n\r\n        for (i = 0; i < nodeCount; i++) {\r\n            node = new KeyframeNode2D();\r\n            nodes.setNodeByIndex(i, node);\r\n            node._indexInList = i;\r\n\r\n            var pathLength = reader.getUint16();\r\n            node._setOwnerPathCount(pathLength);\r\n\r\n            for (j = 0; j < pathLength; j++) {\r\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var nodePath = node._joinOwnerPath(\"/\");\r\n            var mapArray = nodesMap[nodePath];\r\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\r\n            mapArray.push(node);\r\n\r\n\r\n            var propertyLength = reader.getUint16();\r\n            node._setPropertyCount(propertyLength);\r\n            for (j = 0; j < propertyLength; j++) {\r\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\r\n            nodesDic[fullPath] = node;\r\n            node.fullPath = fullPath;\r\n            node.nodePath = nodePath;\r\n\r\n            var keyframeCount = reader.getUint16();\r\n            //node._setKeyframeCount(keyframeCount);\r\n            for (j = 0; j < keyframeCount; j++) {\r\n                var k = new Keyframe2D();\r\n                k.time = numList[reader.getUint16()];\r\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenType = this._strings[reader.getUint16()];\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenInfo = {};\r\n\r\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\r\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\r\n\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\r\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.inTangent) {\r\n                    //         k.data.tweenInfo.inTangent *= -1;\r\n                    //     }\r\n                    // }\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\r\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.outTangent) {\r\n                    //         k.data.tweenInfo.outTangent *= -1;\r\n                    //     }\r\n                    // }\r\n\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\r\n                    }\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\r\n                    }\r\n                }\r\n                var num = reader.getByte();\r\n                if (0 == num) {\r\n                    k.data.val = numList[reader.getUint16()];\r\n                } else if (1 == num) {\r\n                    k.data.val = this._strings[reader.getUint16()];\r\n                } else if (2 == num) {\r\n                    k.data.val = !!reader.getByte();\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    try {\r\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\r\n                    } catch (err) { }\r\n                }\r\n                node._keyFrames.push(k);\r\n            }\r\n        }\r\n        var eventCount = reader.getUint16();\r\n        for (i = 0; i < eventCount; i++) {\r\n            var event = new Animation2DEvent();\r\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\r\n            event.time = numList[reader.getUint16()];\r\n            event.eventName = this._strings[reader.getUint16()];\r\n            var params: Array<number | string | boolean> = [];\r\n            var paramCount: number = reader.getUint16();\r\n            (paramCount > 0) && (event.params = params = []);\r\n\r\n            for (j = 0; j < paramCount; j++) {\r\n                var eventType: number = reader.getByte();\r\n                switch (eventType) {\r\n                    case 0:\r\n                        params.push(!!reader.getByte());\r\n                        break;\r\n                    case 1:\r\n                        params.push(reader.getInt32());\r\n                        break;\r\n                    case 2:\r\n                        params.push(numList[reader.getUint16()]);\r\n                        break;\r\n                    case 3:\r\n                        params.push(this._strings[reader.getUint16()]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"unknown type.\");\r\n                }\r\n            }\r\n            clip.addEvent(event);\r\n        }\r\n\r\n    }\r\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\r\n\r\n/**\r\n * @en A class used to manage 2D keyframe nodes list.\r\n * @zh 用于管理2D关键帧节点的列表类。\r\n */\r\nexport class KeyframeNodeList2D {\r\n    private _nodes: KeyframeNode2D[] = [];\r\n    /**\r\n     * @en The number of nodes in the list.\r\n     * @zh 列表中的节点个数。\r\n     */\r\n    get count(): number {\r\n        return this._nodes.length;\r\n    }\r\n    set count(value: number) {\r\n        this._nodes.length = value;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves node by its index in the list.\r\n     * @param index The index of the node to retrieve.\r\n     * @returns The node at the specified index.\r\n     * @zh 通过索引获取列表中的节点。\r\n     * @param index 要检索的节点的索引。\r\n     * @returns 指定索引处的节点。\r\n     */\r\n    getNodeByIndex(index: number): KeyframeNode2D {\r\n        return this._nodes[index];\r\n    }\r\n\r\n    /**\r\n     * @en Sets a node by its index in the list.\r\n     * @param index The index at which to set the node.\r\n     * @param node The node to set at the specified index.\r\n     * @zh 通过索引设置列表中的节点。\r\n     * @param index 要设置节点的索引。\r\n     * @param node 要设置的节点。\r\n     */\r\n\r\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\r\n        this._nodes[index] = node;\r\n    }\r\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * @en Class for parsing and storing 2D animation data.\r\n * @zh 用于处理2D动画片段的类。\r\n */\r\nexport class AnimationClip2D extends Resource {\r\n\r\n    /**\r\n     * @internal\r\n     * @en Parses animation data into a 2D animation clip.\r\n     * @param data The animation data to be parsed.\r\n     * @returns The parsed 2D animation clip.\r\n     * @zh 将动画数据解析为2D动画片段。\r\n     * @param data 要解析的动画数据。\r\n     * @returns 解析后的2D动画片段。\r\n     */\r\n    static _parse(data: ArrayBuffer): AnimationClip2D {\r\n        var clip = new AnimationClip2D();\r\n        var reader = new Byte(data);\r\n        var version = reader.readUTFString();\r\n        switch (version) {\r\n            case \"LAYAANIMATION2D:01\":\r\n                AnimationClip2DParse01.parse(clip, reader, version);\r\n                break;\r\n            default:\r\n                throw \"unknown animationClip version.\";\r\n        }\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * @en Animation frame filling function\r\n     * @zh 动画补帧函数\r\n     */\r\n    static tween = {\r\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\r\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t + b;\r\n        },\r\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n        },\r\n\r\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t + b;\r\n        },\r\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n\r\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t + b;\r\n        },\r\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n\r\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n\r\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n        },\r\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n        },\r\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        },\r\n\r\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n        },\r\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t == 0) return b;\r\n            if (t == d) return b + c;\r\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n        },\r\n\r\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n\r\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        },\r\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\r\n        },\r\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n        },\r\n\r\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n        },\r\n\r\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\r\n        },\r\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            } else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n            } else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n            } else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n            }\r\n        },\r\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\r\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        },\r\n\r\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\r\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\r\n                if (0 > outTangent || 0 < inTangent) return startValue;\r\n                return startValue;\r\n            }\r\n            var t2 = t * t;\r\n            var t3 = t2 * t;\r\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\r\n            var b = t3 - 2.0 * t2 + t;\r\n            var c = t3 - t2;\r\n            var d = -2.0 * t3 + 3.0 * t2;\r\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _frameRate: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _duration: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _animationEvents: Animation2DEvent[];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesDic: Record<string, KeyframeNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesMap: Record<string, KeyframeNode2D[]>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\r\n\r\n    /**\r\n     * @en Is it a loop?\r\n     * @zh 是否循环\r\n     */\r\n    islooping: boolean;\r\n\r\n    /**\r\n     * @en Constructor method. ctructs a AnimationClip2D object.\r\n     * @zh 构造方法，创建AnimationClip2D对象。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._animationEvents = [];\r\n    }\r\n\r\n    /**\r\n     * @en Animation duration\r\n     * @zh 动画时长\r\n     */\r\n    duration() {\r\n        return this._duration;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param playCurTime \r\n     * @param realTimeCurrentFrameIndexes \r\n     * @param addtive \r\n     * @param frontPlay \r\n     * @param outDatas \r\n     */\r\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\r\n        var nodes = this._nodes;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            var node = nodes.getNodeByIndex(i);\r\n            var nextFrameIndex;\r\n            var keyFrames = node._keyFrames;\r\n            var keyFramesCount = keyFrames.length;\r\n            if (0 == keyFramesCount) continue;\r\n            var frameIndex = realTimeCurrentFrameIndexes[i];\r\n            if (frontPlay) {\r\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\r\n                    frameIndex = -1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (nextFrameIndex < keyFramesCount) {\r\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\r\n                        break;\r\n                    frameIndex++;\r\n                    nextFrameIndex++;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n            } else {\r\n                nextFrameIndex = frameIndex + 1;\r\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\r\n                    frameIndex = keyFramesCount - 1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (frameIndex > -1) {\r\n                    if (keyFrames[frameIndex].time < playCurTime)\r\n                        break;\r\n                    frameIndex--;\r\n                    nextFrameIndex--;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n            }\r\n            var isEnd = nextFrameIndex == keyFramesCount;\r\n\r\n            if (-1 != frameIndex) {\r\n                var frame = keyFrames[frameIndex];\r\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\r\n                    outDatas[i] = frame.data.val;\r\n                } else {\r\n                    var nextFarme = keyFrames[nextFrameIndex];\r\n                    var d = nextFarme.time - frame.time;\r\n                    var t;\r\n                    if (d !== 0)\r\n                        t = (playCurTime - frame.time) / d;\r\n                    else\r\n                        t = 0;\r\n\r\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\r\n                }\r\n            } else {\r\n                outDatas[i] = keyFrames[0].data.val;\r\n            }\r\n\r\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\r\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param frame \r\n     * @param nextFrame \r\n     * @param t \r\n     * @param dur \r\n     * @returns \r\n     */\r\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\r\n        var start = frame.data;\r\n        var end = nextFrame.data;\r\n\r\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\r\n            return start.val;\r\n        }\r\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\r\n        var poval = start.val as number;\r\n        var oval = end.val as number;\r\n\r\n        //var t = (x - s.cx) / (e.cx - s.cx);\r\n        if (null != tweenFun) {\r\n            return tweenFun(t, poval, oval - poval, 1);\r\n        }\r\n\r\n        var outTangent = 0;\r\n        var inTangent = 0;\r\n\r\n        var outWeight = NaN;\r\n        var inWeight = NaN;\r\n\r\n        if (null != start.tweenInfo) {\r\n            outTangent = start.tweenInfo.outTangent;\r\n            outWeight = start.tweenInfo.outWeight;\r\n        }\r\n        if (null != end.tweenInfo) {\r\n            inTangent = end.tweenInfo.inTangent;\r\n            inWeight = end.tweenInfo.inWeight;\r\n        }\r\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(outTangent)) outTangent = 0;\r\n        if (isNaN(inTangent)) inTangent = 0;\r\n\r\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\r\n            if (0 > outTangent) {\r\n                outTangent = -Infinity;\r\n            } else {\r\n                outTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\r\n            if (0 > inTangent) {\r\n                inTangent = -Infinity;\r\n            } else {\r\n                inTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        var tnum: number;\r\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\r\n            //var dur = nextFrameTime - startFrameTime;\r\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\r\n        } else {\r\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\r\n        }\r\n        return tnum;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param time \r\n     * @returns \r\n     */\r\n    private _binarySearchEventIndex(time: number): number {\r\n        var start = 0;\r\n        var end = this._animationEvents.length - 1;\r\n        var mid;\r\n        while (start <= end) {\r\n            mid = (start + end) >> 1;\r\n            var midValue = this._animationEvents[mid].time;\r\n            if (midValue == time)\r\n                return mid;\r\n            else if (midValue > time)\r\n                end = mid - 1;\r\n            else\r\n                start = mid + 1;\r\n        }\r\n        return start;\r\n    }\r\n\r\n    /**\r\n     * @en hermite interpolation algorithm\r\n     * @param frameValue The value of the previous keyframe.\r\n     * @param frametime The time point of the previous keyframe.\r\n     * @param frameOutWeight The weight of the outgoing tangent for the previous keyframe.\r\n     * @param frameOutTangent The outgoing tangent value for the previous keyframe.\r\n     * @param nextframeValue The value of the next keyframe.\r\n     * @param nextframetime The time point of the next keyframe.\r\n     * @param nextframeInweight The weight of the incoming tangent for the next keyframe.\r\n     * @param nextframeIntangent The incoming tangent value for the next keyframe.\r\n     * @param time The current time.\r\n     * @returns The interpolated value at the specified time.\r\n     * @zh hermite插值算法\r\n     * @param frameValue 上一帧值\r\n     * @param frametime 上一帧时间\r\n     * @param frameOutWeight 上一帧权重\r\n     * @param frameOutTangent 上一帧切线\r\n     * @param nextframeValue 下一帧值\r\n     * @param nextframetime 下一帧时间\r\n     * @param nextframeInweight 下一帧权重\r\n     * @param nextframeIntangent 下一帧切线\r\n     * @param time 时间\r\n     * @returns 指定时间的插值。\r\n     */\r\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\r\n        let Eps = 2.22e-16;\r\n\r\n        let x = time;\r\n        let x1 = frametime;\r\n        let y1 = frameValue;\r\n        let wt1 = frameOutWeight;\r\n        let x2 = nextframetime;\r\n        let y2 = nextframeValue;\r\n        let wt2 = nextframeInweight;\r\n\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\r\n\r\n        let yp1 = frameOutTangent;\r\n        let yp2 = nextframeIntangent;\r\n\r\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\r\n            return frameValue;\r\n        }\r\n\r\n        yp1 = yp1 * dx / dy;\r\n        yp2 = yp2 * dx / dy;\r\n\r\n        let wt2s = 1 - wt2;\r\n\r\n        let t = 0.5;\r\n        let t2 = 0;\r\n\r\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\r\n            t = x;\r\n            t2 = 1 - t;\r\n        }\r\n        else {\r\n            while (true) {\r\n                t2 = (1 - t);\r\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\r\n                if (Math.abs(fg) <= 2.5 * Eps)\r\n                    break;\r\n\r\n                // third order householder method\r\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\r\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\r\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\r\n\r\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\r\n            }\r\n        }\r\n\r\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\r\n\r\n        return y * dy + y1;\r\n    }\r\n\r\n    /**\r\n     * @en Adds an animation event to the animation timeline.\r\n     * @param event The animation event to be added.\r\n     * @zh 添加动画事件\r\n     * @param event 动画事件\r\n     */\r\n    addEvent(event: Animation2DEvent): void {\r\n        var index = this._binarySearchEventIndex(event.time);\r\n        this._animationEvents.splice(index, 0, event);\r\n    }\r\n}","import { AniParmType } from \"./AnimatorControllerParse\";\r\n\r\n/**\r\n * @en Represents a parameter for 2D animation that includes a name, type, and value.\r\n * @zh 表示2D动画的参数，包括名称、类型和值。\r\n */\r\nexport class Animation2DParm {\r\n    name: string;\r\n    type: AniParmType;\r\n    value: boolean | number;\r\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\r\n\r\n/**\r\n * @en Animation state machine transition condition \r\n * @zh 动画状态机过渡条件 \r\n */\r\nexport class AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    static _conditionNameMap: any = {};\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _propertyNameCounter: number = 0;\r\n\r\n    /**\r\n     * @en Gets the unique ID associated with a name.\r\n     * @param name The unique name.\r\n     * @return The unique ID.\r\n     * @zh 根据名称获取唯一的ID。\r\n     * @param name 唯一的名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static conditionNameToID(name: string): number {\r\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\r\n            return AnimatorStateCondition._conditionNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._conditionNameMap[name] = id;\r\n            this._conditionNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Gets the unique name associated with an ID.\r\n     * @param id The condition ID.\r\n     * @returns The unique name.\r\n     * @zh 根据ID获取唯一的名称。\r\n     * @param id 条件ID。\r\n     * @returns 唯一名称。\r\n     */\r\n    static conditionIDToName(id: number): string {\r\n        return this._conditionNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal 状态条件类型\r\n     */\r\n    protected _type: AniStateConditionType;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _id: number;\r\n\r\n    /**\r\n     * @intenral\r\n     */\r\n    private _name: string;\r\n\r\n    /**\r\n     * @en Constructor method of AnimatorStateCondition.\r\n     * @zh 动画状态机过渡条件的构造方法\r\n     */\r\n    constructor(name: string = null) {\r\n        if (!name) return;\r\n        this._id = AnimatorStateCondition.conditionNameToID(name);\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * @en The unique identifier of the condition.\r\n     * @zh 条件的唯一标识符。\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @en The name of the condition.\r\n     * @zh 条件的名称。\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._id = AnimatorStateCondition.conditionNameToID(value);\r\n        this._name = value\r\n    }\r\n\r\n    /**\r\n     * @en The type of the condition.\r\n     * @zh 条件的类型。\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Checks if the state condition is triggered based on the provided value.\r\n     * @param value The value to check against the condition, can be a number or a boolean.\r\n     * @zh 根据提供的值检查状态条件是否被触发。(未实现，目前只会返回false)\r\n     * @param value 用于检查条件的值，可以是数字或布尔值。（当前未实现，只会返回false）\r\n     */\r\n    checkState(value: number | boolean): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Numerical condition class. Used to handle conditions based on numerical comparisons.\r\n * @zh 数值条件类。用于处理基于数值比较的条件。\r\n */\r\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberValue: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\r\n\r\n    /**\r\n     * @en Constructor method of AnimatorStateNumberCondition.\r\n     * @zh 创建number比较条件类的构造方法\r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._numberValue = 0;\r\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\r\n        this._type = AniStateConditionType.Number;\r\n    }\r\n\r\n    /**\r\n     * @en The number value.\r\n     * @zh 数字值。\r\n     */\r\n    get numberValue() {\r\n        return this._numberValue;\r\n    }\r\n\r\n    set numberValue(value: number) {\r\n        this._numberValue = value;\r\n    }\r\n\r\n    /**\r\n     * @en Determine type\r\n     * @zh 判断类型\r\n     */\r\n    get compareFlag() {\r\n        return this._numberCompareFlag;\r\n    }\r\n\r\n    set compareFlag(value: AniStateConditionNumberCompressType) {\r\n        this._numberCompareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the state is triggered based on the comparison of the provided value with the number value.\r\n     * @param value The value to compare.\r\n     * @zh 根据提供的值与数值的比较结果检查状态是否触发。\r\n     * @param value 要比较的值。\r\n     */\r\n    checkState(value: number): boolean {\r\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\r\n            return value > this._numberValue;\r\n        else\r\n            return value < this._numberValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Boolean conditional class. Used to handle Boolean based conditions.\r\n * @zh 布尔条件类。用于处理基于布尔值的条件。\r\n */\r\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _compareFlag: boolean;\r\n\r\n    /**\r\n     * @en Constructor method.\r\n     * @zh 构造方法\r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._compareFlag = true;\r\n        this._type = AniStateConditionType.Bool;\r\n    }\r\n\r\n    /**\r\n     * @en Determine type\r\n     * @zh 判断类型 \r\n     */\r\n    get compareFlag() {\r\n        return this._compareFlag;\r\n    }\r\n\r\n    set compareFlag(value: boolean) {\r\n        this._compareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * @en Checks if the state is triggered based on the comparison of the provided boolean value with the comparison flag.\r\n     * @param value The boolean value to compare.\r\n     * @zh 根据提供的布尔值与比较标志的比较结果检查状态是否触发。\r\n     * @param value 要比较的布尔值。\r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return this._compareFlag == value;\r\n    }\r\n}\r\n\r\n/**\r\n * @en Trigger condition class. Used to handle trigger type conditions.\r\n * @zh 触发器条件类。用于处理触发器类型的条件。\r\n */\r\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @en Constructor method.\r\n     * @zh 触发器条件类的构造方法\r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._type = AniStateConditionType.Trigger;\r\n    }\r\n\r\n    /**\r\n     * @en Check if the state is triggered. If the trigger is true, the condition is met.\r\n     * @param value Boolean value.\r\n     * @zh 检查状态是否触发,tigger 如果是true,就算条件达成\r\n     * @param value 布尔值。\r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return value;\r\n    }\r\n}","import { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\r\n\r\n/**\r\n * @en 2D animation transition\r\n * @zh 2D动画过渡\r\n */\r\nexport class AnimatorTransition2D {\r\n    /**\r\n     * @en Whether the state is muted.\r\n     * @zh 状态是否被禁用。\r\n     */\r\n    mute: boolean;\r\n\r\n    /**\r\n     * @en The exit time of the state.\r\n     * @zh 状态的退出时间。\r\n     */\r\n    exitTime: number;\r\n\r\n    /**\r\n     * @en Is the effective time set.\r\n     * @zh 是否设置生效时间。\r\n     */\r\n    exitByTime: boolean;\r\n\r\n    /**\r\n     * @en The normalized playback position of the next state in the transition.\r\n     * @zh 过渡中下一个状态的归一化播放位置。\r\n     */\r\n    transstartoffset: number;\r\n\r\n    /**\r\n     * @en The normalized transition duration.\r\n     * @zh 归一化的过渡持续时间。\r\n     */\r\n    transduration: number;\r\n\r\n    /**\r\n     * @en Transition conditions\r\n     * @zh 过渡条件。\r\n     */\r\n    conditions: AnimatorStateCondition[];\r\n\r\n    /**\r\n     * @en The destination state for the transition.\r\n     * @zh 过渡的目标状态。\r\n     */\r\n    destState: AnimatorState2D;\r\n\r\n    /**\r\n     * @en Whether to use and operate when there are multiple conditions\r\n     * @zh 当有多个条件的时候是否使用与操作\r\n     */\r\n    isAndOperEnabled: boolean;\r\n\r\n    /**\r\n     * @en Constructor method of Animatortransition2D.\r\n     * @zh Animatortransition2D的构造方法\r\n     */\r\n    constructor() {\r\n        this.conditions = [];\r\n        this.exitByTime = true;\r\n        this.exitTime = 1;\r\n        this.transduration = 0;\r\n        this.transstartoffset = 0;\r\n        this.mute = false;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a state transition condition to the list of conditions.\r\n     * @param condition The AnimatorStateCondition to be added.\r\n     * @zh 向条件列表中添加一个状态转换条件。\r\n     * @param condition 要添加的状态转换条件。\r\n     */\r\n    addCondition(condition: AnimatorStateCondition): void {\r\n        if (this.conditions.indexOf(condition) == -1) {\r\n            this.conditions.push(condition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Removes a state transition condition from the list of conditions.\r\n     * @param condition The AnimatorStateCondition to be removed.\r\n     * @zh 从条件列表中删除一个状态转换条件。\r\n     * @param condition 要删除的状态转换条件。\r\n     */\r\n    removeCondition(condition: AnimatorStateCondition): void {\r\n        let index = this.conditions.indexOf(condition);\r\n        if (index != -1) {\r\n            this.conditions.splice(index, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Checks whether the transition is enabled based on the normalized time, condition parameters, and replay status.\r\n     * @param normalizeTime The current normalized time (between 0 and 1) in the animation.\r\n     * @param paramsMap Condition group\r\n     * @param isReplay Whether to repeat playback.\r\n     * @zh 根据归一化时间、条件参数和重播状态检查过渡是否启用。\r\n     * @param normalizeTime 动画中当前的归一化时间（0到1之间）。\r\n     * @param paramsMap 条件组\r\n     * @param isReplay 是否重复播放\r\n     */\r\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\r\n        if (this.mute) {\r\n            return false;\r\n        }\r\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\r\n            return false;\r\n        }\r\n        if (null == this.conditions || 0 == this.conditions.length) {\r\n            return true;\r\n        }\r\n        if (this.isAndOperEnabled) {\r\n            let triggerCatch: string[];\r\n            for (var i = 0; i < this.conditions.length; i++) {\r\n                let con = this.conditions[i];\r\n                let out = con.checkState(paramsMap[con.name].value);\r\n                if (!out) {\r\n                    return false;\r\n                }\r\n                if (con.type == AniStateConditionType.Trigger) {\r\n                    if (triggerCatch) triggerCatch = [];\r\n                    triggerCatch.push(con.name);\r\n                }\r\n            }\r\n            if (triggerCatch) {\r\n                for (let id of triggerCatch) {\r\n                    paramsMap[id].value = false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            for (var i = 0; i < this.conditions.length; i++) {\r\n                let con = this.conditions[i];\r\n                let out = con.checkState(paramsMap[con.name].value);\r\n                if (out) {\r\n                    if (con.type == AniStateConditionType.Trigger) {\r\n                        paramsMap[con.name].value = false;\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","import { Resource } from \"../resource/Resource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * @en 2D animation controller\r\n * @zh 2D动画控制器\r\n */\r\nexport class AnimatorController2D extends Resource {\r\n    /**\r\n     * @internal\r\n     * @en Data of the animator controller\r\n     * @zh 动画控制器的数据\r\n     */\r\n    data: TypeAnimatorControllerData;\r\n\r\n    /**\r\n     * @internal\r\n     * @en Array of clip IDs\r\n     * @zh 剪辑ID数组\r\n     */\r\n    clipsID: string[];\r\n\r\n    /**\r\n     * @en Constructor method of 2D animation controller\r\n     * @zh 2D动画控制器的构造方法\r\n     */\r\n    constructor(data: any) {\r\n        super();\r\n        let obj = AnimatorControllerParse.parse(data);\r\n        this.data = obj.ret;\r\n        this.clipsID = obj.clipsID;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    private getLayers() {\r\n        let layers = this.data.controllerLayers;\r\n        let lArr: AnimatorControllerLayer2D[] = [];\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let acl = new AnimatorControllerLayer2D(l.name);\r\n            lArr.unshift(acl);\r\n\r\n\r\n            for (let k in l) {\r\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    (acl as any)[k] = (l as any)[k];\r\n                } catch (err: any) { }\r\n            }\r\n            this.getState(l.states, acl, this.data);\r\n\r\n        }\r\n        return lArr;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @returns \r\n     */\r\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\r\n        if (!states) return null;\r\n        let ret: Record<string, AnimatorState2D> = {};\r\n        let defID: string = null;\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n            let childStates = obj.states;\r\n            if (childStates) {\r\n                let groupRet = this.createState(childStates, idCatch, acl);\r\n                if (groupRet) {\r\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (0 > Number(obj.id)) {\r\n                if (\"-1\" == obj.id) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions && 0 < transitions.length) {\r\n                        defID = transitions[0].id;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let state = new AnimatorState2D();\r\n            idCatch[obj.id] = state;\r\n            ret[obj.id] = state;\r\n            for (let k in obj) {\r\n                try {\r\n                    if (\"scripts\" == k) {\r\n                        let scripts: string[] = obj[k];\r\n                        if (scripts && Array.isArray(scripts)) {\r\n                            for (let k = scripts.length - 1; k >= 0; k--) {\r\n                                let uuid = scripts[k];\r\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\r\n                                    uuid = uuid.substring(6);\r\n                                }\r\n                                let c = ClassUtils.getClass(uuid);\r\n                                if (c) {\r\n                                    state.addScript(c);\r\n                                }\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (\"soloTransitions\" == k) {\r\n                        continue;\r\n                    } else if (null != (obj as any)[k]) {\r\n                        (state as any)[k] = (obj as any)[k];\r\n                    }\r\n                } catch (err: any) { }\r\n            }\r\n\r\n            acl.addState(state);\r\n        }\r\n        return { id: defID, states: ret };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param acl \r\n     * @param data \r\n     */\r\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\r\n        //let ret:\r\n        if (states) {\r\n            let idCatch: Record<string, AnimatorState2D> = {};\r\n            this.createState(states, idCatch, acl);\r\n            this.setTransitions(states, idCatch, acl, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param exitRet \r\n     * @param transitions \r\n     * @param idCatch \r\n     * @param data \r\n     * @param pExitRet \r\n     */\r\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\r\n        for (let id in exitRet) {\r\n            let state = idCatch[id];\r\n            if (state) {\r\n\r\n                let ats: AnimatorTransition2D[] = state.transitions;\r\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\r\n\r\n                let linArr = exitRet[id];\r\n                for (let i = transitions.length - 1; i >= 0; i--) {\r\n                    let t = transitions[i];\r\n                    if (\"-3\" == t.id) {\r\n                        if (null == pExitRet[id]) {\r\n                            pExitRet[id] = [];\r\n                        }\r\n                        pExitRet[id].push(t);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                    for (let j = linArr.length - 1; j >= 0; j--) {\r\n                        let t2 = linArr[j];\r\n\r\n\r\n                        let ato = new AnimatorTransition2D();\r\n                        ato.destState = idCatch[t.id];\r\n\r\n                        if (t.conditions) {\r\n                            this.addConditions(t.conditions, ato, data);\r\n                        }\r\n\r\n                        if (t2.conditions) {\r\n                            this.addConditions(t2.conditions, ato, data);\r\n                        }\r\n\r\n\r\n                        for (let k in t) {\r\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                continue;\r\n                            } else {\r\n                                (ato as any)[k] = (t as any)[k];\r\n                            }\r\n                        }\r\n\r\n                        if (t.solo) {\r\n                            sts.unshift(ato);\r\n                        } else {\r\n                            ats.unshift(ato);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\r\n        let ato = new AnimatorTransition2D();\r\n\r\n        if (idCatch[o.id]) {\r\n            ato.destState = idCatch[o.id];\r\n        }\r\n        if (o.conditions) {\r\n            this.addConditions(o.conditions, ato, data);\r\n        }\r\n\r\n        for (let k in o) {\r\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                continue;\r\n            } else {\r\n                (ato as any)[k] = (o as any)[k];\r\n            }\r\n        }\r\n        return ato;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @param data \r\n     * @param pState \r\n     * @returns \r\n     */\r\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\r\n        if (!states) return null;\r\n\r\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\r\n                if (exitTransition) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions) {\r\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                continue;\r\n            }\r\n            if (\"-1\" == obj.id) {\r\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\r\n                    if (null == pState) {\r\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\r\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\r\n                    } else {\r\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\r\n                    }\r\n                    continue;\r\n                }\r\n            } else if (\"-2\" == obj.id) {\r\n                let transitions = obj.soloTransitions;\r\n                if (transitions) {\r\n                    for (let j = transitions.length - 1; j >= 0; j--) {\r\n                        let o = transitions[j];\r\n                        let destState = idCatch[o.id];\r\n                        if (destState) {\r\n                            for (let idk in idCatch) {\r\n                                let state = idCatch[idk];\r\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\r\n                                // let ato = new AnimatorTransition2D();\r\n                                // ato.destState = destState;\r\n                                // if (o.conditions) {\r\n                                //     this.addConditions(o.conditions, ato, data);\r\n                                // }\r\n\r\n                                // for (let k in o) {\r\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                //         continue;\r\n                                //     } else {\r\n                                //         (ato as any)[k] = (o as any)[k];\r\n                                //     }\r\n                                // }\r\n\r\n                                if (o.solo) {\r\n                                    state.soloTransitions.unshift(ato);\r\n                                } else {\r\n                                    state.transitions.unshift(ato);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (\"-3\" == obj.id) {\r\n                continue;\r\n            }\r\n\r\n            let soloTransitions = obj.soloTransitions;\r\n            if (soloTransitions && idCatch[obj.id]) {\r\n\r\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\r\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\r\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\r\n                    let o = soloTransitions[j];\r\n                    if (\"-3\" == o.id) {\r\n                        if (null == exitRet[obj.id]) {\r\n                            exitRet[obj.id] = [];\r\n                        }\r\n                        exitRet[obj.id].push(o);\r\n                        continue;\r\n                    }\r\n\r\n                    let ato = this._getAnimatorTransition2D(o, idCatch, data);\r\n\r\n                    if (o.solo) {\r\n                        sts.unshift(ato);\r\n                    } else {\r\n                        ats.unshift(ato);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return exitRet;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param arr \r\n     * @param ato \r\n     * @param data \r\n     * @returns \r\n     */\r\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\r\n        let parms = data.animatorParams;\r\n        if (null == parms || 0 == parms.length) return;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            let o = arr[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                return;\r\n            }\r\n            let c: AnimatorStateCondition;\r\n            if (parm.type == AniParmType.Bool) {\r\n                let b = new AnimatorStateBoolCondition(parm.name);\r\n                b.compareFlag = Boolean(o.checkValue);\r\n                c = b;\r\n            } else if (parm.type == AniParmType.Float) {\r\n                let n = new AnimatorStateNumberCondition(parm.name);\r\n                n.numberValue = Number(o.checkValue);\r\n                n.compareFlag = o.type;\r\n                c = n;\r\n            } else if (parm.type == AniParmType.Trigger) {\r\n                let t = new AnimatorStateTriggerCondition(parm.name);\r\n                c = t;\r\n            }\r\n            ato.addCondition(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param a \r\n     */\r\n    updateTo(a: Animator2D) {\r\n        let currLayer = (a as any)._controllerLayers;\r\n\r\n        for (let i = 0, len = currLayer.length; i < len; i++) {\r\n            currLayer[i].destroy();\r\n        }\r\n        currLayer.length = 0;\r\n\r\n        let layers = this.getLayers();\r\n        for (let i = 0, len = layers.length; i < len; i++) {\r\n            a.addControllerLayer(layers[i]);\r\n        }\r\n\r\n        let parms = this.data.animatorParams;\r\n        if (parms) {\r\n            let setParm: Record<string, Animation2DParm> = {};\r\n            for (let i = parms.length - 1; i >= 0; i--) {\r\n                let p = parms[i];\r\n                let sp = new Animation2DParm();\r\n                sp.name = p.name;\r\n                sp.type = p.type;\r\n                sp.value = p.val;\r\n                setParm[p.name] = sp;\r\n            }\r\n            a.parameters = setParm;\r\n        }\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Collision } from \"../d3/physics/Collision\";\r\nimport { PhysicsColliderComponent } from \"../d3/physics/PhysicsColliderComponent\";\r\nimport { ColliderBase } from \"../physics/Collider2D/ColliderBase\";\r\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * @en The Script class is used to create the parent class of a script, which is an abstract class and does not allow instances.\r\n * @zh Script 类用于创建脚本的父类，该类为抽象类，不允许实例。\r\n */\r\nexport class Script extends Component {\r\n    /**\r\n     * @en Script belonging to sprite\r\n     * @zh 脚本所属精灵\r\n     */\r\n    declare owner: Sprite | Sprite3D;\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _isScript(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置脚本\r\n     */\r\n    protected setupScript(): void {\r\n        let owner = this.owner;\r\n        let func: Function;\r\n\r\n        if (!(this.onTriggerEnter == Script.prototype.onTriggerEnter)) owner.on(Event.TRIGGER_ENTER, this, this.onTriggerEnter);\r\n        if (!(this.onTriggerStay == Script.prototype.onTriggerStay)) owner.on(Event.TRIGGER_STAY, this, this.onTriggerStay);\r\n        if (!(this.onTriggerExit == Script.prototype.onTriggerExit)) owner.on(Event.TRIGGER_EXIT, this, this.onTriggerExit);\r\n\r\n        if (!(this.onCollisionEnter == Script.prototype.onCollisionEnter)) owner.on(Event.COLLISION_ENTER, this, this.onCollisionEnter);\r\n        if (!(this.onCollisionStay == Script.prototype.onCollisionStay)) owner.on(Event.COLLISION_STAY, this, this.onCollisionStay);\r\n        if (!(this.onCollisionExit == Script.prototype.onCollisionExit)) owner.on(Event.COLLISION_EXIT, this, this.onCollisionExit);\r\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\r\n\r\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\r\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\r\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\r\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\r\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\r\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\r\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\r\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\r\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\r\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\r\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\r\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\r\n\r\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\r\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\r\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\r\n        owner.event(Event._Add_Script);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en Called when a 3D physics trigger event or a 2D physics collision event begins.\r\n     * @param other The collider component or base of the other object in the collision.\r\n     * @param self The collider component or base of the object itself.\r\n     * @param contact The contact point information.\r\n     * @zh 开始碰撞时执行的3D物理触发器事件或2D物理碰撞事件。\r\n     * @param other 其他对象的碰撞器组件。\r\n     * @param self 自身的碰撞器组件。\r\n     * @param contact 接触点信息。\r\n     */\r\n    onTriggerEnter?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * @en Called during the frame a 3D physics trigger event or a 2D physics collision event stays collided.\r\n     * @param other The collider component or base of the other object in the collision.\r\n     * @param self The collider component or base of the object itself, if not provided it's assumed to be the owner of the script.\r\n     * @param contact The contact point information, can be any type depending on the physics engine used.\r\n     * @zh 持续碰撞时执行的3D物理触发器事件或2D物理碰撞事件。\r\n     * @param other 其他对象的碰撞器组件。\r\n     * @param self 自身的碰撞器组件。\r\n     * @param contact 接触点信息。\r\n     */\r\n    onTriggerStay?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * @en Called when a 3D physics trigger event or a 2D physics collision event ends.\r\n     * @param other The collider component or base of the other object in the collision.\r\n     * @param self The collider component or base of the object itself.\r\n     * @param contact The contact point information.\r\n     * @zh 结束碰撞时执行的3D物理触发器事件或2D物理碰撞事件。\r\n     * @param other 其他对象的碰撞器组件或基类。\r\n     * @param self 自身的碰撞器组件或基类。\r\n     * @param contact 接触点信息。\r\n     */\r\n    onTriggerExit?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * @en Called when a 3D physics collider event begins (not applicable to 2D).\r\n     * @param collision The collision.\r\n     * @zh 3D物理碰撞器事件开始时调用（不适用于2D）。\r\n     * @param collision 碰撞器。\r\n     */\r\n    onCollisionEnter?(collision: Collision): void;\r\n\r\n    /**\r\n     * @en Called during the frame a 3D physics collider event stays collided (not applicable to 2D).\r\n     * @param collision The collision.\r\n     * @zh 3D物理碰撞器事件持续碰撞时调用（不适用于2D）。\r\n     * @param collision 碰撞器。\r\n     */\r\n    onCollisionStay?(collision: Collision): void;\r\n\r\n    /**\r\n     * @en Called when a 3D physics collider event ends (not applicable to 2D).\r\n     * @param collision The collision.\r\n     * @zh 3D物理碰撞器事件结束碰撞时调用（不适用于2D）。\r\n     * @param collision 碰撞器。\r\n     */\r\n    onCollisionExit?(collision: Collision): void;\r\n\r\n    /**\r\n     * @en Called when a joint is broken in the physics simulation.\r\n     * @zh 物理模拟中关节断裂时调用。\r\n     */\r\n    onJointBreak?(): void;\r\n\r\n    /**\r\n     * @en Called when the mouse button is pressed down on the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标按下时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse button is released from the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标抬起时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the right or middle mouse button is pressed down.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标右键或中键按下时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onRightMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the right or middle mouse button is released.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标右键或中键抬起时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onRightMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse moves over the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标在节点上移动时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseMove?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse enters the node boundaries.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标进入节点时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseOver?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse leaves the node boundaries.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标离开节点时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseOut?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse is held down and an object is dragged.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标按住一个物体后，拖拽时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseDrag?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse button is released after dragging an object.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseDragEnd?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse button is clicked (pressed and released) on the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标点击时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseClick?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the mouse button is double-clicked on the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标双击时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseDoubleClick?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when the right mouse button is clicked on the node.\r\n     * @param evt The mouse event.\r\n     * @zh 鼠标右键点击时执行。\r\n     * @param evt 鼠标事件。\r\n     */\r\n    onMouseRightClick?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when a key is pressed down.\r\n     * @param evt The keyboard event.\r\n     * @zh 键盘按下时执行。\r\n     * @param evt 键盘事件。\r\n     */\r\n    onKeyDown?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when a key is pressed and holds long enough to generate a character.\r\n     * @param evt The keyboard event.\r\n     * @zh 键盘产生一个字符时执行。\r\n     * @param evt 键盘事件。\r\n     */\r\n    onKeyPress?(evt: Event): void;\r\n\r\n    /**\r\n     * @en Called when a key is released.\r\n     * @param evt The keyboard event.\r\n     * @zh 键盘抬起时执行。\r\n     * @param evt 键盘事件。\r\n     */\r\n    onKeyUp?(evt: Event): void;\r\n}\r\n\r\n","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\r\n\r\nclass TextAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Plain);\r\n        });\r\n    }\r\n}\r\n\r\nclass BytesAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Buffer);\r\n        });\r\n    }\r\n}\r\n\r\nclass JsonAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.JSON);\r\n        });\r\n    }\r\n}\r\n\r\nclass XMLAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.XML);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\r\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\r\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\r\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass AtlasLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let toloadPics: Array<Promise<Texture>> = [];\r\n            if (data.meta && data.meta.image) {\r\n                let folderPath: string = \"\";\r\n                let i = task.url.lastIndexOf(\"/\");\r\n                if (i != -1)\r\n                    folderPath = task.url.substring(0, i + 1);\r\n\r\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\r\n                let query: string = \"\";\r\n                i = task.url.lastIndexOf(\"?\");\r\n                if (i != -1)\r\n                    query = task.url.substring(i);\r\n\r\n                //带图片信息的类型\r\n                let pics: Array<string> = data.meta.image.split(\",\");\r\n                for (let pic of pics)\r\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\r\n            } else {  //不带图片信息\r\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\r\n            }\r\n\r\n            return Promise.all(toloadPics).then(pics => {\r\n                let baseUrl = task.options.baseUrl || \"\";\r\n\r\n                let frames: any = data.frames;\r\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\r\n                let subTextures: Array<Texture> = [];\r\n\r\n                let scaleRate: number = 1;\r\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\r\n                    scaleRate = parseFloat(data.meta.scale);\r\n\r\n                for (let tPic of pics) {\r\n                    if (tPic) {\r\n                        tPic._addReference();\r\n                        tPic.scaleRate = scaleRate;\r\n                    }\r\n                }\r\n\r\n                for (let name in frames) {\r\n                    let obj = frames[name];\r\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                    if (!tPic)\r\n                        continue;\r\n\r\n                    let url = baseUrl + directory + (obj.filename || name);\r\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\r\n                    tt.lock = true;\r\n                    tt._sizeGrid = obj.sizeGrid;\r\n                    tt._stateNum = obj.stateNum;\r\n                    task.loader.cacheRes(url, tt);\r\n                    tt.url = url;\r\n                    subTextures.push(tt);\r\n                }\r\n\r\n                return new AtlasResource(directory, pics, subTextures);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Component } from \"../components/Component\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\r\n\r\nexport class HierarchyParser {\r\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\r\n        let printErrors = errors == null;\r\n        errors = errors || [];\r\n        let nodeMap: Record<string, Node> = {};\r\n        let dataList: Array<any> = [];\r\n        let allNodes: Array<Node> = [];\r\n        let outNodes: Array<Node> = [];\r\n        let scene: Scene;\r\n\r\n        let inPrefab: boolean;\r\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\r\n        let skinBaseUrl: string;\r\n        let overrideData: Array<Array<any>>;\r\n\r\n        if (options) {\r\n            inPrefab = options.inPrefab;\r\n            if (inPrefab)\r\n                prefabNodeDict = options.prefabNodeDict;\r\n            skinBaseUrl = options.skinBaseUrl;\r\n            overrideData = options.overrideData;\r\n        }\r\n\r\n        function createChildren(data: any, prefab: Node) {\r\n            for (let child of data._$child) {\r\n                if (child._$child) {\r\n                    let node = createNode(child, prefab);\r\n                    createChildren(child, child._$prefab ? node : prefab);\r\n\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n                else {\r\n                    let node = createNode(child, prefab);\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        function createNode(nodeData: any, prefab: Node, runtime?: string): Node {\r\n            let node: Node;\r\n            let pstr: string;\r\n            if (pstr = nodeData._$override) { //prefab里的override节点\r\n                if (prefab && prefabNodeDict) {\r\n                    if (Array.isArray(pstr)) {\r\n                        node = prefab;\r\n                        for (let i = 0, n = pstr.length; i < n; i++) {\r\n                            let map = prefabNodeDict.get(node);\r\n                            node = map?.[pstr[i]];\r\n                            if (!node)\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let map = prefabNodeDict.get(prefab);\r\n                        if (map)\r\n                            node = map[nodeData._$override];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (pstr = nodeData._$prefab) { //prefab根节点\r\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\r\n                    if (res) {\r\n                        if (!prefabNodeDict)\r\n                            prefabNodeDict = new Map();\r\n\r\n                        let overrideData2: Array<any> = [];\r\n                        let testId = nodeData._$id;\r\n                        if (overrideData) {\r\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\r\n                                let arr = overrideData[i];\r\n                                if (arr && arr.length > 0) {\r\n                                    overrideData2[i] = arr.filter(d => {\r\n                                        let od = d._$override || d._$parent;\r\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\r\n                                    });\r\n                                }\r\n                                else\r\n                                    overrideData2[i] = arr;\r\n                            }\r\n                        }\r\n\r\n                        overrideData2.push(nodeData._$child);\r\n\r\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\r\n                    }\r\n                }\r\n                else if (pstr = nodeData._$type) {\r\n                    let cls = ClassUtils.getClass(runtime || pstr);\r\n                    if (cls) {\r\n                        try {\r\n                            node = new cls();\r\n                            if (runtime != null && !(node instanceof Node)) {\r\n                                errors.push(new Error(`runtime class invalid - '${runtime}', must derive from Node`));\r\n                                node = null;\r\n                            }\r\n                        }\r\n                        catch (err: any) {\r\n                            errors.push(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        errors.push(new Error(`unknown type '${runtime || pstr}'`));\r\n                    }\r\n                }\r\n\r\n                if (node)\r\n                    nodeMap[nodeData._$id] = node;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n        function getNodeByRef(idPath: string | string[]) {\r\n            if (Array.isArray(idPath)) {\r\n                let prefab = nodeMap[idPath[0]];\r\n                if (prefab && idPath.length > 1)\r\n                    return findNodeInPrefab(prefab, idPath, 1);\r\n                else\r\n                    return prefab;\r\n            }\r\n            else\r\n                return nodeMap[idPath];\r\n        }\r\n\r\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\r\n            if (!idPath)\r\n                return prefab;\r\n\r\n            let map = prefabNodeDict?.get(prefab);\r\n            if (!map)\r\n                return null;\r\n\r\n            if (Array.isArray(idPath)) {\r\n                let node: Node;\r\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\r\n                    if (!map)\r\n                        return null;\r\n\r\n                    node = map[idPath[i]];\r\n                    if (!node)\r\n                        break;\r\n\r\n                    map = prefabNodeDict.get(node);\r\n                }\r\n                return node;\r\n            }\r\n            else\r\n                return map[idPath];\r\n        }\r\n\r\n        let bakedOverrideData: Record<string, Array<any>>;\r\n        function getNodeData(node: Node) {\r\n            (<Sprite>node).visible = false;\r\n\r\n            let i = allNodes.indexOf(node);\r\n            let nodeData = dataList[i];\r\n\r\n            if (!overrideData)\r\n                return nodeData;\r\n\r\n            if (bakedOverrideData === undefined)\r\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\r\n\r\n            if (bakedOverrideData)\r\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\r\n            else\r\n                return nodeData;\r\n        }\r\n\r\n        let runtime: string;\r\n        if (data._$type || data._$prefab) {\r\n            runtime = data._$runtime;\r\n            if (runtime && runtime.startsWith(\"res://\"))\r\n                runtime = runtime.substring(6);\r\n\r\n            let node = createNode(data, null, runtime);\r\n            if (node) {\r\n                if (data._$child)\r\n                    createChildren(data, data._$prefab ? node : null);\r\n\r\n                dataList.push(data);\r\n                allNodes.push(node);\r\n\r\n                if (node instanceof Scene)\r\n                    scene = node;\r\n            }\r\n        }\r\n        else {\r\n            if (data._$child)\r\n                createChildren(data, null);\r\n        }\r\n\r\n        let cnt = dataList.length;\r\n\r\n        //生成树\r\n        let k = 0;\r\n        let outNodeData: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n\r\n            let children: Array<any> = nodeData._$child;\r\n            if (children) {\r\n                let num = children.length;\r\n                if (node) {\r\n                    if (nodeData._$prefab) {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let m = k - num + j;\r\n                            let n = outNodes[m];\r\n                            if (n && !n.parent) { //是预制体新增\r\n                                let nodeData2 = outNodeData[m];\r\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\r\n                                if (parentNode) {\r\n                                    let pos = nodeData2._$index;\r\n                                    if (pos != null && pos < parentNode.numChildren)\r\n                                        parentNode.addChildAt(n, pos);\r\n                                    else\r\n                                        parentNode.addChild(n);\r\n                                }\r\n                                else {\r\n                                    //挂接的节点可能被删掉了\r\n                                    node.addChildAt(n, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let n = outNodes[k - num + j];\r\n                            if (n) {\r\n                                if (node === scene && n._is3D)\r\n                                    scene._scene3D = <any>n;\r\n                                else\r\n                                    node.addChild(n);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                k -= num;\r\n            }\r\n\r\n            outNodes[k] = node;\r\n            outNodeData[k] = nodeData;\r\n            k++;\r\n        }\r\n        outNodes.length = k;\r\n        outNodes = outNodes.filter(n => n != null);\r\n        let topNode = outNodes[0];\r\n\r\n        //加载所有组件\r\n        let compInitList: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let components = dataList[i]._$comp;\r\n            if (!components)\r\n                continue;\r\n\r\n            let node = allNodes[i];\r\n            if (!node)\r\n                continue;\r\n\r\n            for (let compData of components) {\r\n                let comp: Component;\r\n                let typeOrId = compData._$override;\r\n                if (compData._$override) {\r\n                    let cls = ClassUtils.getClass(typeOrId);\r\n                    if (cls)\r\n                        comp = node.getComponent(cls);\r\n                    else\r\n                        comp = node.components.find(comp => (<any>comp._extra).storeId == typeOrId);\r\n                }\r\n                else {\r\n                    let cls: any = ClassUtils.getClass(compData._$type);\r\n                    if (cls) {\r\n                        if (!compData._$id)\r\n                            comp = node.getComponent(cls);\r\n                        if (!comp) {\r\n                            try {\r\n                                comp = node.addComponent(cls);\r\n                                (<any>comp._extra).storeId = compData._$id;\r\n                            }\r\n                            catch (err: any) {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (comp)\r\n                    compInitList.push(compData, comp);\r\n            }\r\n        }\r\n\r\n        //设置节点属性\r\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n            if (node) {\r\n                if (skinBaseUrl != null && (node instanceof Sprite))\r\n                    node._skinBaseUrl = skinBaseUrl;\r\n\r\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\r\n\r\n                if (runtime && nodeData._$var && node.name) {\r\n                    try {\r\n                        (<any>topNode)[node.name] = node;\r\n                    }\r\n                    catch (err: any) {\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //设置组件属性\r\n        cnt = compInitList.length;\r\n        for (let i = 0; i < cnt; i += 2) {\r\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\r\n        }\r\n\r\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\r\n            prefabNodeDict.set(topNode, nodeMap);\r\n\r\n        if (printErrors && errors.length > 0)\r\n            errors.forEach(err => console.error(err));\r\n\r\n        return outNodes;\r\n    }\r\n\r\n    public static collectResourceLinks(data: any, basePath: string) {\r\n        let test: Record<string, string[]> = {};\r\n        let innerUrls: (string | ILoadURL)[] = [];\r\n\r\n        function addInnerUrl(url: string, type: string) {\r\n            if (!url)\r\n                return \"\";\r\n            let entry = test[url];\r\n            if (entry === undefined) {\r\n                let url2: string;\r\n                if (Utils.isUUID(url))\r\n                    url2 = \"res://\" + url;\r\n                else\r\n                    url2 = URL.join(basePath, url);\r\n                innerUrls.push({ url: url2, type: type });\r\n                test[url] = entry = [url2, type];\r\n            }\r\n            else if (entry.indexOf(type, 1) == -1) {\r\n                entry.push(type);\r\n                innerUrls.push({ url: entry[0], type: type });\r\n            }\r\n            return entry[0];\r\n        }\r\n\r\n        let type: string;\r\n        function checkData(data: any) {\r\n            if (data._$uuid != null) {\r\n                data._$uuid = addInnerUrl(data._$uuid, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n                return;\r\n            }\r\n\r\n            if (data._$prefab != null)\r\n                data._$prefab = addInnerUrl(data._$prefab, Loader.HIERARCHY);\r\n            else if ((type = data._$type) != null) {\r\n                if (type.endsWith(\".bp\"))\r\n                    addInnerUrl(type, null);\r\n                else if (LayaEnv.isPreview && Utils.isUUID(type)) {\r\n                    let cls = ClassUtils.getClass(type);\r\n                    if (cls == null || cls._$loadable)\r\n                        addInnerUrl(\"res://\" + type, null);\r\n                }\r\n            }\r\n            check(data);\r\n        }\r\n\r\n        function check(data: any) {\r\n            for (let key in data) {\r\n                let child = data[key];\r\n                if (child == null)\r\n                    continue;\r\n                if (Array.isArray(child)) {\r\n                    for (let item of child) {\r\n                        if (item == null)\r\n                            continue;\r\n\r\n                        if (typeof (item) === \"object\") {\r\n                            checkData(item);\r\n                        }\r\n                    }\r\n                }\r\n                else if (typeof (child) === \"object\") {\r\n                    checkData(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        check(data);\r\n\r\n        if (data._$preloads) {\r\n            for (let url of data._$preloads)\r\n                innerUrls.push(url);\r\n        }\r\n\r\n        return innerUrls;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader, ILoadOptions } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { HierarchyParser } from \"./HierarchyParser\";\r\nimport { LegacyUIParser } from \"./LegacyUIParser\";\r\n\r\nexport class HierarchyLoader implements IResourceLoader {\r\n    static v3: IHierarchyParserAPI = HierarchyParser;\r\n    static v2: IHierarchyParserAPI = null;\r\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\r\n\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\" || task.ext == \"obj\";\r\n        if (isModel)\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\r\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            if (data._$ver != null)\r\n                return this._load(HierarchyLoader.v3, task, data, 3);\r\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\r\n                return this._load(HierarchyLoader.v2, task, data, 2);\r\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\r\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    //@internal\r\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\r\n        let basePath = URL.getPath(task.url);\r\n        let links = api.collectResourceLinks(data, basePath);\r\n        let options: ILoadOptions = Object.assign({}, task.options);\r\n        options.initiator = task;\r\n        delete options.cache;\r\n        delete options.ignoreCache;\r\n        return task.loader.load(links, options, task.progress.createCallback()).then((resArray: any[]) => {\r\n            let res = new PrefabImpl(api, data, version);\r\n            res.addDeps(resArray);\r\n            return res;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\r\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\r\n * \r\n * 文件第一行为 \"#?RADIANCE\"\r\n * \r\n * 以 \"#\" 开始为 注释行\r\n * \r\n * 后面有 key=value 形式声明信息\r\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\r\n * \r\n * 空行代表 header 结束， \r\n * \r\n * header 信息下一行 描述 图像分辨率和像素数据\r\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\r\n * \r\n * 之后为 图像 二进制像素数据\r\n *  \r\n */\r\n\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\n\r\n/**\r\n * https://floyd.lbl.gov/radiance/framer.html\r\n */\r\nexport class HDRTextureInfo {\r\n\r\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\r\n\r\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\r\n\r\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\r\n\r\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\r\n\r\n        texture.setHDRData(hdrInfo);\r\n\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) texture.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) texture.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) texture.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) texture.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param source \r\n     */\r\n    static getHDRInfo(source: ArrayBuffer) {\r\n\r\n        let data = new Uint8Array(source);\r\n        let readByteOffset = 0;\r\n\r\n        const readLine = () => {\r\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\r\n            // string 带着 '\\n' 就不用 +1\r\n            readByteOffset += lineStr.length + 1;\r\n            return lineStr;\r\n        }\r\n\r\n        // header\r\n        let identifier = readLine();\r\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\r\n        if (identifier != \"#?RADIANCE\") {\r\n            throw \"HDR image: identifier wrong.\";\r\n        }\r\n\r\n        let commandsMap = new Map();\r\n\r\n        let line = \"\";\r\n        do {\r\n            line = readLine();\r\n            if (line[0] != \"#\") {\r\n                let commands = line.split(\"=\");\r\n                commandsMap.set(commands[0], commands[1]);\r\n            }\r\n\r\n        } while (line != \"\");\r\n        // header end\r\n\r\n        /**\r\n         * FORMAT\r\n         * EXPOSURE\r\n         * COLORCORR\r\n         * SOFTWARE\r\n         * PIXASPECT\r\n         * VIEW\r\n         * PRIMARIES\r\n         */\r\n        let hdrFormat = commandsMap.get(\"FORMAT\");\r\n        /**\r\n         * 32-bit_rle_rgbe\r\n         * 32-bit_rle_xyze\r\n         */\r\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\r\n            throw \"HDR image: unsupported format.\";\r\n        }\r\n\r\n        let resolutionStr = readLine();\r\n        let resolutions = resolutionStr.split(\" \");\r\n\r\n        let decreaseY = resolutions[0] == \"-Y\";\r\n        let decreaseX = resolutions[2] == \"-X\";\r\n\r\n        let height = parseInt(resolutions[1]);\r\n        let width = parseInt(resolutions[3]);\r\n\r\n        // format 固定?\r\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32A32);\r\n\r\n        /**\r\n         * Scanline Records\r\n         * 1. Uncompressed 每像素 4 字节\r\n         * 2. Old run-length encoded\r\n         * 3. New run-length encoded *✓\r\n         */\r\n\r\n\r\n        return hdrInfo;\r\n    }\r\n\r\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\r\n\r\n        let dataLength = data.length;\r\n\r\n        let index = readByteOffset;\r\n\r\n        let res = \"\";\r\n        let char = \"\";\r\n        // do {\r\n        //     char = String.fromCharCode(data[index]);\r\n        //     res = `${res}${char}`;\r\n        //     index++;\r\n        // } while (index < dataLength && char != \"\\n\");\r\n\r\n        while (index < dataLength && char != \"\\n\") {\r\n            res = `${res}${char}`;\r\n            char = String.fromCharCode(data[index]);\r\n            index++;\r\n        }\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\r\n\r\n    }\r\n\r\n    get_32_bit_rle_rgbe(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataIndex = 0;\r\n\r\n        let rgbeBuffer = new ArrayBuffer(width * 4);\r\n        let rgbeArray = new Uint8Array(rgbeBuffer);\r\n\r\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\r\n        let pixelArray = new Float32Array(pixelBuffer);\r\n\r\n        // todo decreaseX and decreaseY\r\n        for (let y = height; y > 0; y--) {\r\n\r\n            // begin unnormalized pixel\r\n            let a2 = data[dataIndex++]; // equal to 2\r\n            let b2 = data[dataIndex++]; // equal to 2\r\n            let c = data[dataIndex++]; // upper byte\r\n            let d = data[dataIndex++]; // lower byte\r\n\r\n            let scanlineLength = (c << 8) | d;\r\n\r\n            if (scanlineLength != width) {\r\n                throw \"HDR info: scanlineLength wrong.\";\r\n            }\r\n\r\n            let index = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let endIndex = (i + 1) * scanlineLength;\r\n\r\n                while (index < endIndex) {\r\n                    let a = data[dataIndex++];\r\n                    let b = data[dataIndex++];\r\n                    if (a > 128) {\r\n                        let count = a - 128;\r\n                        if (count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        while (count-- > 0) {\r\n                            rgbeArray[index++] = b;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let count = a;\r\n                        if (count == 0 || count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        rgbeArray[index++] = b;\r\n                        if (--count > 0) {\r\n                            for (let j = 0; j < count; j++) {\r\n                                rgbeArray[index++] = data[dataIndex++];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < scanlineLength; i++) {\r\n                let r = rgbeArray[i];\r\n                let g = rgbeArray[i + scanlineLength];\r\n                let b = rgbeArray[i + 2 * scanlineLength];\r\n                let e = rgbeArray[i + 3 * scanlineLength];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\r\n                //  */\r\n                // r = 128;\r\n                // g = 64;\r\n                // b = 32;\r\n                // e = 129;\r\n\r\n                let index = (height - y) * scanlineLength * 3 + i * 3;\r\n\r\n                const Ldexp = (mantissa: number, exponent: number) => {\r\n                    if (exponent > 1023) {\r\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\r\n                    }\r\n\r\n                    if (exponent < -1074) {\r\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\r\n                    }\r\n\r\n                    return mantissa * Math.pow(2, exponent);\r\n                }\r\n\r\n                if (e > 0) {\r\n                    let exponent = Ldexp(1.0, e - (128 + 8));\r\n                    pixelArray[index] = r * exponent;\r\n                    pixelArray[index + 1] = g * exponent;\r\n                    pixelArray[index + 2] = b * exponent;\r\n                }\r\n                else {\r\n                    pixelArray[index] = 0;\r\n                    pixelArray[index + 1] = 0;\r\n                    pixelArray[index + 2] = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return pixelArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\r\n     */\r\n    readScanLine(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let n = 3;\r\n        if (this.format == TextureFormat.R32G32B32A32) {\r\n            n = 4;\r\n        }\r\n\r\n        let pixelArray = new Float32Array(width * height * n);\r\n\r\n        let scanlineArray = new Uint8Array(width * 4);\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataLength = data.length;\r\n        let dataIndex = 0;\r\n\r\n        const getc = () => {\r\n            // todo  check\r\n            if (dataIndex >= dataLength) {\r\n                throw \"HDR info: data wrong.\";\r\n            }\r\n\r\n            return data[dataIndex++];\r\n        };\r\n\r\n        const wrong = () => {\r\n            throw \"HDR info: data wrong.\";\r\n        }\r\n\r\n        for (let y = (height - 1); y >= 0; y--) {\r\n\r\n            this.readcolors(scanlineArray, getc, wrong);\r\n\r\n            for (let i = 0; i < width; i++) {\r\n\r\n                // color_color func\r\n                let index = 4 * i;\r\n                let byter = scanlineArray[index];\r\n                let byteg = scanlineArray[index + 1];\r\n                let byteb = scanlineArray[index + 2];\r\n                let bytee = scanlineArray[index + 3];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\r\n                //  */\r\n                // byter = 128;\r\n                // byteg = 64;\r\n                // byteb = 32;\r\n                // bytee = 129;\r\n\r\n                let offsetY = y;\r\n                let offsetX = i;\r\n                if (decreaseY) {\r\n                    offsetY = height - 1 - y;\r\n                }\r\n                if (decreaseX) {\r\n                    offsetX = width - 1 - i;\r\n                }\r\n\r\n                let pixelIndex = offsetY * width * n + offsetX * n;\r\n\r\n                if (bytee == 0) {\r\n                    pixelArray[pixelIndex] = 0;\r\n                    pixelArray[pixelIndex + 1] = 0;\r\n                    pixelArray[pixelIndex + 2] = 0;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    let f = ldexp(1.0, bytee - (128 + 8));\r\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\r\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\r\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return pixelArray;\r\n    }\r\n\r\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\r\n\r\n        const setScanLineData = (w: number, channel: number, value: number) => {\r\n            scanlineArray[w * 4 + channel] = value;\r\n        }\r\n\r\n        let width = this.width;\r\n\r\n        // 第一个数据\r\n        let unnormalizedr = getc();\r\n        let unnormalizedg = getc();\r\n        let unnormalizedb = getc();\r\n        let unnormalizede = getc();\r\n\r\n        if (width < 8 || width > 32767) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\r\n            wrong()\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < width;) {\r\n                let code = getc();\r\n                if (code > 128) {\r\n                    code &= 127;\r\n                    let val = getc();\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n                else {\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        let val = getc();\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\r\n\r\n        let rshift = 0;\r\n\r\n        let len = this.width;\r\n\r\n        scanlineArray[0] = r;\r\n        scanlineArray[1] = g;\r\n        scanlineArray[2] = b;\r\n        scanlineArray[3] = e;\r\n\r\n        for (let w = 1; w < len; w++) {\r\n            let unnormalizedr = getc();\r\n            let unnormalizedg = getc();\r\n            let unnormalizedb = getc();\r\n            let unnormalizede = getc();\r\n\r\n            let scanIndex = w * 4;\r\n            scanlineArray[scanIndex] = unnormalizedr;\r\n            scanlineArray[scanIndex + 1] = unnormalizedg;\r\n            scanlineArray[scanIndex + 2] = unnormalizedb;\r\n            scanlineArray[scanIndex + 3] = unnormalizede;\r\n\r\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\r\n                let lastIndex = scanIndex - 4;\r\n                for (let i = unnormalizede << rshift; i > 0; i--) {\r\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\r\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\r\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\r\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\r\n                    // len--;\r\n                }\r\n                rshift += 8;\r\n            }\r\n            else {\r\n                // len--;\r\n                rshift = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    color_color(col: Vector4, clr: Vector4) {\r\n        let f = 0;\r\n        if (clr.w == 0) {\r\n            col.x = col.y = col.z = 0;\r\n        }\r\n        else {\r\n            f = ldexp(1.0, clr.w - (128 + 8));\r\n            // todo   + 0.5 值会变\r\n            col.x = (clr.x) * f;\r\n            col.y = (clr.y) * f;\r\n            col.z = (clr.z) * f;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ldexp(value: number, exponent: number): number {\r\n    return value * Math.pow(2, exponent);\r\n}","import { AnimationClip2D } from \"../components/AnimationClip2D\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\n\r\nclass AnimationClip2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return AnimationClip2D._parse(data);\r\n        });\r\n    }\r\n}\r\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\r\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nclass AnimationController2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            let ret = new AnimatorController2D(data);\r\n            if (ret.data && ret.data.controllerLayers) {\r\n                let layers = ret.data.controllerLayers;\r\n                let promises: Array<any> = [];\r\n                for (let i = layers.length - 1; i >= 0; i--) {\r\n                    let states = layers[i].states;\r\n                    this.loadStates(states, promises, task);\r\n\r\n                }\r\n                return Promise.all(promises).then(() => ret);\r\n            }\r\n            else\r\n                return ret;\r\n        });\r\n    }\r\n\r\n\r\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\r\n        let basePath = URL.getPath(task.url);\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            if (states[j].clip && states[j].clip._$uuid) {\r\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\r\n                if (!url.startsWith(\"res://\"))\r\n                    url = URL.join(basePath, url);\r\n                promises.push(task.loader.load(url).then(res => {\r\n                    states[j].clip = res;\r\n                }));\r\n\r\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\r\n                //     states[j].clip = res;\r\n                // }));\r\n            }\r\n\r\n            if (states[j].states) {\r\n                this.loadStates(states[j].states, promises, task);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\n\r\nexport class NullLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass BitmapFontLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\r\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\r\n        ]).then(([xml, tex]) => {\r\n            if (!xml || !tex)\r\n                return null;\r\n\r\n            let font = new BitmapFont();\r\n            font.parseFont(xml, tex);\r\n\r\n            return font;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nconst testString = \"LayaTTFFont\";\r\n\r\nclass TTFFontLoader implements IResourceLoader {\r\n\r\n    load(task: ILoadTask) {\r\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\r\n        if (LayaEnv.isConch) {\r\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\r\n                if (data)\r\n                    (window as any)[\"conch\"].registerFont(fontName, data);\r\n                return { family: fontName };\r\n            });\r\n        }\r\n        else if ((window as any).FontFace) {\r\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\r\n            (document as any).fonts.add(fontFace);\r\n            return fontFace.load().then(() => {\r\n                return fontFace;\r\n            });\r\n        }\r\n        else {\r\n            let fontTxt = \"40px \" + fontName;\r\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\r\n\r\n            let fontStyle: any = Browser.createElement(\"style\");\r\n            fontStyle.type = \"text/css\";\r\n            document.body.appendChild(fontStyle);\r\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\r\n\r\n            return new Promise((resolve) => {\r\n                let checkComplete = () => {\r\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\r\n                        complete();\r\n                };\r\n                let complete = () => {\r\n                    ILaya.systemTimer.clear(this, checkComplete);\r\n                    ILaya.systemTimer.clear(this, complete);\r\n\r\n                    resolve({ family: fontName });\r\n                };\r\n\r\n                ILaya.systemTimer.once(10000, this, complete);\r\n                ILaya.systemTimer.loop(20, this, checkComplete);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ShaderDefine } from \"../RenderDriver/RenderModuleData/Design/ShaderDefine\";\r\n\r\nexport class MaterialParser {\r\n\r\n    static parse(data: any): Material {\r\n        let props: any = data.props;\r\n\r\n        switch (data.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n            case \"LAYAMATERIAL:03\":\r\n                let mat = MaterialParser.parseLegacy(data);\r\n                mat.oldparseEndEvent();\r\n                return mat;\r\n            case \"LAYAMATERIAL:04\":\r\n                break;\r\n            default:\r\n                throw new Error(`unkonwn material version: ${data.version}`);\r\n        }\r\n\r\n        let mat = new Material();\r\n        mat.setShaderName(props.type);\r\n        let renderQueue: number;\r\n        for (let key in props) {\r\n            switch (key) {\r\n                case \"type\":\r\n                case \"name\":\r\n                    break;\r\n                case \"defines\":\r\n                    let defineNames: any[] = props[key];\r\n                    for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                        let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                        mat._shaderValues.addDefine(define);\r\n                    }\r\n                    break;\r\n                case \"textures\":\r\n                    let textures: any[] = props[key];\r\n                    for (let i = 0, n = textures.length; i < n; i++) {\r\n                        let texture: any = textures[i];\r\n                        let path: string = texture.path;\r\n                        (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                    }\r\n                    break;\r\n                case \"renderQueue\":\r\n                    renderQueue = props[key];\r\n                    break;\r\n                case \"alphaTest\":\r\n                    mat.alphaTest = props[key];\r\n                    break;\r\n                case \"materialRenderMode\":\r\n                    mat.materialRenderMode = props[key];\r\n                    break;\r\n                default:\r\n                    let property = props[key];\r\n                    let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                    switch (uniName) {\r\n                        case Shader3D.CULL:\r\n                            mat.cull = property;\r\n                            break;\r\n                        case Shader3D.BLEND:\r\n                            mat.blend = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC:\r\n                            mat.blendSrc = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST:\r\n                            mat.blendDst = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST_ALPHA:\r\n                            mat.blendDstAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_ALPHA:\r\n                            mat.blendSrcAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendSrcRGB = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendDstRGB = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_TEST:\r\n                            mat.depthTest = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_WRITE:\r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case Shader3D.STENCIL_TEST:\r\n                            mat.stencilTest = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Op:\r\n                            mat.stencilOp = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Ref:\r\n                            mat.stencilRef = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_WRITE:\r\n                            mat.stencilWrite = property;\r\n                            break;\r\n                        default:\r\n                            if (!property.length) {\r\n                                if (typeof property == 'boolean')\r\n                                    mat._shaderValues.setBool(uniName, props[key]);\r\n                                else {\r\n                                    mat._shaderValues.setNumber(uniName, props[key]);\r\n                                }\r\n                            } else {\r\n                                var vectorValue = property;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                        break;\r\n                                    case 3:\r\n                                        mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                        break;\r\n                                    case 4:\r\n                                        if (mat._shaderValues.getColor(uniName)) {\r\n                                            mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        } else\r\n                                            mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        break;\r\n                                    case 9:\r\n                                        let matrix3 = new Matrix3x3();\r\n                                        matrix3.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix3x3(uniName, matrix3);\r\n                                        break;\r\n                                    case 16:\r\n                                        let matrix4 = new Matrix4x4();\r\n                                        matrix4.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix4x4(uniName, matrix4);\r\n                                        break;\r\n                                    default:\r\n                                        mat._shaderValues.setBuffer(uniName, vectorValue);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n            }\r\n        }\r\n        if (null != renderQueue) {\r\n            mat.renderQueue = renderQueue;\r\n        }\r\n\r\n        return mat;\r\n    }\r\n\r\n    static collectLinks(data: any, basePath: string) {\r\n        let urls: ILoadURL[] = [];\r\n        let textures: any[] = data.props?.textures;\r\n        if (textures) {\r\n            for (let i = 0, n = textures.length; i < n; i++) {\r\n                let tex2D: any = textures[i];\r\n                let tex2DPath: string = tex2D.path;\r\n                if (tex2DPath) {\r\n                    tex2D.path = URL.join(basePath, tex2DPath);\r\n                    urls.push({ url: tex2D.path, type: Loader.TEXTURE2D, constructParams: tex2D.constructParams, propertyParams: tex2D.propertyParams });\r\n                }\r\n            }\r\n        }\r\n        return urls;\r\n    }\r\n\r\n\r\n    /**\r\n     * @deprecated\r\n     * @inheritDoc\r\n     */\r\n    static parseLegacy(data: any): Material {\r\n        let jsonData: any = data;\r\n        let props: any = jsonData.props;\r\n\r\n        let mat: Material;\r\n        let classType: string = props.type;\r\n        let clas: any = ClassUtils.getClass(classType);\r\n        if (!clas && classType && classType.startsWith(\"Laya.\"))\r\n            clas = ClassUtils.getClass(classType.substring(5));\r\n        if (clas)\r\n            mat = new clas();\r\n        else {\r\n            mat = new Material();\r\n            mat.setShaderName(classType);\r\n        }\r\n\r\n        switch (jsonData.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                            break;\r\n                        case \"vectors\":\r\n                            let vectors = props[key];\r\n                            for (let i = 0, n = vectors.length; i < n; i++) {\r\n                                let vector = vectors[i];\r\n                                let vectorValue = vector.value;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        (<any>mat)[vector.name] = new Vector2(vectorValue[0], vectorValue[1]);\r\n                                        break;\r\n                                    case 3:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], 1.0);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]);\r\n                                        break;\r\n                                    case 4:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"colors\":\r\n                            let colors = props[key];\r\n                            for (let i = 0, n = colors.length; i < n; i++) {\r\n                                let color = colors[i];\r\n                                let vectorValue = color.value;\r\n                                (<any>mat)[color.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3])\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && ((<any>mat)[texture.name] = Loader.getBaseTexture(path));\r\n                            }\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"renderStates\"://\"LAYAMATERIAL:02\" \r\n                            let renderStatesData: any[] = props[key];\r\n                            let renderStateData: any = renderStatesData[0];\r\n                            mat.blend = renderStateData.blend;\r\n                            mat.cull = this._getRenderStateParams(renderStateData.cull);\r\n                            mat.depthTest = this._getRenderStateParams(renderStateData.depthTest);\r\n                            mat.depthWrite = renderStateData.depthWrite;\r\n                            mat.blendSrc = this._getRenderStateParams(renderStateData.srcBlend);\r\n                            mat.blendDst = this._getRenderStateParams(renderStateData.dstBlend);\r\n                            break;\r\n                        case \"cull\"://\"LAYAMATERIAL:01\"\r\n                            mat.cull = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blend\"://\"LAYAMATERIAL:01\"\r\n                            mat.blend = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthWrite\"://\"LAYAMATERIAL:01\" \r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case \"srcBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"dstBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthTest\":\r\n                            mat.depthTest = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendDst\":\r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendSrc\":\r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        default:\r\n                            (<any>mat)[key] = props[key];\r\n                    }\r\n                }\r\n                break;\r\n            case \"LAYAMATERIAL:03\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                        case \"name\":\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                            }\r\n                            break;\r\n                        case \"renderQueue\":\r\n                            mat.renderQueue = props[key];\r\n                            break;\r\n                        default:\r\n                            let property = props[key];\r\n                            let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                            switch (uniName) {\r\n                                case Shader3D.CULL:\r\n                                    mat.cull = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND:\r\n                                    mat.blend = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_SRC:\r\n                                    mat.blendSrc = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_DST:\r\n                                    mat.blendDst = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_TEST:\r\n                                    mat.depthTest = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_WRITE:\r\n                                    mat.depthWrite = !!props[key];\r\n                                    break;\r\n                                default:\r\n                                    if (!property.length) {\r\n                                        if (typeof property == 'boolean')\r\n                                            mat._shaderValues.setBool(uniName, props[key]);\r\n                                        else {\r\n                                            mat._shaderValues.setNumber(uniName, props[key]);\r\n                                        }\r\n\r\n                                    } else {\r\n                                        var vectorValue = property;\r\n                                        switch (vectorValue.length) {\r\n                                            case 2:\r\n                                                mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                                break;\r\n                                            case 3:\r\n                                                mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                                break;\r\n                                            case 4:\r\n                                                if (mat._shaderValues.getColor(uniName)) {\r\n                                                    mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                } else\r\n                                                    mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"unkonwn material version: \" + jsonData.version);\r\n        }\r\n        return mat;\r\n    }\r\n\r\n\r\n    /**\r\n        * @deprecated\r\n        * 兼容Blend数据\r\n        */\r\n    private static _getRenderStateParams(type: number) {\r\n        switch (type) {\r\n            case 0x0300:\r\n                return BlendFactor.SourceColor;\r\n            case 0x0301:\r\n                return BlendFactor.OneMinusSourceColor;\r\n            case 0x0306:\r\n                return BlendFactor.DestinationColor;\r\n            case 0x0307:\r\n                return BlendFactor.OneMinusDestinationColor;\r\n            case 0x0302:\r\n                return BlendFactor.SourceAlpha;\r\n            case 0x0303:\r\n                return BlendFactor.OneMinusSourceAlpha;\r\n            case 0x0304:\r\n                return BlendFactor.DestinationAlpha;\r\n            case 0x0305:\r\n                return BlendFactor.OneMinusDestinationAlpha;\r\n            case 0x0308:\r\n                return BlendFactor.SourceAlphaSaturate;\r\n            case 0x8006:\r\n                return BlendEquationSeparate.ADD;\r\n            case 0x800A:\r\n                return BlendEquationSeparate.SUBTRACT;\r\n            case 0x800B:\r\n                return BlendEquationSeparate.REVERSE_SUBTRACT;\r\n            case 0x0200:\r\n                return CompareFunction.Never;\r\n            case 0x0201:\r\n                return CompareFunction.Less;\r\n            case 0x0202:\r\n                return CompareFunction.Equal;\r\n            case 0x0203:\r\n                return CompareFunction.LessEqual;\r\n            case 0x0204:\r\n                return CompareFunction.Greater;\r\n            case 0x0205:\r\n                return CompareFunction.NotEqual;\r\n            case 0x0206:\r\n                return CompareFunction.GreaterEqual;\r\n            case 0x0207:\r\n                return CompareFunction.Always;\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}","import { IResourceLoader, ILoadTask, ILoadURL, Loader, ILoadOptions } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { MaterialParser } from \"./MaterialParser\";\r\n\r\nexport class MaterialLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.3), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let urls: Array<ILoadURL | string> = MaterialParser.collectLinks(data, basePath);\r\n\r\n            if (data.version === \"LAYAMATERIAL:04\") {\r\n                let shaderName = data.props.type;\r\n                if (!Shader3D.find(shaderName)) {\r\n                    let url = AssetDb.inst.shaderName_to_URL(shaderName);\r\n                    if (url)\r\n                        urls.push(url);\r\n                    else {\r\n                        return AssetDb.inst.shaderName_to_URL_async(shaderName).then(url => {\r\n                            if (url)\r\n                                urls.push(url);\r\n                            else if (data.props.shaderPath)\r\n                                urls.push(URL.join(basePath, data.props.shaderPath));\r\n                            else\r\n                                Loader.warn(`unknown shaderName: ${shaderName}`);\r\n                            return this.load2(task, data, urls);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.load2(task, data, urls);\r\n        });\r\n    }\r\n\r\n    private load2(task: ILoadTask, data: any, urls: Array<any>): Promise<any> {\r\n        if (urls.length == 0) {\r\n            let mat = MaterialParser.parse(data);\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return Promise.resolve(mat);\r\n        }\r\n\r\n        let options: ILoadOptions = Object.assign({}, task.options);\r\n        options.initiator = task;\r\n        delete options.cache;\r\n        delete options.ignoreCache;\r\n        return task.loader.load(urls, options, task.progress.createCallback()).then(() => {\r\n            let mat = MaterialParser.parse(data);\r\n\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (task.obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return mat;\r\n        });\r\n    }\r\n\r\n    private move(obsoluteInst: Material, mat: Material) {\r\n        obsoluteInst._shaderValues.reset();\r\n        obsoluteInst.setShaderName(mat._shader.name);\r\n        mat._shaderValues.cloneTo(obsoluteInst._shaderValues);\r\n        obsoluteInst.renderQueue = mat.renderQueue;\r\n        obsoluteInst.materialRenderMode = mat.materialRenderMode;\r\n        obsoluteInst.obsolute = false;\r\n        mat.destroy();\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lmat\"], MaterialLoader, Loader.MATERIAL, true);","/**\r\n * @en A utility class for parsing JSON strings.\r\n * @zh 用于解析 JSON 字符串的实用工具类。\r\n */\r\nexport class ParseJSON {\r\n    static parse(str: string) {\r\n        return this.parseStart(str);\r\n    }\r\n\r\n    private static findIndex(str: string, i: number, fstr: string, len: number) {\r\n        var fi = str.indexOf(fstr, i + 1);\r\n        if (0 > fi) {\r\n            fi = len;\r\n        }\r\n        return { str: str.substring(i + 1, fi), i: fi };\r\n\r\n    }\r\n    private static finCurrObj(): any {\r\n        this.type = 1;\r\n        if (null == this.cobj) {\r\n            return null;\r\n        }\r\n        if (0 == this.currArr.length) {\r\n            if (this.cobj.k) {\r\n                this.ret[this.cobj.k] = this.cobj.val;\r\n            }\r\n            return null;\r\n        } else {\r\n            var pobj = this.currArr.pop()!;\r\n            if (this.cobj.k) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    if (null != this.cobj.k) {\r\n                        var obj: any = {};\r\n                        obj[this.cobj.k] = this.cobj.val;\r\n                        pobj.val.push(obj);\r\n                    } else {\r\n                        //没有key，应该创建的时候已经push进去了\r\n                        //pobj.val.push(cobj.val);\r\n                    }\r\n                } else {\r\n                    pobj.val[this.cobj.k] = this.cobj.val;\r\n                }\r\n            } else if (Array.isArray(this.cobj.val)) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    pobj.val.push(this.cobj.val);\r\n                } else {\r\n                    pobj.val = this.cobj.val;\r\n                }\r\n            } else {\r\n                //console.log(\"应该是已经被push过的obj对象，无需处理\");\r\n            }\r\n            return pobj;\r\n        }\r\n    }\r\n\r\n    private static formatVal(str: string | null) {\r\n        if (null == str) {\r\n            return null;\r\n        }\r\n        var numVal = Number(str);\r\n        if (!isNaN(numVal)) {\r\n            return numVal;\r\n        }\r\n\r\n        if (\"false\" == str.toLowerCase()) {\r\n            return false;\r\n        } else if (\"true\" == str.toLowerCase()) {\r\n            return true;\r\n        } else if (\"null\" == str) {\r\n            return null;\r\n        }\r\n\r\n\r\n        return str;\r\n    }\r\n\r\n    private static len: number;\r\n    private static ret: any;\r\n    private static currStr: string | null;\r\n    private static currArr: { k?: string, val: any }[];\r\n    private static cobj: any;\r\n    /**type为0代表没有找到任何状态，1为当前在寻找key，2为当前在寻找val */\r\n    private static type: number;\r\n\r\n    private static finCurrStr() {\r\n        if (null != this.currStr) {\r\n            this.currStr = this.currStr.trim();\r\n            if (\"\" != this.currStr) {\r\n                if (null != this.cobj) {\r\n                    if (Array.isArray(this.cobj.val)) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    } else {\r\n                        this.cobj.val = this.formatVal(this.currStr);\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static parseStart(str: string) {\r\n        this.len = str.length;\r\n        var i = 0;\r\n        this.ret = {};\r\n        this.currStr = null;\r\n        this.currArr = [];\r\n        this.cobj = null;\r\n        this.type = 0;\r\n\r\n\r\n        while (i < this.len) {\r\n            var c = str.charAt(i);\r\n            if (\"/\" == c) {\r\n                if (i + 1 < this.len) {\r\n                    i += 1;\r\n                    var cNext = str.charAt(i);\r\n                    var cstr = null;\r\n                    if (\"/\" == cNext) {\r\n                        //单行注释\r\n                        cstr = \"\\n\";\r\n                    } else if (\"*\" == cNext) {\r\n                        //多行注释\r\n                        cstr = \"*/\"\r\n                    }\r\n                    if (null != cstr) {\r\n\r\n\r\n\r\n                        this.finCurrStr();\r\n\r\n\r\n                        var fi = str.indexOf(cstr, i);\r\n                        if (0 > fi) {\r\n                            console.log(\"没有找到注释结尾，应该是一直注释到最后了\");\r\n                            i = this.len;\r\n                        } else {\r\n                            i = fi + cstr.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"}\" == c) {\r\n                if (null != this.cobj) {\r\n                    this.finCurrStr();\r\n                    if (null != this.cobj) {\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n                //obj结束\r\n            } else if (\"{\" == c) {\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n\r\n\r\n\r\n\r\n            } else if (\"'\" == c || \"\\\"\" == c || \"‘\" == c || \"“\" == c) {\r\n                //检测发现这里是字符串\r\n                if (\"‘\" == c) {\r\n                    c = \"’\";\r\n                } else if (\"“\" == c) {\r\n                    c = \"”\";\r\n                }\r\n                var obj = this.findIndex(str, i, c, this.len);\r\n\r\n                if (2 == this.type && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    if (null != this.currStr) {\r\n                        this.currStr = this.currStr.trim();\r\n                        if (\"\" != this.currStr) {\r\n                            this.cobj.val.push(this.formatVal(this.currStr));\r\n                        }\r\n                    }\r\n                    this.cobj.val.push(obj.str);\r\n                    this.currStr = \"\";\r\n                } else if (null != this.currStr) {\r\n                    this.currStr += obj.str;\r\n                }\r\n                i = obj.i;\r\n            } else if (\";\" == c || \",\" == c || \"\\n\" == c) {\r\n                this.finCurrStr();\r\n            } else if (\"]\" == c) {\r\n                //数组结束\r\n                if (null != this.currStr && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    this.currStr = this.currStr.trim();\r\n                    if (\"\" != this.currStr) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    }\r\n                }\r\n                if (null != this.cobj) {\r\n                    //数组需要完成两次才算结束出去\r\n                    this.cobj = this.finCurrObj();\r\n                    this.cobj = this.finCurrObj();\r\n                }\r\n                this.currStr = \"\";\r\n            } else if (\"[\" == c) {\r\n                if (2 != this.type) {\r\n                    console.warn(\"没有key值，忽略掉一个数组\");\r\n                } else {\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    this.cobj = { val: [] };\r\n                }\r\n            } else if (\":\" == c) {\r\n                if (null != this.currStr && 1 == this.type) {\r\n                    this.type = 2;\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    if (null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                        //数组中的obj对象 eg: {b:[{aa:3,bb:4}],}\r\n                        var pcobj = this.cobj;\r\n                        this.cobj = { val: {} };\r\n                        pcobj.val.push(this.cobj.val);\r\n                        this.currArr.push(this.cobj);\r\n\r\n                    }\r\n                    this.cobj = { k: this.currStr.trim(), val: {} };\r\n\r\n\r\n\r\n                    this.currStr = \"\";\r\n                }\r\n            } else if (null != this.currStr) {\r\n                this.currStr += c;\r\n            }\r\n            i++;\r\n        }\r\n        return this.ret;\r\n    }\r\n\r\n\r\n}","import { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n/**\r\n * @en Enum for the map faces of a cube texture.\r\n * @zh 表示立方体纹理各个面面的枚举。\r\n */\r\nexport enum TextureCubeFace {\r\n    /**\r\n     * @en The positive X face of the cube map.\r\n     * @zh 立方体贴图的正X面。\r\n     */\r\n    PositiveX,\r\n    /**\r\n     * @en The negative X face of the cube map.\r\n     * @zh 立方体贴图的负X面。\r\n     */\r\n    NegativeX,\r\n    /**\r\n     * @en The positive Y face of the cube map.\r\n     * @zh 立方体贴图的正Y面。\r\n     */\r\n    PositiveY,\r\n    /**\r\n     * @en The negative Y face of the cube map.\r\n     * @zh 立方体贴图的负Y面。\r\n     */\r\n    NegativeY,\r\n    /**\r\n     * @en The positive Z face of the cube map.\r\n     * @zh 立方体贴图的正Z面。\r\n     */\r\n    PositiveZ,\r\n    /**\r\n     * @en The negative Z face of the cube map.\r\n     * @zh 立方体贴图的负Z面。\r\n     */\r\n    NegativeZ\r\n}\r\n\r\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(4);\r\n\r\n/**\r\n * @en TextureCube class used to generate cube texture.\r\n * @zh TextureCube 类用于生成立方体纹理。\r\n */\r\nexport class TextureCube extends BaseTexture {\r\n\r\n    private static _blackTexture: TextureCube;\r\n    private static _grayTexture: TextureCube;\r\n    private static _whiteTexture: TextureCube;\r\n\r\n    private static _errorTexture: TextureCube;\r\n\r\n    /**\r\n     * @en The black solid color texture.\r\n     * @zh 黑色纯色纹理。\r\n     */\r\n    static get blackTexture() {\r\n        return TextureCube._blackTexture;\r\n    }\r\n\r\n    /**\r\n     * @en The gray solid color texture.\r\n     * @zh 灰色纯色纹理。\r\n     */\r\n    static get grayTexture() {\r\n        return TextureCube._grayTexture;\r\n    }\r\n\r\n    /**\r\n     * @en The white solid color texture.\r\n     * @zh 白色纯色纹理。\r\n     */\r\n    static get whiteTexture() {\r\n        return TextureCube._whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * @en The error texture used for cube textures.\r\n     * @zh 立方体贴图的错误纹理。\r\n     */\r\n    static get errorTexture() {\r\n        return TextureCube._errorTexture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var pixels = DEFAULT_PIXELS;\r\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0; pixels[3] = 255;\r\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128; pixels[3] = 255;\r\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255; pixels[3] = 255;\r\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        writeTexture.lock = true;\r\n        TextureCube._grayTexture = grayTexture;\r\n        TextureCube._blackTexture = blackTexture;\r\n        TextureCube._whiteTexture = writeTexture;\r\n        TextureCube._errorTexture = writeTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Creates an instance of TextureCube.\r\n     * @param size The size of each face of the cube texture.\r\n     * @param format The texture format.\r\n     * @param mipmap Indicates whether to generate mipmaps for the cube texture.\r\n     * @param sRGB Indicates whether the texture uses sRGB color space.\r\n     * @param premultiplyAlpha Indicates whether the texture data is premultiplied by the alpha channel.\r\n     * @zh 创建 TextureCube 类的实例。\r\n     * @param size 立方体纹理各个面大小。\r\n     * @param format 纹理格式。\r\n     * @param mipmap 是否为立方体纹理生成mipmap。\r\n     * @param sRGB 是否使用sRGB色彩空间。\r\n     * @param premultiplyAlpha 是否预乘Alpha。\r\n     */\r\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(size, size, format);\r\n\r\n        this._dimension = TextureDimension.Cube;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the image data for each face of the cube texture.\r\n     * @param source An array of image elements, one for each face of the cube.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha channel of the image data.\r\n     * @param invertY Whether to invert the Y-axis of the image data.\r\n     * @zh 为立方体贴图的每个面设置图像数据。\r\n     * @param source 图像元素数组，每个面一个。\r\n     * @param premultiplyAlpha 是否预乘Alpha通道。\r\n     * @param invertY 是否翻转Y轴。\r\n     */\r\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        // todo source数组 改为 CubeInfo 结构体?\r\n        let error = false;\r\n        let k = source.findIndex(s => s != null);\r\n        if (k != -1) {\r\n            let img = source[k];\r\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\r\n                error = true;\r\n        }\r\n        else\r\n            error = true;\r\n\r\n        let texture = this._texture;\r\n        if (!error)\r\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\r\n        else {\r\n            let pixels = DEFAULT_PIXELS;\r\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Sets the pixel data for each face of the cube texture.\r\n     * @param source An array of pixel data, one for each face of the cube.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha.\r\n     * @param invertY Whether to invert the Y-axis of the pixel data.\r\n     * @zh 为立方体贴图的每个面设置像素数据。\r\n     * @param source 像素数据数组，每个面一个。\r\n     * @param premultiplyAlpha 是否预乘Alpha。\r\n     * @param invertY 是否翻转Y轴。\r\n     */\r\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Updates sub-pixel data for the cube texture faces.\r\n     * @param source An array of pixel data for each face of the cube texture.\r\n     * @param xOffset The x-offset for the sub-pixel data.\r\n     * @param yOffset The y-offset for the sub-pixel data.\r\n     * @param width The width of the sub-region to update.\r\n     * @param height The height of the sub-region to update.\r\n     * @param mipmapLevel The mipmap level to update.\r\n     * @param generateMipmap Whether to generate mipmaps after the update.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha.\r\n     * @param invertY Whether to invert the Y-axis of the pixel data.\r\n     * @zh 更新立方体贴图的子像素数据。\r\n     * @param source 像素数据数组，每个面一个。\r\n     * @param xOffset 子像素数据x偏移。\r\n     * @param yOffset 子像素数据y偏移。\r\n     * @param width 子像素数据宽度。\r\n     * @param height 子像素数据高度。\r\n     * @param mipmapLevel 子像素数据mipmap等级。\r\n     * @param generateMipmap 是否生成mipmap。\r\n     * @param premultiplyAlpha 是否预乘Alpha。\r\n     * @param invertY 是否翻转Y轴。 \r\n     */\r\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the DDS data for the cube texture.\r\n     * @param ddsInfo The DDS texture information containing the data to be set.\r\n     * @zh 设置立方体贴图的 DDS 数据。\r\n     * @param ddsInfo DDS纹理信息，包含要设置的数据。\r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the KTX data for the cube texture.\r\n     * @param ktxInfo The KTX texture information containing the data to be set.\r\n     * @zh 设置立方体贴图的 KTX 数据。\r\n     * @param ktxInfo KTX纹理信息，包含要设置的数据。\r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * @en The default texture for cube textures.\r\n     * @zh 立方体贴图的默认纹理。\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return TextureCube.grayTexture;\r\n    }\r\n}","import { Shader3D, IShaderObjStructor, IShaderpassStructor } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ParseJSON } from \"../utils/ParseJSON\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureCube } from \"../resource/TextureCube\";\r\nimport { ShaderDataType } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\n\r\n\r\nconst CGBlock: string[] = [\"GLSL Start\", \"GLSL End\"];\r\nconst split: string[] = [\"#defineGLSL\", \"#endGLSL\"];\r\nconst shaderBlock: string[] = [\"Shader3D Start\", \"Shader3D End\"];\r\nconst shaderDataOBJ: Record<string, ShaderDataType> = {\r\n    \"Color\": ShaderDataType.Color,\r\n    \"Int\": ShaderDataType.Int,\r\n    \"Bool\": ShaderDataType.Bool,\r\n    \"Float\": ShaderDataType.Float,\r\n    \"Vector2\": ShaderDataType.Vector2,\r\n    \"Vector3\": ShaderDataType.Vector3,\r\n    \"Vector4\": ShaderDataType.Vector4,\r\n    \"Matrix4x4\": ShaderDataType.Matrix4x4,\r\n    \"Matrix3x3\": ShaderDataType.Matrix3x3,\r\n    \"Texture2D\": ShaderDataType.Texture2D,\r\n    \"TextureCube\": ShaderDataType.TextureCube,\r\n    \"Texture2DArray\": ShaderDataType.Texture2DArray,\r\n    \"Texture3D\": ShaderDataType.Texture3D,\r\n};\r\n\r\n//TODO 格式改变\r\nexport class ShaderParser {\r\n\r\n    static parse(data: string, basePath?: string): Shader3D {\r\n        let obj = ShaderParser.getShaderBlock(data);\r\n        let cgmap = ShaderParser.getCGBlock(data);\r\n        ShaderParser.bindCG(obj, cgmap);\r\n        let shader = Shader3D.parse(obj, basePath);\r\n        return shader;\r\n    }\r\n\r\n    static compileToTree(sliceFlag: string[], data: string, sliceIndex: number): string[] {\r\n        if (sliceIndex == sliceFlag.length)\r\n            return [data];\r\n        let slicedata = sliceFlag[sliceIndex];\r\n        let splitmap = data.split(slicedata);\r\n        if (splitmap.length == 1)\r\n            return splitmap;\r\n        let map: string[] = [];\r\n        for (let i = 0, n = splitmap.length; i < n; i++) {\r\n            map = map.concat(ShaderParser.compileToTree(sliceFlag, splitmap[i], sliceIndex + 1));\r\n            (i != n - 1) && map.push(slicedata);\r\n        }\r\n        return map;\r\n    }\r\n\r\n    static getMapKey(value: string) {\r\n        let index = value.indexOf(\"\\n\");\r\n        value = value.slice(0, index).replace(\"\\r\", \"\");\r\n        value = value.slice(0, index).replace(\" \", \"\");\r\n        value = value.trim();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * get Shader Data\r\n     */\r\n    static getShaderBlock(source: string) {\r\n        let shaderObj: IShaderObjStructor = null;\r\n        try {\r\n            let i1 = source.indexOf(shaderBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(shaderBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let shaderData = source.substring(i1 + shaderBlock[0].length, i2);\r\n            shaderObj = ParseJSON.parse(shaderData);//TODO new FIle parse(1、去掉繁琐的json格式报错，2、可以有注释)\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return shaderObj;\r\n    }\r\n\r\n    /**\r\n     * get CG data for map\r\n     * @param source \r\n     * @returns \r\n     */\r\n    static getCGBlock(source: string): { [key: string]: string } {\r\n        let cgmap: { [key: string]: string } = {};\r\n        try {\r\n            let i1 = source.indexOf(CGBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(CGBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let cgdata = source.substring(i1, i2);\r\n            let map = ShaderParser.compileToTree(split, cgdata, 0);\r\n            for (let i = 0, n = map.length; i < n; i++) {\r\n                let value = map[i];\r\n                if (value == split[0]) {\r\n                    i += 1\r\n                    let datavalue = map[i];\r\n                    let key = ShaderParser.getMapKey(datavalue);\r\n                    cgmap[key] = datavalue.slice(datavalue.indexOf(\"\\n\"), datavalue.length - 1);\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return cgmap;\r\n    }\r\n\r\n    static bindCG(shaderObj: IShaderObjStructor, cgmap: { [key: string]: string }) {\r\n        //pass trans\r\n        let passArray = shaderObj.shaderPass as Array<IShaderpassStructor>;\r\n        if (passArray) {\r\n            passArray.forEach(element => {\r\n                if (element.VS) {\r\n                    element.VS = cgmap[element.VS];\r\n                }\r\n                if (element.FS) {\r\n                    element.FS = cgmap[element.FS];\r\n                }\r\n            });\r\n        }\r\n        //attribute map trans\r\n        let attributemap = shaderObj.attributeMap;\r\n        if (attributemap) {\r\n            let indexofAttribute = 0;\r\n            for (let i in attributemap) {\r\n                //TODO  这里的格式要重新理 \"name\":type or \"name\":[type,custom Attribute Location]\r\n                if (attributemap[i] instanceof Array) {\r\n                    let dataArray = attributemap[i];\r\n                    let type = ShaderParser.getShaderDataType(dataArray[0]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${dataArray[0]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [dataArray[1], type];\r\n                } else {\r\n                    let type = ShaderParser.getShaderDataType(attributemap[i]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${attributemap[i]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [indexofAttribute, type];\r\n                    indexofAttribute++;\r\n                }\r\n\r\n            }\r\n        }\r\n        //uniform map trans\r\n        let uniformMap = shaderObj.uniformMap;\r\n        if (uniformMap) {\r\n            let defaultmap: any = {};\r\n            shaderObj.defaultValue = defaultmap;\r\n\r\n            let newUniformMap: any = {};\r\n            shaderObj.uniformMap = newUniformMap;\r\n\r\n            for (let k in uniformMap) {\r\n                let entry = uniformMap[k];\r\n                if (entry.serializable === false)\r\n                    continue;\r\n\r\n                let dataType = ShaderParser.getShaderDataType(entry.type);\r\n                if (dataType == null) {\r\n                    console.warn(`${shaderObj.name}: unkown uniform type '${entry.type}'`);\r\n                    continue;\r\n                }\r\n\r\n                if (entry.default != null)\r\n                    defaultmap[k] = ShaderParser.getDefaultData(dataType, entry.default);\r\n\r\n                if (entry.block) {\r\n                    let block: Record<string, ShaderDataType> = newUniformMap[entry.block];\r\n                    if (!block)\r\n                        newUniformMap[entry.block] = block = {};\r\n                    block[k] = dataType;\r\n                }\r\n                else\r\n                    newUniformMap[k] = dataType;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * trans string to ShaderDataType\r\n     * @param value \r\n     * @returns \r\n     */\r\n    static getShaderDataType(value: string): ShaderDataType {\r\n        return shaderDataOBJ[value];\r\n    }\r\n\r\n    /**\r\n     * set ShaderData Value\r\n     * @param type \r\n     * @param data \r\n     * @returns \r\n     */\r\n    static getDefaultData(type: ShaderDataType, data: any) {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n            case ShaderDataType.Float:\r\n            case ShaderDataType.Bool:\r\n                return data;\r\n            case ShaderDataType.Vector2:\r\n                return new Vector2(data[0], data[1]);\r\n            case ShaderDataType.Vector3:\r\n                return new Vector3(data[0], data[1], data[2]);\r\n            case ShaderDataType.Vector4:\r\n                return new Vector4(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Color:\r\n                return new Color(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Matrix4x4:\r\n                let mat = new Matrix4x4();\r\n                mat.cloneByArray(data);\r\n                return mat;\r\n            case ShaderDataType.Matrix3x3:\r\n                let mat3 = new Matrix3x3();\r\n                mat3.cloneByArray(data);\r\n                return mat3;\r\n            case ShaderDataType.Texture2D:\r\n                let tex = null;\r\n                if (data == \"white\")\r\n                    tex = Texture2D.whiteTexture;\r\n                else if (data == \"black\")\r\n                    tex = Texture2D.blackTexture;\r\n                else if (data == \"gray\")\r\n                    tex = Texture2D.grayTexture;\r\n                else if (data == \"normal\")\r\n                    tex = Texture2D.normalTexture;\r\n                return tex;\r\n            case ShaderDataType.TextureCube:\r\n                let texcube = TextureCube.grayTexture;\r\n                if (data == \"white\")\r\n                    texcube = TextureCube.whiteTexture;\r\n                else if (data == \"black\")\r\n                    texcube = TextureCube.blackTexture;\r\n                else if (data == \"gray\")\r\n                    texcube = TextureCube.grayTexture;\r\n                return texcube;\r\n        }\r\n    }\r\n}","\r\nimport { IShaderpassStructor, Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader } from \"../RenderEngine/RenderShader/SubShader\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { ShaderCompile } from \"../webgl/utils/ShaderCompile\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ShaderParser } from \"./ShaderParser\";\r\n\r\nclass ShaderLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        if (task.ext === \"bps\")\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"shader\");\r\n\r\n        return task.loader.fetch(url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let obj = ShaderParser.getShaderBlock(data);\r\n            let cgmap = ShaderParser.getCGBlock(data);\r\n            ShaderParser.bindCG(obj, cgmap);\r\n\r\n            if (!obj.name || !obj.uniformMap)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let passArray: IShaderpassStructor[] = obj.shaderPass;\r\n            return Promise.all(passArray.map(pass => ShaderCompile.compileAsync(pass.VS, pass.FS, basePath))).then(compiledObjs => {\r\n                if (compiledObjs.findIndex(obj => obj == null) != -1) {\r\n                    Loader.warn(\"some pass null \" + task.url);\r\n                    return null;\r\n                }\r\n\r\n                let shader = Shader3D.add(obj.name, obj.enableInstancing, obj.supportReflectionProbe);\r\n                shader._surportVolumetricGI = obj.surportVolumetricGI;\r\n                let subshader = new SubShader(obj.attributeMap ? obj.attributeMap : SubShader.DefaultAttributeMap, obj.uniformMap, obj.defaultValue);\r\n                shader.addSubShader(subshader);\r\n\r\n                for (let i in passArray) {\r\n                    let pass = subshader._addShaderPass(compiledObjs[i], passArray[i].pipeline);\r\n                    pass.statefirst = passArray[i].statefirst ?? false;\r\n                    ShaderCompile.getRenderState(passArray[i].renderState, pass.renderState);\r\n                }\r\n                return shader;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"shader\", \"bps\"], ShaderLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @en Used for loading audio resources using Web Audio API\r\n * @zh 用于使用 Web Audio API 加载音频资源\r\n */\r\nclass WebAudioLoader implements IResourceLoader {\r\n    /**\r\n     * @en Load audio resource\r\n     * @param task The load task containing information about the resource to be loaded\r\n     * @returns A promise that resolves with the decoded audio data\r\n     * @zh 加载音频资源\r\n     * @param task 包含要加载的资源信息的加载任务\r\n     * @returns 一个 Promise，解析为解码后的音频数据\r\n     */\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return WebAudioSound.ctx.decodeAudioData(data);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\r\nimport { Component } from \"./components/Component\";\r\nimport { Animation } from \"./display/Animation\";\r\nimport { AnimationBase } from \"./display/AnimationBase\";\r\nimport { BitmapFont } from \"./display/BitmapFont\";\r\nimport { EffectAnimation } from \"./display/EffectAnimation\";\r\nimport { FrameAnimation } from \"./display/FrameAnimation\";\r\nimport { Input } from \"./display/Input\";\r\nimport { Node } from \"./display/Node\";\r\nimport { Scene } from \"./display/Scene\";\r\nimport { Sprite } from \"./display/Sprite\";\r\nimport { Stage } from \"./display/Stage\";\r\nimport { Text } from \"./display/Text\";\r\nimport { BlurFilter } from \"./filters/BlurFilter\";\r\nimport { ColorFilter } from \"./filters/ColorFilter\";\r\nimport { GlowFilter } from \"./filters/GlowFilter\";\r\nimport { Point } from \"./maths/Point\";\r\nimport { Rectangle } from \"./maths/Rectangle\";\r\nimport { SoundNode } from \"./media/SoundNode\";\r\nimport { VideoNode } from \"./media/VideoNode\";\r\nimport { Texture } from \"./resource/Texture\";\r\nimport { Texture2D } from \"./resource/Texture2D\";\r\nimport { Animator2D } from \"./components/Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\r\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\r\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\r\nimport { Animation2DParm } from \"./components/Animation2DParm\";\r\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\r\nimport { Prefab } from \"./resource/HierarchyResource\";\r\nimport { Widget } from \"./components/Widget\";\r\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\r\nimport { Vector2 } from \"./maths/Vector2\";\r\nimport { Vector3 } from \"./maths/Vector3\";\r\nimport { Vector4 } from \"./maths/Vector4\";\r\nimport { Quaternion } from \"./maths/Quaternion\";\r\nimport { Color } from \"./maths/Color\";\r\nimport { Script } from \"./components/Script\";\r\nimport { Matrix } from \"./maths/Matrix\";\r\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\r\n\r\nimport \"./loaders/TextResourceLoader\";\r\nimport \"./loaders/AtlasLoader\";\r\nimport \"./loaders/HierarchyLoader\";\r\nimport \"./loaders/TextureLoader\";\r\nimport \"./loaders/AnimationClip2DLoader\";\r\nimport \"./loaders/AnimationController2DLoader\";\r\nimport \"./loaders/NullLoader\";\r\nimport \"./loaders/BitmapFontLoader\";\r\nimport \"./loaders/TTFFontLoader\";\r\nimport \"./loaders/MaterialLoader\";\r\nimport \"./loaders/ShaderLoader\";\r\nimport \"./media/webaudio/WebAudioLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Record\", Object);\r\nc(\"Node\", Node);\r\nc(\"Sprite\", Sprite);\r\nc(\"Widget\", Widget);\r\nc(\"Text\", Text);\r\nc(\"Input\", Input);\r\nc(\"AnimationBase\", AnimationBase);\r\nc(\"Animation\", Animation);\r\nc(\"FrameAnimation\", FrameAnimation);\r\nc(\"EffectAnimation\", EffectAnimation);\r\nc(\"SoundNode\", SoundNode);\r\nc(\"VideoNode\", VideoNode);\r\n\r\nc(\"Scene\", Scene);\r\nc(\"Stage\", Stage);\r\nc(\"Component\", Component);\r\nc(\"Script\", Script);\r\nc(\"BitmapFont\", BitmapFont);\r\nc(\"BlurFilter\", BlurFilter);\r\nc(\"ColorFilter\", ColorFilter);\r\nc(\"GlowFilter\", GlowFilter);\r\nc(\"Point\", Point);\r\nc(\"Rectangle\", Rectangle);\r\nc(\"Texture\", Texture);\r\nc(\"Texture2D\", Texture2D);\r\n\r\nc(\"Prefab\", Prefab);\r\n\r\nc(\"Animator2D\", Animator2D);\r\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\r\nc(\"AnimatorState2D\", AnimatorState2D);\r\nc(\"AnimationClip2D\", AnimationClip2D);\r\nc(\"AnimatorController2D\", AnimatorController2D);\r\nc(\"Animation2DParm\", Animation2DParm);\r\nc(\"Animation2DCondition\", Animation2DCondition);\r\n\r\nc(\"Vector2\", Vector2);\r\nc(\"Vector3\", Vector3);\r\nc(\"Vector4\", Vector4);\r\nc(\"Quaternion\", Quaternion);\r\nc(\"Color\", Color);\r\nc(\"Matrix\", Matrix);\r\nc(\"Matrix3x3\", Matrix3x3);\r\nc(\"Matrix4x4\", Matrix4x4);\r\n","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"./RenderEnum/BlendType\";\r\n\r\nexport class BlendState {\r\n    static _blend_All_pool: any = {};\r\n    static _blend_seperate_pool: any = {};\r\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\r\n\r\n    }\r\n    /** Whether to enable blend. */\r\n    blendType: BlendType = 0;\r\n    colorBlendComponent: BlendComponent;\r\n    alphaBlendComponent: BlendComponent;\r\n    constructor(blendType: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class BlendComponent {\r\n    static _pool: any = {};\r\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\r\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\r\n    }\r\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\r\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\r\n        if (!BlendComponent._pool[index])\r\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\r\n        return BlendComponent._pool[index];\r\n    }\r\n    _blendOperation: BlendEquationSeparate;\r\n    _blendOperationGLData: number;\r\n    _sourceBlendFactor: BlendFactor;\r\n    _sourceBlendFactorGLData: number;\r\n    _destinationFactor: BlendFactor;\r\n    _destinationFactorGLData: number;\r\n    _hashIndex = 0;\r\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\r\n        this._hashIndex = hashindex;\r\n        this._blendOperationGLData = blendOperationGLData;\r\n        this._sourceBlendFactor = sourceBlendFactor;\r\n        this._destinationFactor = destinationFactor;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nexport class Buffer {\r\n\r\n\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\r\n\t_bufferType: number;\r\n\t_bufferUsage: number;\r\n\r\n\t_byteLength: number = 0; \r\n\r\n\tget bufferUsage(): number {\r\n\t\treturn this._bufferUsage;\r\n\t}\r\n\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\t//this._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\r\n\t\tthis._bufferType = targetType;\r\n\t\tthis._bufferUsage = bufferUsageType;\r\n\t}\r\n\r\n\t// /**\r\n\t//  * @private\r\n\t//  */\r\n\t// bind(): boolean {\r\n\t// \t//return this._glBuffer.bindBuffer();\r\n\t// }\r\n\r\n\t// unbind():void{\r\n\t// \t//return this._glBuffer.unbindBuffer();\r\n\t// }\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\t// if (this._glBuffer) {\r\n\t\t// \tthis._glBuffer.destroy();\r\n\t\t// \tthis._glBuffer = null;\r\n\t\t// }\r\n\t}\r\n}\r\n\r\n","import { VertexBuffer } from \"./VertexBuffer\";\r\n//vertex Layout cache pool\r\nexport interface VAElement { format: string, stride: number, shaderLocation: number };\r\nexport class VertexAttributeLayout {\r\n    static IPoint: number = 0;\r\n    static _pool: { [key: number]: VertexAttributeLayout } = {};\r\n\r\n    static getVertexLayoutByPool(vertexs: VertexBuffer[]) {\r\n        let pool =VertexAttributeLayout._pool;\r\n        for(var i in pool){\r\n            let layout = pool[i];\r\n            if(layout.deepthEqaul(vertexs)){\r\n                return layout\r\n            }\r\n        }\r\n        return new VertexAttributeLayout(vertexs);\r\n    }\r\n\r\n    /**\r\n     * vertex attribute byte size Array\r\n     */\r\n    attributeByteSize:Array<number>;\r\n\r\n    /**\r\n     * vertex Layout des\r\n     */\r\n    VAElements: Array<VAElement[]>;\r\n\r\n    instanceMode:Array<boolean>;\r\n    /**\r\n     * pool index\r\n     */\r\n    id: number;\r\n\r\n    \r\n\r\n    /**\r\n     * instance one VertexAttributeLayout\r\n     * @param vertexs \r\n     */\r\n    constructor(vertexs: VertexBuffer[]) {\r\n        this.VAElements = new Array();\r\n        this.attributeByteSize = new Array();\r\n        this.instanceMode = new Array();\r\n        //this.VAElements.length = vertexs.length;\r\n        for (let i = 0; i < vertexs.length; i++) {\r\n            let vaelements: VAElement[] = [];\r\n            let oneAttributeSize = vertexs[i].vertexDeclaration.vertexStride;\r\n            let vdec = vertexs[i].vertexDeclaration._VAElements;\r\n\r\n            for (let j = 0; j < vdec.length; j++) {\r\n                vaelements.push({ format: vdec[j].format, stride: vdec[j].stride, shaderLocation: vdec[j].shaderLocation });\r\n            }\r\n            this.attributeByteSize.push(oneAttributeSize);\r\n            this.VAElements.push(vaelements);\r\n            this.instanceMode.push(vertexs[i].instanceBuffer);\r\n        }\r\n        this.id = VertexAttributeLayout.IPoint;\r\n        VertexAttributeLayout._pool[VertexAttributeLayout.IPoint++] = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param vertexs \r\n     * @returns \r\n     */\r\n    deepthEqaul(vertexs: VertexBuffer[]): boolean {\r\n        if (vertexs.length != this.VAElements.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < vertexs.length; i++) {\r\n            let vaelemets = vertexs[i]._vertexDeclaration._VAElements;\r\n            let thisVaeEs = this.VAElements[i];\r\n            if (vaelemets.length != thisVaeEs.length) {\r\n                return false;\r\n            } else {\r\n                for (var ii = 0, nn = vaelemets.length; ii < nn; ii++) {\r\n                    let v0 = vaelemets[ii];\r\n                    let v1 = thisVaeEs[ii];\r\n                    if (v0.format != v1.format || v0.stride != v1.stride || v0.shaderLocation != v1.shaderLocation)\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Component } from \"../components/Component\";\r\n\r\n/**\r\n * @en Effect plugin base class, managed based on the object pool.\r\n * @zh 效果插件基类，基于对象池管理。\r\n */\r\nexport class EffectBase extends Component {\r\n    /**\r\n     * @en The duration of the animation in milliseconds.\r\n     * @zh 动画持续时间，单位为毫秒。\r\n     */\r\n    duration: number = 1000;\r\n    /**\r\n     * @en The delay time of the animation in milliseconds.\r\n     * @zh 动画延迟时间，单位为毫秒。\r\n     */\r\n    delay: number = 0;\r\n    /**\r\n     * @en The repeat count of the animation. Default is to play once.\r\n     * @zh 动画的重复次数。默认为播放一次。\r\n     */\r\n    repeat: number = 0;\r\n    /**\r\n     * @en The type of easing. If empty, it defaults to uniform speed playback.\r\n     * @zh 缓动类型，如果为空，则默认为匀速播放。\r\n     */\r\n    ease: string;\r\n    /**\r\n     * @en The event that triggers the effect. If empty, it triggers upon creation.\r\n     * @zh 触发事件，如果为空，则创建时触发。\r\n     */\r\n    eventName: string;\r\n    /**\r\n     * @en The target object of the effect. If empty, it is the node where the script is located.\r\n     * @zh 效用作用的目标对象，如果为空，则是脚本所在的节点本身。\r\n     */\r\n    target: Sprite;\r\n    /**\r\n     * @en Whether to automatically remove the node when the effect is complete.\r\n     * @zh 效果结束后，是否自动移除节点。\r\n     */\r\n    autoDestroyAtComplete: boolean = true;\r\n\r\n    protected _comlete: Handler;\r\n    protected _tween: Tween;\r\n\r\n    protected _onAwake(): void {\r\n        this.target = this.target || (<Sprite>this.owner);\r\n        if (this.autoDestroyAtComplete) \r\n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\r\n        if (this.eventName) \r\n            this.owner.on(this.eventName, this, this._exeTween);\r\n        else \r\n            this._exeTween();\r\n    }\r\n\r\n    protected _exeTween(): void {\r\n        this._tween = this._doTween();\r\n        this._tween.repeat = this.repeat;\r\n    }\r\n\r\n    protected _doTween(): Tween {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en Reset the effect properties to their default values.\r\n     * @zh 重置效果属性到默认值。\r\n     */\r\n    onReset(): void {\r\n        this.duration = 1000;\r\n        this.delay = 0;\r\n        this.repeat = 0;\r\n        this.ease = null;\r\n        this.target = null;\r\n        if (this.eventName) {\r\n            this.owner.off(this.eventName, this, this._exeTween);\r\n            this.eventName = null;\r\n        }\r\n        if (this._comlete) {\r\n            this._comlete.recover();\r\n            this._comlete = null;\r\n        }\r\n        if (this._tween) {\r\n            this._tween.clear();\r\n            this._tween = null;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * @en The `Keyboard` class contains constants representing the most commonly used keys for controlling a game.\r\n * @zh `Keyboard` 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\r\n */\r\nexport class Keyboard {\r\n    /** \r\n     * @en The constant associated with the key code value (48) for the 0 key.\r\n     * @zh 与 0 的键控代码值(48) 关联的常数。\r\n     */\r\n    static NUMBER_0: number = 48;\r\n    /** \r\n     * @en The constant associated with the key code value (49) for the 1 key.\r\n     * @zh 与 1 的键控代码值 (49) 关联的常数。\r\n     */\r\n    static NUMBER_1: number = 49;\r\n    /** \r\n     * @en The constant associated with the key code value (50) for the 2 key.\r\n     * @zh 与 2 的键控代码值 (50) 关联的常数。\r\n     */\r\n    static NUMBER_2: number = 50;\r\n    /** \r\n     * @en The constant associated with the key code value (51) for the 3 key.\r\n     * @zh 与 3 的键控代码值 (51) 关联的常数。\r\n     */\r\n    static NUMBER_3: number = 51;\r\n    /** \r\n     * @en The constant associated with the key code value (52) for the 4 key.\r\n     * @zh 与 4 的键控代码值 (52) 关联的常数。\r\n     */\r\n    static NUMBER_4: number = 52;\r\n    /** \r\n     * @en The constant associated with the key code value (53) for the 5 key.\r\n     * @zh 与 5 的键控代码值 (53) 关联的常数。\r\n     */\r\n    static NUMBER_5: number = 53;\r\n    /** \r\n     * @en The constant associated with the key code value (54) for the 6 key.\r\n     * @zh 与 6 的键控代码值 (54) 关联的常数。\r\n     */\r\n    static NUMBER_6: number = 54;\r\n    /** \r\n     * @en The constant associated with the key code value (55) for the 7 key.\r\n     * @zh 与 7 的键控代码值 (55) 关联的常数。\r\n     */\r\n    static NUMBER_7: number = 55;\r\n    /** \r\n     * @en The constant associated with the key code value (56) for the 8 key.\r\n     * @zh 与 8 的键控代码值 (56) 关联的常数。\r\n     */\r\n    static NUMBER_8: number = 56;\r\n    /** \r\n     * @en The constant associated with the key code value (57) for the 9 key.\r\n     * @zh 与 9 的键控代码值 (57) 关联的常数。\r\n     */\r\n    static NUMBER_9: number = 57;\r\n\r\n    /** \r\n     * @en The constant associated with the key code value (65) for the A key.\r\n     * @zh 与 A 键的键控代码值 (65) 关联的常数。\r\n     */\r\n    static A: number = 65;\r\n    /** \r\n     * @en The constant associated with the key code value (66) for the B key.\r\n     * @zh 与 B 键的键控代码值 (66) 关联的常数。\r\n     */\r\n    static B: number = 66;\r\n    /** \r\n     * @en The constant associated with the key code value (67) for the C key.\r\n     * @zh 与 C 键的键控代码值 (67) 关联的常数。\r\n     */\r\n    static C: number = 67;\r\n    /** \r\n     * @en The constant associated with the key code value (68) for the D key.\r\n     * @zh 与 D 键的键控代码值 (68) 关联的常数。\r\n     */\r\n    static D: number = 68;\r\n    /** \r\n     * @en The constant associated with the key code value (69) for the E key.\r\n     * @zh 与 E 键的键控代码值 (69) 关联的常数。\r\n     */\r\n    static E: number = 69;\r\n    /** \r\n     * @en The constant associated with the key code value (70) for the F key.\r\n     * @zh 与 F 键的键控代码值 (70) 关联的常数。\r\n     */\r\n    static F: number = 70;\r\n    /** \r\n     * @en The constant associated with the key code value (71) for the G key.\r\n     * @zh 与 G 键的键控代码值 (71) 关联的常数。\r\n     */\r\n    static G: number = 71;\r\n    /** \r\n     * @en The constant associated with the key code value (72) for the H key.\r\n     * @zh 与 H 键的键控代码值 (72) 关联的常数。\r\n     */\r\n    static H: number = 72;\r\n    /** \r\n     * @en The constant associated with the key code value (73) for the I key.\r\n     * @zh 与 I 键的键控代码值 (73) 关联的常数。\r\n     */\r\n    static I: number = 73;\r\n    /** \r\n     * @en The constant associated with the key code value (74) for the J key.\r\n     * @zh 与 J 键的键控代码值 (74) 关联的常数。\r\n     */\r\n    static J: number = 74;\r\n    /** \r\n     * @en The constant associated with the key code value (75) for the K key.\r\n     * @zh 与 K 键的键控代码值 (75) 关联的常数。\r\n     */\r\n    static K: number = 75;\r\n    /** \r\n     * @en The constant associated with the key code value (76) for the L key.\r\n     * @zh 与 L 键的键控代码值 (76) 关联的常数。\r\n     */\r\n    static L: number = 76;\r\n    /** \r\n     * @en The constant associated with the key code value (77) for the M key.\r\n     * @zh 与 M 键的键控代码值 (77) 关联的常数。\r\n     */\r\n    static M: number = 77;\r\n    /** \r\n     * @en The constant associated with the key code value (78) for the N key.\r\n     * @zh 与 N 键的键控代码值 (78) 关联的常数。\r\n     */\r\n    static N: number = 78;\r\n    /** \r\n     * @en The constant associated with the key code value (79) for the O key.\r\n     * @zh 与 O 键的键控代码值 (79) 关联的常数。\r\n     */\r\n    static O: number = 79;\r\n    /** \r\n     * @en The constant associated with the key code value (80) for the P key.\r\n     * @zh 与 P 键的键控代码值 (80) 关联的常数。\r\n     */\r\n    static P: number = 80;\r\n    /** \r\n     * @en The constant associated with the key code value (81) for the Q key.\r\n     * @zh 与 Q 键的键控代码值 (81) 关联的常数。\r\n     */\r\n    static Q: number = 81;\r\n    /** \r\n     * @en The constant associated with the key code value (82) for the R key.\r\n     * @zh 与 R 键的键控代码值 (82) 关联的常数。\r\n     */\r\n    static R: number = 82;\r\n    /** \r\n     * @en The constant associated with the key code value (83) for the S key.\r\n     * @zh 与 S 键的键控代码值 (83) 关联的常数。\r\n     */\r\n    static S: number = 83;\r\n    /** \r\n     * @en The constant associated with the key code value (84) for the T key.\r\n     * @zh 与 T 键的键控代码值 (84) 关联的常数。\r\n     */\r\n    static T: number = 84;\r\n    /** \r\n     * @en The constant associated with the key code value (85) for the U key.\r\n     * @zh 与 U 键的键控代码值 (85) 关联的常数。\r\n     */\r\n    static U: number = 85;\r\n    /** \r\n     * @en The constant associated with the key code value (86) for the V key.\r\n     * @zh 与 V 键的键控代码值 (86) 关联的常数。\r\n     */\r\n    static V: number = 86;\r\n    /** \r\n     * @en The constant associated with the key code value (87) for the W key.\r\n     * @zh 与 W 键的键控代码值 (87) 关联的常数。\r\n     */\r\n    static W: number = 87;\r\n    /** \r\n     * @en The constant associated with the key code value (88) for the X key.\r\n     * @zh 与 X 键的键控代码值 (88) 关联的常数。\r\n     */\r\n    static X: number = 88;\r\n    /** \r\n     * @en The constant associated with the key code value (89) for the Y key.\r\n     * @zh 与 Y 键的键控代码值 (89) 关联的常数。\r\n     */\r\n    static Y: number = 89;\r\n    /** \r\n     * @en The constant associated with the key code value (90) for the Z key.\r\n     * @zh 与 Z 键的键控代码值 (90) 关联的常数。\r\n     */\r\n    static Z: number = 90;\r\n\r\n    /** \r\n     * @en The constant associated with the key code value (112) for the F1 key.\r\n     * @zh 与 F1 的键控代码值 (112) 关联的常数。\r\n     */\r\n    static F1: number = 112;\r\n    /** \r\n     * @en The constant associated with the key code value (113) for the F2 key.\r\n     * @zh 与 F2 的键控代码值 (113) 关联的常数。\r\n     */\r\n    static F2: number = 113;\r\n    /** \r\n     * @en The constant associated with the key code value (114) for the F3 key.\r\n     * @zh 与 F3 的键控代码值 (114) 关联的常数。\r\n     */\r\n    static F3: number = 114;\r\n    /** \r\n     * @en The constant associated with the key code value (115) for the F4 key.\r\n     * @zh 与 F4 的键控代码值 (115) 关联的常数。\r\n     */\r\n    static F4: number = 115;\r\n    /** \r\n     * @en The constant associated with the key code value (116) for the F5 key.\r\n     * @zh 与 F5 的键控代码值 (116) 关联的常数。\r\n     */\r\n    static F5: number = 116;\r\n    /** \r\n     * @en The constant associated with the key code value (117) for the F6 key.\r\n     * @zh 与 F6 的键控代码值 (117) 关联的常数。\r\n     */\r\n    static F6: number = 117;\r\n    /** \r\n     * @en The constant associated with the key code value (118) for the F7 key.\r\n     * @zh 与 F7 的键控代码值 (118) 关联的常数。\r\n     */\r\n    static F7: number = 118;\r\n    /** \r\n     * @en The constant associated with the key code value (119) for the F8 key.\r\n     * @zh 与 F8 的键控代码值 (119) 关联的常数。\r\n     */\r\n    static F8: number = 119;\r\n    /** \r\n     * @en The constant associated with the key code value (120) for the F9 key.\r\n     * @zh 与 F9 的键控代码值 (120) 关联的常数。\r\n     */\r\n    static F9: number = 120;\r\n    /** \r\n     * @en The constant associated with the key code value (121) for the F10 key.\r\n     * @zh 与 F10 的键控代码值 (121) 关联的常数。\r\n     */\r\n    static F10: number = 121;\r\n    /** \r\n     * @en The constant associated with the key code value (122) for the F11 key.\r\n     * @zh 与 F11 的键控代码值 (122) 关联的常数。\r\n     */\r\n    static F11: number = 122;\r\n    /** \r\n     * @en The constant associated with the key code value (123) for the F12 key.\r\n     * @zh 与 F12 的键控代码值 (123) 关联的常数。\r\n     */\r\n    static F12: number = 123;\r\n    /** \r\n     * @en The constant associated with the key code value (124) for the F13 key.\r\n     * @zh 与 F13 的键控代码值 (124) 关联的常数。\r\n     */\r\n    static F13: number = 124;\r\n    /** \r\n     * @en The constant associated with the key code value (125) for the F14 key.\r\n     * @zh 与 F14 的键控代码值 (125) 关联的常数。\r\n     */\r\n    static F14: number = 125;\r\n    /** \r\n     * @en The constant associated with the key code value (126) for the F15 key.\r\n     * @zh 与 F15 的键控代码值 (126) 关联的常数。\r\n     */\r\n    static F15: number = 126;\r\n\r\n    /** \r\n     * @en The constant associated with the pseudo key code (21) for the numeric keypad.\r\n     * @zh 与数字键盘的伪键控代码 (21) 关联的常数。\r\n     */\r\n    static NUMPAD: number = 21;\r\n    /** \r\n     * @en The constant associated with the key code value (96) for the number 0 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。\r\n     */\r\n    static NUMPAD_0: number = 96;\r\n    /** \r\n     * @en The constant associated with the key code value (97) for the number 1 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。\r\n     */\r\n    static NUMPAD_1: number = 97;\r\n    /** \r\n     * @en The constant associated with the key code value (98) for the number 2 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。\r\n     */\r\n    static NUMPAD_2: number = 98;\r\n    /** \r\n     * @en The constant associated with the key code value (99) for the number 3 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。\r\n     */\r\n    static NUMPAD_3: number = 99;\r\n    /** \r\n     * @en The constant associated with the key code value (100) for the number 4 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。\r\n     */\r\n    static NUMPAD_4: number = 100;\r\n    /** \r\n     * @en The constant associated with the key code value (101) for the number 5 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。\r\n     */\r\n    static NUMPAD_5: number = 101;\r\n    /** \r\n     * @en The constant associated with the key code value (102) for the number 6 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。\r\n     */\r\n    static NUMPAD_6: number = 102;\r\n    /** \r\n     * @en The constant associated with the key code value (103) for the number 7 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。\r\n     */\r\n    static NUMPAD_7: number = 103;\r\n    /** \r\n     * @en The constant associated with the key code value (104) for the number 8 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。\r\n     */\r\n    static NUMPAD_8: number = 104;\r\n    /** \r\n     * @en The constant associated with the key code value (105) for the number 9 on the numeric keypad.\r\n     * @zh 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。\r\n     */\r\n    static NUMPAD_9: number = 105;\r\n\r\n    /** \r\n     * @en The constant associated with the key code value (107) for the plus sign (+) on the numeric keypad.\r\n     * @zh 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。\r\n     */\r\n    static NUMPAD_ADD: number = 107;\r\n    /** \r\n     * @en The constant associated with the key code value (110) for the decimal point (.) on the numeric keypad.\r\n     * @zh 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。\r\n     */\r\n    static NUMPAD_DECIMAL: number = 110;\r\n    /** \r\n     * @en The constant associated with the key code value (111) for the division sign (/) on the numeric keypad.\r\n     * @zh 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。\r\n     */\r\n    static NUMPAD_DIVIDE: number = 111;\r\n    /** \r\n     * @en The constant associated with the key code value (108) for the Enter key on the numeric keypad.\r\n     * @zh 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。\r\n     */\r\n    static NUMPAD_ENTER: number = 108;\r\n    /** \r\n     * @en The constant associated with the key code value (106) for the multiplication sign (*) on the numeric keypad.\r\n     * @zh 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。\r\n     */\r\n    static NUMPAD_MULTIPLY: number = 106;\r\n    /** \r\n     * @en The constant associated with the key code value (109) for the minus sign (-) on the numeric keypad.\r\n     * @zh 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。\r\n     */\r\n    static NUMPAD_SUBTRACT: number = 109;\r\n    /** \r\n     * @en The constant associated with the key code value (186) for the semicolon (;) key.\r\n     * @zh 与 ; 键的键控代码值 (186) 关联的常数。\r\n     */\r\n    static SEMICOLON: number = 186;\r\n    /** \r\n     * @en The constant associated with the key code value (187) for the equal sign (=) key.\r\n     * @zh 与 = 键的键控代码值 (187) 关联的常数。\r\n     */\r\n    static EQUAL: number = 187;\r\n    /** \r\n     * @en The constant associated with the key code value (188) for the comma (,) key.\r\n     * @zh 与 F15 的键控代码值 (188) 关联的常数。\r\n     */\r\n    static COMMA: number = 188;\r\n    /** \r\n     * @en The constant associated with the key code value (189) for the minus (-) key.\r\n     * @zh 与 - 键的键控代码值 (189) 关联的常数。\r\n     */\r\n    static MINUS: number = 189;\r\n    /** \r\n     * @en The constant associated with the key code value (190) for the period (.) key.\r\n     * @zh 与 . 键的键控代码值 (190) 关联的常数。\r\n     */\r\n    static PERIOD: number = 190;\r\n    /** \r\n     * @en The constant associated with the key code value (191) for the forward slash (/) key.\r\n     * @zh 与 / 键的键控代码值 (191) 关联的常数。\r\n     */\r\n    static SLASH: number = 191;\r\n    /** \r\n     * @en The constant associated with the key code value (192) for the backquote (`) key.\r\n     * @zh 与 ` 键的键控代码值 (192) 关联的常数。\r\n     */\r\n    static BACKQUOTE: number = 192;\r\n    /** \r\n     * @en The constant associated with the key code value (219) for the left bracket ([) key.\r\n     * @zh 与 [ 键的键控代码值 (219) 关联的常数。\r\n     */\r\n    static LEFTBRACKET: number = 219;\r\n    /** \r\n     * @en The constant associated with the key code value (220) for the backslash (\\) key.\r\n     * @zh 与 \\ 键的键控代码值 (220) 关联的常数。\r\n     */\r\n    static BACKSLASH: number = 220;\r\n    /** \r\n     * @en The constant associated with the key code value (221) for the right bracket (]) key.\r\n     * @zh 与 ] 键的键控代码值 (221) 关联的常数。\r\n     */\r\n    static RIGHTBRACKET: number = 221;\r\n    /** \r\n     * @en The constant associated with the key code value (222) for the single quote (') key.\r\n     * @zh 与 ' 键的键控代码值 (222) 关联的常数。\r\n     */\r\n    static QUOTE: number = 222;\r\n    /** \r\n     * @en The constant associated with the key code value (18) for the Alternate (Option) key.\r\n     * @zh 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。\r\n     */\r\n    static ALTERNATE: number = 18;\r\n    /** \r\n     * @en The constant associated with the key code value (8) for the Backspace key.\r\n     * @zh 与 Backspace 的键控代码值 (8) 关联的常数。\r\n     */\r\n    static BACKSPACE: number = 8;\r\n    /** \r\n     * @en The constant associated with the key code value (20) for the Caps Lock key.\r\n     * @zh 与 Caps Lock 的键控代码值 (20) 关联的常数。\r\n     */\r\n    static CAPS_LOCK: number = 20;\r\n    /** \r\n     * @en The constant associated with the key code value (15) for the Mac Command key.\r\n     * @zh 与 Mac 命令键 (15) 关联的常数。\r\n     */\r\n    static COMMAND: number = 15;\r\n    /** \r\n     * @en The constant associated with the key code value (17) for the Ctrl key.\r\n     * @zh 与 Ctrl 的键控代码值 (17) 关联的常数。\r\n     */\r\n    static CONTROL: number = 17;\r\n    /** \r\n     * @en The constant associated with the key code value (46) for the Delete key.\r\n     * @zh 与 Delete 的键控代码值 (46) 关联的常数。\r\n     */\r\n    static DELETE: number = 46;\r\n    /** \r\n     * @en The constant associated with the key code value (13) for the Enter key.\r\n     * @zh 与 Enter 的键控代码值 (13) 关联的常数。\r\n     */\r\n    static ENTER: number = 13;\r\n    /** \r\n     * @en The constant associated with the key code value (27) for the Esc key.\r\n     * @zh 与 Esc 的键控代码值 (27) 关联的常数。\r\n     */\r\n    static ESCAPE: number = 27;\r\n    /** \r\n     * @en The constant associated with the key code value (33) for the Page Up key.\r\n     * @zh 与 Page Up 的键控代码值 (33) 关联的常数。\r\n     */\r\n    static PAGE_UP: number = 33;\r\n    /** \r\n     * @en The constant associated with the key code value (34) for the Page Down key.\r\n     * @zh 与 Page Down 的键控代码值 (34) 关联的常数。\r\n     */\r\n    static PAGE_DOWN: number = 34;\r\n    /** \r\n     * @en The constant associated with the key code value (35) for the End key.\r\n     * @zh 与 End 的键控代码值 (35) 关联的常数。\r\n     */\r\n    static END: number = 35;\r\n    /** \r\n     * @en The constant associated with the key code value (36) for the Home key.\r\n     * @zh 与 Home 的键控代码值 (36) 关联的常数。\r\n     */\r\n    static HOME: number = 36;\r\n    /** \r\n     * @en The constant associated with the key code value (37) for the Left Arrow key.\r\n     * @zh 与向左箭头键的键控代码值 (37) 关联的常数。\r\n     */\r\n    static LEFT: number = 37;\r\n    /** \r\n     * @en The constant associated with the key code value (38) for the Up Arrow key.\r\n     * @zh 与向上箭头键的键控代码值 (38) 关联的常数。\r\n     */\r\n    static UP: number = 38;\r\n    /** \r\n     * @en The constant associated with the key code value (39) for the Right Arrow key.\r\n     * @zh 与向右箭头键的键控代码值 (39) 关联的常数。\r\n     */\r\n    static RIGHT: number = 39;\r\n    /** \r\n     * @en The constant associated with the key code value (40) for the Down Arrow key.\r\n     * @zh 与向下箭头键的键控代码值 (40) 关联的常数。\r\n     */\r\n    static DOWN: number = 40;\r\n    /** \r\n     * @en The constant associated with the key code value (16) for the Shift key.\r\n     * @zh 与 Shift 的键控代码值 (16) 关联的常数。\r\n     */\r\n    static SHIFT: number = 16;\r\n    /** \r\n     * @en The constant associated with the key code value (32) for the Spacebar.\r\n     * @zh 与空格键的键控代码值 (32) 关联的常数。\r\n     */\r\n    static SPACE: number = 32;\r\n    /** \r\n     * @en The constant associated with the key code value (9) for the Tab key.\r\n     * @zh 与 Tab 的键控代码值 (9) 关联的常数。\r\n     */\r\n    static TAB: number = 9;\r\n    /** \r\n     * @en The constant associated with the key code value (45) for the Insert key.\r\n     * @zh 与 Insert 的键控代码值 (45) 关联的常数。\r\n     */\r\n    static INSERT: number = 45;\r\n}\r\n\r\n\r\n","/**\r\n * @en The `KeyLocation` class contains constants that indicate the location of a key on a keyboard or keyboard-like input device.\r\n * The `KeyLocation` constants are used within the `keyLocation` property of keyboard event objects.\r\n * @zh `KeyLocation` 类包含表示键盘或类似键盘的输入设备上按键位置的常量。\r\n * `KeyLocation` 常数用在键盘事件对象的 `keyLocation` 属性中。\r\n */\r\nexport class KeyLocation {\r\n    /**\r\n     * @en Indicates that the active key does not distinguish between the left or right position,\r\n     * nor does it distinguish whether it is located on the numeric keypad (or activated by a virtual key corresponding to the numeric keypad).\r\n     * @zh 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\r\n     */\r\n    static STANDARD: number = 0;\r\n    /**\r\n     * @en Indicates that the active key is in the left key location (a key may have multiple possible locations).\r\n     * @zh 表示激活的键在左侧键位置（此键可能有多个可能的位置）。\r\n     */\r\n    static LEFT: number = 1;\r\n    /**\r\n     * @en Indicates that the active key is in the right key location (a key may have multiple possible locations).\r\n     * @zh 表示激活的键在右侧键位置（此键可能有多个可能的位置）。\r\n     */\r\n    static RIGHT: number = 2;\r\n    /**\r\n     * @en Indicates that the active key is on the numeric keypad or activated by a virtual key corresponding to the numeric keypad.\r\n     * <Note: This property is only valid in Flash mode.\r\n     * @zh 表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。\r\n     * <注意：此属性只在flash模式下有效。\r\n     */\r\n    static NUM_PAD: number = 3;\r\n\r\n}\r\n\r\n\r\n","import { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Stage } from \"../display/Stage\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../renders/Context\"\r\nimport { ILaya } from \"../../ILaya\";\r\n/**\r\n * @en QuickTestTool class for rendering and performance testing.\r\n * @zh 用于渲染和性能测试的 QuickTestTool 类。\r\n */\r\nexport class QuickTestTool {\r\n\r\n    private static showedDic: any = {};\r\n    private static _rendertypeToStrDic: any = {};\r\n    private static _typeToNameDic: any = {};\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @en Get the name of a specific render command type.\r\n     * @param type The render command type.\r\n     * @returns The name of the render command type.\r\n     * @zh 获取特定渲染命令类型的名称。\r\n     * @param type 渲染命令类型。\r\n     * @returns 渲染命令类型的名称。\r\n     */\r\n    static getMCDName(type: number): string {\r\n        return QuickTestTool._typeToNameDic[type];\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @en Show render type information.\r\n     * @param type The render type.\r\n     * @param force Whether to force display even if it has been shown before.\r\n     * @zh 显示渲染类型信息。\r\n     * @param type 渲染类型。\r\n     * @param force 是否强制显示，即使之前已经显示过。\r\n     */\r\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\r\n        if (!force && QuickTestTool.showedDic[type])\r\n            return;\r\n        QuickTestTool.showedDic[type] = true;\r\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\r\n            var arr: any[] = [];\r\n            var tType: number;\r\n            tType = 1;\r\n            while (tType <= type) {\r\n                if (tType & type) {\r\n                    arr.push(QuickTestTool.getMCDName(tType & type));\r\n                }\r\n                tType = tType << 1;\r\n            }\r\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\r\n        }\r\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    static __init__(): void {\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\r\n        // QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\r\n    }\r\n    _renderType: number;\r\n    _repaint: number;\r\n    _x: number;\r\n    _y: number;\r\n    //TODO:coverage\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Update and render the display object. Called by the system.\r\n     * @param context The rendering context reference.\r\n     * @param x The X-axis coordinate.\r\n     * @param y The Y-axis coordinate.\r\n     * @zh 更新、呈现显示对象。由系统调用。\r\n     * @param context 渲染的上下文引用。\r\n     * @param x X轴坐标。\r\n     * @param y Y轴坐标。\r\n     */\r\n    //TODO:coverage\r\n    render(context: Context, x: number, y: number): void {\r\n        QuickTestTool._addType(this._renderType);\r\n        QuickTestTool.showRenderTypeInfo(this._renderType);\r\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\r\n        //{\r\n        //debugger;\r\n        //}\r\n        //@ts-ignore\r\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    private static _PreStageRender: Function;\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _stageRender(context: Context, x: number, y: number): void {\r\n        QuickTestTool._countStart();\r\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\r\n        QuickTestTool._countEnd();\r\n    }\r\n    private static _countDic: any = {};\r\n\r\n    //TODO:coverage\r\n    private static _countStart(): void {\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            QuickTestTool._countDic[key] = 0;\r\n        }\r\n    }\r\n    private static _i: number = 0;\r\n\r\n    //TODO:coverage\r\n    private static _countEnd(): void {\r\n        QuickTestTool._i++;\r\n        if (QuickTestTool._i > 60) {\r\n            QuickTestTool.showCountInfo();\r\n            QuickTestTool._i = 0;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _addType(type: number): void {\r\n        if (!QuickTestTool._countDic[type]) {\r\n            QuickTestTool._countDic[type] = 1;\r\n        } else {\r\n            QuickTestTool._countDic[type] += 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @en Show count information for render types.\r\n     * @zh 显示渲染类型的计数信息。\r\n     */\r\n    static showCountInfo(): void {\r\n        console.log(\"===================\");\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\r\n            QuickTestTool.showRenderTypeInfo(key, true);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @en Enable quick test mode.\r\n     * @zh 启用快速测试模式。\r\n     */\r\n    static enableQuickTest(): void {\r\n        QuickTestTool.__init__();\r\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\r\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\r\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\r\n    }\r\n}\r\n\r\n\r\n","export enum RenderClearFlag{\r\n    Nothing = 0,\r\n    Color = 1,\r\n    Depth = 2,\r\n    Stencil = 4,\r\n}","export enum RenderDrawMode{\r\n    TRIANGLES,\r\n    POINTS,\r\n    LINES\r\n}","export enum RenderIndexMode{\r\n    UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT,\r\n    UNSIGNED_INT\r\n}","export enum RenderStateType{\r\n    DepthTest,\r\n    DepthMask,\r\n    DepthFunc,\r\n    StencilTest,\r\n    StencilMask,\r\n    StencilFunc,\r\n    StencilOp,\r\n    BlendType,\r\n    BlendEquation,\r\n    BlendEquationSeparate,\r\n    BlendFunc,\r\n    BlendFuncSeperate,\r\n    CullFace,\r\n    FrontFace,\r\n}","export enum TextureCompareMode {\r\n    None,\r\n    LEQUAL,\r\n    GEQUAL,\r\n    LESS,\r\n    GREATER,\r\n    EQUAL,\r\n    NOTEQUAL,\r\n    ALWAYS,\r\n    NEVER\r\n}","/**\r\n * 纹理解码格式。\r\n */\r\nexport enum TextureDecodeFormat {\r\n    /** 常规解码方式,直接采样纹理颜色。*/\r\n    Normal,\r\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\r\n    RGBM\r\n}","import { IRenderContext2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderContext2D\";\r\nimport { IRenderElement2D } from \"../RenderDriver/DriverDesign/2DRenderPass/IRenderElement2D\";\r\nimport { ShaderData } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { Component } from \"../components/Component\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Context } from \"../renders/Context\";\r\nimport { Material } from \"../resource/Material\";\r\n\r\nexport enum BaseRender2DType {\r\n    baseRenderNode = 0,\r\n    spine = 1,\r\n    particle = 2,\r\n    spineSimple = 3\r\n}\r\n\r\nexport enum Render2DOrderMode {\r\n    elementIndex,\r\n    ysort\r\n}\r\n\r\nexport class BaseRenderNode2D extends Component {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 0;\r\n    /**\r\n     * @internal\r\n     * 渲染节点 \r\n     */\r\n    _renderElements: IRenderElement2D[];\r\n\r\n    /**\r\n     * 材质集\r\n     */\r\n    _materials: Material[];\r\n\r\n    /**\r\n     * 渲染类型\r\n     */\r\n    _renderType: BaseRender2DType = BaseRender2DType.baseRenderNode;\r\n\r\n    /**\r\n     * 帧循环标记\r\n     */\r\n    _renderUpdateMask: number = 0;\r\n\r\n    /**\r\n     * sprite ShaderData,可以为null\r\n     */\r\n    _spriteShaderData: ShaderData;\r\n\r\n\r\n\r\n    /**\r\n     * 唯一ID\r\n     */\r\n    private _renderid: number;\r\n\r\n    /**\r\n     * @internal\r\n     * 渲染标签位\r\n     * render flag layer bit\r\n     */\r\n    private _layer: number = 0;\r\n\r\n\r\n    /**\r\n     * 节点内的渲染排序模式\r\n     */\r\n    private _ordingMode: Render2DOrderMode;\r\n\r\n    /**\r\n     * 基于不同BaseRender的uniform集合\r\n     * @internal\r\n     */\r\n    protected _getcommonUniformMap(): Array<string> {\r\n        return [\"sprite2D\"];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    protected _getRect(): Vector4 {\r\n        return null;//get sprite ?\r\n    }\r\n\r\n    protected _transformChange() {\r\n\r\n    }\r\n\r\n    /**\r\n   * 返回第一个材质。\r\n   */\r\n    get sharedMaterial(): Material {\r\n        return this._materials[0];\r\n    }\r\n\r\n    set sharedMaterial(value: Material) {\r\n        var lastValue: Material = this._materials[0];\r\n        if (lastValue !== value) {\r\n            this._materials[0] = value;\r\n            this._changeMaterialReference(lastValue, value);\r\n            this._renderElements[0] && this._setRenderElement2DMaterial(this._renderElements[0], value);\r\n        }\r\n    }\r\n\r\n    private _setRenderElement2DMaterial(element: IRenderElement2D, material: Material) {\r\n        element.subShader = material._shader.getSubShaderAt(0);\r\n        //element.materialId = material.id;\r\n        element.materialShaderData = material._shaderValues;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _changeMaterialReference(lastValue: Material, value: Material): void {\r\n        (lastValue) && (lastValue._removeReference());\r\n        (value) && (value._addReference());//TODO:value可以为空\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._renderid = BaseRenderNode2D._uniqueIDCounter++;\r\n        this._spriteShaderData = LayaGL.renderDeviceFactory.createShaderData(null);\r\n        this._renderType = BaseRender2DType.baseRenderNode;\r\n        this._ordingMode = Render2DOrderMode.elementIndex;\r\n        this._layer = 1;\r\n    }\r\n\r\n    /**\r\n     * cmd run时调用，可以用来计算matrix等获得即时context属性\r\n     * @param context \r\n     * @param px \r\n     * @param py \r\n     */\r\n    addCMDCall?(context: Context, px: number, py: number): void;\r\n\r\n    /**\r\n     * 帧更新，可以放一些顶点更新，数据计算等\r\n     * @protected\r\n     * @param context \r\n     */\r\n    renderUpdate?(context: IRenderContext2D): void;\r\n\r\n    /**\r\n     * 渲染前更新，准备所需的渲染数据\r\n     * @param context \r\n     */\r\n    preRenderUpdate?(context: IRenderContext2D): void;\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _onEnable(): void {\r\n        super._onEnable();\r\n        if (this.owner) {\r\n            (this.owner as Sprite).renderNode2D = this;;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @protected\r\n     */\r\n    protected _onDisable(): void {\r\n        if (this.owner) {\r\n            (this.owner as Sprite).renderNode2D = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * override it\r\n     * @internal\r\n     */\r\n    protected _onDestroy() {\r\n        for (var i = 0, n = this._materials.length; i < n; i++) {\r\n            let m = this._materials[i];\r\n            m && !m.destroyed && m._removeReference();\r\n        }\r\n        this._spriteShaderData.destroy();\r\n        this.owner = null;\r\n    }\r\n\r\n    clear(): void {\r\n        this._renderElements.length = 0;\r\n\r\n    }\r\n\r\n\r\n}","\r\nimport { Config3D } from \"../../../Config3D\";\r\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderNode } from \"../../webgl/utils/ShaderNode\";\r\nimport { RenderParams } from \"../RenderEnum/RenderParams\";\r\nimport { RenderCapable } from \"../RenderEnum/RenderCapable\";\r\nimport { UniformMapType } from \"./SubShader\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class GLSLCodeGenerator {\r\n\r\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n\r\n        let res = \"\";\r\n        for (const key in attributeMap) {\r\n            let type = getAttributeType(attributeMap[key][1]);\r\n            if (type != \"\") {\r\n                res = `${res}attribute ${type} ${key};\\n`;\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\r\n\r\n        if (useUniformBlock) {\r\n            let blocksStr = \"\";\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    blocksStr += `uniform ${key} {\\n`;\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            blocksStr += `${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                    blocksStr += \"};\\n\";\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return blocksStr + uniformsStr;\r\n\r\n        }\r\n        else {\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            uniformsStr += `uniform ${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return uniformsStr;\r\n        }\r\n\r\n    }\r\n\r\n    static GLShaderLanguageProcess3D(defineString: string[],\r\n        attributeMap: { [name: string]: [number, ShaderDataType] },\r\n        uniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\r\n        var clusterSlices = Config3D.lightClusterCount;\r\n        var defMap: any = {};\r\n\r\n        var vertexHead: string;\r\n        var fragmentHead: string;\r\n        var defineStr: string = \"\";\r\n\r\n        // 拼接 shader attribute\r\n        let useUniformBlock = Config3D._uniformBlock;\r\n        let attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\r\n        let uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\r\n\r\n        if (LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) > 30) {\r\n            defineString.push(\"GRAPHICS_API_GLES3\");\r\n            vertexHead =\r\n                `#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n    precision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n    precision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define attribute in\r\n#define varying out\r\n#define textureCube texture\r\n#define texture2D texture\r\n${attributeglsl}\r\n${uniformglsl}\r\n`;\r\n\r\n            fragmentHead =\r\n                `#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n\tprecision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n\tprecision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define varying in\r\nout highp vec4 pc_fragColor;\r\n#define gl_FragColor pc_fragColor\r\n#define gl_FragDepthEXT gl_FragDepth\r\n#define texture2D texture\r\n#define textureCube texture\r\n#define texture2DProj textureProj\r\n#define texture2DLodEXT textureLod\r\n#define texture2DProjLodEXT textureProjLod\r\n#define textureCubeLodEXT textureLod\r\n#define texture2DGradEXT textureGrad\r\n#define texture2DProjGradEXT textureProjGrad\r\n#define textureCubeGradEXT textureGrad\r\n${uniformglsl}`;\r\n        }\r\n        else {\r\n            vertexHead =\r\n                `#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n${attributeglsl}\r\n${uniformglsl}`;\r\n            fragmentHead =\r\n                `#ifdef GL_EXT_shader_texture_lod\r\n    #extension GL_EXT_shader_texture_lod : enable\r\n#endif\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n\t#extension GL_OES_standard_derivatives : enable \r\n#endif\r\n\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n\r\n#if !defined(GL_EXT_shader_texture_lod)\r\n    #define texture1DLodEXT texture1D\r\n    #define texture2DLodEXT texture2D\r\n    #define texture2DProjLodEXT texture2DProj\r\n    #define texture3DLodEXT texture3D\r\n    #define textureCubeLodEXT textureCube\r\n#endif\r\n${uniformglsl}`;\r\n        }\r\n\r\n        // todo \r\n        defineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\r\n        defineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\r\n        defineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\r\n        defineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\r\n        defineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\r\n        defineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\r\n        defineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\r\n\r\n\r\n\r\n        for (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n            var def: string = defineString[i];\r\n            defineStr += \"#define \" + def + \"\\n\";\r\n            defMap[def] = true;\r\n        }\r\n\r\n        var vs: any[] = VS.toscript(defMap, []);\r\n        var vsVersion: string = '';\r\n        if (vs[0].indexOf('#version') == 0) {\r\n            vsVersion = vs[0] + '\\n';\r\n            vs.shift();\r\n        }\r\n\r\n        var ps: any[] = FS.toscript(defMap, []);\r\n        var psVersion: string = '';\r\n        if (ps[0].indexOf('#version') == 0) {\r\n            psVersion = ps[0] + '\\n';\r\n            ps.shift();\r\n        };\r\n        let dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n        let detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n        return { vs: dstVS, fs: detFS };\r\n    }\r\n}\r\n\r\nfunction getAttributeType(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return \"int\";\r\n        case ShaderDataType.Bool:\r\n            return \"bool\";\r\n        case ShaderDataType.Float:\r\n            return \"float\";\r\n        case ShaderDataType.Vector2:\r\n            return \"vec2\";\r\n        case ShaderDataType.Vector3:\r\n            return \"vec3\";\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return \"vec4\";\r\n        case ShaderDataType.Matrix4x4:\r\n            return \"mat4\";\r\n        case ShaderDataType.Matrix3x3:\r\n            return \"mat3\";\r\n        case ShaderDataType.Texture2D:\r\n            return \"sampler2D\";\r\n        case ShaderDataType.TextureCube:\r\n            return \"samplerCube\";\r\n        case ShaderDataType.Texture2DArray:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler2DArray\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        case ShaderDataType.Texture3D:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler3D\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        default:\r\n            return \"\";\r\n    }\r\n}","/**\r\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\r\n */\r\nexport class ShaderVariable {\r\n\tstatic pointID: number = 0;\r\n\t/**@internal */\r\n\tname: string;\r\n\t/**@internal */\r\n\ttype: number;\r\n\t/**@internal */\r\n\tlocation: number;\r\n\t/**@internal */\r\n\tisArray: boolean;\r\n\t/**@internal */\r\n\ttextureID: number;\r\n\t/**@internal */\r\n\tdataOffset: number;\r\n\r\n\t/**@internal */\r\n\tcaller: any;\r\n\t/**@internal */\r\n\tfun: any;\r\n\t/**@internal */\r\n\tuploadedValue: any[];\r\n\t/**@internal */\r\n\tonID: number;\r\n\r\n\t/**\r\n\t * 创建一个 <code>shaderVariable</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.onID = ShaderVariable.pointID++;\r\n\t\tthis.textureID = -1;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Vector3 } from \"./Vector3\";\r\nimport { Vector4 } from \"./Vector4\";\r\n\r\n\r\n/**\r\n * @en The `Viewport` class is used to create a viewport.\r\n * @zh `Viewport` 类用于创建视口。\r\n */\r\nexport class Viewport {\r\n\t/** @internal */\r\n\tstatic _tempMatrix4x4: Matrix4x4 = new Matrix4x4();\r\n\t/** @internal */\r\n\tstatic _tempViewport: Viewport = new Viewport(0, 0, 0, 0);\r\n\t/**\r\n\t * @en X-axis coordinate\r\n\t * @zh X轴坐标\r\n\t */\r\n\tx: number;\r\n\r\n\t/**\r\n\t * @en Y-axis coordinate\r\n\t * @zh Y轴坐标\r\n\t */\r\n\ty: number;\r\n\r\n\t/**\r\n\t * @en Width\r\n\t * @zh 宽度\r\n\t */\r\n\twidth: number;\r\n\r\n\t/**\r\n\t * @en Height\r\n\t * @zh 高度\r\n\t */\r\n\theight: number;\r\n\r\n\t/**\r\n\t * @en Minimum depth\r\n\t * @zh 最小深度\r\n\t */\r\n\tminDepth: number;\r\n\r\n\t/**\r\n\t * @en Maximum depth\r\n\t * @zh 最大深度\r\n\t */\r\n\tmaxDepth: number;\r\n\r\n\t/**\r\n\t * @en Constructor method, initialize viewport.\r\n\t * @param x X-axis coordinate.\r\n\t * @param y Y-axis coordinate.\r\n\t * @param width Width.\r\n\t * @param height Height.\r\n\t * @zh 构造方法，初始化视口。\r\n\t * @param x X轴坐标。\r\n\t * @param y Y轴坐标。\r\n\t * @param width 宽度。\r\n\t * @param height 高度。\r\n\t */\r\n\tconstructor(x?: number, y?: number, width?: number, height?: number) {\r\n\t\tthis.minDepth = 0.0;\r\n\t\tthis.maxDepth = 1.0;\r\n\r\n\t\tthis.x = x ?? 0;\r\n\t\tthis.y = y ?? 0;\r\n\t\tthis.width = width ?? 0;\r\n\t\tthis.height = height ?? 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @en Project a three-dimensional vector to viewport space.\r\n\t * @param source vector3.\r\n\t * @param matrix Transformation matrix.\r\n\t * @param out x, y, z are viewport space coordinates; in perspective projection, w is the z-axis coordinate relative to the transformation matrix.\r\n\t * @zh 投影一个三维向量到视口空间。\r\n\t * @param source 三维向量。\r\n\t * @param matrix 变换矩阵。\r\n\t * @param out x、y、z为视口空间坐标，透视投影下w为相对于变换矩阵的z轴坐标。\r\n\t */\r\n\tproject(source: Vector3, matrix: Matrix4x4, out: Vector4): void {\r\n\t\tVector3.transformV3ToV4(source, matrix, out);\r\n\t\tvar x: number = out.x, y: number = out.y, z: number = out.z;\r\n\t\tvar w: number = out.w;\r\n\t\tif (w !== 1.0) {\r\n\t\t\tx = x / w;\r\n\t\t\ty = y / w;\r\n\t\t\tz = z / w;\r\n\t\t}\r\n\t\tout.x = (x + 1.0) * 0.5 * this.width + this.x;\r\n\t\tout.y = (-y + 1.0) * 0.5 * this.height + this.y;\r\n\t\tout.z = z * (this.maxDepth - this.minDepth) + this.minDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * @en Unproject a three-dimensional vector.\r\n\t * @param source Source vector3.\r\n\t * @param matrix Transformation matrix.\r\n\t * @param out Output vector3.\r\n\t * @zh 反变换一个三维向量。\r\n\t * @param source 源三维向量。\r\n\t * @param matrix 变换矩阵。\r\n\t * @param out 输出三维向量。\r\n\t */\r\n\tunprojectFromMat(source: Vector3, matrix: Matrix4x4, out: Vector3): void {\r\n\t\tvar matrixEleme: Float32Array = matrix.elements;\r\n\r\n\t\tout.x = (((source.x - this.x) / this.width) * 2.0) - 1.0;\r\n\t\tout.y = -((((source.y - this.y) / this.height) * 2.0) - 1.0);\r\n\t\tout.z = (source.z - this.minDepth) / (this.maxDepth - this.minDepth);\r\n\t\tvar a: number = (((out.x * matrixEleme[3]) + (out.y * matrixEleme[7])) + (out.z * matrixEleme[11])) + matrixEleme[15];\r\n\t\tVector3.transformV3ToV3(out, matrix, out);\r\n\t\tif (a !== 1.0) {\r\n\t\t\tout.x = out.x / a;\r\n\t\t\tout.y = out.y / a;\r\n\t\t\tout.z = out.z / a;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @en Unproject a three-dimensional vector using World-View-Projection matrices.\r\n\t * @param source Source vector3.\r\n\t * @param projection Perspective projection matrix.\r\n\t * @param view View matrix.\r\n\t * @param world World matrix, can be set to null.\r\n\t * @param out Output vector.\r\n\t * @zh 使用世界-视图-投影矩阵反变换一个三维向量。\r\n\t * @param source 源三维向量。\r\n\t * @param projection 透视投影矩阵。\r\n\t * @param view 视图矩阵。\r\n\t * @param world 世界矩阵，可设置为null。\r\n\t * @param out 输出向量。\r\n\t */\r\n\tunprojectFromWVP(source: Vector3, projection: Matrix4x4, view: Matrix4x4, world: Matrix4x4, out: Vector3): void {\r\n\r\n\t\tMatrix4x4.multiply(projection, view, Viewport._tempMatrix4x4);\r\n\t\t(world) && (Matrix4x4.multiply(Viewport._tempMatrix4x4, world, Viewport._tempMatrix4x4));\r\n\t\tViewport._tempMatrix4x4.invert(Viewport._tempMatrix4x4);\r\n\t\tthis.unprojectFromMat(source, Viewport._tempMatrix4x4, out);\r\n\t}\r\n\r\n\t/**\r\n\t * @en Set viewport values.\r\n\t * @param x X-axis coordinate.\r\n\t * @param y Y-axis coordinate.\r\n\t * @param width Width.\r\n\t * @param height Height.\r\n\t * @zh 设置视口值。\r\n\t * @param x X轴坐标。\r\n\t * @param y Y轴坐标。\r\n\t * @param width 宽度。\r\n\t * @param height 高度。\r\n\t */\r\n\tset(x: number, y: number, width: number, height: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\t/**\r\n\t * @en Clone the viewport.\r\n\t * @param out Output viewport.\r\n\t * @zh 克隆视口。\r\n\t * @param out 输出视口。\r\n\t */\r\n\tcloneTo(out: Viewport): void {\r\n\t\tout.x = this.x;\r\n\t\tout.y = this.y;\r\n\t\tout.width = this.width;\r\n\t\tout.height = this.height;\r\n\t\tout.minDepth = this.minDepth;\r\n\t\tout.maxDepth = this.maxDepth;\r\n\t}\r\n}\r\n\r\n\r\n","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { IBufferState } from \"../RenderDriver/DriverDesign/RenderDevice/IBufferState\";\r\nimport { IIndexBuffer } from \"../RenderDriver/DriverDesign/RenderDevice/IIndexBuffer\";\r\nimport { IRenderGeometryElement } from \"../RenderDriver/DriverDesign/RenderDevice/IRenderGeometryElement\";\r\nimport { IVertexBuffer } from \"../RenderDriver/DriverDesign/RenderDevice/IVertexBuffer\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { VertexMesh } from \"../RenderEngine/RenderShader/VertexMesh\";\r\nimport { VertexDeclaration } from \"../RenderEngine/VertexDeclaration\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * @en Class is used to process 2D vertex meshes\r\n * @zh 类用于处理2D顶点网格\r\n */\r\nexport class VertexMesh2D{\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n    /**\r\n     * @en Retrieves the vertex declaration based on the provided vertex flags.\r\n     * @param vertexFlags An array of vertex declaration flag characters, formatted as: \"POSITION,COLOR,UV,BLENDWEIGHT,BLENDINDICES\".\r\n     * @param compatible Whether to enable compatible mode.\r\n     * @return An array of vertex declarations.\r\n     * @zh 根据提供的顶点声明标志字符获取顶点声明。\r\n     * @param vertexFlags 顶点声明标志字符数组，格式为：\"POSITION,COLOR,UV,BLENDWEIGHT,BLENDINDICES\"。\r\n     * @param compatible 是否启用兼容模式。\r\n     * @return 顶点声明数组。\r\n     */\r\n\tstatic getVertexDeclaration(vertexFlags: string[], compatible: boolean = true): VertexDeclaration[] {\r\n        let verDecs:VertexDeclaration[] = []\r\n        for (let i = 0 , len = vertexFlags.length; i < len; i++) {\r\n            let vertexFlag = vertexFlags[i];\r\n            let verDec: VertexDeclaration = VertexMesh2D._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n            if (!verDec) {\r\n                var subFlags: any[] = vertexFlag.split(\",\");\r\n                var offset: number = 0;\r\n                var elements: any[] = [];\r\n                for (let j: number = 0, n: number = subFlags.length; j < n; j++) {\r\n                    var element: VertexElement;\r\n                    switch (subFlags[i]) {\r\n                        case \"POSITION\":\r\n                            element = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n                            offset += 8;\r\n                            break;\r\n                        case \"COLOR\":\r\n                            element = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n                            offset += 16;\r\n                            break;\r\n                        case \"UV\":\r\n                            element = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n                            offset += 8;\r\n                            break;\r\n                        case \"BLENDWEIGHT\":\r\n                            element = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n                            offset += 16;\r\n                            break;\r\n                        case \"BLENDINDICES\":\r\n                            if (compatible) {\r\n                                element = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n                                offset += 16;\r\n                            } else {\r\n                                element = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n                                offset += 4;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            throw \"VertexMesh: unknown vertex flag.\";\r\n                    }\r\n                    elements.push(element);\r\n                }\r\n                verDec = new VertexDeclaration(offset, elements);\r\n                VertexMesh2D._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n                verDecs.push(verDec);\r\n            }\r\n        }\r\n\t\treturn verDecs;\r\n\t}\r\n}\r\n\r\n/**\r\n * @en The `Mesh2D` class represents a 2D mesh in the engine.\r\n * @zh `Mesh2D` 类表示引擎中的2D网格。\r\n */\r\nexport class Mesh2D extends Resource {\r\n    /**\r\n     * @en Loads a mesh template from the specified URL.\r\n     * @param url The URL address of the mesh template.\r\n     * @param complete A callback function that is executed when the mesh template is loaded.\r\n     * @zh 从指定URL加载网格模板。\r\n     * @param url 网格模板的地址。\r\n     * @param complete 加载完成时的回调函数。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, Loader.MESH);\r\n    }\r\n\r\n    /** @internal */\r\n    _bufferState: IBufferState;\r\n    /** @internal */\r\n    _instanceBufferState: IBufferState;\r\n    /** @internal */\r\n    _instanceBufferStateType: number = 0;\r\n    /**@internal */\r\n    _instanceWorldVertexBuffer: IVertexBuffer\r\n    /**@internal */\r\n    _instanceSimpleAniVertexBuffer: IVertexBuffer\r\n    /** @internal */\r\n    _subMeshes: IRenderGeometryElement[];\r\n    /** @internal */\r\n    _vertexBuffers: IVertexBuffer[] = null;\r\n    /** @internal */\r\n    _indexBuffer: IIndexBuffer = null;\r\n\r\n    /** @internal */\r\n    _vertexCount: number = 0;\r\n    /** @internal */\r\n    _indexFormat: IndexFormat = IndexFormat.UInt16;\r\n\r\n    /**\r\n     * @en Get the vertex buffer of the mesh.\r\n     * @zh 获取网格的顶点缓冲。\r\n     */\r\n    get vertexBuffers(): IVertexBuffer[] {\r\n        return this._vertexBuffers;\r\n    }\r\n\r\n    /**\r\n     * @en Get the index buffer of the mesh.\r\n     * @zh 获取网格的索引缓冲。\r\n     */\r\n    get indexBuffer(): IIndexBuffer {\r\n        return this._indexBuffer;\r\n    }\r\n\r\n    /**\r\n     * @en Get the number of vertices in the mesh.\r\n     * @zh 获取网格中的顶点数。\r\n     */\r\n    get vertexCount(): number {\r\n        return this._vertexCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get the index number of the mesh.\r\n     * @zh 获取网格的索引数。\r\n     */\r\n    get indexCount(): number {\r\n        return this._indexBuffer.indexCount;\r\n    }\r\n\r\n    /**\r\n     * @en Get the number of SubMeshes in the mesh.\r\n     * @zh 获取网格中子网格的个数。\r\n     */\r\n    get subMeshCount(): number {\r\n        return this._subMeshes.length;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The index format used by the mesh.\r\n     * @zh 网格使用的索引格式。\r\n     */\r\n    get indexFormat(): IndexFormat {\r\n        return this._indexFormat;\r\n    }\r\n\r\n    set indexFormat(value: IndexFormat) {\r\n        this._indexFormat = value\r\n        this._subMeshes.forEach(element => {\r\n            element.indexFormat = value;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @en prohibition of use.\r\n     * @zh 禁止使用\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._bufferState = LayaGL.renderDeviceFactory.createBufferState();\r\n        this._subMeshes = [];\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n    }\r\n\r\n    /**\r\n     * @en Destroy the resource.\r\n     * @zh 销毁资源\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let i: number = 0, n: number = this._subMeshes.length; i < n; i++)\r\n            this._subMeshes[i].destroy();\r\n        for (let i = 0 , n = this._vertexBuffers.length; i < n; i++)\r\n            this._vertexBuffers[i].destroy();\r\n        this._indexBuffer && this._indexBuffer.destroy();\r\n        this._bufferState.destroy();\r\n        this._instanceBufferState && this._instanceBufferState.destroy();\r\n        this._instanceWorldVertexBuffer && this._instanceWorldVertexBuffer.destroy();\r\n        this._instanceSimpleAniVertexBuffer && this._instanceSimpleAniVertexBuffer.destroy();\r\n        this._setCPUMemory(0);\r\n        this._setGPUMemory(0);\r\n        this._bufferState = null;\r\n        this._instanceBufferState = null;\r\n        this._vertexBuffers = null;\r\n        this._indexBuffer = null;\r\n        this._subMeshes = null;\r\n        this._indexBuffer = null;\r\n        // this._boneNames = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setSubMeshes(subMeshes: IRenderGeometryElement[]): void {\r\n        this._subMeshes = subMeshes\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setBuffer(vertexBuffer: IVertexBuffer, indexBuffer: IIndexBuffer): void {\r\n        var bufferState: IBufferState = this._bufferState;\r\n        bufferState.applyState([vertexBuffer], indexBuffer);\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a SubMesh based on its index.\r\n     * @param index The index of the SubMesh.\r\n     * @returns The SubMesh at the specified index.\r\n     * @zh 根据索引获取子网格。\r\n     * @param index 子网格的索引。\r\n     * @returns 索引指定的子网格。\r\n     */\r\n    getSubMesh(index: number): IRenderGeometryElement {\r\n        return this._subMeshes[index];\r\n    }\r\n\r\n    /**\r\n     * @en Sets the vertex data for the mesh.\r\n     * @param vertices An array of ArrayBuffer objects containing vertex data.\r\n     * @zh 设置网格的顶点数据。\r\n     * @param vertices 顶点数据数组。\r\n     */\r\n    setVertices(vertices: ArrayBuffer[]): void {\r\n        for (let i = 0 , len = vertices.length; i < len; i++) {\r\n            if (vertices[i] && this._vertexBuffers[i]) {\r\n                this._vertexBuffers[i].setData(vertices[i], 0, 0, vertices[i].byteLength);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * @en Sets the indices for the mesh.\r\n     * @param indices An array containing the mesh indices. \r\n     * @zh 设置网格的索引。\r\n     * @param indices 索引数据数组。\r\n     */\r\n    setIndices(indices: Uint8Array | Uint16Array | Uint32Array): void {\r\n        var format: IndexFormat;\r\n        if (indices instanceof Uint32Array)\r\n            format = IndexFormat.UInt32;\r\n        else if (indices instanceof Uint16Array)\r\n            format = IndexFormat.UInt16;\r\n        else if (indices instanceof Uint8Array)\r\n            format = IndexFormat.UInt8;\r\n\r\n        let indexBuffer = this._indexBuffer;\r\n        if (this._indexFormat !== format || indexBuffer.indexCount !== indices.length) {//format chang and length chang will recreate the indexBuffer\r\n            indexBuffer.destroy();\r\n            this._indexBuffer = indexBuffer = LayaGL.renderDeviceFactory.createIndexBuffer(BufferUsage.Static);\r\n            indexBuffer.indexCount = indexBuffer.indexCount;\r\n            indexBuffer.indexType = format;\r\n        }\r\n        indexBuffer._setIndexData(indices, 0);\r\n        this.indexFormat = format;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { ITextureContext } from \"../RenderDriver/DriverDesign/RenderDevice/ITextureContext\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * @en `Texture2DArray` represents a 2D texture array.\r\n * @zh `Texture2DArray` 类表示一个2D纹理数组。\r\n */\r\nexport class Texture2DArray extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture2DArray;\r\n\r\n    /**\r\n     * @en The default texture.\r\n     * @zh 默认纹理。\r\n     */\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture2DArray(1, 1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]), false, false);\r\n        }\r\n    }\r\n    /**\r\n     * @en The number of texture layers.\r\n     * @zh 纹理层的数量。\r\n     */\r\n    depth: number;\r\n\r\n    /**\r\n     * @en Creates a `Texture2DArray` instance.\r\n     * @zh Texture2DArray 的构造函数\r\n     * @param width The width of the texture\r\n     * @param height The height of the texture\r\n     * @param depth The depth of the texture array\r\n     * @param format The format of the texture\r\n     * @param mipmap Whether to generate mipmaps\r\n     * @param canRead Whether the texture can be read\r\n     * @param sRGB Whether the texture is in sRGB color space\r\n     * @zh 创建 Texture2DArray 类的实例。\r\n     * @param width 纹理的宽度\r\n     * @param height 纹理的高度\r\n     * @param depth 纹理数组的深度\r\n     * @param format 纹理的格式\r\n     * @param mipmap 是否生成 mipmap\r\n     * @param canRead 纹理是否可读\r\n     * @param sRGB 纹理是否在 sRGB 颜色空间中\r\n     */\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Texture2DArray;\r\n        this._gammaSpace = sRGB;\r\n\r\n        this.depth = depth;\r\n\r\n        let context = <ITextureContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @en Sets the image data for the texture.\r\n     * @param sources The array of images to set.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha channel.\r\n     * @param invertY Whether to invert the Y-axis of the image.\r\n     * @zh 设置纹理的图像数据。\r\n     * @param sources 要设置的图像数组。\r\n     * @param premultiplyAlpha 是否预乘 alpha。\r\n     * @param invertY 是否反转图像 Y 轴。\r\n     */\r\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITextureContext>LayaGL.textureContext;\r\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the pixel data for the texture.\r\n     * @param source The pixel data to set.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha channel.\r\n     * @param invertY Whether to invert the Y-axis of the image.\r\n     * @zh 设置纹理的像素数据。\r\n     * @param source 要设置的像素数据。\r\n     * @param premultiplyAlpha 是否预乘 alpha。\r\n     * @param invertY 是否反转图像 Y 轴。\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITextureContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, premultiplyAlpha, invertY)\r\n    }\r\n    \r\n    /**\r\n     * @en Updates the sub-pixel data for the texture.\r\n     * @param xOffset The x-offset.\r\n     * @param yOffset The y-offset.\r\n     * @param zOffset The z-offset.\r\n     * @param width The width of the data to update.\r\n     * @param height The height of the data to update.\r\n     * @param depth The depth level of the data to update.\r\n     * @param pixels The pixel data to update.\r\n     * @param mipmapLevel The mipmap level to update.\r\n     * @param generateMipmap Whether to generate mipmaps after the update.\r\n     * @param premultiplyAlpha Whether to premultiply the alpha channel.\r\n     * @param invertY Whether to invert the Y-axis of the image.\r\n     * @zh 更新纹理的子像素数据。\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 要更新的数据的宽度。\r\n     * @param height 要更新的数据的高度。\r\n     * @param depth 要更新的数据的深度。\r\n     * @param pixels 要更新的像素数据。\r\n     * @param mipmapLevel 要更新的 mipmap 等级。\r\n     * @param generateMipmap 是否在更新后生成 mipmap。\r\n     * @param premultiplyAlpha 是否预乘 alpha。\r\n     * @param invertY 是否反转图像 Y 轴。\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITextureContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n}","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * @en The Texture3D class is used to generate 3D textures.\r\n * @zh Texture3D 类用于生成 3D 纹理。\r\n */\r\nexport class Texture3D extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture3D;\r\n\r\n    /**\r\n     * @en The default texture for 3D textures.\r\n     * @zh 3D纹理的默认纹理。\r\n     */\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture3D(1, 1, 1, TextureFormat.R8G8B8A8, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en The depth of the 3D texture.\r\n     * @zh 3D纹理的深度。\r\n     */\r\n    depth: number;\r\n\r\n    /**\r\n     * @en Creates an instance of Texture3D.\r\n     * @param width The width of the texture.\r\n     * @param height The height of the texture.\r\n     * @param depth The depth of the texture.\r\n     * @param format The format of the texture.\r\n     * @param mipmap Indicates whether to generate mipmaps for the texture.\r\n     * @param sRGB Indicates whether the texture uses sRGB color space.\r\n     * @zh 创建 Texture3D 类的实例。\r\n     * @param width 纹理的宽度。\r\n     * @param height 纹理的高度。\r\n     * @param depth 纹理的深度。\r\n     * @param format 纹理的格式。\r\n     * @param mipmap 是否为纹理生成 mipmap。\r\n     * @param sRGB 纹理是否使用 sRGB 色彩空间。\r\n     */\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex3D;\r\n        this.depth = depth;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        let context = LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n    }\r\n\r\n    /**\r\n     * @en Sets the pixel data for the 3D texture.\r\n     * @param source The source pixel data to set.\r\n     * @zh 设置3D纹理的像素数据。\r\n     * @param source 要设置的源像素数据。\r\n     */\r\n    setPixelsData(source: ArrayBufferView) {\r\n        let texture = this._texture;\r\n        let context = LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, false, false)\r\n    }\r\n\r\n    /**\r\n     * @en Update pixel data of 3D texture in sub regions\r\n     * @param xOffset The x-offset within the texture.\r\n     * @param yOffset The y-offset within the texture.\r\n     * @param zOffset The z-offset within the texture.\r\n     * @param width The width of the sub-region to update.\r\n     * @param height The height of the sub-region to update.\r\n     * @param depth The depth of the sub-region to update.\r\n     * @param pixels The pixel data to update.\r\n     * @param mipmapLevel The mipmap level to update.\r\n     * @param generateMipmap Whether to generate mipmaps after the update.\r\n     * @zh 更新子区域3D纹理的像素数据。\r\n     * @param xOffset 纹理内的 x 偏移。\r\n     * @param yOffset 纹理内的 y 偏移。\r\n     * @param zOffset 纹理内的 z 偏移。\r\n     * @param width 要更新的子区域的宽度。\r\n     * @param height 要更新的子区域的高度。\r\n     * @param depth 要更新的子区域的深度。\r\n     * @param pixels 要更新的像素数据。\r\n     * @param mipmapLevel 要更新的 mipmap 等级。\r\n     * @param generateMipmap 是否在更新后生成 mipmap。\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean) {\r\n        let texture = this._texture;\r\n        let context = LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, false, false);\r\n    }\r\n\r\n}","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\n\r\n/**\r\n * @en WebGLRTMgr is a manager for creating and recycling WebGLRenderTarget.\r\n * TODO The demand is not high and the management cost is high. Remove it first.\r\n * @zh WebGLRTMgr 管理WebGLRenderTarget的创建和回收\r\n * TODO 需求不大，管理成本高。先去掉。\r\n */\r\nexport class WebGLRTMgr {\r\n\r\n\tprivate static dict: any = {};\t\t//key=h*10000+w\r\n\r\n    /**\r\n     * @en Retrieves a render target with the specified width and height. For now, the search is based strictly on size.\r\n     * @param w The width of the render target.\r\n     * @param h The height of the render target.\r\n     * @returns A RenderTexture2D instance.\r\n\t * @zh 根据指定的宽度和高度获得一个渲染目标。目前，搜索是基于严格大小判断的。\r\n\t * @param w 渲染目标的宽度。\r\n\t * @param h 渲染目标的高度。\r\n\t * @returns RenderTexture2D实例。\r\n     */\r\n\tstatic getRT(w: number, h: number): RenderTexture2D {\r\n\t\tw = w | 0;\r\n\t\th = h | 0;\r\n\t\tif (w >= 10000) {\r\n\t\t\tconsole.error('getRT error! w too big');\r\n\t\t}\r\n\t\tvar ret: RenderTexture2D;\r\n\t\t/*\r\n\t\tvar key: number = h * 10000 + w;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\r\n\t\tif (sw) {\r\n\t\t\tif (sw.length > 0) {\r\n\t\t\t\tret = sw.pop();\r\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n\t\t//ret._mgrKey = key;\r\n\t\treturn ret;\r\n\t}\r\n\r\n\r\n    /**\r\n     * @en Releases a render target back to the manager for recycling.\r\n     * @param rt The RenderTexture2D instance to be recycled.\r\n\t * @zh 将渲染目标回收至管理器以供循环使用。\r\n\t * @param rt 要回收的渲染目标。\r\n     */\r\n\tstatic releaseRT(rt: RenderTexture2D): void {\r\n\t\trt.destroy();\r\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\r\n\t\treturn;\r\n\t\t/*\r\n\t\t//如果_mgrKey<=0表示已经加进来了。\r\n\t\tif (rt._mgrKey <= 0)\r\n\t\t\treturn;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\r\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\r\n\t\trt._mgrKey = 0;\r\n\t\tsw.push(rt);\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n","/**\r\n * @en A utility class for Base64 encoding and decoding operations.\r\n * @zh Base64 编码和解码操作的实用工具类。\r\n */\r\nexport class Base64Tool {\r\n\r\n    /**\r\n     * @en The character set used for Base64 encoding.\r\n     * @zh 用于 Base64 编码的字符集。\r\n     */\r\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    /**\r\n     * @en Regular expression for validating Base64 encoded strings, including data URIs.\r\n     * @zh 用于验证 Base64 编码字符串（包括数据 URI）的正则表达式。\r\n     */\r\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\r\n    /**\r\n     * @en Regular expression for matching the header of a data URI.\r\n     * @zh 用于匹配数据 URI 头部的正则表达式。\r\n     */\r\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\r\n\r\n    /**\r\n     * @en Use a lookup table to find the index.\r\n     * @zh 使用查找表查找索引。\r\n     */\r\n    static lookup: Uint8Array = null;\r\n\r\n    /**\r\n     * @en Initializes the lookup table for Base64 decoding.\r\n     * @zh 初始化用于 Base64 解码的查找表。\r\n     */\r\n    static init(): void {\r\n        if (Base64Tool.lookup)\r\n            return;\r\n        Base64Tool.lookup = new Uint8Array(256)\r\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\r\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Determines if a string is a base64 encoded string.\r\n     * @param str The string to check.\r\n     * @zh 判断字符串是否是 base64 编码的字符串。\r\n     * @param str 需要检查的字符串。\r\n     */\r\n    static isBase64String(str: string): boolean {\r\n        return Base64Tool.reg.test(str);\r\n    }\r\n\r\n    /**\r\n     * @en Encodes an ArrayBuffer to a base64 string.\r\n     * @param arraybuffer The ArrayBuffer to encode.\r\n     * @zh 对 ArrayBuffer 进行编码，返回 base64 字符串。\r\n     * @param arraybuffer 需要编码的 ArrayBuffer。\r\n     */\r\n    static encode(arraybuffer: ArrayBuffer): string {\r\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\r\n\r\n        for (i = 0; i < len; i += 3) {\r\n            base64 += Base64Tool.chars[bytes[i] >> 2];\r\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\r\n        }\r\n\r\n        if ((len % 3) === 2) {\r\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n        }\r\n        else if (len % 3 === 1) {\r\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n        }\r\n\r\n        return base64;\r\n    }\r\n\r\n    /**\r\n     * @en Decodes a base64 string to an ArrayBuffer.\r\n     * @param base64 The base64 string to decode.\r\n     * @zh 对 base64 字符串进行解码，返回 ArrayBuffer。\r\n     * @param base64 需要解码的 base64 字符串。\r\n     */\r\n    static decode(base64: string): ArrayBuffer {\r\n        Base64Tool.init();\r\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\r\n\r\n        if (base64[base64.length - 1] === \"=\") {\r\n            bufferLength--;\r\n            if (base64[base64.length - 2] === \"=\") {\r\n                bufferLength--;\r\n            }\r\n        }\r\n\r\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\r\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\r\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\r\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\r\n\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n        }\r\n\r\n        return arraybuffer;\r\n    }\r\n\r\n}","\r\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\r\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\r\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\r\n    newU8List.set(arrU8List);\r\n    return newU8List.buffer;\r\n}\r\n\r\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\r\n    var sz: number = this.length;\r\n    var dec: Uint8Array = new Uint8Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction float32ArraySlice(this: Float32Array): Float32Array {\r\n    var sz: number = this.length;\r\n    var dec: Float32Array = new Float32Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\r\n    var sz: number;\r\n    var dec: Uint16Array;\r\n    var i: number;\r\n    if (arg.length === 0) {\r\n        sz = this.length;\r\n        dec = new Uint16Array(sz);\r\n        for (i = 0; i < sz; i++)\r\n            dec[i] = this[i];\r\n\r\n    } else if (arg.length === 2) {\r\n        var start: number = arg[0];\r\n        var end: number = arg[1];\r\n\r\n        if (end > start) {\r\n            sz = end - start;\r\n            dec = new Uint16Array(sz);\r\n            for (i = start; i < end; i++)\r\n                dec[i - start] = this[i];\r\n        } else {\r\n            dec = new Uint16Array(0);\r\n        }\r\n    }\r\n    return dec;\r\n}\r\n\r\nArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\r\nFloat32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\r\nUint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\r\nUint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * @en The `Log` class is used to display log information in the interface.\r\n * Note: This cannot be used in the LayaAir Native Runtime.\r\n * @zh `Log` 类用于在界面内显示日志记录信息。\r\n * 注意：在LayaAir Native Runtime内不可使用\r\n */\r\nexport class Log {\r\n\r\n    /**@private */\r\n    private static _logdiv: any;\r\n    /**@private */\r\n    private static _btn: any;\r\n    /**@private */\r\n    private static _count: number = 0;\r\n    /**\r\n     * @en Maximum number of log messages to display before auto-cleaning.\r\n     * @zh 最大打印数量，超过这个数量则自动清理一次，默认为50次。\r\n     */\r\n    static maxCount: number = 50;\r\n    /**\r\n     * @en Whether to automatically scroll to the bottom of the log.\r\n     * @zh 是否自动滚动到日志底部，默认为true。\r\n     */\r\n    static autoScrollToBottom: boolean = true;\r\n\r\n    /**\r\n     * @en Enables the Log system.\r\n     * @zh 启用Log系统\r\n     */\r\n    static enable(): void {\r\n        if (!Log._logdiv) {\r\n            Log._logdiv = Browser.createElement('div');\r\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\r\n            Browser.document.body.appendChild(Log._logdiv);\r\n\r\n            Log._btn = Browser.createElement(\"button\");\r\n            Log._btn.innerText = \"Hide\";\r\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\r\n            Log._btn.onclick = Log.toggle;\r\n            Browser.document.body.appendChild(Log._btn);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Hides or shows the log panel.\r\n     * @zh 隐藏或显示日志面板。\r\n     */\r\n    static toggle(): void {\r\n        var style: any = Log._logdiv.style;\r\n        if (style.display === \"\") {\r\n            Log._btn.innerText = \"Show\";\r\n            style.display = \"none\";\r\n        } else {\r\n            Log._btn.innerText = \"Hide\";\r\n            style.display = \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Adds log content.\r\n     * @param value The log content to add.\r\n     * @zh 增加日志内容。\r\n     * @param value 需要增加的日志内容。\r\n     */\r\n    static print(value: string): void {\r\n        if (Log._logdiv) {\r\n            //内容太多清理掉\r\n            if (Log._count >= Log.maxCount) Log.clear();\r\n            Log._count++;\r\n\r\n            Log._logdiv.innerText += value + \"\\n\";\r\n            //自动滚动\r\n            if (Log.autoScrollToBottom) {\r\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\r\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Clears the log.\r\n     * @zh 清理日志。\r\n     */\r\n    static clear(): void {\r\n        Log._logdiv.innerText = \"\";\r\n        Log._count = 0;\r\n    }\r\n}\r\n\r\n","//import { PerfHUD } from \"./PerfHUD\";\r\nlet DATANUM = 300;\r\n/**\r\n * @internal\r\n * @en Performance data class, used to store and manage performance-related data.\r\n * @zh 性能数据类，用于存储和管理性能相关的数据。\r\n */\r\nexport class PerfData {\r\n    /**\r\n     * @en A unique identifier for the performance data.\r\n     * @zh 性能数据的唯一标识符。\r\n     */\r\n    id: number;\r\n    /**\r\n     * @en The name of the performance data.\r\n     * @zh 性能数据的名称。\r\n     */\r\n    name: string;\r\n    /**\r\n     * @en The color value associated with the performance data.\r\n     * @zh 与性能数据关联的颜色值。\r\n     */\r\n    color: number;\r\n    /**\r\n     * @en The scale factor for the performance data.\r\n     * @zh 性能数据的缩放因子。\r\n     */\r\n    scale: number = 1.0;\r\n    /**\r\n     * @en An array to store the performance data points.\r\n     * @zh 存储性能数据点的数组。\r\n     */\r\n    datas: any[] = new Array(DATANUM);\r\n    /**\r\n     * @en The current position in the data array for new data points.\r\n     * @zh 新数据点在数据数组中的当前位置。\r\n     */\r\n    datapos: number = 0;\r\n    /**\r\n     * @en Constructor for the PerfData class.\r\n     * Initializes a new performance metric with the given parameters.\r\n     * @param id Unique identifier for the metric\r\n     * @param color Color representation for the metric\r\n     * @param name Descriptive name of the metric\r\n     * @param scale Scaling factor for the metric values\r\n     * @zh PerfData类的构造函数。\r\n     * 使用给定的参数初始化一个新的性能数据。\r\n     * @param id 性能数据的唯一标识符\r\n     * @param color 性能数据的颜色表示\r\n     * @param name 性能数据的描述性名称\r\n     * @param scale 性能数据的缩放因子\r\n     */\r\n    constructor(id: number, color: number, name: string, scale: number) {\r\n        this.id = id;\r\n        this.color = color;\r\n        this.name = name;\r\n        this.scale = scale;\r\n    }\r\n    /**\r\n     * @en Adds a new data point to the performance data.\r\n     * @param v The value of the new data point to be added.\r\n     * @zh 向性能数据添加一个新的数据点。\r\n     * @param v 要添加的新数据点的值。\r\n     */\r\n    addData(v: number): void {\r\n        this.datas[this.datapos] = v;\r\n        this.datapos++;\r\n        this.datapos %= DATANUM;\r\n    }\r\n}\r\n\r\n","import { PerfData } from \"./PerfData\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Context } from \"../renders/Context\"\r\n/**\r\n * @internal\r\n * @en Performance Heads-Up Display (HUD) class.\r\n * This class provides a visual representation of various performance metrics over time.\r\n * @zh 性能的抬头显示器（HUD）类。\r\n * 该类提供了各种性能指标随时间变化的可视化表示。\r\n */\r\nexport class PerfHUD extends Sprite {\r\n    /** \r\n    * @en Last recorded timestamp for performance data\r\n    * @zh 上次记录的性能数据时间戳\r\n    */\r\n    private static _lastTm: number = 0;\t//perf Data\r\n    /** \r\n     * @en Function to get current time\r\n     * @zh 获取当前时间的函数\r\n     */\r\n    private static _now: () => number = null;\r\n    /** \r\n     * @en Array to store different performance data sets\r\n     * @zh 存储不同性能数据集的数组\r\n     */\r\n    private datas: any[] = [];\r\n    /** \r\n     * @en Number of data points to display\r\n     * @zh 要显示的数据点数量\r\n     */\r\n    static DATANUM: number = 300;\r\n\r\n    /**\r\n     * @en An array to store x-axis data for the HUD display.\r\n     * @zh 存储 HUD 显示的 x 轴数据的数组。\r\n     */\r\n    xdata: any[] = new Array(PerfHUD.DATANUM);\r\n    /**\r\n     * @en An array to store y-axis data for the HUD display.\r\n     * @zh 存储 HUD 显示的 y 轴数据的数组。\r\n     */\r\n    ydata: any[] = new Array(PerfHUD.DATANUM);\r\n\r\n    /**\r\n     * @en The width of the HUD display area.\r\n     * @zh HUD 显示区域的宽度。\r\n     */\r\n    hud_width: number = 800;\r\n    /**\r\n     * @en The height of the HUD display area.\r\n     * @zh HUD 显示区域的高度。\r\n     */\r\n    hud_height: number = 200;\r\n\r\n    /**\r\n     * @en The minimum value for vertical scale of the HUD.\r\n     * @zh HUD 垂直尺度的最小值。\r\n     */\r\n    gMinV: number = 0;\r\n    /**\r\n     * @en The maximum value for vertical scale of the HUD.\r\n     * @zh HUD 垂直尺度的最大值。\r\n     */\r\n    gMaxV: number = 100;\r\n\r\n    private textSpace: number = 40;\t//留给刻度文字的\r\n    /**\r\n     * @en Static reference to a PerfHUD instance.\r\n     * @zh PerfHUD实例的静态引用。\r\n     */\r\n    static inst: PerfHUD;\r\n\r\n    private _now: Function;\r\n    private sttm: number = 0;\r\n\r\n    static drawTexTm: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n        PerfHUD.inst = this;\r\n        this._renderType |= SpriteConst.CUSTOM;\r\n        this._setCustomRender();\r\n\r\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\r\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\r\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\r\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\r\n    }\r\n\r\n    /** \r\n     * @en Function to get current time\r\n     * @zh 获取当前时间的函数\r\n     */\r\n    //TODO:coverage\r\n    now(): number {\r\n        return PerfHUD._now();\r\n    }\r\n\r\n    /**\r\n     * @en Start the performance measurement.\r\n     * @zh 开始性能测量。\r\n     */\r\n    //TODO:coverage\r\n    start(): void {\r\n        this.sttm = PerfHUD._now();\r\n    }\r\n\r\n    /**\r\n     * @en End the performance measurement and update the value.\r\n     * @zh 结束性能测量并更新值。\r\n     */\r\n    //TODO:coverage\r\n    end(i: number): void {\r\n        var dt: number = PerfHUD._now() - this.sttm;\r\n        this.updateValue(i, dt);\r\n    }\r\n\r\n    /**\r\n     * @en Configure the size of the HUD display area.\r\n     * @zh 配置 HUD 显示区域的大小。\r\n     */\r\n    //TODO:coverage\r\n    config(w: number, h: number): void {\r\n        this.hud_width = w;\r\n        this.hud_height = h;\r\n    }\r\n\r\n    /**\r\n     * @en Add a new data definition to the HUD.\r\n     * @zh 添加一个新的数据定义到 HUD。\r\n     */\r\n    //TODO:coverage\r\n    addDataDef(id: number, color: number, name: string, scale: number): void {\r\n        this.datas[id] = new PerfData(id, color, name, scale);\r\n    }\r\n\r\n    /**\r\n     * @en Update the value of a specific data point.\r\n     * @zh 更新特定数据点的值。\r\n     */\r\n    //TODO:coverage\r\n    updateValue(id: number, v: number): void {\r\n        this.datas[id].addData(v);\r\n    }\r\n\r\n    /**\r\n     * @en Convert a value to its corresponding y-coordinate on the HUD.\r\n     * @zh 将值转换为其在 HUD 上对应的 y 坐标。\r\n     */\r\n    //TODO:coverage\r\n    v2y(v: number): number {\r\n        // var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n    }\r\n\r\n    /**\r\n     * @en Draw a horizontal line on the HUD with a label.\r\n     * @zh 在 HUD 上绘制带有标签的水平线。\r\n     */\r\n    //TODO:coverage\r\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\r\n        var sx: number = this._x;\r\n        // var ex: number = this._x + this.hud_width;\r\n        var sy: number = this.v2y(v);\r\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\r\n        sx += this.textSpace;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     * @en Custom render method for the HUD.\r\n     * @param ctx The rendering context.\r\n     * @param x The x-coordinate of the HUD.\r\n     * @param y The y-coordinate of the HUD.\r\n     * @zh HUD 的自定义渲染方法。\r\n     * @param ctx 渲染上下文。\r\n     * @param x HUD 的 x 坐标。\r\n     * @param y HUD 的 y 坐标。\r\n     */\r\n    customRender(ctx: Context, x: number, y: number): void {\r\n        var now: number = performance.now();;\r\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\r\n        this.updateValue(0, now - PerfHUD._lastTm);\r\n        PerfHUD._lastTm = now;\r\n\r\n        ctx.save();\r\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\r\n        ctx.globalAlpha = 0.9;\r\n        /*\r\n        for ( var i = 0; i < gMaxV; i+=30) {\r\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\r\n        }\r\n        */\r\n        this.drawHLine(ctx, 0, 'green', '    0');\r\n        this.drawHLine(ctx, 10, 'green', '  10');\r\n        this.drawHLine(ctx, 16.667, 'red', ' ');\r\n        this.drawHLine(ctx, 20, 'green', '50|20');\r\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\r\n        this.drawHLine(ctx, 50, 'green', '20|50');\r\n        this.drawHLine(ctx, 100, 'green', '10|100');\r\n\r\n        //数据\r\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\r\n            var cd: PerfData = this.datas[di];\r\n            if (!cd) continue;\r\n            var dtlen: number = cd.datas.length;\r\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\r\n            var cx: number = cd.datapos;\r\n            var _cx: number = this._x + this.textSpace;\r\n            ctx.fillStyle = cd.color;\r\n            //开始部分\r\n            /*\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = cd.color;\r\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n            cx++;\r\n            _cx += dx;\r\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\r\n                _cx += dx;\r\n            }\r\n            ctx.stroke();\r\n            */\r\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\r\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                sty = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n","import { CacheManger } from \"./CacheManger\";\r\nimport { Pool } from \"./Pool\";\r\n\r\n/**\r\n * @private\r\n * @en A manager for object caching based on a count limit.\r\n * @zh 基于个数的对象缓存管理器\r\n */\r\nexport class PoolCache {\r\n\r\n    //TODO:\r\n    /**\r\n     * @en The identifier for objects within the Pool.\r\n     * @zh 对象在Pool中的标识。\r\n     */\r\n    sign: string;\r\n    /**\r\n     * @en The maximum number of objects allowed in the cache.\r\n     * @zh 允许缓存的最大数量。\r\n     */\r\n    maxCount: number = 1000;\r\n\r\n    /**\r\n     * @en Get the list of cached objects.\r\n     * @zh 获取缓存的对象列表。\r\n     */\r\n    getCacheList(): any[] {\r\n        return Pool.getPoolBySign(this.sign);\r\n    }\r\n\r\n    /**\r\n     * @en Attempt to clear the cache.\r\n     * @param force If true, force the cache to be cleared.\r\n     * @zh 尝试清理缓存。\r\n     * @param force 如果为 true，则强制清理缓存。\r\n     */\r\n    tryDispose(force: boolean): void {\r\n        var list: any[];\r\n        list = Pool.getPoolBySign(this.sign);\r\n        if (list.length > this.maxCount) {\r\n            list.splice(this.maxCount, list.length - this.maxCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Add a manager for object caching to the pool.\r\n     * @param sign The identifier for objects within the Pool.\r\n     * @param maxCount The maximum number of objects allowed in the cache. Defaults to 100 if not provided.\r\n     * @zh 向池中添加对象缓存管理器。\r\n     * @param sign 对象在Pool中的标识\r\n     * @param maxCount 允许缓存的最大数量，默认为100\r\n     */\r\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\r\n        var cache: PoolCache;\r\n        cache = new PoolCache();\r\n        cache.sign = sign;\r\n        cache.maxCount = maxCount;\r\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\r\n    }\r\n}\r\n\r\n","import { Pool } from \"./Pool\";\r\nimport { Tween } from \"./Tween\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Utils } from \"./Utils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * @en When the entire slow motion ends, it will be scheduled\r\n * @zh 整个缓动结束的时候会调度\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * @en When the slow motion reaches the label, it will be scheduled\r\n * @zh 当缓动到达标签时会调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * @en TimeLine is a class used to create timeline animations.\r\n * @zh TimeLine 是一个用来创建时间轴动画的类。\r\n */\r\nexport class TimeLine extends EventDispatcher {\r\n\r\n    private _labelDic: any;\r\n    private _tweenDic: any = {};\r\n    private _tweenDataList: any[] = [];\r\n    private _endTweenDataList: any[];//以结束时间进行排序\r\n    private _currTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _startTime: number = 0;\r\n    /**当前动画数据播放到第几个了*/\r\n    private _index: number = 0;\r\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\r\n    private _gidIndex: number = 0;\r\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\r\n    private _firstTweenDic: any = {};\r\n    /**是否需要排序*/\r\n    private _startTimeSort: boolean = false;\r\n    private _endTimeSort: boolean = false;\r\n    /**是否循环*/\r\n    private _loopKey: boolean = false;\r\n    /**\r\n     * @en Scaling the speed of animation playback.\r\n     * @zh 缩放动画播放的速度。\r\n     */\r\n    scale: number = 1;\r\n\r\n    private _frameRate: number = 60;\r\n    private _frameIndex: number = 0;\r\n    private _total: number = 0;\r\n\r\n    /**\r\n     * @en Controls an object to move to a target position.\r\n     * @param target The object to be controlled.\r\n     * @param props The properties of the object to be controlled.\r\n     * @param duration The duration of the TWEEN for the object.\r\n     * @param ease The type of easing.\r\n     * @param offset The time offset relative to the previous object (in milliseconds).\r\n     * @returns An instance of TimeLine.\r\n     * @zh 控制一个对象，从当前位置移动到目标位置。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).to(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * @en From the props attribute, slow down to the current state.\r\n     * @param target The target object whose properties will be changed.\r\n     * @param props The properties to control the object.\r\n     * @param duration The duration of the TWEEN for the object.\r\n     * @param ease The type of easing function.\r\n     * @param offset The time offset relative to the previous object (in milliseconds).\r\n     * @zh 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).from(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * @en Controls an object to move to a target position.\r\n     * @param target The object to be controlled.\r\n     * @param props The properties to be changed during the TWEEN.\r\n     * @param duration The duration of the TWEEN for the object.\r\n     * @param ease The easing function to be used.\r\n     * @param offset The time offset from the start of the previous TWEEN (in milliseconds).\r\n     * @returns An instance of TimeLine.\r\n     * @zh 控制一个对象，从当前位置移动到目标位置。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, true);\r\n    }\r\n\r\n    /**\r\n     * @en From the props attribute, slow down to the current state.\r\n     * @param target The target object whose properties are to be tweened.\r\n     * @param props The properties to be controlled and their target values.\r\n     * @param duration The duration of the tween for the target object.\r\n     * @param ease The type of easing function to be used for the tween.\r\n     * @param offset The time offset in milliseconds to delay the start of the tween relative to the previous tween.\r\n     * @zh 从 props 属性，缓动到当前状态。\r\n     * @param target 目标对象，其属性将被缓动。\r\n     * @param props 要控制的对象属性及其目标值。\r\n     * @param duration 对象缓动的持续时间。\r\n     * @param ease 缓动类型，用于指定缓动效果的函数。\r\n     * @param offset 相对于上一个缓动，延迟启动当前缓动的时间偏移量（单位：毫秒）。。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, false);\r\n    }\r\n\r\n    /** @private */\r\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.isTo = isTo;\r\n        tTweenData.type = 0;\r\n        tTweenData.target = target;\r\n        tTweenData.duration = duration;\r\n        tTweenData.data = props;\r\n        tTweenData.startTime = this._startTime + offset;\r\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\r\n        tTweenData.ease = ease;\r\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\r\n        this._tweenDataList.push(tTweenData);\r\n        this._startTimeSort = true;\r\n        this._endTimeSort = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Adds a label to the timeline at a specified offset from the previous animation.\r\n     * @param label The name of the label to add.\r\n     * @param offset The offset time in milliseconds from the previous animation.\r\n     * @zh 在时间队列中加入一个标签，相对于上一个动画的偏移时间。\r\n     * @param\tlabel\t标签名称。\r\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\r\n     */\r\n    addLabel(label: string, offset: number): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.type = 1;\r\n        tTweenData.data = label;\r\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\r\n        this._labelDic || (this._labelDic = {});\r\n        this._labelDic[label] = tTweenData;\r\n        this._tweenDataList.push(tTweenData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @en Removes a specified label from the timeline.\r\n     * @param label The label to remove\r\n     * @zh 移除指定的标签。\r\n     * @param label 要删除的标签.\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (this._labelDic && this._labelDic[label]) {\r\n            var tTweenData: tweenData = this._labelDic[label];\r\n            if (tTweenData) {\r\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\r\n                if (tIndex > -1) {\r\n                    this._tweenDataList.splice(tIndex, 1);\r\n                }\r\n            }\r\n            delete this._labelDic[label];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Jumps to a specific time in the animation.\r\n     * @param time The time in milliseconds to jump to within the animation.\r\n     * @zh 动画从整个动画的某一时间开始。\r\n     * @param time 在动画中跳转到的时间（以毫秒为单位）。\r\n     */\r\n    gotoTime(time: number): void {\r\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\r\n        var tTween: Tween;\r\n        var tObject: any;\r\n        for (var p in this._firstTweenDic) {\r\n            tObject = this._firstTweenDic[p];\r\n            if (tObject) {\r\n                for (var tDataP in tObject) {\r\n                    if (tDataP in tObject.diyTarget) {\r\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this._currTime = time;\r\n        this._lastTime = Browser.now();\r\n        var tTweenDataCopyList: any[];\r\n        if (this._endTweenDataList == null || this._endTimeSort) {\r\n            this._endTimeSort = false;\r\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.endTime > paraB.endTime) {\r\n                    return 1;\r\n                } else if (paraA.endTime < paraB.endTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            tTweenDataCopyList.sort(Compare);\r\n        } else {\r\n            tTweenDataCopyList = this._endTweenDataList\r\n        }\r\n\r\n        var tTweenData: tweenData;\r\n        //叠加已经经过的关键帧数据\r\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\r\n            tTweenData = tTweenDataCopyList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    //把经历过的属性加入到对象中\r\n                    var props: any = tTweenData.data;\r\n                    if (tTweenData.isTo) {\r\n                        for (var tP in props) {\r\n                            tTweenData.target[tP] = props[tP];\r\n                        }\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //创建当前正在行动的TWEEN;\r\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\r\n            tTweenData = this._tweenDataList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\r\n                    tTween._updateEase(this._currTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Jump to a specific label and start playing from there.\r\n     * @param Label The name of the label to jump to.\r\n     * @zh 跳转到指定的标签并从那里开始播放。\r\n     * @param Label 要跳转的标签名。\r\n     */\r\n    gotoLabel(Label: string): void {\r\n        if (this._labelDic == null) return;\r\n        var tLabelData: tweenData = this._labelDic[Label];\r\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\r\n    }\r\n\r\n    /**\r\n     * @en Pause the entire animation.\r\n     * @zh 暂停整个动画。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * @en Resume playing of a paused animation.\r\n     * @zh 恢复暂停的动画播放。\r\n     */\r\n    resume(): void {\r\n        this.play(this._currTime, this._loopKey);\r\n    }\r\n\r\n    /**\r\n     * @en Play the animation from a specified time point or label.\r\n     * @param timeOrLabel The time point or label name to start playing from.\r\n     * @param loop Whether to loop the playback.\r\n     * @zh 从指定的时间点或标签名播放动画。\r\n     * @param timeOrLabel 开始播放的时间点或标签名。\r\n     * @param loop 是否循环播放。\r\n     */\r\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\r\n        if (!this._tweenDataList) return;\r\n        if (this._startTimeSort) {\r\n            this._startTimeSort = false;\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.startTime > paraB.startTime) {\r\n                    return 1;\r\n                } else if (paraA.startTime < paraB.startTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            this._tweenDataList.sort(Compare);\r\n\r\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\r\n                var tTweenData: tweenData = this._tweenDataList[i];\r\n                if (tTweenData != null && tTweenData.type == 0) {\r\n                    var tTarget: any = tTweenData.target;\r\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\r\n                    var tSrcData: any = null;\r\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\r\n                    if (this._firstTweenDic[gid] == null) {\r\n                        tSrcData = {};\r\n                        tSrcData.diyTarget = tTarget;\r\n                        this._firstTweenDic[gid] = tSrcData;\r\n                    } else {\r\n                        tSrcData = this._firstTweenDic[gid];\r\n                    }\r\n                    for (var p in tTweenData.data) {\r\n                        if (tSrcData[p] == null) {\r\n                            tSrcData[p] = tTarget[p];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof (timeOrLabel) == 'string') {\r\n            this.gotoLabel(timeOrLabel);\r\n        } else {\r\n            this.gotoTime(timeOrLabel);\r\n        }\r\n        this._loopKey = loop;\r\n        this._lastTime = Browser.now();\r\n        ILaya.timer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 更新当前动画。\r\n     */\r\n    private _update(): void {\r\n        if (this._currTime >= this._startTime) {\r\n            if (this._loopKey) {\r\n                this._complete();\r\n                if (!this._tweenDataList) return;\r\n                this.gotoTime(0);\r\n            } else {\r\n                for (var p in this._tweenDic) {\r\n                    tTween = this._tweenDic[p];\r\n                    tTween.complete();\r\n                }\r\n                this.pause();\r\n                this._complete();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var tNow: number = Browser.now();\r\n        var tFrameTime: number = tNow - this._lastTime;\r\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\r\n        this._lastTime = tNow;\r\n\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween._updateEase(tCurrTime);\r\n        }\r\n\r\n        var tTween: Tween;\r\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\r\n            var tTweenData: tweenData = this._tweenDataList[this._index];\r\n            if (tCurrTime >= tTweenData.startTime) {\r\n                this._index++;\r\n                //创建TWEEN\r\n                if (tTweenData.type == 0) {\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(tCurrTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                    tTween._updateEase(tCurrTime);\r\n                } else {\r\n                    this.event(Event.LABEL, tTweenData.data);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\r\n     * @param\tindex\r\n     */\r\n    private _animComplete(index: number): void {\r\n        var tTween: Tween = this._tweenDic[index];\r\n        if (tTween) delete this._tweenDic[index];\r\n    }\r\n\r\n    /** @private */\r\n    private _complete(): void {\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @en frame index\r\n     * @zh 帧索引\r\n     */\r\n    get index(): number {\r\n        return this._frameIndex;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._frameIndex = value;\r\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\r\n    }\r\n\r\n    /**\r\n     * @en The total number of frames\r\n     * @zh 总帧数。\r\n     */\r\n    get total(): number {\r\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * @en Resets all objects, used when reusing objects.\r\n     * @zh 重置所有对象，复用对象时使用。\r\n     */\r\n    reset(): void {\r\n        var p: any;\r\n        if (this._labelDic) {\r\n            for (p in this._labelDic) {\r\n                delete this._labelDic[p];\r\n            }\r\n        }\r\n        var tTween: Tween;\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        for (p in this._firstTweenDic) {\r\n            delete this._firstTweenDic[p];\r\n        }\r\n        this._endTweenDataList = null;\r\n        if (this._tweenDataList && this._tweenDataList.length) {\r\n            var i: number, len: number;\r\n            len = this._tweenDataList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._tweenDataList[i])\r\n                    this._tweenDataList[i].destroy();\r\n            }\r\n        }\r\n        this._tweenDataList.length = 0;\r\n        this._currTime = 0;\r\n        this._lastTime = 0;\r\n        this._startTime = 0;\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this.scale = 1;\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * @en Completely destroys this object.\r\n     * @zh 彻底销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.reset();\r\n        this._labelDic = null;\r\n        this._tweenDic = null;\r\n        this._tweenDataList = null;\r\n        this._firstTweenDic = null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n * @en Class for storing tween data.\r\n * @zh 用于存储缓动数据的类。\r\n */\r\nclass tweenData {\r\n    /**\r\n     * @en Type of the tween. 0 represents TWEEN, 1 represents label.\r\n     * @zh 缓动的类型。0 代表 TWEEN，1 代表标签。\r\n     */\r\n    type: number = 0;\r\n\r\n    /**\r\n     * @en Whether it's a 'to' tween. True for 'to' tween, false for 'from' tween.\r\n     * @zh 是否为 'to' 类型的缓动。true 表示 'to' 缓动，false 表示 'from' 缓动。\r\n     */\r\n    isTo: boolean = true;\r\n\r\n    /**\r\n     * @en Start time of the tween.\r\n     * @zh 缓动的开始时间。\r\n     */\r\n    startTime: number;\r\n\r\n    /**\r\n     * @en End time of the tween.\r\n     * @zh 缓动的结束时间。\r\n     */\r\n    endTime: number;\r\n\r\n    /**\r\n     * @en Target object of the tween.\r\n     * @zh 缓动的目标对象。\r\n     */\r\n    target: any;\r\n\r\n    /**\r\n     * @en Duration of the tween.\r\n     * @zh 缓动的持续时间。\r\n     */\r\n    duration: number;\r\n\r\n    /**\r\n     * @en Easing function of the tween.\r\n     * @zh 缓动的缓动函数。\r\n     */\r\n    ease: Function;\r\n\r\n    /**\r\n     * @en Data associated with the tween.\r\n     * @zh 与缓动相关的数据。\r\n     */\r\n    data: any;\r\n    /**\r\n     * @en Destroy the tween data and recycle it to the pool.\r\n     * @zh 销毁缓动数据并将其回收到对象池。\r\n     */\r\n    destroy(): void {\r\n        this.target = null;\r\n        this.ease = null;\r\n        this.data = null;\r\n        this.isTo = true;\r\n        this.type = 0;\r\n        Pool.recover(\"tweenData\", this);\r\n    }\r\n}\r\n","export class WasmAdapter {\r\n    static instantiateWasm: (url: string, imports: any) => Promise<any>;\r\n    static locateFile: (path: string, dir: string, webDir: string) => string;\r\n    static Memory = typeof (WebAssembly) !== \"undefined\" ? WebAssembly.Memory : null;\r\n\r\n    static create(module: Function, wasmFile?: string): Function {\r\n        let webDir: string;\r\n        if (typeof document != 'undefined') {\r\n            webDir = (<HTMLScriptElement>document.currentScript)?.src;\r\n            if (webDir)\r\n                webDir = webDir.substring(0, webDir.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\r\n        }\r\n\r\n        return () => {\r\n            let moduleArg: any = {};\r\n\r\n            if (WasmAdapter.instantiateWasm != null) {\r\n                moduleArg[\"instantiateWasm\"] = function (imports: any, receiveInstance: any) {\r\n                    return WasmAdapter.instantiateWasm(wasmFile, imports).then(exports => {\r\n                        receiveInstance(exports[\"instance\"]);\r\n                        return exports;\r\n                    });\r\n                };\r\n            }\r\n\r\n            moduleArg[\"locateFile\"] = function (path: string, scriptDirectory: string) {\r\n                if (WasmAdapter.locateFile != null)\r\n                    wasmFile = WasmAdapter.locateFile(path, scriptDirectory, webDir);\r\n                else\r\n                    wasmFile = scriptDirectory + path;\r\n                return wasmFile;\r\n            }\r\n\r\n            return module(moduleArg);\r\n        };\r\n    }\r\n}","export class PerfTools {\r\n    static begin(block: string) {\r\n\r\n    }\r\n    static end(block: string) {\r\n\r\n    }\r\n}\r\n\r\nexport class PerformanceDefine {\r\n    //--------PerformanceGlobalDefine--------\r\n    static T_FPS: string;\r\n    //upload uniform count\r\n    static C_UniformBufferUploadCount: string;//GPUEngineStatisticsInfo\r\n    //buffer change count\r\n    static C_GeometryBufferUploadCount: string;//GPUEngineStatisticsInfo\r\n    //overdraw\r\n    static C_overdraw: string; //TODO\r\n    //triangle count\r\n    static C_trangleCount: string;//GPUEngineStatisticsInfo\r\n    //drawCall\r\n    static C_SetRenderPassCount: string;//GPUEngineStatisticsInfo\r\n    static C_DrawCallCount: string;//GPUEngineStatisticsInfo\r\n    static C_Instancing_DrawCallCount: string;//GPUEngineStatisticsInfo\r\n    static C_TransDrawCall: string;//Stat.transdrawcall     \r\n    static C_OpaqueDrawCall: string;//Stat.opaqueDrawCall   \r\n    static C_DepthCastDrawCall: string;//Stat.depthCastDrawCall \r\n    static C_ShadowDrawCall:string;//Stat.shadowMapDrawCall\r\n    //shader compile\r\n    static C_ShaderCompile: string;//GPUEngineStatisticsInfo\r\n    static T_ShaderCompile: string;//GPUEngineStatisticsInfo\r\n    //Memory\r\n    static M_GPUBuffer: string;//GPUEngineStatisticsInfo\r\n    static M_VertexBuffer: string;//GPUEngineStatisticsInfo\r\n    static M_IndexBuffer: string;//GPUEngineStatisticsInfo\r\n    static M_UniformBlockBuffer: string;//GPUEngineStatisticsInfo\r\n    static RC_GPUBuffer: string;//GPUEngineStatisticsInfo\r\n    static RC_VertexBuffer: string;//GPUEngineStatisticsInfo\r\n    static RC_IndexBuffer: string;//GPUEngineStatisticsInfo\r\n    static RC_UniformBlockBuffer: string;//GPUEngineStatisticsInfo\r\n    //Texture\r\n    static M_ALLTexture: string;//GPUEngineStatisticsInfo\r\n    static M_Texture2D: string;//GPUEngineStatisticsInfo\r\n    static M_TextureCube: string;//GPUEngineStatisticsInfo\r\n    static M_Texture3D: string;//GPUEngineStatisticsInfo\r\n    static M_Texture2DArray: string;//GPUEngineStatisticsInfo\r\n    static RC_ALLTexture: string;//GPUEngineStatisticsInfo\r\n    static RC_Texture2D: string;//GPUEngineStatisticsInfo\r\n    static RC_TextureCube: string;//GPUEngineStatisticsInfo\r\n    static RC_Texture3D: string;//GPUEngineStatisticsInfo\r\n    static RC_Texture2DArray: string;//GPUEngineStatisticsInfo\r\n    static M_ALLRenderTexture: string;//GPUEngineStatisticsInfo\r\n    static RC_ALLRenderTexture: string;//GPUEngineStatisticsInfo\r\n    //--------Performance3DRenderDefine--------\r\n    //render module time\r\n    static T_CameraRender: string;//Stat.renderPassStatArray\r\n    static T_Render_OpaqueRender: string;//Stat.renderPassStatArray\r\n    static T_Render_TransparentRender: string;//Stat.renderPassStatArray\r\n    static T_Render_PostProcess: string;//Stat.renderPassStatArray\r\n    static T_Render_CameraEventCMD: string;//Stat.renderPassStatArray\r\n    static T_Render_ShadowPassMode: string;//Stat.renderPassStatArray\r\n    static T_Render_CameraOtherDest: string;//Stat.renderPassStatArray\r\n    static T_RenderPreUpdate: string;//Stat.renderPassStatArray\r\n    static T_CameraMainCull: string;//Stat.renderPassStatArray\r\n    static T_ShadowMapCull: string;//Stat.renderPassStatArray\r\n    //Volume TODO\r\n    //OtherSceneManager TODO\r\n    //render type time\r\n    static T_OnlyMeshRender: string;//Stat.renderPassStatArray\r\n    static T_OnlySkinnedMeshRender: string;//Stat.renderPassStatArray\r\n    static T_OnlyShurikenParticleRender: string;//Stat.renderPassStatArray\r\n    static T_OtherRender: string;//Stat.renderPassStatArray\r\n    //render count\r\n    static C_Sprite3DCount: string;//Stat.sprite3DCount\r\n    static C_BaseRenderCount: string;//Stat.renderNode\r\n    static C_MeshRenderCount: string;//Stat.meshRenderNode\r\n    static C_SkinnedMeshRenderCount: string;//Stat.skinRenderNode\r\n    static C_ShurikenParticleRenderCount: string;//Stat.ParticleRenderNode\r\n    //Animator\r\n    static T_AnimatorUpdate: string;\r\n    static T_SkinBoneUpdate: string;\r\n    static T_ShurikenUpdate: string;\r\n    //--------Performance3DPhysicsDefine--------\r\n    static T_Physics_Simulation: string;\r\n    static T_Physics_UpdateNode: string;\r\n    static T_PhysicsEvent: string;\r\n    static C_PhysicsEventCount: string;\r\n    static T_PhysicsCollider: string;\r\n    static T_PhysicsTrigger: string;\r\n    static T_PhysicsColliderEnter: string;\r\n    static T_PhysicsColliderExit: string;\r\n    static T_PhysicsColliderStay: string;\r\n    static T_PhysicsTriggerEnter: string;\r\n    static T_PhysicsTriggerExit: string;\r\n    static T_PhysicsTriggerStay: string;\r\n    static C_PhysicaDynamicRigidBody: string;\r\n    static C_PhysicaStaticRigidBody: string;\r\n    static C_PhysicaKinematicRigidBody: string;\r\n    static C_PhysicaCharacterController: string;\r\n    static C_PhysicsJoint: string;\r\n    //--------PerformanceLoadDefine--------\r\n    static T_LoadResourceTime: string;//Loader.LoaderStat_LoadResourceTime\r\n    static C_LoadResourceCount: string;//Loader.LoaderStat_LoaderResourceCount\r\n    static C_LoadRequestCount: string;//Loader.LoaderStat_LoadRequestCount\r\n    static T_LoadRequestTime:string//Loader.LoaderStat_LoadRequestTime\r\n    //--------Performance2DRenderDefine--------\r\n    static T_UITime: string;\r\n    static C_UICount: string;\r\n    static C_DrawCount: string;\r\n    static T_UIRender: string;\r\n    //--------Performance2DPhysicsDefine--------\r\n}\r\n(window as any).PerformanceDefine = PerformanceDefine;\r\n\r\n/**\r\n * 性能统计开始\r\n * @param block 统计标识（例如：PerformanceDefine.SCENE3D_RENDER）\r\n * @constructor\r\n */\r\nexport function PERF_BEGIN(block: string): void {\r\n    PerfTools.begin(block);\r\n}\r\n(window as any).PERF_BEGIN = PERF_BEGIN;\r\n/**\r\n * 性能统计结束\r\n * @param block 统计标识（例如：PerformanceDefine.SCENE3D_RENDER）\r\n * @constructor\r\n */\r\nexport function PERF_END(block: string): void {\r\n    PerfTools.end(block);\r\n}\r\n\r\n(window as any).PERF_BEGIN = PERF_END;\r\n\r\n\r\nexport function PERF_FRAMECLEAR() {\r\n    //清空上一帧的统计数据\r\n    //除了M和RC的统计数据，其他的都需要清空\r\n}\r\n(window as any).PERF_FRAMECLEAR = PERF_FRAMECLEAR;\r\n","import { IUniformBufferUser } from \"./IUniformBufferUser\";\r\nimport { UniformBufferCluster } from \"./UniformBufferCluster\";\r\n\r\n/**\r\n * Uniform内存块（小内存块）\r\n */\r\nexport class UniformBufferBlock {\r\n    sn: number; //序列号\r\n    cluster: UniformBufferCluster; //大内存管理对象\r\n    index: number; //在大内存中的序号\r\n    offset: number; //在大内存中的偏移\r\n    size: number; //实际尺寸\r\n    alignedSize: number; //字节对齐后的尺寸\r\n    uploadNum: number; //上传次数\r\n    moved: boolean; //是否已经完成移动\r\n    user: IUniformBufferUser; //内存块使用者\r\n    destroyed: boolean = false; //该对象是否已经销毁\r\n\r\n    constructor(sn: number, cluster: UniformBufferCluster, index: number, size: number, alignedSize: number, user: IUniformBufferUser) {\r\n        this.sn = sn;\r\n        this.cluster = cluster;\r\n        this.index = index;\r\n        this.size = size;\r\n        this.alignedSize = alignedSize;\r\n        this.offset = alignedSize * index;\r\n        this.user = user;\r\n        this.uploadNum = 0;\r\n        this.moved = false;\r\n    }\r\n\r\n    /**\r\n     * 标记块需要上传\r\n     */\r\n    needUpload() {\r\n        this.uploadNum++;\r\n        this.cluster.needUpload[this.index] = true;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        if (!this.destroyed) {\r\n            this.cluster = null;\r\n            this.user = null;\r\n            this.destroyed = true;\r\n            return true;\r\n        }\r\n        console.warn('UniformBufferBlock: object alreay destroyed!');\r\n        return false;\r\n    }\r\n}","import { IUniformBufferUser } from \"./IUniformBufferUser\";\r\nimport { UniformBufferBlock } from \"./UniformBufferBlock\";\r\nimport { UniformBufferManager, roundUp } from \"./UniformBufferManager\";\r\n\r\n/**\r\n * Uniform内存块（大内存块）\r\n */\r\nexport class UniformBufferCluster {\r\n    sn: number = 0; //序号\r\n    totalSize: number; //总体尺寸\r\n    blockSize: number; //小块尺寸\r\n    blockNum: number; //小块总数量\r\n    needUpload: boolean[] = []; //哪些块需要上传\r\n    destroyed: boolean = false; //该对象是否已经销毁\r\n\r\n    buffer: any; //GPU内存对象\r\n    blocks: UniformBufferBlock[] = []; //小内存块，如果成员为null，表示空洞\r\n    expand: number = 10; //每次扩展数量\r\n\r\n    data: ArrayBuffer; //数据\r\n    move: Uint8Array; //移动时的临时数据\r\n\r\n    manager: UniformBufferManager; //管理器\r\n\r\n    constructor(blockSize: number, blockNum: number, manager: UniformBufferManager) {\r\n        this.manager = manager;\r\n        this.blockSize = blockSize;\r\n        this.blockNum = blockNum;\r\n        this.totalSize = blockSize * blockNum;\r\n\r\n        this.data = new ArrayBuffer(this.totalSize);\r\n        this.move = new Uint8Array(this.blockSize);\r\n\r\n        this.buffer = this.manager.createGPUBuffer(this.totalSize);\r\n\r\n        this.needUpload.length = this.blockNum;\r\n        this.needUpload.fill(false);\r\n        this.manager.statisGPUMemory(this.totalSize);\r\n    }\r\n\r\n    get usedNum() {\r\n        return this.blocks.length;\r\n    }\r\n\r\n    /**\r\n     * 扩展GPU缓冲区\r\n     */\r\n    private _expandBuffer() {\r\n        //计算扩展尺寸\r\n        let expandNum = this.blockNum;\r\n        this.blockNum += this.expand;\r\n        if (this.blockNum > this.manager.clusterMaxBlock)\r\n            this.blockNum = this.manager.clusterMaxBlock;\r\n        expandNum = this.blockNum - expandNum;\r\n        this.totalSize = this.blockSize * this.blockNum;\r\n        const expandSize = this.blockSize * this.expand;\r\n        this.needUpload = this.needUpload.concat(new Array(expandNum).fill(false));\r\n\r\n        //创建一个新的CPUBuffer，将旧数据拷贝过来\r\n        const newArrayBuffer = new ArrayBuffer(this.totalSize);\r\n        new Uint8Array(newArrayBuffer).set(new Uint8Array(this.data));\r\n        this.data = newArrayBuffer;\r\n\r\n        //创建一个新的GPUBuffer\r\n        this.buffer = this.manager.createGPUBuffer(this.totalSize);\r\n\r\n        //统计GPU内存使用量\r\n        this.manager.statisGPUMemory(expandSize);\r\n\r\n        //通知所有使用者\r\n        this.blocks.forEach(block => block && block.user.notifyGPUBufferChange());\r\n\r\n        //通知渲染上下文\r\n        this.manager.renderContext.notifyGPUBufferChange();\r\n\r\n        //console.log(\"GPUBuffer expand, newSize =\", this.totalSize / 1024 + 'KB,', 'blockSize = ' + this.blockSize, 'blockNum = ' + this.blockNum);\r\n    }\r\n\r\n    /**\r\n     * 移动内存块，后面的块向前移动，填补指定的内存空洞\r\n     * @param index \r\n     */\r\n    private _moveBlock(index: number) {\r\n        const len = this.blocks.length;\r\n        if (index >= len) return;\r\n        const dataView = new Uint8Array(this.data);\r\n        const size = this.blockSize;\r\n        for (let i = index + 1; i < len; i++) {\r\n            const start = i * size;\r\n            const end = start + size;\r\n            const target = start - size;\r\n            dataView.copyWithin(target, start, end);\r\n            this.needUpload[i - 1] = this.needUpload[i];\r\n            this.blocks[i - 1] = this.blocks[i];\r\n            if (this.blocks[i - 1]) {\r\n                this.blocks[i - 1].index--;\r\n                this.blocks[i - 1].offset -= size;\r\n                this.blocks[i - 1].user.notifyGPUBufferChange();\r\n            }\r\n        }\r\n        this.blocks.length--;\r\n\r\n        //通知渲染上下文\r\n        this.manager.renderContext.notifyGPUBufferChange();\r\n    }\r\n\r\n    /**\r\n     * 获取内存块\r\n     * @param size 需求尺寸\r\n     * @param user 使用者\r\n     */\r\n    getBlock(size: number, user: IUniformBufferUser) {\r\n        const alignedSize = roundUp(size, this.manager.byteAlign);\r\n        if (alignedSize !== this.blockSize) {\r\n            console.warn('WebGPUBufferCluster: 获取内存块时, 长度错误!');\r\n            return null;\r\n        }\r\n\r\n        const index = this._getBlockWithExpand();\r\n        const bb = new UniformBufferBlock(this.manager.snCounter++, this, index, size, alignedSize, user);\r\n        this.blocks[index] = bb;\r\n        return bb;\r\n    }\r\n\r\n    /**\r\n     * 释放内存块\r\n     */\r\n    freeBlock(bb: UniformBufferBlock) {\r\n        //根据传入的块信息，将块信息从used数组中移除，并添加到free数组中\r\n        const index = this.blocks.indexOf(bb);\r\n        if (index !== -1) {\r\n            if (index === this.blocks.length - 1) { //删除最后一个\r\n                this.blocks.length--;\r\n            } else {\r\n                this.blocks[index] = null; //变成空洞\r\n                this.needUpload[index] = false;\r\n            }\r\n            bb.destroy();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 将数据上传到GPU内存，合并相邻块，尽可能减少上传次数\r\n     */\r\n    upload() {\r\n        let count = 0;\r\n        let bytes = 0;\r\n        let next = false;\r\n        let startIndex = -1;\r\n        let endIndex = -1;\r\n        let offset = 0;\r\n        let size = 0;\r\n\r\n        //遍历needUpload数组，找到需要上传的块，然后合并相邻块，上传数据\r\n        for (let i = 0, len = this.blocks.length; i < len; i++) {\r\n            if (this.needUpload[i]) {\r\n                if (startIndex === -1)\r\n                    startIndex = i;\r\n                endIndex = i;\r\n                next = true;\r\n                this.needUpload[i] = false;\r\n            } else {\r\n                //如果当前块不需要上传，且之前有需要上传的块，则上传数据\r\n                if (next) {\r\n                    offset = startIndex * this.blockSize;\r\n                    size = (endIndex - startIndex + 1) * this.blockSize;\r\n                    this.manager.writeBuffer(this.buffer, this.data, offset, size);\r\n                    count++;\r\n                    bytes += size;\r\n                    startIndex = -1;\r\n                    endIndex = -1;\r\n                    next = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        //如果最后一个块需要上传，则上传数据\r\n        if (next) {\r\n            offset = startIndex * this.blockSize;\r\n            size = (endIndex - startIndex + 1) * this.blockSize;\r\n            this.manager.writeBuffer(this.buffer, this.data, offset, size);\r\n            count++;\r\n            bytes += size;\r\n        }\r\n\r\n        //记录上传次数，字节数\r\n        this.manager.uploadNum += count;\r\n        this.manager.uploadByte += bytes;\r\n        this.manager.statisUpload(count, bytes);\r\n    }\r\n\r\n    /**\r\n     * 优化块顺序，上传频繁的块排前面\r\n     */\r\n    optimize() {\r\n        for (let i = this.blocks.length - 1; i > -1; i--) {\r\n            const bb = this.blocks[i];\r\n            if (bb && bb.uploadNum > this.manager.uploadThreshold && !bb.moved && i > 0) {\r\n                const needUpload = this.needUpload[i];\r\n                const size = this.blockSize;\r\n                const dataView = new Uint8Array(this.data);\r\n                this.move.set(new Uint8Array(this.data, size * i, size));\r\n                for (let j = i - 1; j >= 0; j--) {\r\n                    const start = j * size;\r\n                    const end = start + size;\r\n                    const target = start + size;\r\n                    dataView.copyWithin(target, start, end);\r\n                    this.needUpload[j + 1] = this.needUpload[j];\r\n                    this.blocks[j + 1] = this.blocks[j];\r\n                    if (this.blocks[j + 1]) {\r\n                        this.blocks[j + 1].index++;\r\n                        this.blocks[j + 1].offset += size;\r\n                        this.blocks[j + 1].user.notifyGPUBufferChange();\r\n                    }\r\n                }\r\n                dataView.set(this.move);\r\n                this.needUpload[0] = needUpload;\r\n                bb.index = 0;\r\n                bb.offset = 0;\r\n                bb.moved = true;\r\n                this.blocks[0] = bb;\r\n                this.blocks[0].user.notifyGPUBufferChange();\r\n                this.manager.renderContext.notifyGPUBufferChange(); //清理renderBuddle\r\n                this.manager.moveNum++;\r\n                break; //每帧只处理一个块\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除空洞\r\n     */\r\n    removeHole() {\r\n        for (let i = this.blocks.length - 1; i > -1; i--) {\r\n            if (!this.blocks[i]) {\r\n                this._moveBlock(i);\r\n                break; //每帧只处理一个块\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理，释放所有内存块，回到内存未占用状态\r\n     * @param blockNum 保留多少小块\r\n     */\r\n    clear(blockNum?: number) {\r\n        this.blocks.forEach(block => block && block.destroy());\r\n        this.blocks.length = 0;\r\n        if (blockNum != undefined && blockNum > 0 && blockNum !== this.blockNum) {\r\n            this.blockNum = blockNum;\r\n            this.totalSize = this.blockSize * this.blockNum;\r\n            this.buffer = this.manager.createGPUBuffer(this.totalSize);\r\n            this.data = new ArrayBuffer(this.totalSize);\r\n        } else {\r\n            this.blockNum = 0;\r\n            this.totalSize = 0;\r\n            this.buffer = null;\r\n            this.data = null;\r\n        }\r\n        this.needUpload.length = this.blockNum;\r\n        this.needUpload.fill(false);\r\n    }\r\n\r\n    /**\r\n     * 获取一个空闲块，如果空间不够，扩大内存块\r\n     */\r\n    private _getBlockWithExpand() {\r\n        //先查找空洞\r\n        for (let i = this.blocks.length - 1; i > -1; i--) {\r\n            if (!this.blocks[i])\r\n                return i;\r\n        }\r\n        if (this.blocks.length < this.blockNum)\r\n            return this.blocks.length;\r\n        else {\r\n            this._expandBuffer();\r\n            return this.blocks.length;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        if (!this.destroyed) {\r\n            this.clear();\r\n            this.buffer.destroy ?? this.buffer.destroy();\r\n            this.manager.statisGPUMemory(-this.totalSize);\r\n            this.destroyed = true;\r\n            return true;\r\n        }\r\n        console.warn('UniformBufferCluster: object alreay destroyed!');\r\n        return false;\r\n    }\r\n}","import { IUniformBufferUser } from \"./IUniformBufferUser\";\r\nimport { UniformBufferBlock } from \"./UniformBufferBlock\";\r\nimport { UniformBufferCluster } from \"./UniformBufferCluster\";\r\n\r\nexport type TypedArray =\r\n    | Int8Array\r\n    | Uint8Array\r\n    | Int16Array\r\n    | Uint16Array\r\n    | Int32Array\r\n    | Uint32Array\r\n    | Float32Array\r\n    | Float64Array;\r\n\r\nexport type TypedArrayConstructor =\r\n    | Int8ArrayConstructor\r\n    | Uint8ArrayConstructor\r\n    | Int16ArrayConstructor\r\n    | Uint16ArrayConstructor\r\n    | Int32ArrayConstructor\r\n    | Uint32ArrayConstructor\r\n    | Float32ArrayConstructor\r\n    | Float64ArrayConstructor;\r\n\r\n/**\r\n * 向上圆整到align的整数倍\r\n * @param n \r\n * @param align \r\n */\r\nexport function roundUp(n: number, align: number) {\r\n    return (((n + align - 1) / align) | 0) * align;\r\n}\r\n\r\n/**\r\n * 向下圆整到align的整数倍\r\n * @param n \r\n * @param align \r\n */\r\nexport function roundDown(n: number, align: number) {\r\n    const res = (((n + align - 1) / align) | 0) * align;\r\n    return res > n ? res - align : res;\r\n}\r\n\r\n/**\r\n * Uniform内存块管理\r\n */\r\nexport class UniformBufferManager {\r\n    renderContext: any; //渲染上下文对象\r\n    clustersAll: Map<number, UniformBufferCluster[]>; //所有大内存块，按尺寸分组\r\n    clustersCur: Map<number, UniformBufferCluster> //当前大内存块，按尺寸分组\r\n    useBigBuffer: boolean = true; //是否使用大内存模式\r\n    destroyed: boolean = false; //该对象是否已经销毁\r\n\r\n    snCounter: number = 0; //序号计数器\r\n    byteAlign: number = 256; //字节对齐\r\n    clusterMaxBlock: number = 256; //每个Cluster最多容纳的Block数量\r\n    uploadThreshold: number = 200; //判定为动态块的上传次数阈值\r\n\r\n    moveNum: number = 0; //内存块的移动次数\r\n    uploadNum: number = 0; //每帧上传次数\r\n    uploadByte: number = 0; //每帧上传字节数\r\n    removeHoleTimer: number = 0; //移除空洞的计时器\r\n\r\n    timeCostAvg: number = 0; //花费时间（帧平均）\r\n    timeCostSum: number = 0; //花费时间（总数）\r\n    timeCostCount: number = 0; //统计花费时间的计数器\r\n\r\n    constructor(useBigBuffer: boolean) {\r\n        this.clustersAll = new Map();\r\n        this.clustersCur = new Map();\r\n        this.useBigBuffer = useBigBuffer;\r\n    }\r\n\r\n    /**\r\n     * 添加大内存块\r\n     * @param size \r\n     * @param blockNum \r\n     */\r\n    private _addCluster(size: number, blockNum: number = 10) {\r\n        const alignedSize = roundUp(size, this.byteAlign);\r\n        const cluster = new UniformBufferCluster(alignedSize, blockNum, this);\r\n        const clusters = this.clustersAll.get(alignedSize);\r\n        if (clusters) {\r\n            clusters.push(cluster);\r\n            cluster.sn = clusters.length - 1;\r\n        }\r\n        else this.clustersAll.set(alignedSize, [cluster]);\r\n        this.clustersCur.set(alignedSize, cluster);\r\n        return cluster;\r\n    }\r\n\r\n    /**\r\n     * 移除空洞\r\n     */\r\n    private _removeHole() {\r\n        if (this.useBigBuffer) {\r\n            this.clustersAll.forEach(clusters => {\r\n                for (let i = clusters.length - 1; i > -1; i--)\r\n                    clusters[i].removeHole();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始新的一帧\r\n     */\r\n    startFrame() {\r\n        //显示上传统计信息\r\n        // const info = 'timeCost = ' + this.timeCostAvg + 'us, moveNum = ' + this.moveNum + ', uploadNum = ' + this.uploadNum + ', uploadByte = ' + this.uploadByte;\r\n        // if (this.useBigBuffer)\r\n        //     console.log('BigBuffer ' + info);\r\n        // else console.log('AloneBuffer ' + info);\r\n\r\n        //按帧计数的清零\r\n        this.uploadNum = 0;\r\n        this.uploadByte = 0;\r\n    }\r\n\r\n    /**\r\n     * 设置渲染上下文\r\n     * @param renderContext \r\n     */\r\n    setRenderContext(renderContext: any) {\r\n        this.renderContext = renderContext;\r\n    }\r\n\r\n    /**\r\n     * 获取单独的UniformBuffer\r\n     * @param size \r\n     * @param name \r\n     */\r\n    getBufferAlone(size: number, name?: string) {\r\n        const alignedSize = roundUp(size, this.byteAlign);\r\n        this.statisGPUMemory(alignedSize);\r\n        return this.createGPUBuffer(alignedSize, name);\r\n    }\r\n\r\n    /**\r\n     * 删除大内存块\r\n     * @param size \r\n     * @param sn\r\n     */\r\n    removeCluster(size: number, sn: number) {\r\n        const alignedSize = roundUp(size, this.byteAlign);\r\n        if (sn === -1) {\r\n            this.clustersAll.delete(alignedSize);\r\n            this.clustersCur.delete(alignedSize);\r\n            return;\r\n        }\r\n        const cluster = this.clustersCur.get(alignedSize);\r\n        const clusters = this.clustersAll.get(alignedSize);\r\n        if (clusters.length > sn) {\r\n            clusters.splice(sn, 1);\r\n            if (clusters.length === 0) {\r\n                this.clustersAll.delete(alignedSize);\r\n                this.clustersCur.delete(alignedSize);\r\n                return;\r\n            } else {\r\n                for (let i = sn; i < clusters.length; i++)\r\n                    clusters[i].sn--;\r\n            }\r\n        } else return;\r\n        if (cluster.sn === sn) {\r\n            if (clusters.length === 1)\r\n                this.clustersCur.set(alignedSize, clusters[0]);\r\n            else {\r\n                let index = 0;\r\n                let usedNum = clusters[0].usedNum;\r\n                for (let i = 1; i < clusters.length; i++) {\r\n                    if (clusters[i].usedNum < usedNum) {\r\n                        index = i;\r\n                        usedNum = clusters[i].usedNum;\r\n                    }\r\n                }\r\n                this.clustersCur.set(alignedSize, clusters[index]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取小内存块\r\n     * @param size \r\n     * @param user \r\n     */\r\n    getBlock(size: number, user: IUniformBufferUser) {\r\n        const alignedSize = roundUp(size, this.byteAlign);\r\n        let cluster = this.clustersCur.get(alignedSize);\r\n        if (!cluster)\r\n            return this._addCluster(alignedSize).getBlock(size, user);\r\n        if (cluster.usedNum < this.clusterMaxBlock)\r\n            return cluster.getBlock(size, user);\r\n\r\n        cluster = null;\r\n        const clusters = this.clustersAll.get(alignedSize);\r\n        for (let i = clusters.length - 1; i > -1; i--) {\r\n            if (clusters[i].usedNum < this.clusterMaxBlock) {\r\n                cluster = clusters[i];\r\n                this.clustersCur.set(alignedSize, cluster);\r\n                break;\r\n            }\r\n        }\r\n        if (cluster)\r\n            return cluster.getBlock(size, user);\r\n        return this._addCluster(alignedSize).getBlock(size, user);\r\n    }\r\n\r\n    /**\r\n     * 释放小内存块\r\n     * @param bb \r\n     */\r\n    freeBlock(bb: UniformBufferBlock) {\r\n        const cluster = bb.cluster;\r\n        if (cluster) {\r\n            if (cluster.freeBlock(bb)) {\r\n                if (cluster.usedNum === 0)\r\n                    this.removeCluster(cluster.blockSize, cluster.sn);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 上传数据\r\n     */\r\n    upload() {\r\n        if (this.useBigBuffer) {\r\n            const t = performance.now();\r\n            this.clustersAll.forEach(clusters => {\r\n                for (let i = clusters.length - 1; i > -1; i--) {\r\n                    clusters[i].upload();\r\n                    clusters[i].optimize();\r\n                }\r\n            });\r\n            this.timeCostSum += performance.now() - t;\r\n            this.timeCostCount++;\r\n            if (this.timeCostCount > 100) {\r\n                this.timeCostAvg = (this.timeCostSum / this.timeCostCount) * 1000 | 0;\r\n                this.timeCostSum = 0;\r\n                this.timeCostCount = 0;\r\n            }\r\n            this.removeHoleTimer++;\r\n            if (this.removeHoleTimer > 1000) { //定期移除内存空洞\r\n                this.removeHoleTimer = 0;\r\n                this._removeHole();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理所有内存\r\n     */\r\n    clear() {\r\n        this.clustersAll.forEach(clusters => {\r\n            for (let i = clusters.length - 1; i > -1; i--)\r\n                clusters[i].clear();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        if (!this.destroyed) {\r\n            this.clear();\r\n            this.clustersAll.clear();\r\n            this.clustersCur.clear();\r\n            this.destroyed = true;\r\n            return true;\r\n        }\r\n        console.warn('UniformBufferManager: object alreay destroyed!');\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 创建GPU内存对象\r\n     * @param size 字节长度\r\n     * @param name 名称\r\n     */\r\n    createGPUBuffer(size: number, name?: string) {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * 将数据写入GPU内存\r\n     * @param buffer GPU内存对象\r\n     * @param data CPU数据对象\r\n     * @param offset 数据在大内存中的偏移量（字节）\r\n     * @param size 写入的数据长度（字节）\r\n     */\r\n    writeBuffer(buffer: any, data: ArrayBuffer, offset: number, size: number) {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * 统计GPU内存使用量\r\n     * @param bytes 字节\r\n     */\r\n    statisGPUMemory(bytes: number) {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * 统计上传次数\r\n     * @param count 上传次数\r\n     * @param bytes 上传字节\r\n     */\r\n    statisUpload(count: number, bytes: number) {\r\n        //todo\r\n    }\r\n}","import { roundUp, UniformBufferManager } from \"./UniformBufferManager\";\r\n\r\n/**\r\n * 单独的UniformBuffer\r\n */\r\nexport class UniformBufferAlone {\r\n    buffer: any; //GPU内存\r\n    data: ArrayBuffer;\r\n    size: number; //尺寸\r\n    alignedSize: number; //字节对齐后的尺寸\r\n    manager: UniformBufferManager; //管理器\r\n    destroyed: boolean = false; //该对象是否已经销毁\r\n\r\n    constructor(size: number, manager: UniformBufferManager) {\r\n        this.data = new ArrayBuffer(size);\r\n        this.buffer = manager.getBufferAlone(size);\r\n        this.manager = manager;\r\n        this.size = size;\r\n        this.alignedSize = roundUp(size, manager.byteAlign);\r\n    }\r\n\r\n    /**\r\n     * 上传数据\r\n     */\r\n    upload() {\r\n        //上传数据\r\n        const t = performance.now();\r\n        this.manager.writeBuffer(this.buffer, this.data, 0, this.size);\r\n        this.manager.timeCostSum += performance.now() - t;\r\n        this.manager.timeCostCount++;\r\n        if (this.manager.timeCostCount > 100) {\r\n            this.manager.timeCostAvg = (this.manager.timeCostSum / this.manager.timeCostCount) * 1000 | 0;\r\n            this.manager.timeCostSum = 0;\r\n            this.manager.timeCostCount = 0;\r\n        }\r\n\r\n        //记录上传次数，字节数\r\n        this.manager.uploadNum++;\r\n        this.manager.uploadByte += this.size;\r\n        this.manager.statisUpload(1, this.size);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        if (!this.destroyed) {\r\n            this.data = null;\r\n            this.buffer.destroy ?? this.buffer.destroy();\r\n            this.manager.statisGPUMemory(-this.size);\r\n            this.destroyed = true;\r\n            return true;\r\n        }\r\n        console.warn('UniformBufferAlone: object alreay destroyed!');\r\n        return false;\r\n    }\r\n}","import { Matrix3x3 } from \"../../../../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../../maths/Vector4\";\r\nimport { ShaderData } from \"../ShaderData\";\r\nimport { IUniformBufferUser } from \"./IUniformBufferUser\";\r\nimport { UniformBufferAlone } from \"./UniformBufferAlone\";\r\nimport { UniformBufferBlock } from \"./UniformBufferBlock\";\r\nimport { TypedArray, TypedArrayConstructor, UniformBufferManager } from \"./UniformBufferManager\";\r\n\r\ntype ItemType = {\r\n    name: string, //名称\r\n    view: TypedArray, //ArrayBufferView\r\n    type: string, //int, float, vec2 ...\r\n    align: number, //字节对齐\r\n    size: number, //字节长度\r\n    elements: number, //每个数据有多少个成员，比如vec2有2个float成员\r\n    count: number, //非数组count=1，否则count=数组长度\r\n};\r\n\r\n/**\r\n * UniformBuffer使用者\r\n */\r\nexport class UniformBufferUser implements IUniformBufferUser {\r\n    name: string;\r\n    strId: string;\r\n    size: number;\r\n    items: Map<number, ItemType>;\r\n    itemNum: number;\r\n    destroyed: boolean = false; //该对象是否已经销毁\r\n\r\n    needUpload: boolean;\r\n    bufferBlock: UniformBufferBlock;\r\n    bufferAlone: UniformBufferAlone;\r\n    manager: UniformBufferManager;\r\n    data: ShaderData;\r\n    offset: number;\r\n\r\n    constructor(name: string, size: number, manager: UniformBufferManager, data: ShaderData) {\r\n        this.name = name;\r\n        this.strId = '';\r\n        this.items = new Map();\r\n        this.itemNum = 0;\r\n        this.data = data;\r\n        this.size = size;\r\n        this.manager = manager;\r\n        this.needUpload = false;\r\n\r\n        if (manager.useBigBuffer) {\r\n            this.bufferBlock = manager.getBlock(size, this);\r\n            this.offset = this.bufferBlock.offset;\r\n        } else this.bufferAlone = new UniformBufferAlone(size, manager);\r\n    }\r\n\r\n    /**\r\n     * 通知GPUBuffer改变\r\n     */\r\n    notifyGPUBufferChange() {\r\n        const offset = this.bufferBlock.offset - this.offset;\r\n        this.offset = this.bufferBlock.offset;\r\n        this.items.forEach(item => {\r\n            const tac = UniformBufferUser._typeArray(item.type);\r\n            item.view = new tac(this.bufferBlock.cluster.data, item.view.byteOffset + offset, item.size / tac.BYTES_PER_ELEMENT);\r\n        });\r\n        this.clearGPUBufferBind();\r\n        this.needUpload = true;\r\n    }\r\n\r\n    /**\r\n     * 清除GPUBuffer绑定\r\n     */\r\n    clearGPUBufferBind() { }\r\n\r\n    /**\r\n     * 添加uniform字段\r\n     * @param id \r\n     * @param name \r\n     * @param type \r\n     * @param offset \r\n     * @param align \r\n     * @param size \r\n     * @param elements \r\n     * @param count \r\n     */\r\n    addUniform(id: number, name: string, type: string, offset: number, align: number, size: number, elements: number, count: number) {\r\n        if (this.items.has(id)) return; //该Uniform已经存在\r\n        this.items.set(id, this._getUniformItem(name, UniformBufferUser._typeArray(type), type, offset, align, size, elements, count));\r\n        if (this.strId.length > 0)\r\n            this.strId += '|';\r\n        this.strId += id;\r\n        this.itemNum++;\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setUniformData(id: number, data: any) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            this.needUpload = true;\r\n            if (item.count == 1) {\r\n                switch (item.type) {\r\n                    case 'int':\r\n                    case 'float':\r\n                        item.view[0] = data;\r\n                        break;\r\n                    case 'vec2':\r\n                        item.view[0] = data.x;\r\n                        item.view[1] = data.y;\r\n                        break;\r\n                    case 'vec3':\r\n                        item.view[0] = data.x;\r\n                        item.view[1] = data.y;\r\n                        item.view[2] = data.z;\r\n                        break;\r\n                    case 'vec4':\r\n                        item.view[0] = data.x;\r\n                        item.view[1] = data.y;\r\n                        item.view[2] = data.z;\r\n                        item.view[3] = data.w;\r\n                        break;\r\n                    case 'mat3':\r\n                        for (let i = 0; i < 3; i++) {\r\n                            item.view[i * 4 + 0] = data.elements[i * 3 + 0];\r\n                            item.view[i * 4 + 1] = data.elements[i * 3 + 1];\r\n                            item.view[i * 4 + 2] = data.elements[i * 3 + 2];\r\n                        }\r\n                        break;\r\n                    case 'mat4':\r\n                        item.view.set(data.elements);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else {\r\n                const arraySize = item.count * item.elements;\r\n                const alignElements = item.size / item.count / item.view.BYTES_PER_ELEMENT;\r\n                for (let i = 0, j = 0; i < arraySize; i += item.elements, j += alignElements)\r\n                    item.view.set(data.subarray(i, i + item.elements), j);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setBool(id: number, data: boolean) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data ? 1 : 0;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setBoolArray(id: number, data: boolean[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\r\n                item.view[i] = data[i] ? 1 : 0;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setInt(id: number, data: number) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setIntArray(id: number, data: number[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\r\n                item.view[i] = data[i];\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setFloat(id: number, data: number) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setFloatArray(id: number, data: number[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\r\n                item.view[i] = data[i];\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector2(id: number, data: Vector2) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data.x;\r\n            item.view[1] = data.y;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector2Array(id: number, data: Vector2[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\r\n                item.view[i * 2 + 0] = data[i].x;\r\n                item.view[i * 2 + 1] = data[i].y;\r\n            }\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector3(id: number, data: Vector3) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data.x;\r\n            item.view[1] = data.y;\r\n            item.view[2] = data.z;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector3Array(id: number, data: Vector3[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\r\n                item.view[i * 4 + 0] = data[i].x;\r\n                item.view[i * 4 + 1] = data[i].y;\r\n                item.view[i * 4 + 2] = data[i].z;\r\n            }\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector4(id: number, data: Vector4) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view[0] = data.x;\r\n            item.view[1] = data.y;\r\n            item.view[2] = data.z;\r\n            item.view[3] = data.w;\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setVector4Array(id: number, data: Vector4[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\r\n                item.view[i * 4 + 0] = data[i].x;\r\n                item.view[i * 4 + 1] = data[i].y;\r\n                item.view[i * 4 + 2] = data[i].z;\r\n                item.view[i * 4 + 3] = data[i].w;\r\n            }\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setMatrix3x3(id: number, data: Matrix3x3) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0; i < 3; i++) {\r\n                item.view[i * 4 + 0] = data.elements[i * 3 + 0];\r\n                item.view[i * 4 + 1] = data.elements[i * 3 + 1];\r\n                item.view[i * 4 + 2] = data.elements[i * 3 + 2];\r\n            }\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setMatrix3x3Array(id: number, data: Matrix3x3[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let j = 0, len = Math.min(item.count, data.length); j < len; j++) {\r\n                for (let i = 0; i < 3; i++) {\r\n                    item.view[j * 16 + i * 4 + 0] = data[j].elements[i * 3 + 0];\r\n                    item.view[j * 16 + i * 4 + 1] = data[j].elements[i * 3 + 1];\r\n                    item.view[j * 16 + i * 4 + 2] = data[j].elements[i * 3 + 2];\r\n                }\r\n            }\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setMatrix4x4(id: number, data: Matrix4x4) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            item.view.set(data.elements);\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setMatrix4x4Array(id: number, data: Matrix4x4[]) {\r\n        const item = this.items.get(id);\r\n        if (item) {\r\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\r\n                item.view.set(data[i].elements, i * 16);\r\n            this.needUpload = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置uniform数据\r\n     * @param id \r\n     * @param data \r\n     */\r\n    setBuffer(id: number, data: Float32Array) {\r\n        this.setUniformData(id, data);\r\n    }\r\n\r\n    /**\r\n     * 获取uniformItem\r\n     * @param id \r\n     */\r\n    getUniform(id: number) {\r\n        return this.items.get(id);\r\n    }\r\n\r\n    /**\r\n     * 是否存在指定的uniform\r\n     * @param id  \r\n     */\r\n    hasUniform(id: number) {\r\n        return this.items.has(id);\r\n    }\r\n\r\n    /**\r\n     * 根据strId判断是否命中\r\n     * @param strId \r\n     */\r\n    isMe(strId: string) {\r\n        return this.strId === strId;\r\n    }\r\n\r\n    /**\r\n     * 上传数据\r\n     */\r\n    upload() {\r\n        if (this.needUpload) {\r\n            if (this.manager.useBigBuffer)\r\n                this.bufferBlock.needUpload();\r\n            else this.bufferAlone.upload();\r\n            this.needUpload = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除所有uniform\r\n     */\r\n    clear() {\r\n        if (this.manager.useBigBuffer)\r\n            new Uint8Array(this.bufferBlock.cluster.data).fill(0, this.bufferBlock.offset, this.bufferBlock.offset + this.bufferBlock.size);\r\n        else new Uint8Array(this.bufferAlone.data).fill(0);\r\n        this.strId = '';\r\n        this.items.clear();\r\n        this.itemNum = 0;\r\n        this.needUpload = false;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        if (!this.destroyed) {\r\n            if (this.manager.useBigBuffer)\r\n                this.manager.freeBlock(this.bufferBlock);\r\n            else this.bufferAlone.destroy();\r\n            this.destroyed = true;\r\n            return true;\r\n        }\r\n        console.warn('UniformBufferUser: object alreay destroyed!');\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取一个unifromItem\r\n     * @param name \r\n     * @param tac \r\n     * @param type \r\n     * @param offset \r\n     * @param align \r\n     * @param size \r\n     * @param elements \r\n     * @param count \r\n     */\r\n    protected _getUniformItem(name: string, tac: TypedArrayConstructor, type: string, offset: number, align: number, size: number, elements: number, count: number) {\r\n        let view: TypedArray;\r\n        if (this.manager.useBigBuffer)\r\n            view = new tac(this.bufferBlock.cluster.data, this.bufferBlock.offset + offset, size / tac.BYTES_PER_ELEMENT);\r\n        else view = new tac(this.bufferAlone.data, offset, size / tac.BYTES_PER_ELEMENT);\r\n        return { name, view, type, align, size, elements, count };\r\n    }\r\n\r\n    /**\r\n     * 根据type获取TypeArray类型\r\n     * @param type \r\n     */\r\n    protected static _typeArray(type: string) {\r\n        switch (type) {\r\n            case 'int':\r\n                return Int32Array;\r\n            case 'float':\r\n            case 'vec2':\r\n            case 'vec3':\r\n            case 'vec4':\r\n            case 'mat3':\r\n            case 'mat4':\r\n                return Float32Array;\r\n            default:\r\n                return Float32Array;\r\n        }\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Byte } from \"../utils/Byte\"\r\n\r\n/**\r\n * 连接建立成功后调度。\r\n * @eventType Event.OPEN\r\n * */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 接收到数据后调度。\r\n * @eventType Event.MESSAGE\r\n * */\r\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 连接被关闭后调度。\r\n * @eventType Event.CLOSE\r\n * */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 出现异常后调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\r\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\r\n */\r\nexport class Socket extends EventDispatcher {\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**@internal */\r\n    _endian: string;\r\n    /**@private */\r\n    protected _socket: any;\r\n    /**@private */\r\n    private _connected: boolean;\r\n    /**@private */\r\n    private _addInputPosition: number;\r\n    /**@private */\r\n    private _input: any;\r\n    /**@private */\r\n    private _output: any;\r\n\r\n    /**\r\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\r\n     */\r\n    disableInput: boolean = false;\r\n    /**\r\n     * 用来发送和接收数据的 <code>Byte</code> 类。\r\n     */\r\n    private _byteClass: new () => any;\r\n    /**\r\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\r\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\r\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\r\n     */\r\n    protocols: any = [];\r\n\r\n    /**\r\n     * 缓存的服务端发来的数据。\r\n     */\r\n    get input(): any {\r\n        return this._input;\r\n    }\r\n\r\n    /**\r\n     * 表示需要发送至服务端的缓冲区中的数据。\r\n     */\r\n    get output(): any {\r\n        return this._output;\r\n    }\r\n\r\n    /**\r\n     * 表示此 Socket 对象目前是否已连接。\r\n     */\r\n    get connected(): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._endian;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._endian = value;\r\n        if (this._input != null) this._input.endian = value;\r\n        if (this._output != null) this._output.endian = value;\r\n    }\r\n\r\n    /**\r\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\r\n     * @param host\t\t服务器地址。\r\n     * @param port\t\t服务器端口。\r\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\r\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     * @see laya.utils.Byte\r\n     */\r\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\r\n        super();\r\n        this._byteClass = byteClass ? byteClass : Byte;\r\n        this.protocols = protocols;\r\n        this.endian = Socket.BIG_ENDIAN;\r\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的主机和端口。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param host\t服务器地址。\r\n     * @param port\t服务器端口。\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     */\r\n    connect(host: string, port: number, isSecure: boolean = false): void {\r\n        this.connectByUrl(`${isSecure ? \"wss\" : \"ws\"}://${host}:${port}`);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\r\n     */\r\n    connectByUrl(url: string): void {\r\n        if (this._socket != null) this.close();\r\n\r\n        this._socket && this.cleanSocket();\r\n\r\n        if (!this.protocols || this.protocols.length == 0) {\r\n            this._socket = new Browser.window.WebSocket(url);\r\n        } else {\r\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\r\n        }\r\n\r\n        this._socket.binaryType = \"arraybuffer\";\r\n\r\n        this._output = new this._byteClass();\r\n        this._output.endian = this.endian;\r\n        this._input = new this._byteClass();\r\n        this._input.endian = this.endian;\r\n        this._addInputPosition = 0;\r\n\r\n        this._socket.onopen = (e: any) => {\r\n            this._onOpen(e);\r\n        };\r\n        this._socket.onmessage = (msg: any): void => {\r\n            this._onMessage(msg);\r\n        };\r\n        this._socket.onclose = (e: any): void => {\r\n            this._onClose(e);\r\n        };\r\n        this._socket.onerror = (e: any): void => {\r\n            this._onError(e);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\r\n     */\r\n    cleanSocket(): void {\r\n        this.close();\r\n        this._connected = false;\r\n        this._socket.onopen = null;\r\n        this._socket.onmessage = null;\r\n        this._socket.onclose = null;\r\n        this._socket.onerror = null;\r\n        this._socket = null;\r\n    }\r\n\r\n    /**\r\n     * 关闭连接。\r\n     */\r\n    close(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接建立成功 。\r\n     */\r\n    protected _onOpen(e: any): void {\r\n        this._connected = true;\r\n        this.event(Event.OPEN, e);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 接收到数据处理方法。\r\n     * @param msg 数据。\r\n     */\r\n    protected _onMessage(msg: any): void {\r\n        if (!msg || !msg.data) return;\r\n        var data: any = msg.data;\r\n        if (this.disableInput && data) {\r\n            this.event(Event.MESSAGE, data);\r\n            return;\r\n        }\r\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\r\n            this._input.clear();\r\n            this._addInputPosition = 0;\r\n        }\r\n        var pre: number = this._input.pos;\r\n        !this._addInputPosition && (this._addInputPosition = 0);\r\n        this._input.pos = this._addInputPosition;\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                this._input.writeUTFBytes(data);\r\n            } else {\r\n                this._input.writeArrayBuffer(data);\r\n            }\r\n            this._addInputPosition = this._input.pos;\r\n            this._input.pos = pre;\r\n        }\r\n        this.event(Event.MESSAGE, data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接被关闭处理方法。\r\n     */\r\n    protected _onClose(e: any): void {\r\n        this._connected = false;\r\n        this.event(Event.CLOSE, e)\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 出现异常处理方法。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.event(Event.ERROR, e)\r\n    }\r\n\r\n    /**\r\n     * 发送数据到服务器。\r\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\r\n     */\r\n    send(data: any): void {\r\n        this._socket.send(data);\r\n    }\r\n\r\n    /**\r\n     * 发送缓冲区中的数据到服务器。\r\n     */\r\n    flush(): void {\r\n        if (this._output && this._output.length > 0) {\r\n            var evt: any;\r\n            try {\r\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\r\n            } catch (e) {\r\n                evt = e;\r\n            }\r\n            this._output.endian = this.endian;\r\n            this._output.clear();\r\n            if (evt) this.event(Event.ERROR, evt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n * 二进制简易哈希计算以及二进制相等判断\r\n * @author LaoXie\r\n */\r\nexport class BinHashUtils {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 计算哈希值\r\n\t * @param\tbuffer 数据\r\n\t * @param\tstart 起始位置\r\n\t * @param\tlen 长度\r\n\t * @param\tmagic 大质数\r\n\t * @return\r\n\t */\r\n\tstatic getHash(buffer: Uint8Array, start: number, len: number, magic: number = 9191891): number {\r\n\t\tvar i: number;\r\n\t\tvar rst: number = 0;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\trst = (rst * 2 + buffer[start + i]) % magic;\r\n\t\t}\r\n\t\treturn rst;\r\n\t}\r\n\r\n\t/**\r\n\t * 判断两段数据是否相等\r\n\t * @param\tbuffer1\r\n\t * @param\tstart1\r\n\t * @param\tlen1\r\n\t * @param\tbuffer2\r\n\t * @param\tstart2\r\n\t * @param\tlen2\r\n\t * @return\r\n\t */\r\n\tstatic isSame(buffer1: Uint8Array, start1: number, len1: number, buffer2: Uint8Array, start2: number, len2: number): boolean {\r\n\t\tif (len1 != len2) return false;\r\n\t\tvar i: number, len: number;\r\n\t\tlen = len1;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (buffer1[start1 + i] != buffer2[start2 + i]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n\r\n","import { Browser } from \"../../utils/Browser\";\r\nimport { Byte } from \"../../utils/Byte\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { Loader } from \"../Loader\";\r\n\r\n/**\r\n * ...\r\n * @author LaoXie\r\n */\r\nexport class JsonBinRead {\r\n\tstatic ISJSONBIN: number = 0xFFFFFF;\r\n\tstatic ISJSONBIN2: number = 0xFFFFFE;\r\n\tstatic ISJSONBIN3: number = 0xFFFFFD;\r\n\r\n\tstatic SPLITCHAR: string = String.fromCharCode(3);\r\n\r\n\tstatic COMPRESS_NEW: number = 1;\r\n\tstatic COMPRESS_REF: number = 2;\r\n\tstatic COMPRESS_REFMODIFY: number = 3;\r\n\r\n\tstatic NUM8: number = 0;\r\n\tstatic NUM16: number = 1;\r\n\tstatic NUM32: number = 2;\r\n\tstatic BOOLEAN: number = 3;\r\n\tstatic DOUBLE: number = 4;\r\n\tstatic STRING: number = 5;\r\n\tstatic ARRAY8: number = 6;\r\n\tstatic ARRAY16: number = 7;\r\n\tstatic ARRAYEMPTY: number = 8;\r\n\tstatic ARRAYNUM8: number = 9;\r\n\tstatic ARRAYNUM16: number = 10;\r\n\tstatic ARRAYNUM32: number = 11;\r\n\tstatic ARRAYDOUBLE: number = 12;\r\n\tstatic ARRAYSTRING: number = 13;\r\n\tstatic NULL: number = 14;\r\n\tstatic OBJECT: number = 15;\r\n\tstatic NUM16_1000: number = 16;\r\n\tstatic NUM32_1000: number = 17;\r\n\tstatic WORDTEXT: number = 18;\r\n\tstatic ARRAYBUFFER: number = 19;\r\n\tstatic ARRAYREF: number = 20;\r\n\tstatic ARRAYREFSOURCE8: number = 21;\r\n\tstatic ARRAYREFSOURCE16: number = 22;\r\n\tstatic ARRAYBUFFER32: number = 23;\r\n\tstatic ARRAYREF32: number = 24;\r\n\tstatic ARRAY32: number = 25;\r\n\tstatic OBJECTTHISCLASS: number = 26;\r\n\r\n\tstatic NUM64: number = 27;\r\n\r\n\tstatic INT8ARRAY: number = 28;\r\n\tstatic UINT8ARRAY: number = 29;\r\n\tstatic INT16ARRAY: number = 30;\r\n\tstatic FLOAT32ARRAY: number = 31;\r\n\r\n\tstatic OBJECTEND: number = 0x7FFF;\r\n\r\n\tprivate static _instance: JsonBinRead;\r\n\r\n\tstatic get instance(): JsonBinRead {\r\n\t\treturn JsonBinRead._instance || (JsonBinRead._instance = new JsonBinRead());\r\n\t}\r\n\r\n\tstatic IsJsonbin(data: ArrayBuffer): boolean {\r\n\t\tif (data.byteLength < 5)\r\n\t\t\treturn false;\r\n\t\tconst value = (new Uint32Array(data, 0, 4))[0];\r\n\t\treturn value == JsonBinRead.ISJSONBIN || value == JsonBinRead.ISJSONBIN2 || value == JsonBinRead.ISJSONBIN3;\r\n\t}\r\n\r\n\tstatic parse(value: ArrayBuffer): any {\r\n\t\tvar int32: Int32Array = new Int32Array(value, 0, 4);\r\n\t\tif (int32[0] !== JsonBinRead.ISJSONBIN && int32[0] !== JsonBinRead.ISJSONBIN2) {\r\n\t\t\tvar b: Byte = new Byte();\r\n\t\t\tb.writeArrayBuffer(value);\r\n\t\t\tb.pos = 0;\r\n\t\t\tvar str: string = b.readUTFBytes();\r\n\t\t\treturn JSON.parse(str);\r\n\t\t}\r\n\t\tvar r: JsonBinRead = new JsonBinRead();\r\n\t\treturn r.read(value);\r\n\t}\r\n\r\n\tstatic parsePack(value: any): any {\r\n\t\tvar r: JsonBinRead = new JsonBinRead();\r\n\t\tvar o: any = r.read(value);\r\n\t\tfor (var key in o)\r\n\t\t\tLoader.cacheRes(key, o[key]);\r\n\t\treturn o;\r\n\t}\r\n\r\n\tprivate _objectRef: any;\r\n\tprivate _dataStartOfs: number;\r\n\tprivate _createObjWithClass: Function;\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tprivate _readArray(data: Byte, pos: number, n: number, type: number, keyMap: ReadKeyMap): any {\r\n\t\tvar array: any[] = [];\r\n\t\tarray.length = n;\r\n\t\tvar endPos: number;\r\n\t\tif (pos >= 0) {\r\n\t\t\tendPos = data.pos;\r\n\t\t\tdata.pos = pos;\r\n\t\t}\r\n\t\tfor (var i: number = 0; i < n; i++) {\r\n\t\t\tarray[i] = this._readOne({}, data, null, data.readUint8(), keyMap);\r\n\t\t}\r\n\t\tif (pos >= 0) {\r\n\t\t\tdata.pos = endPos\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\r\n\tprivate _getLen(data: Byte): number {\r\n\t\tlet n = data.readUint8();\r\n\t\treturn (n & 0x80) == 0 ? n : (data.readUint8() | ((n & ~0x80) << 8));\r\n\t}\r\n\r\n\tstatic _toLargeNumber(n1: number, n2: number): number {\r\n\t\tlet n2str = n2.toString(16);\r\n\t\tif (n2str.length < 7) {\r\n\t\t\tfor (let i = n2str.length; i < 7; i++)\r\n\t\t\t\tn2str = \"0\" + n2str;\r\n\t\t}\r\n\t\treturn parseInt(n1.toString(16) + \"\" + n2str, 16);\r\n\t}\r\n\r\n\tprivate static readInt8Array(byte: Byte, start: number, len: number): Int8Array {\r\n\t\tvar end: number = start + len;\r\n\t\t// @ts-ignore\r\n\t\tend = (end > byte._length) ? byte._length : end;\r\n\t\t// @ts-ignore\r\n\t\tvar v: any = new Int8Array(byte._d_.buffer.slice(start, end));\r\n\t\t// @ts-ignore\r\n\t\tbyte._pos_ = end;\r\n\t\treturn v;\r\n\t}\r\n\r\n\tprivate _readOne(parent: any, data: Byte, key: string, type: number, keyMap: ReadKeyMap): any {\r\n\t\tlet n: number, value: any;\r\n\t\tswitch (type) {\r\n\t\t\tcase JsonBinRead.NULL:\r\n\t\t\t\tvalue = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM8:\r\n\t\t\t\tvalue = data.readByte();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM16:\r\n\t\t\t\tvalue = data.readInt16();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM32:\r\n\t\t\t\tvalue = data.readInt32();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM64:\r\n\t\t\t\tvalue = JsonBinRead._toLargeNumber(data.readInt32(), data.readInt32());\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.BOOLEAN:\r\n\t\t\t\tvalue = data.readByte() ? true : false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.DOUBLE:\r\n\t\t\t\tvalue = data.readFloat32();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM16_1000:\r\n\t\t\t\tvalue = data.readInt16() / 1000;\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.NUM32_1000:\r\n\t\t\t\tvalue = data.readInt32() / 1000;\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.STRING:\r\n\t\t\t\tvalue = keyMap.keyArray[data.readUint16()][0];\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.WORDTEXT:\r\n\t\t\t\tn = data.readUint16();\r\n\t\t\t\tvalue = keyMap.keyArray[n][3];\r\n\t\t\t\tif (!value) {\r\n\t\t\t\t\tvalue = keyMap.keyArray[n][3] = new WordText();\r\n\t\t\t\t\t(value as WordText).setText(keyMap.keyArray[n][0]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYEMPTY:\r\n\t\t\t\tdata.readUint8();\r\n\t\t\t\tvalue = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYNUM8:\r\n\t\t\t\tvalue = []; value.length = n = data.readUint8();\r\n\t\t\t\tfor (let i = 0; i < n; i++) value[i] = data.readByte();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYNUM16:\r\n\t\t\t\tvalue = []; value.length = n = data.readUint8();\r\n\t\t\t\tfor (let i = 0; i < n; i++) value[i] = data.readInt16();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYNUM32:\r\n\t\t\t\tvalue = []; value.length = n = data.readUint8();\r\n\t\t\t\tfor (let i = 0; i < n; i++) value[i] = data.readInt32();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYDOUBLE:\r\n\t\t\t\tvalue = []; value.length = n = data.readUint8();\r\n\t\t\t\tfor (let i = 0; i < n; i++) value[i] = data.readFloat32();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYBUFFER:\r\n\t\t\t\tvalue = data.readArrayBuffer(data.readUint16());\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYBUFFER32:\r\n\t\t\t\tvalue = data.readArrayBuffer(data.readUint32());\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.INT8ARRAY:\r\n\t\t\t\tn = this._getLen(data);\r\n\t\t\t\tvalue = JsonBinRead.readInt8Array(data, data.pos, n);\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.UINT8ARRAY:\r\n\t\t\t\tn = this._getLen(data);\r\n\t\t\t\tvalue = data.readUint8Array(data.pos, n);\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.INT16ARRAY:\r\n\t\t\t\tn = this._getLen(data);\r\n\t\t\t\tvalue = data.readInt16Array(data.pos, n);\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.FLOAT32ARRAY:\r\n\t\t\t\tn = this._getLen(data);\r\n\t\t\t\tvalue = data.readFloat32Array(data.pos, n);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this._readOne_other(parent, data, key, type, keyMap);\r\n\t\t}\r\n\t\tparent && key && (parent[key] = value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\tprivate _readOne_other(parent: any, data: Byte, key: string, type: number, keyMap: ReadKeyMap): any {\r\n\t\tlet cur: any = parent;\r\n\t\tlet value: any;\r\n\t\tlet n: number, i: number;\r\n\t\tlet pos: number;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase JsonBinRead.ARRAY8:\r\n\t\t\tcase JsonBinRead.ARRAY16:\r\n\t\t\tcase JsonBinRead.ARRAY32:\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase JsonBinRead.ARRAY8:\r\n\t\t\t\t\t\tn = data.readUint8();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase JsonBinRead.ARRAY16:\r\n\t\t\t\t\t\tn = data.readInt16();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase JsonBinRead.ARRAY32:\r\n\t\t\t\t\t\tn = data.readUint32();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//n = type === ARRAY8?data.readUint8():data.readInt16();\r\n\t\t\t\t//value = _readArray(data, -1, n, type, keyMap);\r\n\t\t\t\tvar array: any[] = value = [];\r\n\t\t\t\tarray.length = n;\r\n\t\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\t\ttype = data.readUint8();\r\n\t\t\t\t\tarray[i] = this._readOne(null, data, null, type, keyMap);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYREFSOURCE8:\r\n\t\t\tcase JsonBinRead.ARRAYREFSOURCE16:\r\n\t\t\t\tn = type === JsonBinRead.ARRAYREFSOURCE8 ? data.readUint8() : data.readInt16();\r\n\t\t\t\tpos = data.pos - this._dataStartOfs;\r\n\t\t\t\tvalue = this._readArray(data, -1, n, type, keyMap);\r\n\t\t\t\tthis._objectRef[pos] = { array: value, pos: pos };\r\n\t\t\t\t//trace(\"same array read souce:\"+pos,value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAYREF:\r\n\t\t\tcase JsonBinRead.ARRAYREF32:\r\n\t\t\t\ti = data.readByte();//读取创建压缩类型\r\n\t\t\t\tpos = type == JsonBinRead.ARRAYREF ? data.readUint16() : data.readUint32();\r\n\t\t\t\tlet objectRef = this._objectRef[pos];\r\n\t\t\t\t//trace(\"same array read ref:\",pos,_objectRef);\r\n\t\t\t\tif (!objectRef) {\r\n\t\t\t\t\t//trace(\"same array read ref err:\",pos,_objectRef);\r\n\t\t\t\t\tthrow \"load ref err\";\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (i == JsonBinRead.COMPRESS_NEW) {\r\n\t\t\t\t\tvalue = this._readArray(data, pos + this._dataStartOfs, objectRef.array.length, type, keyMap);\r\n\t\t\t\t}\r\n\t\t\t\telse value = objectRef.array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.OBJECT:\r\n\t\t\tcase JsonBinRead.OBJECTTHISCLASS:\r\n\t\t\t\tif (key != null || !parent) {\r\n\t\t\t\t\tif (type == JsonBinRead.OBJECT) {\r\n\t\t\t\t\t\tcur = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tn = data.readUint16();\r\n\t\t\t\t\t\tcur = this._createObjWithClass(keyMap.keyArray[n][0]);\r\n\t\t\t\t\t\tif (!cur) throw \"jsonbin read err,no this class:\" + keyMap.keyArray[n][0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkey && parent && (parent[key] = cur);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet keyDef: any[];\r\n\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\t//读取key在字符串数组的索引\r\n\t\t\t\t\tn = data.readUint16();\r\n\r\n\t\t\t\t\tif (n == JsonBinRead.OBJECTEND)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tkeyDef = keyMap.keyArray[n];\r\n\r\n\t\t\t\t\tthis._readOne(cur, data, keyDef[0], keyDef[1], keyMap);\r\n\t\t\t\t}\r\n\t\t\t\tvalue = cur;\r\n\t\t\t\tcur = parent;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t(key != null) && (cur[key] = value);\r\n\t\treturn value;\r\n\t}\r\n\r\n\tread(data: ArrayBuffer, createObjWithClass: Function = null): any {\r\n\t\tthis._createObjWithClass = createObjWithClass;\r\n\r\n\t\t//trace(\"read jsonbin:\", data.byteLength);\r\n\t\tlet time = Browser.now();\r\n\t\tlet bData: Byte = new Byte();\r\n\t\tlet strMap: string;\r\n\t\tlet binMark: number;\r\n\r\n\t\tbData.writeArrayBuffer(data);\r\n\t\tbData.pos = 0;\r\n\t\tthis._objectRef = {};\r\n\t\tbinMark = bData.readInt32();\r\n\t\tswitch (binMark) {\r\n\t\t\tcase JsonBinRead.ISJSONBIN:\r\n\t\t\t\tstrMap = bData.readUTFString();\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ISJSONBIN2:\r\n\t\t\tcase JsonBinRead.ISJSONBIN3:\r\n\t\t\t\tstrMap = bData.readUTFString32();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbData.pos = 0;\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar keyMap: ReadKeyMap = new ReadKeyMap();\r\n\t\tkeyMap.strs = strMap.split(JsonBinRead.SPLITCHAR);\r\n\t\tkeyMap.keyArray.length = keyMap.strs.length / 2;\r\n\t\tfor (var i: number = 0, n: number = keyMap.strs.length; i < n; i += 2) {\r\n\t\t\tkeyMap.keyArray[i / 2] = [keyMap.strs[i], parseInt(keyMap.strs[i + 1])];\r\n\t\t}\r\n\t\tlet time2 = Browser.now();\r\n\t\t//if( (Browser.now()-time)>10) console.debug(\"jsonbinread delay:\",(Browser.now()-time),keyMap.strs.toString());\r\n\t\tthis._dataStartOfs = bData.pos;\r\n\t\tvar r: any = {};\r\n\t\tthis._readOne(r, bData, null, JsonBinRead.OBJECT, keyMap);\r\n\r\n\t\tif ((Browser.now() - time) > 10) console.debug(\"jsonbinread delay:\", (Browser.now() - time) + \"/\" + (time2 - time), data.byteLength);\r\n\r\n\t\treturn binMark == JsonBinRead.ISJSONBIN3 ? r.top : r;\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nclass ReadKeyMap {\r\n\tkeys: any = {};\r\n\tstrs: any[] = [\"BEGIN\", 0];\r\n\tkeyArray: any[] = [];\r\n\tkeyIndex: number = 1;\r\n}\r\n","import { Byte } from \"../../utils/Byte\";\r\nimport { BinHashUtils } from \"./BinHashUtils\";\r\nimport { JsonBinRead } from \"./JsonBinRead\";\r\n\r\n\r\n/**\r\n * ...\r\n * @author LaoXie\r\n */\r\nexport class JsonBinWrite {\r\n\tstatic COMPRESS: string = \"_$TeMpkEy$_CoMpReSs\";\r\n\tstatic NOSAVEKEY: string = \"_$TeMpkEyNoSv$_\";\r\n\tstatic NOSAVETHISOBJ: string = \"$__$disbaleJsonBinSv\";\r\n\tstatic NOSAVE_KEY_LEN: number = 15;\r\n\r\n\tstatic NOSAVETHISOBJ_DELETE: number = 2;\r\n\tstatic NOSAVETHISOBJ_TRUE: number = 1;\r\n\r\n\tprivate static _instance: JsonBinWrite;\r\n\r\n\tstatic get instance(): JsonBinWrite {\r\n\t\treturn JsonBinWrite._instance || (JsonBinWrite._instance = new JsonBinWrite());\r\n\t}\r\n\r\n\tobjectRef: any = {};\r\n\r\n\tprivate _classEnable_: boolean;\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tprivate _saveKey(key: string, valueType: number, keyMap: SaveKeyMap, out: Byte): void {\r\n\t\t//之前这里的分隔符不够特殊，导致出问题了，换成了更特殊的字符\r\n\t\tthis.deep++;\r\n\t\tvar keysv: string = key + \"/&&__*?/\" + valueType;\r\n\t\tvar keyNum: number = keyMap.keys[keysv];\r\n\t\tif (!keyNum) {\r\n\t\t\tkeyNum = keyMap.keys[keysv] = keyMap.keyIndex;\r\n\t\t\tkeyMap.strs.push(key, valueType);\r\n\t\t\tkeyMap.keyIndex++;\r\n\t\t}\r\n\t\tout.writeUint16(keyNum);\r\n\t\tthis.deep--;\r\n\t}\r\n\r\n\tprivate _getValueArrayType(value: any): number {\r\n\t\tswitch (typeof (value)) {\r\n\t\t\tcase \"number\":\r\n\t\t\t\tif (Math.floor(value) !== value)\r\n\t\t\t\t\treturn JsonBinRead.ARRAYDOUBLE;\r\n\t\t\t\tvar valueabs: number = Math.abs(value);\r\n\t\t\t\tif (valueabs < 128)\r\n\t\t\t\t\treturn JsonBinRead.ARRAYNUM8;\r\n\t\t\t\tif (valueabs < 0x7FFF)\r\n\t\t\t\t\treturn JsonBinRead.ARRAYNUM16;\r\n\t\t\t\treturn JsonBinRead.ARRAYNUM32;\r\n\t\t\tcase \"string\":\r\n\t\t\t\treturn JsonBinRead.OBJECT;\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\treturn JsonBinRead.BOOLEAN;\r\n\t\t}\r\n\t\treturn JsonBinRead.OBJECT;\r\n\t}\r\n\r\n\tprivate _writeStrOrWordText(keyMap: SaveKeyMap, key: any, value: any, out: any, isWordText: boolean): void {\r\n\t\tvar type: number = isWordText ? JsonBinRead.WORDTEXT : JsonBinRead.STRING;\r\n\t\t(key != null) ? (this._saveKey(key, type, keyMap, out)) : (out.writeUint8(type));\r\n\t\tvar keyNum: number = keyMap.keys[value];\r\n\t\tif (!keyNum) {\r\n\t\t\tkeyNum = keyMap.keys[value] = keyMap.keyIndex;\r\n\t\t\tkeyMap.strs.push(value, 0);\r\n\t\t\tkeyMap.keyIndex++;\r\n\t\t}\r\n\t\tout.writeUint16(keyNum);\r\n\t}\r\n\r\n\tprivate _writeString(keyMap: SaveKeyMap, value: any, out: any): void {\r\n\t\tvar keyNum: number = keyMap.keys[value];\r\n\t\tif (!keyNum) {\r\n\t\t\tkeyNum = keyMap.keys[value] = keyMap.keyIndex;\r\n\t\t\tkeyMap.strs.push(value, 0);\r\n\t\t\tkeyMap.keyIndex++;\r\n\t\t}\r\n\t\tout.writeUint16(keyNum);\r\n\t}\r\n\r\n\tprivate _getObjectTypeof(value: any): string {\r\n\t\tif (value instanceof ArrayBuffer)\r\n\t\t\treturn \"ArrayBuffer\";\r\n\t\tif (value instanceof Uint8Array)\r\n\t\t\treturn \"Uint8Array\";\r\n\t\tif (value instanceof Int8Array)\r\n\t\t\treturn \"Int8Array\";\r\n\t\tif (value instanceof Int16Array)\r\n\t\t\treturn \"Int16Array\";\r\n\t\tif (value instanceof Float32Array)\r\n\t\t\treturn \"Float32Array\";\r\n\t\t//@ts-ignore\r\n\t\tif ((value instanceof WordText) || JsonBinWrite.isWordText(value))\r\n\t\t\treturn \"WordText\";\r\n\t\treturn \"object\";\r\n\t}\r\n\r\n\tstatic isWordText(o: any): boolean {\r\n\t\treturn o && o._text && (o._$_$ISWORDTYEXT || o.lastGCCnt != null);\r\n\t}\r\n\r\n\tprivate _writeLen(out: Byte, len: number): void {\r\n\t\tif (len < 0x80)\r\n\t\t\tout.writeUint8(len);\r\n\t\telse if (len < 0x8000) {\r\n\t\t\tout.writeUint8((len >> 8) | 0x80);\r\n\t\t\tout.writeUint8(len & 0xFF);\r\n\t\t}\r\n\t\telse throw \"jsonbin save len must<0x8000\" + \" \" + len;\r\n\t}\r\n\r\n\tprivate _writeBigNumber(out: Byte, value: number): void {\r\n\t\tlet numstr = value.toString(16);\r\n\t\tlet n1 = parseInt(numstr.substring(0, numstr.length - 7), 16);\r\n\t\tlet n2 = parseInt(numstr.substring(numstr.length - 7), 16);\r\n\t\tout.writeInt32(n1);\r\n\t\tout.writeInt32(n2);\r\n\t\tif (JsonBinRead._toLargeNumber(n1, n2) != value) throw \"save big number err:\" + value;\r\n\t}\r\n\r\n\tprivate deep = 0;\r\n\tprivate _writeOne(out: Byte, keyMap: SaveKeyMap, key: any, value: any, parent: any): boolean {\r\n\t\tif (value == undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet type: string = typeof (value);\r\n\t\tif (type == \"object\" && value) {\r\n\t\t\tif (value.$__$disbaleJsonBinSv) {\r\n\t\t\t\tif (value.$__$disbaleJsonBinSv == JsonBinWrite.NOSAVETHISOBJ_DELETE) {\r\n\t\t\t\t\t//delete value.$__$disbaleJsonBinSv ;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttype = this._getObjectTypeof(value);\r\n\t\t}\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"number\":\r\n\t\t\t\tif (Math.floor(value) !== value) {\r\n\t\t\t\t\tvar value1000 = value * 1000;\r\n\t\t\t\t\tif ((value1000 | 0) === value1000) {\r\n\t\t\t\t\t\tif (Math.abs(value) < 32) {\r\n\t\t\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM16_1000, keyMap, out) : out.writeUint8(JsonBinRead.NUM16_1000);\r\n\t\t\t\t\t\t\tout.writeInt16(value1000);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (Math.abs(value) < 2147483) {\r\n\t\t\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM32_1000, keyMap, out) : out.writeUint8(JsonBinRead.NUM32_1000);\r\n\t\t\t\t\t\t\tout.writeInt32(value1000);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.DOUBLE, keyMap, out) : out.writeUint8(JsonBinRead.DOUBLE);\r\n\t\t\t\t\tout.writeFloat32(value);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tvar valueabs: number = Math.abs(value);\r\n\t\t\t\tif (valueabs < 128) {\r\n\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM8, keyMap, out) : out.writeUint8(JsonBinRead.NUM8);\r\n\t\t\t\t\tout.writeByte(value);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueabs < 0x7FFF) {\r\n\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM16, keyMap, out) : out.writeUint8(JsonBinRead.NUM16);\r\n\t\t\t\t\tout.writeInt16(value);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueabs < 0x7FFFFFFF) {\r\n\t\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM32, keyMap, out) : out.writeUint8(JsonBinRead.NUM32);\r\n\t\t\t\t\tout.writeInt32(value);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NUM64, keyMap, out) : out.writeUint8(JsonBinRead.NUM64);\r\n\t\t\t\tthis._writeBigNumber(out, value);\r\n\t\t\t\treturn true;\r\n\t\t\tcase \"string\":\r\n\t\t\t\tthis._writeStrOrWordText(keyMap, key, value, out, false);\r\n\t\t\t\treturn true;\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.BOOLEAN, keyMap, out) : out.writeUint8(JsonBinRead.BOOLEAN);\r\n\t\t\t\tout.writeByte(value ? 1 : 0);\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'ArrayBuffer':\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.ARRAYBUFFER32, keyMap, out) : out.writeUint8(JsonBinRead.ARRAYBUFFER32);\r\n\t\t\t\tout.writeUint32(((<ArrayBuffer>value)).byteLength);\r\n\t\t\t\tout.writeArrayBuffer((<ArrayBuffer>value));\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'Uint8Array':\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.UINT8ARRAY, keyMap, out) : out.writeUint8(JsonBinRead.UINT8ARRAY);\r\n\t\t\t\tthis._writeLen(out, ((<Uint8Array>value)).byteLength);\r\n\t\t\t\tout.writeArrayBuffer((<Uint8Array>value).buffer);\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'Int8Array':\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.INT8ARRAY, keyMap, out) : out.writeUint8(JsonBinRead.INT8ARRAY);\r\n\t\t\t\tthis._writeLen(out, ((<Int8Array>value)).byteLength);\r\n\t\t\t\tout.writeArrayBuffer((<Int8Array>value).buffer);\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'Int16Array':\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.INT16ARRAY, keyMap, out) : out.writeUint8(JsonBinRead.INT16ARRAY);\r\n\t\t\t\tthis._writeLen(out, ((<Int16Array>value)).byteLength);\r\n\t\t\t\tout.writeArrayBuffer((<Int16Array>value).buffer);\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'Float32Array':\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.FLOAT32ARRAY, keyMap, out) : out.writeUint8(JsonBinRead.FLOAT32ARRAY);\r\n\t\t\t\tthis._writeLen(out, ((<Float32Array>value)).byteLength);\r\n\t\t\t\tout.writeArrayBuffer((<Float32Array>value).buffer);\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'WordText':\r\n\t\t\t\tthis._writeStrOrWordText(keyMap, key, value._text, out, true);\r\n\t\t\t\treturn true;\r\n\t\t\tcase \"object\":\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"jsonbin no this type:\" + type;\r\n\t\t}\r\n\t\tif (!value) {\r\n\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.NULL, keyMap, out) : out.writeUint8(JsonBinRead.NULL);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!(value instanceof Array)) {\r\n\t\t\tif (this._classEnable_ && value.__CLASS__) {\r\n\t\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.OBJECTTHISCLASS, keyMap, out) : out.writeUint8(JsonBinRead.OBJECTTHISCLASS);\r\n\t\t\t\t//this._writeStrOrWordText(keyMap, null, value.__CLASS__, out, false);\r\n\t\t\t}\r\n\t\t\telse (key != null) ? this._saveKey(key, JsonBinRead.OBJECT, keyMap, out) : out.writeUint8(JsonBinRead.OBJECT);\r\n\r\n\t\t\tthis._writeObject(out, keyMap, value);\r\n\t\t\tout.writeUint16(JsonBinRead.OBJECTEND);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn this._saveArray(parent, out, keyMap, key, value);\r\n\t}\r\n\r\n\tprivate _saveArray(parent: any, out: Byte, keyMap: SaveKeyMap, key: string, value: any): boolean {\r\n\t\tvar j: number, n: number = value.length;\r\n\t\tif (n === 0) {\r\n\t\t\t(key != null) ? this._saveKey(key, JsonBinRead.ARRAYEMPTY, keyMap, out) : out.writeUint8(JsonBinRead.ARRAYEMPTY);\r\n\t\t\tout.writeByte(0);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar startType: number;\r\n\t\tif (n > 1 && n < 250 && ((startType = this._getValueArrayType(value[0])) != JsonBinRead.OBJECT)) {\r\n\t\t\tfor (j = 1; j < n; j++) {\r\n\t\t\t\tif (startType !== this._getValueArrayType(value[j])) {\r\n\t\t\t\t\tstartType = JsonBinRead.OBJECT;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (startType != JsonBinRead.OBJECT && startType != JsonBinRead.BOOLEAN) {\r\n\t\t\t\t(key != null) ? this._saveKey(key, startType, keyMap, out) : out.writeUint8(startType);\r\n\t\t\t\tout.writeUint8(value.length);\r\n\t\t\t\tswitch (startType) {\r\n\t\t\t\t\tcase JsonBinRead.ARRAYNUM8:\r\n\t\t\t\t\t\tfor (j = 0; j < n; j++) out.writeByte(value[j]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase JsonBinRead.ARRAYNUM16:\r\n\t\t\t\t\t\tfor (j = 0; j < n; j++) out.writeInt16(value[j]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase JsonBinRead.ARRAYNUM32:\r\n\t\t\t\t\t\tfor (j = 0; j < n; j++) out.writeInt32(value[j]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase JsonBinRead.ARRAYDOUBLE:\r\n\t\t\t\t\t\tfor (j = 0; j < n; j++) out.writeFloat32(value[j]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar typeArray: number;\r\n\t\tif (n < 250) {\r\n\t\t\ttypeArray = JsonBinRead.ARRAY8;\r\n\t\t} else\r\n\t\t\tif (n < 32700) {\r\n\t\t\t\ttypeArray = JsonBinRead.ARRAY16;\r\n\t\t\t} else {\r\n\t\t\t\ttypeArray = JsonBinRead.ARRAY32;\r\n\t\t\t}\r\n\t\tvar posHead: number = out.pos;\r\n\t\t(key != null) ? this._saveKey(key, typeArray, keyMap, out) : out.writeUint8(typeArray);\r\n\t\tvar pos: number = out.pos, s: number = 0;\r\n\t\tswitch (typeArray) {\r\n\t\t\tcase JsonBinRead.ARRAY8:\r\n\t\t\t\tout.writeUint8(n)\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAY16:\r\n\t\t\t\tout.writeInt16(n);\r\n\t\t\t\tbreak;\r\n\t\t\tcase JsonBinRead.ARRAY32:\r\n\t\t\t\tout.writeUint32(n);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t//typeArray==JsonBinRead.ARRAY8?out.writeUint8(n):out.writeInt16(n);\r\n\t\tvar posData: number = out.pos;\r\n\t\tfor (j = 0; j < n; j++) {\r\n\t\t\tif (this._writeOne(out, keyMap, null, value[j], parent))\r\n\t\t\t\ts++;\r\n\t\t}\r\n\t\tif (s != n) {\r\n\t\t\tvar tmp: number = out.pos;\r\n\t\t\tout.pos = pos;\r\n\t\t\ttypeArray == JsonBinRead.ARRAY8 ? out.writeUint8(s) : out.writeInt16(s);\r\n\t\t\tout.pos = tmp;\r\n\t\t}\r\n\r\n\t\tvar compress: number;\r\n\t\tif (key && parent && (compress = parent[JsonBinWrite.COMPRESS + key])) {\r\n\t\t\tthis._useCompress(out, keyMap, key, value, posHead, posData, compress, typeArray);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate _useCompress(out: Byte, keyMap: SaveKeyMap, key: string, value: any, posHead: number, dataPos: number, compress: number, typeArray: number): void {\r\n\t\tvar dLen: number = out.pos - dataPos;\r\n\t\tif (dLen < 64) {\r\n\t\t\t//return;\r\n\t\t}\r\n\t\tvar hashCode: number = BinHashUtils.getHash((out as any)._u8d_, dataPos, dLen);\r\n\t\tvar same: any;\r\n\t\tvar src: any;\r\n\t\tvar i: number, n: number;\r\n\t\tif (this.objectRef[hashCode]) {\r\n\t\t\tvar datas: any[] = this.objectRef[hashCode];\r\n\t\t\tn = datas.length\r\n\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\tsrc = datas[i];\r\n\t\t\t\tif (src.value == value) {\r\n\t\t\t\t\tsame = src;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!same) {\r\n\t\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\t\tsrc = datas[i];\r\n\t\t\t\t\tif (BinHashUtils.isSame((out as any)._u8d_, src.pos, src.len, (out as any)._u8d_, dataPos, dLen)) {\r\n\t\t\t\t\t\tsame = src;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse this.objectRef[hashCode] = [];\r\n\r\n\t\tif (!same) {\r\n\t\t\tthis.objectRef[hashCode].push({ hashCode: hashCode, pos: dataPos, len: dLen, value: value });\r\n\t\t\tout.pos = posHead;\r\n\t\t\tthis._saveKey(key, typeArray == JsonBinRead.ARRAY8 ? JsonBinRead.ARRAYREFSOURCE8 : JsonBinRead.ARRAYREFSOURCE16, keyMap, out);\r\n\t\t\t//trace(\"same array save, new souce:\"+(out.pos+1));\r\n\t\t\tout.pos = dataPos + dLen;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tout.pos = posHead;\r\n\t\t\tthis._saveKey(key, JsonBinRead.ARRAYREF32, keyMap, out);\r\n\t\t\t//trace(\"same array save old souce:\",same,compress);\r\n\t\t\tout.writeByte(compress);\r\n\t\t\tout.writeUint32(same.pos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _writeObject(out: Byte, keyMap: SaveKeyMap, o: any): any {\r\n\t\t//新增加，支持自动创建指定类型对象\r\n\t\tthis._classEnable_ && o.__CLASS__ && this._writeString(keyMap, o.__CLASS__, out);\r\n\r\n\t\tfor (var key in o) {\r\n\t\t\t//特殊标记，这个不存\r\n\t\t\tif (key && key.length > JsonBinWrite.NOSAVE_KEY_LEN && key.substr(0, JsonBinWrite.NOSAVE_KEY_LEN) == JsonBinWrite.NOSAVEKEY) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t(this._classEnable_ && key == \"__CLASS__\") || this._writeOne(out, keyMap, key, o[key], o);\r\n\t\t}\r\n\t}\r\n\r\n\twrite(o: any, __CLASS__ = false): ArrayBuffer {\r\n\t\tthis.deep = 0;\r\n\t\tthis._classEnable_ = __CLASS__;\r\n\t\tvar keyMap: SaveKeyMap = new SaveKeyMap();\r\n\r\n\t\tthis.objectRef = {};\r\n\r\n\t\tvar out: Byte = new Byte();\r\n\r\n\t\tthis._writeObject(out, keyMap, { top: o });\r\n\t\tout.writeUint16(JsonBinRead.OBJECTEND);\r\n\r\n\t\tvar r: Byte = new Byte();\r\n\t\tr.writeInt32(JsonBinRead.ISJSONBIN3);\r\n\t\tr.writeUTFString32(keyMap.strs.join(JsonBinRead.SPLITCHAR));\r\n\t\tr.writeArrayBuffer(out.buffer);\r\n\r\n\t\treturn r.buffer;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass SaveKeyMap {\r\n\tkeys: any = {};\r\n\tstrs: any[] = [\"BEGIN\", 0];\r\n\tkeyArray: any[] = [];\r\n\tkeyIndex: number = 1;\r\n}\r\n\r\n/*\r\n__CLASS__:'Sprite'\r\n不产生object，而是直接产生这个类\r\n*/\r\n","import { Sprite } from \"../../display/Sprite\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../renders/Context\"\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\nimport { CharRenderInfo } from \"../text/CharRenderInfo\"\r\nimport { Sprite2DGeometry } from \"../utils/Sprite2DGeometry\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { MeshTexture } from \"../utils/MeshTexture\"\r\nimport { MeshVG } from \"../utils/MeshVG\"\r\n\r\n/**\r\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\r\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\r\n * 否则包括clip等都非常难以处理\r\n */\r\nexport class WebGLCacheAsNormalCanvas {\r\n    submitStartPos = 0;\t// 对应的context的submit的开始的地方\r\n    submitEndPos = 0;\r\n    context: Context;\r\n    touches: CharRenderInfo[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\r\n    submits: any[] = [];\t\t// 从context中剪切的submit\r\n    sprite: Sprite | null = null;\t// 对应的sprite对象\r\n\r\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\r\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n    meshlist: Sprite2DGeometry[] = [];\t\t\t//本context用到的mesh\r\n\r\n    // 原始context的原始值\r\n    private _oldMesh: MeshQuadTexture | null;\r\n    private _oldPathMesh: MeshVG | null;\r\n    private _oldTriMesh: MeshTexture | null;\r\n    private _oldMeshList: any[];\r\n\r\n    // cache的时候对应的clip\r\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\r\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\r\n    private oldTx = 0;\r\n    private oldTy = 0;\r\n    private static matI: Matrix = new Matrix();\r\n\r\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\r\n    invMat: Matrix = new Matrix();\r\n\r\n    constructor(ctx: Context, sp: Sprite) {\r\n        this.context = ctx;\r\n        this.sprite = sp;\r\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n    }\r\n\r\n    startRec(): void {\r\n        // let context = this.context;\r\n        // // 如果有文字优化，这里要先提交一下\r\n        // if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n        //     context._charSubmitCache.enable(false, context);\r\n        //     context._charSubmitCache.enable(true, context);\r\n        // }\r\n        // context._incache = true;\r\n        // this.touches.length = 0;\r\n        // //记录需要touch的文字资源\r\n        // (<any>context).touches = this.touches;\r\n        // context._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n\r\n        // this.submits.length = 0;\r\n        // this.submitStartPos = context._submits._length;\r\n\r\n        // this.meshlist.length = 0;\r\n\r\n        // this._mesh = new MeshQuadTexture();\r\n        // this._pathMesh = new  MeshVG();\r\n        // this._triangleMesh = new MeshTexture();\r\n\r\n        // this.meshlist.push(this._mesh);\r\n        // this.meshlist.push(this._pathMesh);\r\n        // this.meshlist.push(this._triangleMesh);\r\n\r\n        // // 打断合并\r\n        // context._curSubmit = SubmitBase.RENDERBASE;\r\n        // // 接管context中的一些值\r\n        // // this._oldMesh = context._mesh;\r\n        // // this._oldPathMesh = context._pathMesh;\r\n        // // this._oldTriMesh = context._triangleMesh;\r\n        // // this._oldMeshList = context.meshlist;\r\n\r\n        // // context._mesh = this._mesh;\r\n        // // context._pathMesh = this._pathMesh;\r\n        // // context._triangleMesh = this._triangleMesh;\r\n        // // context.meshlist = this.meshlist;\r\n\r\n        // // 要取消位置，因为以后会再传入位置。这里好乱\r\n        // this.oldTx = context._curMat.tx;\r\n        // this.oldTy = context._curMat.ty;\r\n        // context._curMat.tx = 0;\r\n        // context._curMat.ty = 0;\r\n\r\n        // // 取消缩放等\r\n        // context._curMat.copyTo(this.invMat);\r\n        // this.invMat.invert();\r\n        // //oldMatrix = context._curMat;\r\n        // //context._curMat = matI;\r\n    }\r\n\r\n    endRec(): void {\r\n        // let context = this.context;\r\n        // // 如果有文字优化，这里要先提交一下\r\n        // if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n        //     context._charSubmitCache.enable(false, context);\r\n        //     context._charSubmitCache.enable(true, context);\r\n        // }\r\n        // // copy submit\r\n        // var parsubmits: any = context._submits;\r\n        // this.submitEndPos = parsubmits._length;\r\n        // var num= this.submitEndPos - this.submitStartPos;\r\n        // for (var i= 0; i < num; i++) {\r\n        //     this.submits.push(parsubmits[this.submitStartPos + i]);\r\n        // }\r\n        // parsubmits._length -= num;\r\n\r\n        // // 恢复原始context的值\r\n        // // context._mesh = this._oldMesh;\r\n        // // context._pathMesh = this._oldPathMesh;\r\n        // // context._triangleMesh = this._oldTriMesh;\r\n        // // context.meshlist = this._oldMeshList;\r\n\r\n        // // 打断合并\r\n        // context._curSubmit = SubmitBase.RENDERBASE;\r\n        // // 恢复matrix\r\n        // //context._curMat = oldMatrix;\r\n        // context._curMat.tx = this.oldTx;\r\n        // context._curMat.ty = this.oldTy;\r\n        // (<any>context).touches = null;\r\n        // context._incache = false;\r\n    }\r\n\r\n\r\n    isTextNeedRestore(): boolean {\r\n        var textNeedRestore = false;\r\n        var charRIs = this.touches;\r\n        if (charRIs) {\r\n            for (var ci = 0; ci < charRIs.length; ci++) {\r\n                if (charRIs[ci].deleted) {\r\n                    textNeedRestore = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return textNeedRestore;\r\n    }\r\n    flushsubmit(): void {\r\n        var curSubmit = SubmitBase.RENDERBASE;\r\n        this.submits.forEach((subm: SubmitBase) => {\r\n            if (subm == SubmitBase.RENDERBASE) return;\r\n            //// ni SubmitBase.preRender = curSubmit;\r\n            curSubmit = subm;\r\n            //// ni subm.renderSubmit();\r\n        });\r\n    }\r\n\r\n    releaseMem(): void {\r\n\r\n    }\r\n}","\r\n/**\r\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\r\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\r\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\r\n */\r\n/**\r\n\t * Javascript Arabic Reshaper by Louy Alakkad\r\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\r\n\t * Based on (http://git.io/vsnAd)\r\n\t */\r\nexport class ArabicReshaper {\r\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\r\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\r\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\r\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\r\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\r\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\r\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\r\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\r\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\r\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\r\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\r\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\r\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\r\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\r\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\r\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\r\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\r\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\r\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\r\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\r\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\r\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\r\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\r\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\r\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\r\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\r\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\r\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\r\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\r\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\r\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\r\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\r\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\r\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\r\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\r\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\r\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\r\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\r\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\r\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\r\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\r\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\r\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\r\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\r\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\r\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\r\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\r\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\r\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\r\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\r\n        0x0614, /* ARABIC SIGN TAKHALLUS */\r\n        0x0615, /* ARABIC SMALL HIGH TAH */\r\n        0x064B, /* ARABIC FATHATAN */\r\n        0x064C, /* ARABIC DAMMATAN */\r\n        0x064D, /* ARABIC KASRATAN */\r\n        0x064E, /* ARABIC FATHA */\r\n        0x064F, /* ARABIC DAMMA */\r\n        0x0650, /* ARABIC KASRA */\r\n        0x0651, /* ARABIC SHADDA */\r\n        0x0652, /* ARABIC SUKUN */\r\n        0x0653, /* ARABIC MADDAH ABOVE */\r\n        0x0654, /* ARABIC HAMZA ABOVE */\r\n        0x0655, /* ARABIC HAMZA BELOW */\r\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\r\n        0x0657, /* ARABIC INVERTED DAMMA */\r\n        0x0658, /* ARABIC MARK NOON GHUNNA */\r\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\r\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\r\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\r\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\r\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\r\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\r\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\r\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\r\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\r\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\r\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\r\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\r\n        0x06E3, /* ARABIC SMALL LOW SEEN */\r\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\r\n        0x06E7, /* ARABIC SMALL HIGH YEH */\r\n        0x06E8, /* ARABIC SMALL HIGH NOON */\r\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\r\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\r\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\r\n        0x06ED];\r\n\r\n\r\n    //TODO:coverage\r\n    characterMapContains(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCharRep(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return ArabicReshaper.charsMap[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCombCharRep(c1:number, c2:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\r\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\r\n                return ArabicReshaper.combCharsMap[i];\r\n            }\r\n        }\r\n\r\n        // We should never reach here...\r\n        // istanbul ignore next\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isTransparent(c:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\r\n            if (ArabicReshaper.transChars[i] === c) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getOriginalCharsFromCode(code:number): string {\r\n        var j: number;\r\n\r\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\r\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\r\n            }\r\n        }\r\n\r\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\r\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\r\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\r\n            }\r\n        }\r\n\r\n        return String.fromCharCode(code);\r\n    }\r\n\r\n    /**\r\n     * 转换函数。从normal转到presentB\r\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\r\n     * 例如\r\n     * graphics.fillText(convertArabic('سلام'),....)\r\n     * \r\n    */\r\n    //TODO:coverage\r\n    convertArabic(normal:any): string {\r\n        var crep: any,\r\n            combcrep: any,\r\n            shaped: string = '';\r\n\r\n        for (var i: number = 0; i < normal.length; ++i) {\r\n            var current: number = normal.charCodeAt(i);\r\n            if (this.characterMapContains(current)) {\r\n                var prev: any = null,\r\n                    next: any = null,\r\n                    prevID: number = i - 1,\r\n                    nextID: number = i + 1;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; prevID >= 0; --prevID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\r\n                crep = prev ? this.getCharRep(prev) : false;\r\n                if (!crep || crep[2] == null && crep[3] == null) {\r\n                    prev = null; // prev character doesn’t connect with its successor\r\n                }\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; nextID < normal.length; ++nextID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\r\n                crep = next ? this.getCharRep(next) : false;\r\n                if (!crep || crep[3] == null && crep[4] == null) {\r\n                    next = null; // next character doesn’t connect with its predecessor\r\n                }\r\n\r\n                /* Combinations */\r\n                if (current === 0x0644 && next != null &&\r\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\r\n                    combcrep = this.getCombCharRep(current, next);\r\n                    if (prev != null) {\r\n                        shaped += String.fromCharCode(combcrep[4]);\r\n                    } else {\r\n                        shaped += String.fromCharCode(combcrep[1]);\r\n                    }\r\n\r\n                    ++i;\r\n                    continue;\r\n                }\r\n\r\n                crep = this.getCharRep(current);\r\n\r\n                /* Medial */\r\n                if (prev != null && next != null && crep[3] != null) {\r\n                    shaped += String.fromCharCode(crep[3]);\r\n                    continue;\r\n                } else /* Final */\r\n                    if (prev != null && crep[4] != null) {\r\n                        shaped += String.fromCharCode(crep[4]);\r\n                        continue;\r\n                    } else /* Initial */\r\n                        if (next != null && crep[2] != null) {\r\n                            shaped += String.fromCharCode(crep[2]);\r\n                            continue;\r\n                        } else /* Isolated */ {\r\n                            shaped += String.fromCharCode(crep[1]);\r\n                        }\r\n            } else {\r\n                shaped += String.fromCharCode(current);\r\n            }\r\n        }\r\n\r\n        return shaped;\r\n    }/*;*/\r\n\r\n    // convert from Arabic Presentation Forms B\r\n    //TODO:coverage\r\n    convertArabicBack(apfb:any): string {\r\n        var toReturn: string = '',\r\n            selectedChar: number;\r\n\r\n        var i: number;\r\n\r\n        for (i = 0; i < apfb.length; ++i) {\r\n            selectedChar = apfb.charCodeAt(i);\r\n\r\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\r\n        }\r\n        return toReturn;\r\n    }\r\n}\r\n\r\n\r\n","import { IBufferState } from \"../../RenderDriver/DriverDesign/RenderDevice/IBufferState\";\r\nimport { IVertexBuffer } from \"../../RenderDriver/DriverDesign/RenderDevice/IVertexBuffer\";\r\nimport { VertexAttributeLayout } from \"../../RenderEngine/VertexAttributeLayout\";\r\nimport { IndexBuffer3D } from \"../../d3/graphics/IndexBuffer3D\";\r\nimport { VertexBuffer3D } from \"../../d3/graphics/VertexBuffer3D\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\r\n */\r\nexport class BufferState {\r\n\tprivate static vertexBufferArray: IVertexBuffer[] = [];\r\n\t/**@private [只读]*/\r\n\t_deviceBufferState: IBufferState;\r\n\r\n\t/**@internal [只读]*/\r\n\t_bindedIndexBuffer: IndexBuffer3D ;\r\n\r\n\t/**@internal */\r\n\t_vertexBuffers: VertexBuffer3D[];\r\n\r\n\t/**@internal */\r\n\tvertexlayout: VertexAttributeLayout;//WGPU 先不管\r\n\r\n\t/**\r\n\t * 创建一个 <code>BufferState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._deviceBufferState = LayaGL.renderDeviceFactory.createBufferState();\r\n\t}\r\n\r\n\tapplyState(vertexBuffers: VertexBuffer3D[], indexBuffer: IndexBuffer3D | null) {\r\n\t\t//this.vertexlayout = VertexAttributeLayout.getVertexLayoutByPool(vertexBuffers);\r\n\t\tthis._vertexBuffers = vertexBuffers;\r\n\t\tthis._bindedIndexBuffer = indexBuffer;\r\n\t\tif (!this._deviceBufferState)\r\n\t\t\treturn;\r\n\r\n\t\tif (vertexBuffers.length == 1) {\r\n\t\t\tBufferState.vertexBufferArray.length = 1;\r\n\t\t\tBufferState.vertexBufferArray[0] = (vertexBuffers[0] as VertexBuffer3D)._deviceBuffer;\r\n\t\t} else {\r\n\t\t\tBufferState.vertexBufferArray.length = 0;\r\n\t\t\tvertexBuffers.forEach(element => {\r\n\t\t\t\tBufferState.vertexBufferArray.push((element as VertexBuffer3D)._deviceBuffer);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._deviceBufferState.applyState(BufferState.vertexBufferArray, indexBuffer ? (indexBuffer as IndexBuffer3D)._deviceBuffer : null);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (!this._deviceBufferState)\r\n\t\t\treturn;\r\n\t\tthis._deviceBufferState.destroy();\r\n\t\tthis._deviceBufferState = null;\r\n\t}\r\n}","export class MatirxArray {\r\n\r\n    /**\r\n     * 4*4矩阵数组相乘。\r\n     * o=a*b;\r\n     * @param\ta 4*4矩阵数组。\r\n     * @param\tb 4*4矩阵数组。\r\n     * @param\to 4*4矩阵数组。\r\n     */\r\n    //TODO:coverage\r\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\r\n        if (!a) {\r\n            MatirxArray.copyArray(b, o);\r\n            return;\r\n        }\r\n\r\n        if (!b) {\r\n            MatirxArray.copyArray(a, o);\r\n            return;\r\n        }\r\n\r\n        var ai0: number, ai1: number, ai2: number, ai3: number;\r\n        for (var i: number = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static copyArray(f: any[], t: any[]): void {\r\n        if (!f) return;\r\n        if (!t) return;\r\n        for (var i: number = 0; i < f.length; i++) {\r\n            t[i] = f[i];\r\n        }\r\n    }\r\n}\r\n\r\n","import { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\n\r\ninterface AnimatorPlay2DScriptInfo {\r\n    animator: Animator2D;\r\n    layerindex: number;\r\n    playState: AnimatorState2D;\r\n}\r\n/**\r\n * @en The AnimatorStateScript class is used as the parent class for animation state scripts. This class is abstract and does not allow instances.\r\n * @zh AnimatorStateScript 类用于动画状态脚本的父类,该类为抽象类,不允许实例。\r\n */\r\nexport class AnimatorState2DScript {\r\n\r\n    /**@internal */\r\n    playStateInfo: AnimatorPlay2DScriptInfo = { animator: null, layerindex: -1, playState: null };\r\n\r\n    /**\r\n     * @internal\r\n     * @en Set the play script information\r\n     * @zh 设置播放脚本信息\r\n     */\r\n    setPlayScriptInfo(animator: Animator2D, layerindex: number, playstate: AnimatorState2D) {\r\n        this.playStateInfo.animator = animator;\r\n        this.playStateInfo.layerindex = layerindex;\r\n        this.playStateInfo.playState = playstate;\r\n    }\r\n\r\n    /**\r\n     * @en Constructor method of AnimatorStateScript.\r\n     * @zh AnimatorStateScript的构造方法\r\n     */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Executed when the animation state starts.\r\n     * @zh 动画状态开始时执行。\r\n     */\r\n    onStateEnter(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Called during the execution of the animation state, providing the normalized play time.\r\n     * @param normalizeTime The normalized play time of the animation, ranging from 0 to 1.\r\n     * @zh 在动画状态运行中调用，提供归一化的播放时间。\r\n     * @param normalizeTime 动画的归一化播放时间，范围从0到1。\r\n     */\r\n    onStateUpdate(normalizeTime: number): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Executed when the animation state is about to exit.\r\n     * @zh 动画状态退出时执行。\r\n     */\r\n    onStateExit(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Executed at the end of each loop cycle if the animation is set to loop.\r\n     * @zh 如果动画设置为循环，在每次循环结束时执行。\r\n     */\r\n    onStateLoop(): void {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { Handler } from \"../utils/Handler\";\r\n\r\n/**\r\n * @deprecated\r\n * @internal\r\n */\r\nexport class ButtonEffect {\r\n\r\n    private _tar: Sprite;\r\n    private _curState: number = 0;\r\n    private _curTween: Tween;\r\n    /**\r\n     * effectScale\r\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\r\n     */\r\n    effectScale: number = 1.5;\r\n    /**\r\n     * tweenTime\r\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\r\n     */\r\n    tweenTime: number = 300;\r\n    /**\r\n     * effectEase\r\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\r\n     */\r\n    effectEase: string;\r\n    /**\r\n     * backEase\r\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\r\n     */\r\n    backEase: string;\r\n\r\n    /**\r\n     * 设置控制对象 \r\n     * @param tar\r\n     */\r\n    set target(tar: Sprite) {\r\n        this._tar = tar;\r\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\r\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\r\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\r\n    }\r\n\r\n    private toChangedState(): void {\r\n        this._curState = 1;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n\r\n    private toInitState(): void {\r\n        if (this._curState == 2) return;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curState = 2;\r\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n    private tweenComplete(): void {\r\n        this._curState = 0;\r\n        this._curTween = null;\r\n    }\r\n}\r\n\r\n\r\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\r\n\r\n/**\r\n * @private\r\n * @en CommandEncoder Shader variable collection\r\n * @zh CommandEncoder Shader变量集合\r\n */\r\nexport class CommandEncoder {\r\n    /**\r\n     * @internal\r\n     * @en Shader variable list\r\n     * @zh Shader变量列表\r\n     */\r\n    _idata: ShaderVariable[] = [];\r\n\r\n    /**\r\n     * @en Constructor method, initialize CommandEncoder object\r\n     * @zh 构造方法，初始化CommandEncoder对象\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the Shader variable list\r\n     * @zh 获取ShaderVariable数组\r\n     */\r\n    getArrayData(): ShaderVariable[] {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Get the count of ShaderVariables in the array\r\n     * @zh 获取ShaderVariable数组的数量    \r\n     */\r\n    getCount(): number {\r\n        return this._idata.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Add one ShaderVariable\r\n     * @param variable The ShaderVariable to be added\r\n     * @zh 添加一个ShaderVariable\r\n     * @param variable 要添加的ShaderVariable\r\n     */\r\n    addShaderUniform(variable: ShaderVariable): void {\r\n        this._idata.push(variable);\r\n    }\r\n\r\n}\r\n\r\n","import { ShaderDataType } from \"./ShaderData\";\r\n\r\nexport type UniformProperty = { id: number, propertyName: string, uniformtype: ShaderDataType }\r\nexport class CommandUniformMap {\r\n\r\n    constructor(stateName: string) {\r\n\r\n    }\r\n    /**\r\n     * 增加一个Uniform参数\r\n     * @param propertyID \r\n     * @param propertyKey \r\n     */\r\n    addShaderUniform(propertyID: number, propertyKey: string, uniformtype: ShaderDataType, block: string = null): void {\r\n        throw \"need override it\";\r\n    }\r\n\r\n    /**\r\n     * 增加一个UniformArray参数\r\n     * @param propertyID \r\n     * @param propertyName \r\n     */\r\n    addShaderUniformArray(propertyID: number, propertyName: string, uniformtype: ShaderDataType, arrayLength: number, block: string = \"\"): void {\r\n        throw \"need override it\";\r\n    } //兼容WGSL\r\n\r\n    /**\r\n     * 增加一个Uniform\r\n     * @param propertyID \r\n     * @param propertyKey \r\n     */\r\n    addShaderBlockUniform(propertyID: number, blockname: string, blockProperty: UniformProperty[]): void {\r\n        throw \"need override it\";\r\n    }\r\n}","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * @en Fade in effect\r\n * @zh 淡入效果\r\n */\r\nexport class FadeIn extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 0;\r\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * @en Fade out effect\r\n * @zh 淡出效果\r\n */\r\nexport class FadeOut extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 1;\r\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\n\r\nexport class IndexBuffer extends Buffer {\r\n    /** @internal */\r\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\r\n    /** @internal */\r\n    protected _indexTypeByteCount: number;\r\n    /** @internal */\r\n    protected _indexCount: number;\r\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(targetType, bufferUsageType);\r\n    }\r\n\r\n\r\n    // _setIndexData(data: number): void;\r\n    // _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\r\n    // _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\r\n    //     var curBufSta: BufferState = BufferState._curBindedBufferState;\r\n\r\n    //     if (curBufSta) {\r\n    //         if (curBufSta._bindedIndexBuffer === this) {\r\n    //             //this._glBuffer.setDataLength(0);\r\n    //         } else {\r\n    //             curBufSta.unBind();//避免影响VAO\r\n    //             //this.bind();\r\n    //             if (typeof data === \"number\")\r\n    //                // this._glBuffer.setDataLength(data);\r\n    //             else\r\n    //                 //this._glBuffer.setData(data, bufferOffset);\r\n    //             curBufSta.bind();\r\n    //         }\r\n    //     } else {\r\n    //         //this.bind();\r\n    //         if (typeof data === \"number\")\r\n    //             this._glBuffer.setDataLength(data);\r\n    //         else\r\n    //             this._glBuffer.setData(data, bufferOffset)\r\n    //     }\r\n    // }\r\n}","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\n\r\n/**\r\n * @en The `RenderTextureCube` class is used for creating cube map render textures.\r\n * @zh `RenderTextureCube` 类用于创建立方体贴图渲染纹理。\r\n */\r\nexport class RenderTextureCube extends RenderTexture {\r\n\r\n    /**\r\n     * @en The index of the cube face, which can be +x, -x, +y, -y, +z, or -z.\r\n     * @zh 立方体贴图的面索引，可以是 +x, -x, +y, -y, +z 或 -z。\r\n     */\r\n    faceIndex: number;\r\n\r\n    /**\r\n     * @en Create a new instance of `RenderTextureCube`.\r\n     * @param size The size of the texture.\r\n     * @param colorFormat The color format of the render target.\r\n     * @param depthFormat The depth format of the render target.\r\n     * @param generateMipmap Whether to generate mipmaps for the render texture.\r\n     * @param multiSamples The number of samples for multi-sampling.\r\n     * @zh 创建一个 `RenderTextureCube` 实例。\r\n     * @param size 纹理的尺寸。\r\n     * @param colorFormat 渲染目标的颜色格式。\r\n     * @param depthFormat 渲染目标的深度格式。\r\n     * @param generateMipmap 是否为渲染纹理生成 mipmaps。\r\n     * @param multiSamples 多采样的样本数量。\r\n     */\r\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\r\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\r\n        this.faceIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRenderTarget(): void {\r\n        this._dimension = TextureDimension.Cube;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        this._texture = this._renderTarget._textures[0];\r\n    }\r\n\r\n    // _start() {\r\n    //     RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n    //     if (RenderTexture._currentActive != this) {\r\n    //         RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n    //         RenderTexture._currentActive = this;\r\n    //         LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\r\n    //     }\r\n    // }\r\n\r\n}","/**\r\n * <code>ShaderDefine</code> 类用于定义宏数据。\r\n */\r\nexport class ShaderDefine {\r\n\t/**@internal */\r\n\t_index: number;\r\n\t/**@internal */\r\n\t_value: number;\r\n\t/**\r\n\t * 创建一个宏定义的实例`\t\r\n\t * @param index 宏索引\r\n\t * @param value 宏值\r\n\t */\r\n\tconstructor(index: number, value: number) {\r\n\t\tthis._index = index;\r\n\t\tthis._value = value;\r\n\t}\r\n}","import { SoundChannel } from \"./SoundChannel\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * @en `Sound` is an abstract base class for controlling sound.\r\n * @zh `Sound`是播放控制声音的抽象基类。\r\n */\r\nexport class Sound extends EventDispatcher {\r\n\r\n    /**\r\n     * @en Load the sound.\r\n     * @param url The URL of the sound file.\r\n     * @zh 加载声音。\r\n     * @param url 声音文件的地址。\r\n     */\r\n    load(url: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Play the sound.\r\n     * @param startTime The start time in seconds.\r\n     * @param loops The number of times to loop the sound. 0 means loop indefinitely.\r\n     * @returns A SoundChannel object representing the sound channel.\r\n     * @zh 播放声音。\r\n     * @param startTime 开始时间，单位为秒。\r\n     * @param loops 循环次数，0表示一直循环。\r\n     * @returns 声道 SoundChannel 对象。\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @en The total duration of the sound in seconds.\r\n     * @zh 声音的总时间，以秒为单位。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @en Release the sound resources.\r\n     * @zh 释放声音资源。\r\n     */\r\n    dispose(): void {\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n * @private\r\n * @en The StringKey class is used to access the number corresponding to a string.\r\n * @zh StringKey 类用于存取字符串对应的数字。\r\n */\r\nexport class StringKey {\r\n\r\n    private _strsToID: any = {};\r\n    private _idToStrs: any[] = [];\r\n    private _length: number = 0;\r\n\r\n    /**\r\n     * @en Adds a string.\r\n     * @param str The string to be added as a key which will be associated with a generated number.\r\n     * @returns The numerical identifier associated with the string.\r\n     * @zh 添加一个字符。\r\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\r\n     * @returns 返回与此字符串对应的数字。\r\n     */\r\n    //TODO:coverage\r\n    add(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        if (index != null) return index;\r\n\r\n        this._idToStrs[this._length] = str;\r\n        return this._strsToID[str] = this._length++;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves the identifier for a specified string.\r\n     * @param str The string for which to get the identifier.\r\n     * @returns The identifier for the string, or -1 if the string does not exist.\r\n     * @zh 根据指定的字符串获取其标识符。\r\n     * @param\tstr 字符。\r\n     * @return 返回此字符串对应的ID，如果字符串不存在则返回-1。\r\n     */\r\n    //TODO:coverage\r\n    getID(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        return index == null ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * @en Retrieves a string based on its identifier.\r\n     * @zh 根据指定的ID获取对应的字符串。\r\n     * @param  id ID。\r\n     * @returns The string associated with the identifier, or undefined if no string is associated.\r\n     * @zh 根据指定的ID获取对应的字符串。\r\n     * @param  id ID。\r\n     * @returns 返回与此ID对应的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getName(id: number): string {\r\n        var str: any = this._idToStrs[id];\r\n        return str == null ? undefined : str;\r\n    }\r\n}\r\n\r\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\r\nexport class SubUniformBufferData extends UnifromBufferData{\r\n    \r\n    /**@internal */\r\n    _offset:number;\r\n\r\n    /**@interanl */\r\n    _isInPool:boolean = false;\r\n\r\n    /**@interanl */\r\n    _needUpdate:boolean = false;\r\n\r\n    /**@internal */\r\n    _realByte = 0;\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\r\n        super(uniformParamsStat);\r\n        this._offset = bufferOffset;\r\n        this._realByte = this._bytelength;\r\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class System {\r\n    /**\r\n     * 替换指定名称的定义。用来动态更改类的定义。\r\n     * @param\tname 属性名。\r\n     * @param\tclassObj 属性值。\r\n     */\r\n    //TODO:coverage\r\n    static changeDefinition(name: string, classObj: any): void {\r\n        (window as any).Laya[name] = classObj;\r\n        var str: string = name + \"=classObj\";\r\n        window['eval'](str);\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VertexDeclaration } from \"./VertexDeclaration\";\r\n\r\nexport class VertexBuffer extends Buffer {\r\n\tprivate _instanceBuffer: boolean = false;\r\n\t/** @internal */\r\n\t_vertexDeclaration: VertexDeclaration | null = null;\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t */\r\n\tget vertexDeclaration(): VertexDeclaration | null {\r\n\t\treturn this._vertexDeclaration;\r\n\t}\r\n\r\n\tset vertexDeclaration(value: VertexDeclaration | null) {\r\n\t\tthis._vertexDeclaration = value;\r\n\t}\r\n\tget instanceBuffer(): boolean {\r\n\t\treturn this._instanceBuffer;\r\n\t}\r\n\r\n\tset instanceBuffer(value: boolean) {\r\n\t\tthis._instanceBuffer = value;\r\n\t}\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tsuper(targetType, bufferUsageType);\r\n\t}\r\n}"],"mappings":"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MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,MACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,C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","ignoreList":[]}
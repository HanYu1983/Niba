// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package desktop

import (
	"fmt"
	"math/rand"
	"time"
)

// ShuffleCard is
func ShuffleCard(arr []Card) {
	t := time.Now()
	rand.Seed(int64(t.Nanosecond()))

	for i := len(arr) - 1; i > 0; i-- {
		j := rand.Intn(i)
		arr[i], arr[j] = arr[j], arr[i]
	}
}

// FilterCard is
func FilterCard(s1 []Card, f func(Card) bool) []Card {
	ret := []Card{}
	for _, v := range s1 {
		if f(v) {
			ret = append(ret, v)
		}
	}
	return ret
}

// RemoveCard is
func RemoveCard(s1 []Card, card Card) ([]Card, error) {
	findID := -1
	for _findID, c := range s1 {
		if c == card {
			findID = _findID
			break
		}
	}
	if findID == -1 {
		return s1, fmt.Errorf("item not found")
	}
	s1 = append(s1[0:findID], s1[findID+1:]...)
	return s1, nil
}

// ReplaceCard is
func ReplaceCard(items []Card, info map[Card]Card) []Card {
	ret := make([]Card, len(items))
	copy(ret, items)
	for origin, next := range info {
		for idx, card := range items {
			if card == origin {
				ret[idx] = next
			}
		}
	}
	return ret
}

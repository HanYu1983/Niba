/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package project.app

import java.io._
import scala.language.postfixOps

import project.utilities.StringUtils

import org.apache.commons.text.WordUtils

trait ID 
case class UserName(name: String) extends ID
case class Password(hash: Int) extends ID

trait RequireCategory
case class RequireCategoryUnit() extends RequireCategory

trait Requires
case class UserSelectRequires(category: RequireCategory) extends Requires

trait CardProto extends Serializable {
    def requires():List[Requires]
    def onEvent():Unit
}

class Card1 extends CardProto {
    def requires():List[Requires] = {
        return List(UserSelectRequires(RequireCategoryUnit()))
    }
    def onEvent():Unit = {
        System.out.println("Card1")
    }
}

class Card2 extends CardProto {
    def requires():List[Requires] = {
        return List()
    }
    def onEvent():Unit = {
        System.out.println("Card2")
    }
}

@SerialVersionUID(123L)
class Context(val cardProtos:List[CardProto]) extends Serializable {

}

object App {
    def test():Unit = {
        val tokens = StringUtils.split(MessageUtils.getMessage())
        val result = StringUtils.join(tokens)
        println(WordUtils.capitalize(result))
    }
    def main(args: Array[String]): Unit = {
        val ctx = new Context(List(new Card1, new Card2))
        val oos = new ObjectOutputStream(new FileOutputStream("data.save"))
        oos.writeObject(ctx)
        oos.close

        val ois = new ObjectInputStream(new FileInputStream("data.save"))
        val ctx2 = ois.readObject().asInstanceOf[Context]
        ois.close

        println(ctx2.cardProtos)
        for(cardProto <- ctx2.cardProtos){
            cardProto.onEvent()
        }

        println(-13 abs)
        1 max 2
        "abc" toUpperCase
    }
}

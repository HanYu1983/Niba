(function ($hx_exports, $global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		first = f(x1,first);
	}
	return first;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
var viewModel_IViewModel = function() { };
$hxClasses["viewModel.IViewModel"] = viewModel_IViewModel;
viewModel_IViewModel.__name__ = "viewModel.IViewModel";
viewModel_IViewModel.__isInterface__ = true;
viewModel_IViewModel.prototype = {
	getGame: null
	,play: null
	,previewPlayCard: null
	,getCardInfoByProtoId: null
	,__class__: viewModel_IViewModel
};
var viewModel_DefaultViewModel = function() { };
$hxClasses["viewModel.DefaultViewModel"] = viewModel_DefaultViewModel;
viewModel_DefaultViewModel.__name__ = "viewModel.DefaultViewModel";
viewModel_DefaultViewModel.__interfaces__ = [viewModel_IViewModel];
viewModel_DefaultViewModel.prototype = {
	getGame: function() {
		return viewModel_IViewModel_DEFAULT_GAME_MODEL;
	}
	,previewPlayCard: function(id) {
		return viewModel_IViewModel_DEFAULT_PREVIEW_PLAY_CARD_MODEL;
	}
	,getCardInfoByProtoId: function(protoId) {
		return viewModel_IViewModel_DEFAULT_CARD_INFO_MODEL;
	}
	,play: function(commandId,cb) {
		cb();
	}
	,__class__: viewModel_DefaultViewModel
};
var model_Model = function() {
};
$hxClasses["model.Model"] = model_Model;
model_Model.__name__ = "model.Model";
model_Model.__super__ = viewModel_DefaultViewModel;
model_Model.prototype = $extend(viewModel_DefaultViewModel.prototype,{
	createCard: function() {
		return { id : "card_" + Math.floor(Math.random() * 9999), protoId : "", owner : "vic", faceup : Math.random() > 0.5, watchingByPlayer : []};
	}
	,createCommand: function() {
		return { id : "test", name : "testname"};
	}
	,createPlayer: function() {
		return { id : "player_" + Math.floor(Math.random() * 9999), name : "dx", hand : [this.createCard(),this.createCard(),this.createCard(),this.createCard()], deck : [this.createCard(),this.createCard(),this.createCard(),this.createCard(),this.createCard(),this.createCard(),this.createCard(),this.createCard(),this.createCard()], url : "https://particle-979.appspot.com/card/images/cardback.png"};
	}
	,getGame: function() {
		var cmds = [this.createCommand(),this.createCommand(),this.createCommand()];
		cmds[0].id = "0";
		cmds[0].name = "打出gundam";
		cmds[1].id = "1";
		cmds[1].name = "使用x gundam的月光炮";
		cmds[2].id = "2";
		cmds[2].name = "打出g";
		return { players : [this.createPlayer(),this.createPlayer()], commands : cmds};
	}
	,previewPlayCard: function(id) {
		return { success : false, msg : "should have xxxx", content : { }};
	}
	,__class__: model_Model
});
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	var app = new haxe_ui_HaxeUIApp();
	app.ready(function() {
		app.addComponent(new assets_MainView());
		app.start();
	});
};
Main.cumulativeOffset = function(element) {
	var top = 0;
	var left = 0;
	while(true) {
		top += element.offsetTop;
		left += element.offsetLeft;
		element = element.offsetParent;
		if(!(element != null)) {
			break;
		}
	}
	return { top : top, left : left};
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var haxe_ui_backend_ComponentSurface = function() {
};
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
haxe_ui_backend_ComponentSurface.prototype = {
	__class__: haxe_ui_backend_ComponentSurface
};
var haxe_ui_core_ComponentCommon = function() {
	haxe_ui_backend_ComponentSurface.call(this);
};
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
haxe_ui_core_ComponentCommon.prototype = $extend(haxe_ui_backend_ComponentSurface.prototype,{
	getTextDisplay: function() {
		return null;
	}
	,hasTextDisplay: function() {
		return false;
	}
	,getTextInput: function() {
		return null;
	}
	,hasTextInput: function() {
		return false;
	}
	,getImageDisplay: function() {
		return null;
	}
	,hasImageDisplay: function() {
		return false;
	}
	,__class__: haxe_ui_core_ComponentCommon
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
haxe_ui_core_IClonable.prototype = {
	cloneComponent: null
	,self: null
	,__class__: haxe_ui_core_IClonable
};
var haxe_ui_core_ComponentContainer = function() {
	this._id = null;
	this._layoutLocked = false;
	this._layout = null;
	this._ready = false;
	this.parentComponent = null;
	haxe_ui_core_ComponentCommon.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentContainer.prototype = $extend(haxe_ui_core_ComponentCommon.prototype,{
	behaviours: null
	,parentComponent: null
	,dispatch: function(event) {
	}
	,_ready: null
	,isReady: null
	,get_isReady: function() {
		return this._ready;
	}
	,_children: null
	,childComponents: null
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,registerBehaviours: function() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour);
		this.behaviours.register("tooltip",haxe_ui_core_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_core_ComponentToolTipRendererBehaviour,null);
		this.behaviours.register("text",haxe_ui_core_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_core_ComponentValueBehaviour);
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,moveComponentToBack: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,0);
	}
	,moveComponentBackward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == 0) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index - 1);
	}
	,moveComponentToFront: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,this.parentComponent.get_numComponents() - 1);
	}
	,moveComponentFrontward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == this.parentComponent.get_numComponents() - 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index + 1);
	}
	,bottomComponent: null
	,get_bottomComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[0];
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[this._children.length - 1];
	}
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_disabled: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"disabled"));
		return value;
	}
	,get_tooltip: function() {
		return this.behaviours.getDynamic("tooltip");
	}
	,set_tooltip: function(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltip"));
		return value;
	}
	,get_tooltipRenderer: function() {
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	,set_tooltipRenderer: function(value) {
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltipRenderer"));
		return value;
	}
	,get_text: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"text",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"text"));
		return value;
	}
	,get_value: function() {
		return this.behaviours.getDynamic("value");
	}
	,set_value: function(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"value"));
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentContainer();
	}
	,__class__: haxe_ui_core_ComponentContainer
	,__properties__: {set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",set_tooltipRenderer:"set_tooltipRenderer",get_tooltipRenderer:"get_tooltipRenderer",set_tooltip:"set_tooltip",get_tooltip:"get_tooltip",set_disabled:"set_disabled",get_disabled:"get_disabled",set_id:"set_id",get_id:"get_id",get_topComponent:"get_topComponent",get_bottomComponent:"get_bottomComponent",get_childComponents:"get_childComponents",get_isReady:"get_isReady"}
});
var haxe_ui_core_ComponentEvents = function() {
	this._pausedEvents = null;
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	haxe_ui_core_ComponentContainer.call(this);
};
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentEvents.prototype = $extend(haxe_ui_core_ComponentContainer.prototype,{
	_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).classes.indexOf(":mobile") != -1 && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,dispatchRecursivelyWhen: function(event,condition) {
		if(condition(this) == true) {
			this.dispatch(event);
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(condition(child) == true) {
				child.dispatchRecursivelyWhen(event,condition);
			}
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,disableInteractivity: function(disable,recursive,updateStyle,force) {
		if(force == null) {
			force = false;
		}
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(force == true) {
			this._interactivityDisabledCounter = 0;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
			this.dispatch(new haxe_ui_events_UIEvent("disabled"));
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			if(this._disabledEvents != null) {
				var eventType = this._disabledEvents.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					var listeners = this._disabledEvents.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
				this._disabledEvents = null;
			}
			this.dispatch(new haxe_ui_events_UIEvent("enabled"));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive,updateStyle);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					var listener = listeners.iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	,_pausedEvents: null
	,pauseEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this.__events == null || this.__events.contains(type) == false) {
			return;
		}
		if(this._pausedEvents == null) {
			this._pausedEvents = new haxe_ds_StringMap();
		}
		var pausedList = this._pausedEvents.h[type];
		if(pausedList == null) {
			pausedList = [];
			this._pausedEvents.h[type] = pausedList;
		}
		var listeners = this.__events.listeners(type).copy();
		var l = listeners.iterator();
		while(l.hasNext()) {
			var l1 = l.next();
			pausedList.push(haxe_ui_util_Listener.toFunc(l1));
			this.unregisterEvent(type,haxe_ui_util_Listener.toFunc(l1));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.pauseEvent(type,recursive);
			}
		}
	}
	,resumeEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _gthis = this;
		if(this.__events == null) {
			return;
		}
		if(this._pausedEvents == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(this._pausedEvents.h,type) == false) {
			return;
		}
		haxe_ui_Toolkit.callLater(function() {
			var pausedList = _gthis._pausedEvents.h[type];
			var _g = 0;
			while(_g < pausedList.length) {
				var l = pausedList[_g];
				++_g;
				_gthis.registerEvent(type,l);
			}
			var _this = _gthis._pausedEvents;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
		});
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.resumeEvent(type,recursive);
			}
		}
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentContainer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentContainer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentEvents();
	}
	,__class__: haxe_ui_core_ComponentEvents
});
var haxe_ui_core_ComponentValidation = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_core_ComponentEvents.call(this);
};
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentValidation.prototype = $extend(haxe_ui_core_ComponentEvents.prototype,{
	_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid(flag);
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var h = this._delayedInvalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidateComponent(flag,recursive);
			}
		}
	}
	,invalidateComponentData: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("data",recursive);
	}
	,invalidateComponentLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout",recursive);
	}
	,invalidateComponentPosition: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("position",recursive);
	}
	,invalidateComponentDisplay: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("display",recursive);
	}
	,invalidateComponentStyle: function(force,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(force == null) {
			force = false;
		}
		this.invalidateComponent("style",recursive);
		if(force == true) {
			this._style = null;
		}
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		var h = this._delayedInvalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	,validateNow: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.validateNow();
		}
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	,syncComponentValidation: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation(nextFrame);
			}
			if(++count >= 10) {
				if(this._isDisposed) {
					var c = js_Boot.getClass(this);
					throw haxe_Exception.thrown("There was a problem validating this component as it has already been destroyed (" + c.__name__ + "#" + this.get_id() + ")");
				} else {
					var c1 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c1.__name__ + "#" + this.get_id() + ").");
				}
			}
		}
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentEvents.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentEvents.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentValidation();
	}
	,__class__: haxe_ui_core_ComponentValidation
	,__properties__: $extend(haxe_ui_core_ComponentEvents.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth"})
});
var haxe_ui_core_ComponentLayout = function() {
	haxe_ui_core_ComponentValidation.call(this);
};
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentLayout.prototype = $extend(haxe_ui_core_ComponentValidation.prototype,{
	get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentValidation.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentValidation.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentLayout();
	}
	,__class__: haxe_ui_core_ComponentLayout
	,__properties__: $extend(haxe_ui_core_ComponentValidation.prototype.__properties__,{set_style:"set_style",get_style:"get_style"})
});
var haxe_ui_core_ComponentBounds = function() {
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	this._hasScreen = null;
	this._cachedPercentHeight = null;
	this._cachedPercentWidth = null;
	haxe_ui_core_ComponentLayout.call(this);
};
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentBounds.prototype = $extend(haxe_ui_core_ComponentLayout.prototype,{
	autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_cachedPercentWidth: null
	,_cachedPercentHeight: null
	,cachePercentSizes: function(clearExisting) {
		if(clearExisting == null) {
			clearExisting = true;
		}
		if(this._percentWidth != null) {
			this._cachedPercentWidth = this._percentWidth;
			if(clearExisting == true) {
				this._percentWidth = null;
			}
		}
		if(this._percentHeight != null) {
			this._cachedPercentHeight = this._percentHeight;
			if(clearExisting == true) {
				this._percentHeight = null;
			}
		}
	}
	,restorePercentSizes: function() {
		if(this._cachedPercentWidth != null) {
			this.set_percentWidth(this._cachedPercentWidth);
		}
		if(this._cachedPercentHeight != null) {
			this.set_percentHeight(this._cachedPercentHeight);
		}
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,get_hasScreen: function() {
		var p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	,hitTest: function(left,top,allowZeroSized) {
		if(allowZeroSized == null) {
			allowZeroSized = false;
		}
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(allowZeroSized == true) {
			if(this.get_width() <= 0 || this.get_height() <= 0) {
				return true;
			}
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position",false);
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			return new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight());
		}
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display",false);
		return value;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this.get_componentClipRect() != null;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		if(this.get_width() == 0 && this.get_height() == 0) {
			return false;
		}
		var x = this.get_screenLeft();
		var y = this.get_screenTop();
		var w = this.get_width();
		var h = this.get_height();
		var thisRect = new haxe_ui_geom_Rectangle(x,y,w,h);
		var screenRect = new haxe_ui_geom_Rectangle(0,0,haxe_ui_core_Screen.get_instance().get_width(),haxe_ui_core_Screen.get_instance().get_height());
		return !screenRect.intersects(thisRect);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentLayout.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentLayout.prototype.cloneComponent.call(this);
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentBounds();
	}
	,__class__: haxe_ui_core_ComponentBounds
	,__properties__: $extend(haxe_ui_core_ComponentLayout.prototype.__properties__,{get_isComponentOffscreen:"get_isComponentOffscreen",get_isComponentClipped:"get_isComponentClipped",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",get_hasScreen:"get_hasScreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_ComponentBase = function() {
	this._nativeClassName = null;
	this._className = null;
	haxe_ui_core_ComponentBounds.call(this);
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
haxe_ui_backend_ComponentBase.prototype = $extend(haxe_ui_core_ComponentBounds.prototype,{
	handleCreate: function(native) {
	}
	,handlePosition: function(left,top,style) {
	}
	,handleSize: function(width,height,style) {
	}
	,handleReady: function() {
	}
	,handleClipRect: function(value) {
	}
	,handleVisibility: function(show) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,isScroller: null
	,get_isScroller: function() {
		return false;
	}
	,handleFrameworkProperty: function(id,value) {
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,handleAddComponent: function(child) {
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,applyStyle: function(style) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			v = this._classProperties.h[name];
		}
		if(v == null) {
			var c = js_Boot.getClass(this);
			var c1 = c.__name__.toLowerCase() + "." + name;
			v = haxe_ui_Toolkit.properties.h[c1];
		}
		return v;
	}
	,_classProperties: null
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		this._classProperties.h[name] = value;
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,_className: null
	,className: null
	,get_className: function() {
		if(this._className != null) {
			return this._className;
		}
		var c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	,_nativeClassName: null
	,nativeClassName: null
	,get_nativeClassName: function() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		var r = js_Boot.getClass(this);
		while(r != null) {
			var c = r.__name__;
			var t = haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this);
			if(t != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentBounds.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentBounds.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(haxe_ui_core_ComponentBounds.prototype.__properties__,{get_nativeClassName:"get_nativeClassName",get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isScroller:"get_isScroller",get_isNativeScroller:"get_isNativeScroller"})
});
var haxe_ui_backend_ComponentImpl = function() {
	this._over = false;
	this._canvas = null;
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
		haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
		haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
	if(window.document.styleSheets.length == 0) {
		var style = window.document.createElement("style");
		style.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(style);
	}
	if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
		haxe_ui_backend_ComponentImpl._stylesAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container .haxeui-component, .haxeui-component:focus {\r\n                position: absolute;\r\n                box-sizing: border-box;\r\n                -webkit-touch-callout: none;\r\n                -webkit-user-select: none;\r\n                -khtml-user-select: none;\r\n                -moz-user-select: none;\r\n                -ms-user-select: none;\r\n                user-select: none;\r\n                -webkit-tap-highlight-color: transparent;\r\n                webkit-user-select;\r\n                outline: none !important;\r\n            }",sheet.cssRules.length);
		haxe_ui_core_Screen.get_instance().get_container().classList.add("haxeui-theme-" + haxe_ui_Toolkit.get_theme());
	}
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g1 = 0;
		var _g2 = record.addedNodes.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	element: null
	,_eventMap: null
	,get_isNativeScroller: function() {
		return false;
	}
	,recursiveReady: function() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout",false);
		}
		component.ready();
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		if(this.get_isScroller()) {
			if(this.element == null) {
				this.element = window.document.createElement("div");
			}
			this.element.scrollTop = 0;
			this.element.scrollLeft = 0;
			this.element.classList.add("haxeui-component");
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		}
		var newElement = window.document.createElement("div");
		newElement.classList.add("haxeui-component");
		if(((this) instanceof haxe_ui_components_Image)) {
			newElement.style.boxSizing = "initial";
		}
		if(this.element != null) {
			var p = this.element.parentElement;
			if(p != null) {
				haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
				p.replaceChild(newElement,this.element);
			}
		}
		this.element = newElement;
		haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
		this.remapEvents();
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy_h = Object.create(null);
		var h = this._eventMap.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var fn = this._eventMap.h[k];
			copy_h[k] = fn;
			this.unmapEvent(k,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var h = copy_h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.mapEvent(k,copy_h[k]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		} else if(parent != null) {
			css.marginTop = "";
			css.marginLeft = "";
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			} else {
				child.element.style.marginLeft = "";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			} else {
				child.element.style.marginTop = "";
			}
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	,handleFrameworkProperty: function(id,value) {
		if(id == "allowMouseInteraction") {
			if(value == true && this.element.style.getPropertyValue("pointer-events") != null) {
				this.element.style.removeProperty("pointer-events");
			} else if(this.element.style.getPropertyValue("pointer-events") != "none") {
				this.element.style.setProperty("pointer-events","none");
				this.setCursor(null);
			}
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		value.toInts();
		if(value != null && parent != null) {
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + (value.get_right() - 1) + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			var tmp = "" + (c.get_left() - value.left | 0) + "px";
			this.element.style.left = "" + tmp;
			var tmp = "" + (c.get_top() - value.top | 0) + "px";
			this.element.style.top = "" + tmp;
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (this._children == null ? [] : this._children).length - 1) {
			this.element.appendChild(child.element);
		} else if(index == (this._children == null ? [] : this._children).indexOf(child) - 1) {
			var before = (this._children == null ? [] : this._children)[index];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		} else {
			var before = (this._children == null ? [] : this._children)[index + 1];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				var dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + (dropShadow.distance + 2) + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Grayscale)) {
				var grayscale = style.filter[0];
				this.element.style.setProperty("-webkit-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-moz-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-o-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("filter","grayscale(" + grayscale.amount + "%)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.backdropFilter != null) {
			if(((style.backdropFilter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.backdropFilter[0];
				this.element.style.setProperty("backdrop-filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.removeProperty("backdrop-filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
		if(this.hasImageDisplay()) {
			this._imageDisplay.applyStyle();
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,_canvas: null
	,getCanvas: function(width,height) {
		if(this._canvas == null) {
			this._canvas = window.document.createElement("canvas");
			this._canvas.style.setProperty("-webkit-backface-visibility","hidden");
			this._canvas.style.setProperty("-moz-backface-visibility","hidden");
			this._canvas.style.setProperty("-ms-backface-visibility","hidden");
			this._canvas.style.position = "absolute";
			this._canvas.style.setProperty("pointer-events","none");
			this._canvas.width = width;
			this._canvas.height = height;
			this.element.insertBefore(this._canvas,this.element.firstChild);
		}
		if(width != this._canvas.width) {
			this._canvas.width = width;
		}
		if(height != this._canvas.height) {
			this._canvas.height = height;
		}
		return this._canvas;
	}
	,hasCanvas: function() {
		return this._canvas != null;
	}
	,removeCanvas: function() {
		if(this._canvas != null && this.element.contains(this._canvas)) {
			this.element.removeChild(this._canvas);
			this._canvas = null;
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(this.hasTextInput() == true) {
					this._eventMap.h[type] = listener;
					var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
					this.getTextInput().element.addEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent),{ passive : true});
				}
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.h[type] = listener;
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			this._eventMap.h[type] = listener;
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(this.hasTextInput()) {
				var _this = this._eventMap;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
				this.getTextInput().element.removeEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	,__onContextMenu: function(event) {
		event.preventDefault();
		var type = "rightclick";
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_MouseEvent(type);
				uiEvent.screenX = event.pageX;
				uiEvent.screenY = event.pageY;
				fn(uiEvent);
			}
		}
		return false;
	}
	,__onChangeEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var fn = this._eventMap.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_events_UIEvent("change");
			fn(uiEvent);
		}
	}
	,_over: null
	,__onMouseEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			try {
				var tmp = type == "mousedown";
			} catch( _g ) {
			}
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( _g ) {
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				if(type == "mouseover") {
					this._over = true;
				} else if(type == "mouseout") {
					this._over = false;
				}
				fn(mouseEvent);
			}
		}
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,__onMouseWheelEvent: function(event) {
		var fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onKeyboardEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					var me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	,__onScrollEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		var fn = this._eventMap.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_events_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,set_depth: null
	,get_id: null
	,set_id: null
	,get_isComponentOffscreen: null
	,validateComponent: null
	,updateComponentDisplay: null
	,isComponentOffscreen: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id",set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_Component = function() {
	this._initialSizeApplied = false;
	this._scriptAccess = true;
	this._includeInLayout = true;
	this._styleSheet = null;
	this._cachedStyleSheetRef = null;
	this._useCachedStyleSheetRef = false;
	this.classes = [];
	this._customStyle = null;
	this._hidden = false;
	this.bindingRoot = false;
	this._dragOptions = null;
	this._dragInitiator = null;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	this.componentTabIndex = 0;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
	if(haxe_ui_Toolkit.get_initialized() == false) {
		haxe_Log.trace("WARNING: You are trying to create a component before the toolkit has been initialized. This could have undefined results.",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 76, className : "haxe.ui.core.Component", methodName : "new"});
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent._children == null ? [] : parent._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	componentTabIndex: null
	,_defaultLayoutClass: null
	,create: function() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				var name = sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					var name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.get_customStyle().native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,userData: null
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,get_draggable: function() {
		return haxe_ui_dragdrop_DragManager.get_instance().isRegisteredDraggable(this);
	}
	,set_draggable: function(value) {
		if(value == true) {
			haxe_ui_dragdrop_DragManager.get_instance().registerDraggable(this,this.get_dragOptions());
		} else {
			haxe_ui_dragdrop_DragManager.get_instance().unregisterDraggable(this);
		}
		return value;
	}
	,_dragInitiator: null
	,get_dragInitiator: function() {
		return this._dragInitiator;
	}
	,set_dragInitiator: function(value) {
		this._dragInitiator = value;
		if(this._dragOptions != null) {
			this._dragOptions.mouseTarget = value;
		}
		this.set_draggable(true);
		return value;
	}
	,_dragOptions: null
	,get_dragOptions: function() {
		if(this._dragOptions == null) {
			this._dragOptions = { mouseTarget : this._dragInitiator};
		}
		return this._dragOptions;
	}
	,set_dragOptions: function(value) {
		this._dragOptions = value;
		this.set_draggable(true);
		return value;
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		var n = 0;
		if(this._compositeBuilder != null) {
			var builderCount = this._compositeBuilder.get_numComponents();
			if(builderCount != null) {
				n = builderCount;
			} else if(this._children != null) {
				n = this._children.length;
			}
		} else if(this._children != null) {
			n = this._children.length;
		}
		return n;
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child.disposeComponent();
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	,disposeComponent: function() {
		this._isDisposed = true;
		this.removeAllComponents(true);
		this.destroyComponent();
		this.unregisterEvents();
		if(this.hasTextDisplay()) {
			this.getTextDisplay().dispose();
		}
		if(this.hasTextInput()) {
			this.getTextInput().dispose();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().dispose();
		}
		if(this.behaviours != null) {
			this.behaviours.dispose();
			this.behaviours = null;
		}
		if(this._layout != null) {
			this._layout.set_component(null);
			this._layout = null;
		}
		if(this._internalEvents != null) {
			this._internalEvents._target = null;
			this._internalEvents = null;
		}
		this.parentComponent = null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		var child = this._children[index];
		if(child == null) {
			return null;
		}
		if(dispose == true) {
			child._isDisposed = true;
			child.removeAllComponents(true);
		}
		this.handleRemoveComponentAt(index,dispose);
		if(HxOverrides.remove(this._children,child)) {
			child.parentComponent = null;
			child.set_depth(-1);
		}
		if(dispose == true) {
			child.destroyComponent();
			child.unregisterEvents();
		}
		this.assignPositionClasses(invalidate);
		if(invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,assignPositionClasses: function(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if((this._children == null ? [] : this._children).length == 1) {
			(this._children == null ? [] : this._children)[0].addClasses(["first","last"],invalidate);
			return;
		}
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_locale_LocaleManager.get_instance().unregisterComponent(this);
		this.onDestroy();
	}
	,onDestroy: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.onDestroy();
		}
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	,walkComponents: function(callback) {
		if(callback(this) == false) {
			return;
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(callback(child) == false) {
				return;
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var cont = [true];
			child.walkComponents((function(cont) {
				return function(c) {
					cont[0] = callback(c);
					return cont[0];
				};
			})(cont));
			if(cont[0] == false) {
				break;
			}
		}
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(searchType == "id" && this.get_id() == criteria || searchType == "css" && this.classes.indexOf(criteria) != -1 == true) {
				if(type != null) {
					return js_Boot.__instanceof(this,type);
				}
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type);
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var temp = child.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		if(this._compositeBuilder != null) {
			var childArray = this._compositeBuilder.findComponents(styleName,type,maxDepth);
			if(childArray != null) {
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY,true)) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,true)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
					c = c.concat(child.findComponentsUnderPoint(screenX,screenY,type));
				}
			}
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var b = false;
		if(this.hitTest(screenX,screenY,true)) {
			if(type == null) {
				return true;
			}
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,true)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == false) {
						match = child.hasComponentUnderPoint(screenX,screenY,type);
					}
					if(match == true) {
						b = match;
						break;
					}
				}
			}
		}
		return b;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,hideInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("hidden"));
			}
		}
	}
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,showInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("shown"));
			}
		}
	}
	,fadeIn: function(onEnd,show) {
		if(show == null) {
			show = true;
		}
		var _gthis = this;
		if(onEnd != null || show == true) {
			var prevStart = this.onAnimationStart;
			var prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	,fadeOut: function(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		var _gthis = this;
		if(onEnd != null || hide == true) {
			var prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		return value;
	}
	,_customStyle: null
	,get_customStyle: function() {
		if(this._customStyle == null) {
			this._customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		return this._customStyle;
	}
	,set_customStyle: function(value) {
		if(value != this._customStyle) {
			this.invalidateComponent("style",false);
		}
		this._customStyle = value;
		return value;
	}
	,classes: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,addClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClasses(names,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,removeClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClasses(names,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,get_styleNames: function() {
		return this.classes.join(" ");
	}
	,set_styleNames: function(value) {
		if(value == null) {
			return value;
		}
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.addClass(x);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.get_customStyle().mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,get_styleSheet: function() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		var s = null;
		var ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	,set_styleSheet: function(value) {
		this._styleSheet = value;
		this.resetCachedStyleSheetRef();
		return value;
	}
	,resetCachedStyleSheetRef: function() {
		this._cachedStyleSheetRef = null;
		this._useCachedStyleSheetRef = false;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.resetCachedStyleSheetRef();
		}
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c = js_Boot.getClass(this._layout);
			tmp = tmp1 == c.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			if((this._children == null ? [] : this._children) != null) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data",false);
				_gthis.invalidateComponent("style",false);
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
				if(_gthis._hidden == false) {
					_gthis.dispatch(new haxe_ui_events_UIEvent("shown"));
				}
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,_scriptAccess: null
	,get_scriptAccess: function() {
		return this._scriptAccess;
	}
	,set_scriptAccess: function(value) {
		if(value == this._scriptAccess) {
			return value;
		}
		this._scriptAccess = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_scriptAccess(value);
		}
		return value;
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,onThemeChanged: function() {
		this._initialSizeApplied = false;
		if(this._style != null) {
			if(this._style.initialWidth != null) {
				this.set_width(0);
			}
			if(this._style.initialPercentWidth != null) {
				this.set_percentWidth(null);
			}
			if(this._style.initialHeight != null) {
				this.set_height(0);
			}
			if(this._style.initialPercentHeight != null) {
				this.set_percentHeight(null);
			}
		}
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	,enforceSizeConstraints: function() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			var localStyle = this.get_styleSheet().buildStyleFor(this);
			s.apply(localStyle);
		}
		s.apply(this.get_customStyle());
		if(this._style == null || this._style.equalTo(s) == false) {
			var marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			var bordersChanged = false;
			if(this._style != null && this._style.get_fullBorderSize() != s.get_fullBorderSize()) {
				bordersChanged = true;
			}
			this._style = s;
			this.applyStyle(s);
			if(bordersChanged == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout",false);
				}
			}
			if(marginsChanged == true) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if(style.autoHeight != true && (style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this.set_componentWidth(null);
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this.set_componentHeight(null);
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_percentWidth(null);
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_percentHeight(null);
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(style.animationName != null) {
			var animationKeyFrames = haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName];
			this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
		} else if(this.get_componentAnimation() != null) {
			this.set_componentAnimation(null);
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				if(style.cursor == null) {
					this.get_customStyle().cursor = "pointer";
				}
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.get_customStyle().cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(this.classes.indexOf("listview") != -1 || this.classes.indexOf("tableview") != -1 || this.classes.indexOf("treeview") != -1) {
			if(style.get_borderType() == haxe_ui_styles_StyleBorderType.None) {
				this.addClass("borderless");
			} else {
				this.removeClass("borderless");
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,onPointerEventsMouseOver: function(e) {
		this.addClass(":hover",true,true);
	}
	,onPointerEventsMouseOut: function(e) {
		this.removeClass(":hover",true,true);
	}
	,onPointerEventsMouseDown: function(e) {
		this.addClass(":down",true,true);
	}
	,onPointerEventsMouseUp: function(e) {
		this.removeClass(":down",true,true);
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		c.set_hidden(this.get_hidden());
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		var tmp = this._ready == false;
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this.get_customStyle() != null) {
			if(c.get_customStyle() == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.get_customStyle().apply(this.get_customStyle());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,get_isComponentClipped: function() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_isComponentClipped();
		}
		return this.get_componentClipRect() != null;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,get_color: function() {
		if(this.get_customStyle().color != null) {
			return this.get_customStyle().color;
		}
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.get_customStyle().color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().color = null;
		} else {
			this.get_customStyle().color = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColor: function() {
		if(this.get_customStyle().backgroundColor != null) {
			return this.get_customStyle().backgroundColor;
		}
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.get_customStyle().backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColor = null;
		} else {
			this.get_customStyle().backgroundColor = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundImage: function() {
		if(this.get_customStyle().backgroundImage != null) {
			return this.get_customStyle().backgroundImage;
		}
		if(this.get_style() == null || this.get_style().backgroundImage == null) {
			return null;
		}
		return this.get_style().backgroundImage;
	}
	,set_backgroundImage: function(value) {
		if(this.get_customStyle().backgroundImage == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundImage = null;
		} else {
			this.get_customStyle().backgroundImage = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderColor: function() {
		if(this.get_customStyle().borderColor != null) {
			return this.get_customStyle().borderColor;
		}
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.get_customStyle().borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderColor = null;
		} else {
			this.get_customStyle().borderColor = haxe_ui_util_Color.toInt(value);
		}
		this.get_customStyle().borderTopColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderLeftColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderBottomColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderRightColor = haxe_ui_util_Color.toInt(value);
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderSize: function() {
		if(this.get_customStyle().borderSize != null) {
			return this.get_customStyle().borderSize;
		}
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return this.get_style().borderSize;
	}
	,set_borderSize: function(value) {
		if(this.get_customStyle().borderSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderSize = null;
		} else {
			this.get_customStyle().borderSize = value;
		}
		this.get_customStyle().borderTopSize = value;
		this.get_customStyle().borderLeftSize = value;
		this.get_customStyle().borderBottomSize = value;
		this.get_customStyle().borderRightSize = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderRadius: function() {
		if(this.get_customStyle().borderRadius != null) {
			return this.get_customStyle().borderRadius;
		}
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return this.get_style().borderRadius;
	}
	,set_borderRadius: function(value) {
		if(this.get_customStyle().borderRadius == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderRadius = null;
		} else {
			this.get_customStyle().borderRadius = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_padding: function() {
		if(this.get_customStyle().padding != null) {
			return this.get_customStyle().padding;
		}
		if(this.get_style() == null || this.get_style().padding == null) {
			return null;
		}
		return this.get_style().padding;
	}
	,set_padding: function(value) {
		if(this.get_customStyle().padding == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().set_padding(null);
		} else {
			this.get_customStyle().set_padding(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_customStyle().paddingLeft != null) {
			return this.get_customStyle().paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(this.get_customStyle().paddingLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingLeft = null;
		} else {
			this.get_customStyle().paddingLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingRight: function() {
		if(this.get_customStyle().paddingRight != null) {
			return this.get_customStyle().paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,set_paddingRight: function(value) {
		if(this.get_customStyle().paddingRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingRight = null;
		} else {
			this.get_customStyle().paddingRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingTop: function() {
		if(this.get_customStyle().paddingTop != null) {
			return this.get_customStyle().paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,set_paddingTop: function(value) {
		if(this.get_customStyle().paddingTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingTop = null;
		} else {
			this.get_customStyle().paddingTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingBottom: function() {
		if(this.get_customStyle().paddingBottom != null) {
			return this.get_customStyle().paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(this.get_customStyle().paddingBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingBottom = null;
		} else {
			this.get_customStyle().paddingBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginLeft: function() {
		if(this.get_customStyle().marginLeft != null) {
			return this.get_customStyle().marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,set_marginLeft: function(value) {
		if(this.get_customStyle().marginLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginLeft = null;
		} else {
			this.get_customStyle().marginLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginRight: function() {
		if(this.get_customStyle().marginRight != null) {
			return this.get_customStyle().marginRight;
		}
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return this.get_style().marginRight;
	}
	,set_marginRight: function(value) {
		if(this.get_customStyle().marginRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginRight = null;
		} else {
			this.get_customStyle().marginRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginTop: function() {
		if(this.get_customStyle().marginTop != null) {
			return this.get_customStyle().marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_marginTop: function(value) {
		if(this.get_customStyle().marginTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginTop = null;
		} else {
			this.get_customStyle().marginTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginBottom: function() {
		if(this.get_customStyle().marginBottom != null) {
			return this.get_customStyle().marginBottom;
		}
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return this.get_style().marginBottom;
	}
	,set_marginBottom: function(value) {
		if(this.get_customStyle().marginBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginBottom = null;
		} else {
			this.get_customStyle().marginBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_clip: function() {
		if(this.get_customStyle().clip != null) {
			return this.get_customStyle().clip;
		}
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.get_customStyle().clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().clip = null;
		} else {
			this.get_customStyle().clip = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_opacity: function() {
		if(this.get_customStyle().opacity != null) {
			return this.get_customStyle().opacity;
		}
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.get_customStyle().opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().opacity = null;
		} else {
			this.get_customStyle().opacity = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.get_customStyle().horizontalAlign != null) {
			return this.get_customStyle().horizontalAlign;
		}
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.get_customStyle().horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().horizontalAlign = null;
		} else {
			this.get_customStyle().horizontalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.get_customStyle().verticalAlign != null) {
			return this.get_customStyle().verticalAlign;
		}
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.get_customStyle().verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().verticalAlign = null;
		} else {
			this.get_customStyle().verticalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,_internal__onDragStart: null
	,onDragStart: null
	,set_onDragStart: function(value) {
		if(this._internal__onDragStart != null) {
			this.unregisterEvent("dragStart",this._internal__onDragStart);
			this._internal__onDragStart = null;
		}
		if(value != null) {
			this._internal__onDragStart = value;
			this.registerEvent("dragStart",value);
		}
		return value;
	}
	,_internal__onDrag: null
	,onDrag: null
	,set_onDrag: function(value) {
		if(this._internal__onDrag != null) {
			this.unregisterEvent("drag",this._internal__onDrag);
			this._internal__onDrag = null;
		}
		if(value != null) {
			this._internal__onDrag = value;
			this.registerEvent("drag",value);
		}
		return value;
	}
	,_internal__onDragEnd: null
	,onDragEnd: null
	,set_onDragEnd: function(value) {
		if(this._internal__onDragEnd != null) {
			this.unregisterEvent("dragEnd",this._internal__onDragEnd);
			this._internal__onDragEnd = null;
		}
		if(value != null) {
			this._internal__onDragEnd = value;
			this.registerEvent("dragEnd",value);
		}
		return value;
	}
	,_internal__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this._internal__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this._internal__onAnimationStart);
			this._internal__onAnimationStart = null;
		}
		if(value != null) {
			this._internal__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,_internal__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this._internal__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this._internal__onAnimationEnd);
			this._internal__onAnimationEnd = null;
		}
		if(value != null) {
			this._internal__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,_internal__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this._internal__onClick != null) {
			this.unregisterEvent("click",this._internal__onClick);
			this._internal__onClick = null;
		}
		if(value != null) {
			this._internal__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,_internal__onMouseOver: null
	,onMouseOver: null
	,set_onMouseOver: function(value) {
		if(this._internal__onMouseOver != null) {
			this.unregisterEvent("mouseover",this._internal__onMouseOver);
			this._internal__onMouseOver = null;
		}
		if(value != null) {
			this._internal__onMouseOver = value;
			this.registerEvent("mouseover",value);
		}
		return value;
	}
	,_internal__onMouseOut: null
	,onMouseOut: null
	,set_onMouseOut: function(value) {
		if(this._internal__onMouseOut != null) {
			this.unregisterEvent("mouseout",this._internal__onMouseOut);
			this._internal__onMouseOut = null;
		}
		if(value != null) {
			this._internal__onMouseOut = value;
			this.registerEvent("mouseout",value);
		}
		return value;
	}
	,_internal__onDblClick: null
	,onDblClick: null
	,set_onDblClick: function(value) {
		if(this._internal__onDblClick != null) {
			this.unregisterEvent("doubleclick",this._internal__onDblClick);
			this._internal__onDblClick = null;
		}
		if(value != null) {
			this._internal__onDblClick = value;
			this.registerEvent("doubleclick",value);
		}
		return value;
	}
	,_internal__onRightClick: null
	,onRightClick: null
	,set_onRightClick: function(value) {
		if(this._internal__onRightClick != null) {
			this.unregisterEvent("rightclick",this._internal__onRightClick);
			this._internal__onRightClick = null;
		}
		if(value != null) {
			this._internal__onRightClick = value;
			this.registerEvent("rightclick",value);
		}
		return value;
	}
	,_internal__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this._internal__onChange != null) {
			this.unregisterEvent("change",this._internal__onChange);
			this._internal__onChange = null;
		}
		if(value != null) {
			this._internal__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onRightClick:"set_onRightClick",set_onDblClick:"set_onDblClick",set_onMouseOut:"set_onMouseOut",set_onMouseOver:"set_onMouseOver",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationStart:"set_onAnimationStart",set_onDragEnd:"set_onDragEnd",set_onDrag:"set_onDrag",set_onDragStart:"set_onDragStart",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",get_padding:"get_padding",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",set_scriptAccess:"set_scriptAccess",get_scriptAccess:"get_scriptAccess",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_styleSheet:"set_styleSheet",get_styleSheet:"get_styleSheet",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_customStyle:"set_customStyle",get_customStyle:"get_customStyle",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",set_dragOptions:"set_dragOptions",get_dragOptions:"get_dragOptions",set_dragInitiator:"set_dragInitiator",get_dragInitiator:"get_dragInitiator",set_draggable:"set_draggable",get_draggable:"get_draggable",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_containers_Box = function() {
	this._direction = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	,_direction: null
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(style.direction != null && style.direction != this._direction) {
			this._direction = style.direction;
			this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this._direction));
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var pool_Poolable = function() { };
$hxClasses["pool.Poolable"] = pool_Poolable;
pool_Poolable.__name__ = "pool.Poolable";
pool_Poolable.__isInterface__ = true;
var assets_Card = function() {
	this._pool_next = null;
	haxe_ui_containers_Box.call(this);
	var c0 = new haxe_ui_containers_Box();
	c0.set_id("box_card");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Image();
	c1.set_id("img_card");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_resource(haxe_ui_util_Variant.fromString("https://storage.googleapis.com/particle-resources/cardPackage/gundamWarN/179030_11E_U_BL208S_2_blue.jpg"));
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_id("box_desc");
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_styleString("background-color: yellow;");
	var c3 = new haxe_ui_components_Label();
	c3.set_id("lbl_id");
	c3.set_percentWidth(100.);
	c3.set_text("id");
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_id("lbl_name");
	c4.set_percentWidth(100.);
	c4.set_text("name");
	c2.addComponent(c4);
	var c5 = new haxe_ui_components_Label();
	c5.set_id("lbl_content");
	c5.set_percentWidth(100.);
	c5.set_text("contentcontentcontentcontentcontentcontentcontentcontentcontentcontentcontentcontentcontentcontentcontent");
	c2.addComponent(c5);
	c0.addComponent(c2);
	var c6 = new haxe_ui_components_Image();
	c6.set_id("img_cardback");
	c6.set_percentWidth(100.);
	c6.set_percentHeight(100.);
	c6.set_resource(haxe_ui_util_Variant.fromString("https://particle-979.appspot.com/card/images/cardback.png"));
	c0.addComponent(c6);
	var c7 = new haxe_ui_containers_Box();
	c7.set_id("box_watching");
	c7.set_percentWidth(100.);
	c7.set_percentHeight(100.);
	c7.set_styleString("background-color: red; opacity: 0.3");
	c0.addComponent(c7);
	this.addComponent(c0);
	var c8 = new haxe_ui_containers_Box();
	c8.set_id("box_cover");
	c8.set_percentWidth(100.);
	c8.set_percentHeight(100.);
	this.addComponent(c8);
	this.set_width(50.);
	this.set_height(75.);
	this.set_padding(0);
	this.bindingRoot = true;
	this.lbl_name = c4;
	this.lbl_id = c3;
	this.lbl_content = c5;
	this.img_cardback = c6;
	this.img_card = c1;
	this.box_watching = c7;
	this.box_desc = c2;
	this.box_cover = c8;
	this.box_card = c0;
	this.box_desc.hide();
};
$hxClasses["assets.Card"] = assets_Card;
assets_Card.__name__ = "assets.Card";
assets_Card.__interfaces__ = [pool_Poolable];
assets_Card.__super__ = haxe_ui_containers_Box;
assets_Card.prototype = $extend(haxe_ui_containers_Box.prototype,{
	model: null
	,playerModel: null
	,set_playerModel: function(player) {
		this.img_cardback.set_resource(haxe_ui_util_Variant.fromString(player.url));
		return player;
	}
	,set_model: function(model) {
		var cardInfo = Main.model.getCardInfoByProtoId(model.protoId);
		this.lbl_id.set_text(cardInfo.id);
		this.lbl_name.set_text(cardInfo.name);
		this.lbl_content.set_text(cardInfo.content);
		this.img_card.set_resource(haxe_ui_util_Variant.fromString(cardInfo.url));
		this.box_watching.hide();
		this.img_cardback.hide();
		var _g = model.watchingByPlayer.length > 0;
		if(model.faceup) {
			var _g1 = _g;
		} else if(_g) {
			this.box_watching.show();
		} else {
			this.img_cardback.show();
		}
		this.model = model;
		return model;
	}
	,_pool_reset_haxe_ui_containers_Box: function() {
	}
	,_pool_next: null
	,_pool_reset_assets_Card: function() {
		this._pool_reset_haxe_ui_containers_Box();
		this.box_desc.hide();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new assets_Card();
	}
	,lbl_name: null
	,lbl_id: null
	,lbl_content: null
	,img_cardback: null
	,img_card: null
	,box_watching: null
	,box_desc: null
	,box_cover: null
	,box_card: null
	,__class__: assets_Card
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_playerModel:"set_playerModel",set_model:"set_model"})
});
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var assets_Command = function() {
	haxe_ui_containers_HBox.call(this);
	var c0 = new haxe_ui_containers_Absolute();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_padding(10);
	var c2 = new haxe_ui_components_Label();
	c2.set_id("lbl_id");
	c2.set_text("id");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_id("lbl_action");
	c3.set_text("action");
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_Absolute();
	c4.set_id("box_selectable");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c4.set_styleNames("selectable");
	c0.addComponent(c4);
	var c5 = new haxe_ui_containers_Absolute();
	c5.set_id("box_focus");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	c5.set_styleNames("focus");
	c0.addComponent(c5);
	this.addComponent(c0);
	this.set_height(100.);
	this.set_percentWidth(100.);
	this.set_styleNames("area");
	this.bindingRoot = true;
	this.lbl_id = c2;
	this.lbl_action = c3;
	this.box_selectable = c4;
	this.box_focus = c5;
};
$hxClasses["assets.Command"] = assets_Command;
assets_Command.__name__ = "assets.Command";
assets_Command.__super__ = haxe_ui_containers_HBox;
assets_Command.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	model: null
	,selectable: null
	,focus: null
	,set_model: function(m) {
		this.lbl_id.set_text(m.id);
		this.lbl_action.set_text(m.name);
		return m;
	}
	,set_selectable: function(s) {
		if(s) {
			this.box_selectable.show();
		} else {
			this.box_selectable.hide();
		}
		return s;
	}
	,set_focus: function(f) {
		if(f) {
			this.box_focus.show();
		} else {
			this.box_focus.hide();
		}
		return f;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new assets_Command();
	}
	,lbl_id: null
	,lbl_action: null
	,box_selectable: null
	,box_focus: null
	,__class__: assets_Command
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_focus:"set_focus",set_selectable:"set_selectable",set_model:"set_model"})
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var assets_MainView = function() {
	this.firstClick = null;
	this.cardViews = [];
	this.commandViews = [];
	this.enemyTable = new assets_PlayerTable();
	this.playerTable = new assets_PlayerTable();
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\r\n        .area{\r\n            border: 1px solid gray;\r\n        }\r\n        .selectable{\r\n            border: 3px solid red;\r\n        }\r\n        .focus{\r\n            border: 3px solid yellow;\r\n        }\r\n    ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_id("box_commandList");
	c1.set_width(200.);
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	var c2 = new haxe_ui_containers_Absolute();
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_id("box_playerTable");
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c2.addComponent(c3);
	var c4 = new haxe_ui_containers_Absolute();
	c4.set_id("box_table");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c2.addComponent(c4);
	c0.addComponent(c2);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.box_table = c4;
	this.box_playerTable = c3;
	this.box_commandList = c1;
	this.box_playerTable.addComponent(this.playerTable);
	this.box_playerTable.addComponent(this.enemyTable);
};
$hxClasses["assets.MainView"] = assets_MainView;
assets_MainView.__name__ = "assets.MainView";
assets_MainView.__super__ = haxe_ui_containers_VBox;
assets_MainView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	playerTable: null
	,enemyTable: null
	,commandViews: null
	,cardViews: null
	,onInitialize: function() {
		var _gthis = this;
		haxe_ui_containers_VBox.prototype.onInitialize.call(this);
		delay_Delay.byTime(.1,function() {
			_gthis.syncGame();
		});
	}
	,syncGame: function() {
		var gameModel = Main.model.getGame();
		this.clearTable();
		this.syncHand(this.playerTable,gameModel.players[0]);
		this.syncHand(this.enemyTable,gameModel.players[1]);
		this.syncDeck(this.playerTable,gameModel.players[0]);
		this.syncDeck(this.enemyTable,gameModel.players[1]);
		this.syncCommands();
		this.selectCommandMode();
	}
	,clearTable: function() {
		while(this.cardViews.length > 0) this.cardViews.pop();
		this.box_table.removeAllComponents();
	}
	,syncCommands: function() {
		while(this.commandViews.length > 0) this.commandViews.pop();
		this.box_commandList.removeAllComponents();
		var gameModel = Main.model.getGame();
		var commands = gameModel.commands;
		var _g = 0;
		var _g1 = commands.length;
		while(_g < _g1) {
			var i = _g++;
			var model = commands[i];
			var commandView = new assets_Command();
			commandView.set_model(model);
			this.box_commandList.addComponent(commandView);
			this.commandViews.push(commandView);
		}
	}
	,selectCommandMode: function() {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.commandViews;
		while(_g < _g1.length) {
			var cmd = [_g1[_g]];
			++_g;
			var model = cmd[0].model;
			cmd[0].set_selectable(true);
			cmd[0].set_focus(false);
			cmd[0].set_onMouseOver((function(cmd) {
				return function(e) {
					haxe_Log.trace("in",{ fileName : "src/assets/MainView.hx", lineNumber : 74, className : "assets.MainView", methodName : "selectCommandMode"});
					cmd[0].set_focus(true);
				};
			})(cmd));
			cmd[0].set_onMouseOut((function(cmd) {
				return function(e) {
					haxe_Log.trace("out",{ fileName : "src/assets/MainView.hx", lineNumber : 79, className : "assets.MainView", methodName : "selectCommandMode"});
					cmd[0].set_focus(false);
				};
			})(cmd));
			cmd[0].set_onClick((function(cmd) {
				return function(e) {
					Main.model.play(cmd[0].get_id(),$bind(_gthis,_gthis.syncGame));
				};
			})(cmd));
		}
	}
	,syncDeck: function(table,player) {
		var cards = player.deck;
		var _g = 0;
		var _g1 = cards.length;
		while(_g < _g1) {
			var i = _g++;
			var card = new assets_Card();
			var cardModel = cards[i];
			card.set_model(cardModel);
			card.set_playerModel(player);
			card.set_left(i + table.box_deck.get_screenLeft());
			card.set_top(i + table.box_deck.get_screenTop());
			this.box_table.addComponent(card);
		}
	}
	,firstClick: null
	,syncHand: function(table,player) {
		var cards = player.hand;
		var _g = 0;
		var _g1 = cards.length;
		while(_g < _g1) {
			var i = _g++;
			var card = new assets_Card();
			var cardModel = cards[i];
			card.set_model(cardModel);
			card.set_playerModel(player);
			card.set_left(i * (card.get_width() + 5) + table.box_hand.get_screenLeft());
			card.set_top(table.box_hand.get_screenTop());
			table.hand.push(card);
			this.box_table.addComponent(card);
			this.cardViews.push(card);
		}
	}
	,selectMyHandMode: function() {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.playerTable.hand.length;
		while(_g < _g1) {
			var i = _g++;
			var card = [this.playerTable.hand[i]];
			card[0].box_cover.set_onMouseOver((function(card) {
				return function(e) {
					if(_gthis.firstClick != null) {
						return;
					}
					haxe_Log.trace("over card: " + card[0].model.id,{ fileName : "src/assets/MainView.hx", lineNumber : 125, className : "assets.MainView", methodName : "selectMyHandMode"});
					tweenx909_TweenX.to(card[0].box_card,{ "top" : 30},.3,null,null,null,null,null,null,null,{ fileName : "src/assets/MainView.hx", lineNumber : 126, className : "assets.MainView", methodName : "selectMyHandMode"});
					Main.model.previewPlayCard(card[0].model.id);
				};
			})(card));
			card[0].box_cover.set_onMouseOut((function(card) {
				return function(e) {
					if(_gthis.firstClick != null) {
						return;
					}
					haxe_Log.trace("out card:" + card[0].model.id,{ fileName : "src/assets/MainView.hx", lineNumber : 133, className : "assets.MainView", methodName : "selectMyHandMode"});
					tweenx909_TweenX.to(card[0].box_card,{ "top" : 0},.3,null,null,null,null,null,null,null,{ fileName : "src/assets/MainView.hx", lineNumber : 134, className : "assets.MainView", methodName : "selectMyHandMode"});
				};
			})(card));
			card[0].box_cover.set_onClick((function(card) {
				return function(e) {
					if(_gthis.firstClick == null) {
						_gthis.firstClick = card[0].model;
						haxe_Log.trace("first click card:" + card[0].model.id,{ fileName : "src/assets/MainView.hx", lineNumber : 139, className : "assets.MainView", methodName : "selectMyHandMode"});
						_gthis.selectAreaMode();
					}
				};
			})(card));
		}
	}
	,selectAreaMode: function() {
		this.box_table.hide();
		var areas = [this.playerTable.box_deck,this.playerTable.box_deck2,this.playerTable.box_hand];
		var _g = 0;
		while(_g < areas.length) {
			var area = areas[_g];
			++_g;
			area.set_styleNames("selectable");
			area.set_onMouseOver(function(e) {
				haxe_Log.trace("over area",{ fileName : "src/assets/MainView.hx", lineNumber : 153, className : "assets.MainView", methodName : "selectAreaMode"});
			});
			area.set_onMouseOut(function(e) {
				haxe_Log.trace("out area",{ fileName : "src/assets/MainView.hx", lineNumber : 157, className : "assets.MainView", methodName : "selectAreaMode"});
			});
			area.set_onClick(function(e) {
			});
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new assets_MainView();
	}
	,box_table: null
	,box_playerTable: null
	,box_commandList: null
	,__class__: assets_MainView
});
var haxe_ui_containers_Absolute = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
};
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = "haxe.ui.containers.Absolute";
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Absolute.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Absolute();
	}
	,__class__: haxe_ui_containers_Absolute
});
var assets_PlayerTable = function() {
	this.hand = [];
	haxe_ui_containers_Absolute.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_Absolute();
	c1.set_id("box_deck");
	c1.set_width(100.);
	c1.set_percentHeight(100.);
	c1.set_styleNames("area");
	var c2 = new haxe_ui_components_Label();
	c2.set_text("牌庫");
	c1.addComponent(c2);
	c0.addComponent(c1);
	var c3 = new haxe_ui_containers_Absolute();
	c3.set_id("box_deck2");
	c3.set_width(100.);
	c3.set_percentHeight(100.);
	c3.set_styleNames("area");
	var c4 = new haxe_ui_components_Label();
	c4.set_text("捨山");
	c3.addComponent(c4);
	c0.addComponent(c3);
	var c5 = new haxe_ui_containers_Absolute();
	c5.set_id("box_trash");
	c5.set_width(100.);
	c5.set_percentHeight(100.);
	c5.set_styleNames("area");
	var c6 = new haxe_ui_components_Label();
	c6.set_text("廢棄庫");
	c5.addComponent(c6);
	c0.addComponent(c5);
	var c7 = new haxe_ui_containers_Absolute();
	c7.set_id("box_out");
	c7.set_width(100.);
	c7.set_percentHeight(100.);
	c7.set_styleNames("area");
	var c8 = new haxe_ui_components_Label();
	c8.set_text("除外");
	c7.addComponent(c8);
	c0.addComponent(c7);
	var c9 = new haxe_ui_containers_VBox();
	c9.set_percentWidth(100.);
	c9.set_percentHeight(100.);
	var c10 = new haxe_ui_containers_HBox();
	c10.set_height(100.);
	c10.set_percentWidth(100.);
	var c11 = new haxe_ui_containers_Absolute();
	c11.set_id("box_hand");
	c11.set_percentWidth(70.);
	c11.set_percentHeight(100.);
	c11.set_styleNames("area");
	var c12 = new haxe_ui_components_Label();
	c12.set_text("手牌");
	c11.addComponent(c12);
	c10.addComponent(c11);
	var c13 = new haxe_ui_containers_Absolute();
	c13.set_id("box_hand2");
	c13.set_percentWidth(100.);
	c13.set_percentHeight(100.);
	c13.set_styleNames("area");
	var c14 = new haxe_ui_components_Label();
	c14.set_text("工場");
	c13.addComponent(c14);
	c10.addComponent(c13);
	c9.addComponent(c10);
	var c15 = new haxe_ui_containers_Absolute();
	c15.set_id("box_standby");
	c15.set_height(100.);
	c15.set_percentWidth(100.);
	c15.set_styleNames("area");
	var c16 = new haxe_ui_components_Label();
	c16.set_text("配置");
	c15.addComponent(c16);
	c9.addComponent(c15);
	var c17 = new haxe_ui_containers_HBox();
	c17.set_percentWidth(100.);
	c17.set_percentHeight(100.);
	var c18 = new haxe_ui_containers_Absolute();
	c18.set_id("box_earth");
	c18.set_percentWidth(50.);
	c18.set_percentHeight(100.);
	c18.set_styleNames("area");
	var c19 = new haxe_ui_components_Label();
	c19.set_text("地球");
	c18.addComponent(c19);
	c17.addComponent(c18);
	var c20 = new haxe_ui_containers_Absolute();
	c20.set_id("box_universe");
	c20.set_percentWidth(50.);
	c20.set_percentHeight(100.);
	c20.set_styleNames("area");
	var c21 = new haxe_ui_components_Label();
	c21.set_text("宇宙");
	c20.addComponent(c21);
	c17.addComponent(c20);
	c9.addComponent(c17);
	c0.addComponent(c9);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.box_universe = c20;
	this.box_trash = c5;
	this.box_standby = c15;
	this.box_out = c7;
	this.box_hand2 = c13;
	this.box_hand = c11;
	this.box_earth = c18;
	this.box_deck2 = c3;
	this.box_deck = c1;
};
$hxClasses["assets.PlayerTable"] = assets_PlayerTable;
assets_PlayerTable.__name__ = "assets.PlayerTable";
assets_PlayerTable.__super__ = haxe_ui_containers_Absolute;
assets_PlayerTable.prototype = $extend(haxe_ui_containers_Absolute.prototype,{
	hand: null
	,registerBehaviours: function() {
		haxe_ui_containers_Absolute.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Absolute.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new assets_PlayerTable();
	}
	,box_universe: null
	,box_trash: null
	,box_standby: null
	,box_out: null
	,box_hand2: null
	,box_hand: null
	,box_earth: null
	,box_deck2: null
	,box_deck: null
	,__class__: assets_PlayerTable
});
var delay_Delay = function() {
};
$hxClasses["delay.Delay"] = delay_Delay;
delay_Delay.__name__ = "delay.Delay";
delay_Delay.init = function() {
	if(delay_Delay.initialized) {
		return;
	}
	delay_Delay.initialized = true;
	delay_Delay.delayObjects = [];
	time_EnterFrame.add(delay_Delay.OnTick);
};
delay_Delay.OnTick = function() {
	var _g = 0;
	var _g1 = delay_Delay.delayObjects;
	while(_g < _g1.length) {
		var delayObject = _g1[_g];
		++_g;
		if(delayObject.get_complete()) {
			delayObject.dispatch();
			if(delayObject.repeat != -1 && delayObject.fireCount >= delayObject.repeat) {
				delayObject.markedForRemoval = true;
			} else {
				delayObject.fireCount++;
				delayObject.reset();
			}
		}
	}
	var i = delay_Delay.delayObjects.length - 1;
	while(i >= 0) {
		if(delay_Delay.delayObjects[i] == null || delay_Delay.delayObjects[i].markedForRemoval) {
			delay_Delay.delayObjects.splice(i,1);
		}
		--i;
	}
};
delay_Delay.nextFrame = function(callback,params) {
	delay_Delay.byFrames(1,callback,params);
};
delay_Delay.byFrames = function(frames,callback,params,repeat) {
	if(repeat == null) {
		repeat = 0;
	}
	delay_Delay.init();
	delay_Delay.delayObjects.push(new delay_FrameDelay(frames,callback,params,repeat));
};
delay_Delay.byTime = function(duration,callback,params,timeUnit,repeat) {
	if(repeat == null) {
		repeat = 0;
	}
	delay_Delay.init();
	if(timeUnit == null) {
		timeUnit = 1000;
	}
	delay_Delay.delayObjects.push(new delay_TimeDelay(duration,callback,params,timeUnit,repeat));
};
delay_Delay.killDelay = function(callback) {
	delay_Delay.init();
	var i = delay_Delay.delayObjects.length - 1;
	while(i >= 0) {
		if(delay_Delay.delayObjects[i].callback == callback) {
			delay_Delay.delayObjects.splice(i,1);
		}
		--i;
	}
};
delay_Delay.prototype = {
	__class__: delay_Delay
};
var delay_IDelayObject = function() { };
$hxClasses["delay.IDelayObject"] = delay_IDelayObject;
delay_IDelayObject.__name__ = "delay.IDelayObject";
delay_IDelayObject.__isInterface__ = true;
delay_IDelayObject.prototype = {
	get_complete: null
	,params: null
	,callback: null
	,repeat: null
	,fireCount: null
	,id: null
	,markedForRemoval: null
	,dispatch: null
	,reset: null
	,__class__: delay_IDelayObject
	,__properties__: {get_complete:"get_complete"}
};
var delay_FrameDelay = function(frames,callback,params,repeat,id) {
	if(repeat == null) {
		repeat = 0;
	}
	this.count = 0;
	this.markedForRemoval = false;
	this.fireCount = 0;
	this.frames = frames;
	this.callback = callback;
	this.params = params;
	this.repeat = repeat;
	this.id = id;
};
$hxClasses["delay.FrameDelay"] = delay_FrameDelay;
delay_FrameDelay.__name__ = "delay.FrameDelay";
delay_FrameDelay.__interfaces__ = [delay_IDelayObject];
delay_FrameDelay.prototype = {
	callback: null
	,complete: null
	,repeat: null
	,fireCount: null
	,id: null
	,markedForRemoval: null
	,params: null
	,frames: null
	,count: null
	,get_complete: function() {
		if(this.count++ >= this.frames) {
			return true;
		}
		return false;
	}
	,dispatch: function() {
		utils_FunctionUtil.dispatch(this.callback,this.params);
	}
	,reset: function() {
		this.count = 0;
	}
	,__class__: delay_FrameDelay
	,__properties__: {get_complete:"get_complete"}
};
var delay_TimeDelay = function(duration,callback,params,timeUnit,repeat,id) {
	if(repeat == null) {
		repeat = 0;
	}
	this.markedForRemoval = false;
	this.fireCount = 0;
	this.callback = callback;
	this.params = params;
	this.repeat = repeat;
	this.id = id;
	if(timeUnit == 1) {
		this.millisecondsDuration = duration;
	} else if(timeUnit == 1000) {
		this.millisecondsDuration = time_TimeUtils.secondsToMil(duration);
	} else if(timeUnit == 60000) {
		this.millisecondsDuration = time_TimeUtils.minutesToMil(duration);
	} else if(timeUnit == 3600000) {
		this.millisecondsDuration = time_TimeUtils.hoursToMil(duration);
	} else if(timeUnit == 86400000) {
		this.millisecondsDuration = time_TimeUtils.daysToMil(duration);
	}
	this.reset();
};
$hxClasses["delay.TimeDelay"] = delay_TimeDelay;
delay_TimeDelay.__name__ = "delay.TimeDelay";
delay_TimeDelay.__interfaces__ = [delay_IDelayObject];
delay_TimeDelay.prototype = {
	callback: null
	,complete: null
	,repeat: null
	,fireCount: null
	,id: null
	,markedForRemoval: null
	,params: null
	,startTime: null
	,endTime: null
	,millisecondsDuration: null
	,get_complete: function() {
		if(time_GlobalTime.nowTime() >= this.endTime) {
			return true;
		}
		return false;
	}
	,dispatch: function() {
		utils_FunctionUtil.dispatch(this.callback,this.params);
	}
	,reset: function() {
		this.startTime = time_GlobalTime.nowTime();
		this.endTime = this.startTime + this.millisecondsDuration;
	}
	,__class__: delay_TimeDelay
	,__properties__: {get_complete:"get_complete"}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = "haxe._Int64.___Int64";
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw haxe_Exception.thrown("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,getInt64: function(pos) {
		var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4),this.getInt32(pos));
		return this1;
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g = 0;
		var _g1 = this.length;
		while(_g < _g1) {
			var i = _g++;
			var c = this.b[i];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = "haxe.crypto.Md5";
haxe_crypto_Md5.make = function(b) {
	var h = new haxe_crypto_Md5().doEncode(haxe_crypto_Md5.bytes2blks(b));
	var out = new haxe_io_Bytes(new ArrayBuffer(16));
	var p = 0;
	out.b[p++] = h[0] & 255;
	out.b[p++] = h[0] >> 8 & 255;
	out.b[p++] = h[0] >> 16 & 255;
	out.b[p++] = h[0] >>> 24;
	out.b[p++] = h[1] & 255;
	out.b[p++] = h[1] >> 8 & 255;
	out.b[p++] = h[1] >> 16 & 255;
	out.b[p++] = h[1] >>> 24;
	out.b[p++] = h[2] & 255;
	out.b[p++] = h[2] >> 8 & 255;
	out.b[p++] = h[2] >> 16 & 255;
	out.b[p++] = h[2] >>> 24;
	out.b[p++] = h[3] & 255;
	out.b[p++] = h[3] >> 8 & 255;
	out.b[p++] = h[3] >> 16 & 255;
	out.b[p++] = h[3] >>> 24;
	return out;
};
haxe_crypto_Md5.bytes2blks = function(b) {
	var nblk = (b.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	var _g1 = blksSize;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var i = 0;
	while(i < b.length) {
		blks[i >> 2] |= b.b[i] << (((b.length << 3) + i & 3) << 3);
		++i;
	}
	blks[i >> 2] |= 128 << (b.length * 8 + i) % 4 * 8;
	var l = b.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__:true,__constructs__:null
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_._hx_name="Some",$_.__params__ = ["v"],$_)
	,None: {_hx_name:"None",_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
haxe_ds_Option.__constructs__ = [haxe_ds_Option.Some,haxe_ds_Option.None];
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addInt32: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setInt32(this.pos,v,true);
		this.pos += 4;
	}
	,addInt64: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setInt32(this.pos,v.low,true);
		this.view.setInt32(this.pos + 4,v.high,true);
		this.pos += 8;
	}
	,addFloat: function(v) {
		if(this.pos + 4 > this.size) {
			this.grow(4);
		}
		this.view.setFloat32(this.pos,v,true);
		this.pos += 4;
	}
	,addDouble: function(v) {
		if(this.pos + 8 > this.size) {
			this.grow(8);
		}
		this.view.setFloat64(this.pos,v,true);
		this.pos += 8;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
	this.__events = null;
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = "haxe.ui.backend.AppBase";
haxe_ui_backend_AppBase.prototype = {
	__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		this.__events.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this.__events != null) {
			this.__events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,null);
		}
	}
	,build: function() {
	}
	,init: function(onReady,onEnd) {
		onReady();
	}
	,getToolkitInit: function() {
		return { };
	}
	,start: function() {
	}
	,exit: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,__class__: haxe_ui_backend_AppBase
};
var haxe_ui_backend_AppImpl = function() {
	haxe_ui_backend_AppBase.call(this);
};
$hxClasses["haxe.ui.backend.AppImpl"] = haxe_ui_backend_AppImpl;
haxe_ui_backend_AppImpl.__name__ = "haxe.ui.backend.AppImpl";
haxe_ui_backend_AppImpl.__super__ = haxe_ui_backend_AppBase;
haxe_ui_backend_AppImpl.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	init: function(onReady,onEnd) {
		var title = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.title");
		if(title != null) {
			haxe_ui_core_Screen.get_instance().set_title(title);
		}
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.document.body.onload = function(e) {
				onReady();
			};
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container","body"))};
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		} else if(id != null) {
			el = window.document.getElementById(id);
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,__class__: haxe_ui_backend_AppImpl
});
var haxe_ui_HaxeUIApp = function(options) {
	haxe_ui_backend_AppImpl.call(this);
	haxe_ui_HaxeUIApp.instance = this;
	this._options = options;
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = "haxe.ui.HaxeUIApp";
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppImpl;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppImpl.prototype,{
	_options: null
	,ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,init: function(onReady,onEnd) {
		if(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.get_theme() == "default") {
			haxe_ui_Toolkit.set_theme(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme"));
		}
		if(this._options == null) {
			haxe_ui_Toolkit.init(this.getToolkitInit());
		} else {
			haxe_ui_Toolkit.init(this._options);
		}
		var preloadList = null;
		var preloader = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			preloader = new haxe_ui_Preloader();
			preloader.progress(0,preloadList.length);
			this.addComponent(preloader);
			preloader.validateComponent();
		}
		this.handlePreload(preloadList,onReady,onEnd,preloader);
	}
	,handlePreload: function(list,onReady,onEnd,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			haxe_Log.trace("init",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 60, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			haxe_ui_backend_AppImpl.prototype.init.call(this,onReady,onEnd);
			return;
		}
		var item = list.shift();
		haxe_Log.trace("item",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 66, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload", customParams : [item]});
		switch(item.type) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 83, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onReady,onEnd,preloader);
		}
	}
	,addComponent: function(component) {
		return haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return haxe_ui_core_Screen.get_instance().removeComponent(component,dispose);
	}
	,setComponentIndex: function(child,index) {
		return haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppImpl.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
});
var haxe_ui_Preloader = function() {
	haxe_ui_containers_Box.call(this);
	this.set_id("preloader");
	this.set_styleString("width:100%;height:100%;");
	this.set_styleNames("default-background");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_containers_Box;
haxe_ui_Preloader.prototype = $extend(haxe_ui_containers_Box.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		label.set_verticalAlign("center");
		label.set_horizontalAlign("center");
		this.addComponent(label);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		var tmp = this.get_actualComponentWidth() > 0 && this.get_actualComponentHeight() > 0;
		return b;
	}
	,_current: null
	,_max: null
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			var text = label.get_text();
			if(StringTools.endsWith(text,"....")) {
				text = "Loading";
			}
			label.set_text(text);
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
haxe_ui_util_Properties.prototype = {
	_props: null
	,exists: function(name) {
		return Object.prototype.hasOwnProperty.call(this._props.h,name);
	}
	,getProp: function(name,defaultValue) {
		var v = defaultValue;
		if(Object.prototype.hasOwnProperty.call(this._props.h,name)) {
			v = this._props.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0x" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		this._props.h[name] = value;
	}
	,names: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._props.h);
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			var this1 = this._props;
			var value = p.getProp(name1);
			this1.h[name1] = value;
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var array = this.sections.h[name];
		if(array == null) {
			array = [];
			this.sections.h[name] = array;
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var h = item.values.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(key == field && item.values.h[key] == value) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				value = ref.values.h[v];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var h = s.get_animations().h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	,findAnimation: function(id) {
		var h = this.get_animations().h;
		var a_h = h;
		var a_keys = Object.keys(h);
		var a_length = a_keys.length;
		var a_current = 0;
		while(a_current < a_length) {
			var a = a_h[a_keys[a_current++]];
			if(a.id == id) {
				return a;
			}
		}
		return null;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var styleSheet = _g1[_g];
			++_g;
			if(styleSheet.get_hasMediaQueries() == true) {
				return true;
			}
		}
		return false;
	}
	,getAnimation: function(id,create) {
		if(create == null) {
			create = true;
		}
		var a = this.findAnimation(id);
		if(a == null) {
			a = new haxe_ui_styles_elements_AnimationKeyFrames(id,[]);
			this.addAnimation(a);
		}
		return a;
	}
	,addAnimation: function(animation) {
		this._styleSheets[0].addAnimation(animation);
	}
	,addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var el = s.findRule(selector);
			if(el != null) {
				return el;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			m = m.concat(s.findMatchingRules(selector));
		}
		return m;
	}
	,getAllRules: function() {
		var r = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			r = r.concat(s.get_rules());
		}
		return r;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",get_autoScaleDPIThreshold:"get_autoScaleDPIThreshold",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets",get_initialized:"get_initialized",get_backendProperties:"get_backendProperties",set_theme:"set_theme",get_theme:"get_theme"};
haxe_ui_Toolkit.get_theme = function() {
	return haxe_ui_Toolkit._theme;
};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().onThemeChanged();
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.get_backendProperties = function() {
	haxe_ui_Toolkit.buildBackend();
	return haxe_ui_Toolkit._backendProperties;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.9800000000000004);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.9700000000000006);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.9600000000000009);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.9500000000000011);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.9400000000000013);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.9300000000000015);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.9200000000000017);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.9100000000000019);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.9000000000000021);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.8900000000000023);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.8800000000000026);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.8700000000000028);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.860000000000003);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8500000000000032);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.8400000000000034);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.8300000000000036);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.8200000000000038);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.8100000000000041);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.8000000000000043);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.7900000000000045);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.7800000000000047);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7700000000000049);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.7600000000000051);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sidebars.css",-2.7500000000000053);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/cards.css",-2.7400000000000055);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/treeviews.css",-2.7300000000000058);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/last.css",-2.720000000000006);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-large","haxeui-core/styles/shared/warning-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tooltip-background-color","#fffff8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tertiary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-desc","haxeui-core/styles/shared/sortable-desc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-asc","haxeui-core/styles/shared/sortable-asc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-hover","#fcfcfc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-down","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-disabled","#fefefe");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-alt","#fafafa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-text-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color-hover","#d9e5f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color","#b4cbe4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","secondary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","search","haxeui-core/styles/shared/search.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-button-color","#d6d6d6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-background-color","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","question-large","haxeui-core/styles/shared/help-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","option-selected","haxeui-core/styles/shared/option-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-text-color","#666666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-inner-shadow","drop-shadow(1, 45, #888888, 0.1, 1, 1, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-color","#d2d2d2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","modal-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","menu-shadow","drop-shadow(2, 45, #888888, 0.1, 4, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","lighter-text-color","#a0a0a0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","info-large","haxeui-core/styles/shared/info-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-border-color","#c0c0c0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-start","#f2f2f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-end","#e1e1e1");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-vertical","haxeui-core/styles/shared/gripper-vertical.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-horizontal","haxeui-core/shared/default/gripper-horizontal.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expanded","haxeui-core/styles/shared/collapsed-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-text-color","#ff0000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-large","haxeui-core/styles/shared/error-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color","#ffdddd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-border-color","#b3b3b3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-start","#e6e6e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-end","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-text-color","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-border-color","#e4e4e4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-shadow","drop-shadow(1, 45, #888888, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","default-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapsed","haxeui-core/styles/shared/expanded-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close-hover","haxeui-core/styles/shared/close-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close","haxeui-core/styles/shared/close-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","check-selected","haxeui-core/styles/shared/check-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","blank","haxeui-core/styles/shared/blank.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up-down","haxeui-core/styles/shared/sortable-arrows-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up","haxeui-core/styles/shared/up-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right-square","haxeui-core/styles/shared/right-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right","haxeui-core/styles/shared/right-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-left","haxeui-core/styles/shared/left-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down-square","haxeui-core/styles/shared/down-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down","haxeui-core/styles/shared/down-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-start","#98c4e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-end","#549bde");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-lighter","#ecf2f9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color","#83aad4");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tooltip-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tertiary-background-color","#313435");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-hover","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-down","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-disabled","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-alt","#2d2e2f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-text-color","#d4d4d4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color-hover","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color","#415982");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","secondary-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-button-color","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-inner-shadow","drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-start","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-end","#36383a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","modal-background-color","#181a1b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","menu-shadow","drop-shadow(2, 45, #000000, 0.15, 6, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","lighter-text-color","#737373");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-text-color","#bbbbbb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-start","#434647");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-end","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-text-color","#ff0000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color","#ffdddd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-start","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-end","#27292a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-text-color","#595959");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-border-color","#26292b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-start","#36393a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-shadow","drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","default-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-start","#334666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-end","#2f3746");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-lighter","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color","#415982");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/dialog.properties");
	haxe_ui_actions_ActionManager.get_instance().registerInputSource(new haxe_ui_actions_KeyboardActionInputSource());
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","styles/native/main.css",-1);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1);
	haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("playertable","assets.PlayerTable");
	haxe_ui_core_ComponentClassMap.register("mainview","assets.MainView");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("command","assets.Command");
	haxe_ui_core_ComponentClassMap.register("card","assets.Card");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_util_Defines.set("windows","1");
	haxe_ui_util_Defines.set("utils","1.1.5");
	haxe_ui_util_Defines.set("utf16","1");
	haxe_ui_util_Defines.set("tweenxcore","1.0.4");
	haxe_ui_util_Defines.set("tweenx","1.0.4");
	haxe_ui_util_Defines.set("true","1");
	haxe_ui_util_Defines.set("time","1.0.4");
	haxe_ui_util_Defines.set("target.utf16","true");
	haxe_ui_util_Defines.set("target.unicode","true");
	haxe_ui_util_Defines.set("target.name","js");
	haxe_ui_util_Defines.set("source_header","Generated by Haxe 4.2.4");
	haxe_ui_util_Defines.set("signals","1.3.2");
	haxe_ui_util_Defines.set("pool","0.1.1");
	haxe_ui_util_Defines.set("notifier","1.1.24");
	haxe_ui_util_Defines.set("libnoise","1.0.0");
	haxe_ui_util_Defines.set("js_es5","1");
	haxe_ui_util_Defines.set("js_es","5");
	haxe_ui_util_Defines.set("js-es5","1");
	haxe_ui_util_Defines.set("js","1");
	haxe_ui_util_Defines.set("hxbit","1.5.0");
	haxe_ui_util_Defines.set("hxSet","1.5.0");
	haxe_ui_util_Defines.set("html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_core","1.4.0");
	haxe_ui_util_Defines.set("haxeui-html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui-core","1.4.0");
	haxe_ui_util_Defines.set("haxe_ver","4.204");
	haxe_ui_util_Defines.set("haxe4","1");
	haxe_ui_util_Defines.set("haxe3","1");
	haxe_ui_util_Defines.set("haxe","4.2.4");
	haxe_ui_util_Defines.set("delay","1.2.3");
	haxe_ui_util_Defines.set("dce","std");
	haxe_ui_util_Defines.set("core","1.4.0");
	haxe_ui_util_Defines.set("backend","html5");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.get_initialized = function() {
	return haxe_ui_Toolkit._initialized;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("tab")) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_autoScaleDPIThreshold = function() {
	if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
		return 192;
	}
	return 120;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.isAbsolutePath = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		callback(null);
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageFromBytes: function(bytes,callback) {
		callback(null);
	}
	,imageFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/backend/AssetsBase.hx", lineNumber : 50, className : "haxe.ui.backend.AssetsBase", methodName : "imageFromFile"});
		callback(null);
	}
	,getFontInternal: function(resourceId,callback) {
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : 0, height : 0};
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			window.console.log(e);
			callback(null);
		};
		var blob = new Blob([bytes.b.bufferValue]);
		var blobUrl = URL.createObjectURL(blob);
		image.src = blobUrl;
	}
	,getFontInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
				var fontInfo = { data : f};
				callback(fontInfo);
			},function(f) {
				callback(null);
			});
			return;
		}
		this.getFontFromHaxeResource(resourceId,function(r,f) {
			callback(f);
		});
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			callback(resourceId,null);
			return;
		}
		var fontFamilyParts = resourceId.split("/");
		var fontFamily = fontFamilyParts[fontFamilyParts.length - 1];
		if(fontFamily.indexOf(".") != -1) {
			fontFamily = HxOverrides.substr(fontFamily,0,fontFamily.indexOf("."));
		}
		var fontFace = new FontFace(fontFamily,bytes.b.bufferValue);
		fontFace.load().then(function(loadedFace) {
			window.document.fonts.add(loadedFace);
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(fontFamily,function(f) {
				var fontInfo = { data : fontFamily};
				callback(resourceId,fontInfo);
			},function(f) {
				callback(resourceId,null);
			});
		}).catch(function(error) {
			callback(resourceId,null);
		});
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	preloadList: null
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 106, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return null;
	}
	,_plugins: null
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_actions_ActionManager = function() {
	this._repeatActions = new haxe_ds_StringMap();
	this._inputSources = [];
	this._events = null;
};
$hxClasses["haxe.ui.actions.ActionManager"] = haxe_ui_actions_ActionManager;
haxe_ui_actions_ActionManager.__name__ = "haxe.ui.actions.ActionManager";
haxe_ui_actions_ActionManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_actions_ActionManager.get_instance = function() {
	if(haxe_ui_actions_ActionManager._instance == null) {
		haxe_ui_actions_ActionManager._instance = new haxe_ui_actions_ActionManager();
	}
	return haxe_ui_actions_ActionManager._instance;
};
haxe_ui_actions_ActionManager.prototype = {
	_events: null
	,_inputSources: null
	,_repeatActions: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener,priority);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			return;
		}
		this._events.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._events == null) {
			return;
		}
		this._events.invoke(event.type,event);
	}
	,registerInputSource: function(source) {
		source.start();
		this._inputSources.push(source);
	}
	,actionStart: function(action) {
		var _gthis = this;
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		var repeat = c.actionStart(action);
		if(repeat == true && Object.prototype.hasOwnProperty.call(this._repeatActions.h,action) == false) {
			var this1 = this._repeatActions;
			var value = { type : action, timer : new haxe_ui_util_Timer(100,function() {
				_gthis.actionStart(action);
			})};
			this1.h[action] = value;
		}
	}
	,actionEnd: function(action) {
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			haxe_Log.trace("current focus not interactive: " + action,{ fileName : "haxe/ui/actions/ActionManager.hx", lineNumber : 96, className : "haxe.ui.actions.ActionManager", methodName : "actionEnd"});
			return;
		}
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.actionEnd(action);
		if(Object.prototype.hasOwnProperty.call(this._repeatActions.h,action)) {
			var info = this._repeatActions.h[action];
			info.timer.stop();
			var _this = this._repeatActions;
			var key = action;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,__class__: haxe_ui_actions_ActionManager
};
var haxe_ui_actions_IActionInputSource = function() { };
$hxClasses["haxe.ui.actions.IActionInputSource"] = haxe_ui_actions_IActionInputSource;
haxe_ui_actions_IActionInputSource.__name__ = "haxe.ui.actions.IActionInputSource";
haxe_ui_actions_IActionInputSource.__isInterface__ = true;
haxe_ui_actions_IActionInputSource.prototype = {
	start: null
	,__class__: haxe_ui_actions_IActionInputSource
};
var haxe_ui_actions_KeyboardActionInputSource = function() {
	this._downKeys = new haxe_ds_IntMap();
	this._started = false;
};
$hxClasses["haxe.ui.actions.KeyboardActionInputSource"] = haxe_ui_actions_KeyboardActionInputSource;
haxe_ui_actions_KeyboardActionInputSource.__name__ = "haxe.ui.actions.KeyboardActionInputSource";
haxe_ui_actions_KeyboardActionInputSource.__interfaces__ = [haxe_ui_actions_IActionInputSource];
haxe_ui_actions_KeyboardActionInputSource.prototype = {
	_started: null
	,start: function() {
		if(this._started == true) {
			return;
		}
		this._started = true;
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyDown));
		haxe_ui_core_Screen.get_instance().registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,_downKeys: null
	,onKeyDown: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode)) {
			return;
		}
		this._downKeys.h[keyCode] = true;
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionPress");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionStart","actionPress",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionLeft");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionStart","actionLeft",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionRight");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionStart","actionRight",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionUp");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionStart","actionUp",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionDown");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionStart","actionDown",false,"KeyboardActionInputSource"));
		}
	}
	,onKeyUp: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode) == false) {
			return;
		}
		this._downKeys.remove(keyCode);
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionPress");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionEnd","actionPress",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionLeft");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionEnd","actionLeft",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionRight");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionEnd","actionRight",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionUp");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionEnd","actionUp",false,"KeyboardActionInputSource"));
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionDown");
			haxe_ui_actions_ActionManager.get_instance().dispatch(new haxe_ui_events_ActionEvent("actionEnd","actionDown",false,"KeyboardActionInputSource"));
		}
	}
	,__class__: haxe_ui_actions_KeyboardActionInputSource
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	_props: null
	,invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		this._props.h[name] = value;
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var v = this._props.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
	}
	,postClone: function(event) {
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_backend_ImageSurface = function() {
};
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
haxe_ui_backend_ImageSurface.prototype = {
	__class__: haxe_ui_backend_ImageSurface
};
var haxe_ui_backend_ImageBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	haxe_ui_backend_ImageSurface.call(this);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageBase.prototype = $extend(haxe_ui_backend_ImageSurface.prototype,{
	parentComponent: null
	,aspectRatio: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,validateData: function() {
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.borderRadius = "inherit";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	element: null
	,dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
			this.applyStyle();
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,applyStyle: function() {
		if(this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().imageRendering == "pixelated") {
				this.element.style.setProperty("image-rendering","pixelated");
				this.element.style.setProperty("image-rendering","-moz-crisp-edges");
				this.element.style.setProperty("image-rendering","crisp-edges");
			} else if(this.element.style.getPropertyValue("image-rendering") != null) {
				this.element.style.removeProperty("image-rendering");
			}
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_backend_PlatformBase = function() {
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	isWindows: null
	,get_isWindows: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("windows") != -1;
	}
	,isLinux: null
	,get_isLinux: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("linux") != -1;
	}
	,isMac: null
	,get_isMac: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("mac") != -1;
	}
	,getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,getSystemLocale: function() {
		return null;
	}
	,perf: function() {
		return HxOverrides.now() / 1000 * 1000;
	}
	,KeyTab: null
	,get_KeyTab: function() {
		return this.getKeyCode("tab");
	}
	,KeyUp: null
	,get_KeyUp: function() {
		return this.getKeyCode("up");
	}
	,KeyDown: null
	,get_KeyDown: function() {
		return this.getKeyCode("down");
	}
	,KeyLeft: null
	,get_KeyLeft: function() {
		return this.getKeyCode("left");
	}
	,KeyRight: null
	,get_KeyRight: function() {
		return this.getKeyCode("right");
	}
	,KeySpace: null
	,get_KeySpace: function() {
		return this.getKeyCode("space");
	}
	,KeyEnter: null
	,get_KeyEnter: function() {
		return this.getKeyCode("enter");
	}
	,KeyEscape: null
	,get_KeyEscape: function() {
		return this.getKeyCode("escape");
	}
	,getKeyCode: function(keyId) {
		switch(keyId) {
		case "down":
			return 40;
		case "enter":
			return 13;
		case "escape":
			return 27;
		case "left":
			return 37;
		case "right":
			return 39;
		case "space":
			return 32;
		case "tab":
			return 9;
		case "up":
			return 38;
		default:
			return HxOverrides.cca(keyId,0);
		}
	}
	,__class__: haxe_ui_backend_PlatformBase
	,__properties__: {get_KeyEscape:"get_KeyEscape",get_KeyEnter:"get_KeyEnter",get_KeySpace:"get_KeySpace",get_KeyRight:"get_KeyRight",get_KeyLeft:"get_KeyLeft",get_KeyDown:"get_KeyDown",get_KeyUp:"get_KeyUp",get_KeyTab:"get_KeyTab",get_isMac:"get_isMac",get_isLinux:"get_isLinux",get_isWindows:"get_isWindows"}
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,getSystemLocale: function() {
		return $global.navigator.language;
	}
	,perf: function() {
		return window.performance.now();
	}
	,__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_ScreenBase = function() {
	this._focus = null;
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	rootComponents: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		this._focus = value;
		return this._focus;
	}
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,dpi: null
	,get_dpi: function() {
		return 72;
	}
	,get_title: function() {
		return null;
	}
	,set_title: function(s) {
		return s;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,actualWidth: null
	,get_actualWidth: function() {
		return this.get_width() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualHeight: null
	,get_actualHeight: function() {
		return this.get_height() * haxe_ui_Toolkit.get_scaleY();
	}
	,isRetina: null
	,get_isRetina: function() {
		return false;
	}
	,addComponent: function(component) {
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,resizeComponent: function(c) {
		var cx = null;
		var cy = null;
		if(c.get_percentWidth() > 0) {
			cx = this.get_width() * c.get_percentWidth() / 100;
		}
		if(c.get_percentHeight() > 0) {
			cy = this.get_height() * c.get_percentHeight() / 100;
		}
		c.resizeComponent(cx,cy);
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,resizeRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.resizeComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style",false);
			child.invalidateComponent("display",false);
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,invalidateAll: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c,flag);
		}
	}
	,invalidateChildren: function(c,flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child,flag);
		}
		c.invalidateComponent(flag);
	}
	,supportsEvent: function(type) {
		return false;
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_isRetina:"get_isRetina",get_actualHeight:"get_actualHeight",get_actualWidth:"get_actualWidth",get_height:"get_height",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",set_options:"set_options",get_options:"get_options",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._hasListener = false;
	this._pageRoot = null;
	this._container = null;
	this._percentContainerHeightAdded = false;
	this._percentContainerWidthAdded = false;
	this._height = null;
	this._width = null;
	haxe_ui_backend_ScreenBase.call(this);
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		var cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		var cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		var c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,_width: null
	,get_width: function() {
		if(this._width != null) {
			return this._width;
		}
		var cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		this._width = cx / haxe_ui_Toolkit.get_scaleX();
		return this._width;
	}
	,_height: null
	,get_height: function() {
		if(this._height != null) {
			return this._height;
		}
		var cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		this._height = cy / haxe_ui_Toolkit.get_scaleY();
		return this._height;
	}
	,get_isRetina: function() {
		return haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay();
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
		return component;
	}
	,_percentContainerWidthAdded: null
	,addPercentContainerWidth: function() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            width: 100%;\r\n        }",sheet.cssRules.length);
	}
	,_percentContainerHeightAdded: null
	,addPercentContainerHeight: function() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\r\n            margin: 0;\r\n            height: 100%;\r\n        }",sheet.cssRules.length);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		HxOverrides.remove(this.rootComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,_container: null
	,container: null
	,get_container: function() {
		if(this._container != null) {
			return this._container;
		}
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		this._container = c;
		return c;
	}
	,_pageRoot: null
	,pageRoot: function(from) {
		if(this._pageRoot != null) {
			return this._pageRoot;
		}
		var r = null;
		var el = from;
		while(el != null) {
			if(el.classList.contains("haxeui-component") == false) {
				r = el;
				this._pageRoot = el;
				break;
			}
			el = el.parentElement;
		}
		return r;
	}
	,_hasListener: null
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.addEventListener("resize",function(e) {
			_gthis._width = null;
			_gthis._height = null;
			_gthis.resizeRootComponents();
		});
	}
	,supportsEvent: function(type) {
		return haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type] != null;
	}
	,mapEvent: function(type,listener) {
		var _gthis = this;
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			if(type == "mousemove" && Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == true) {
				var fn = null;
				fn = function(e) {
					container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
					if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
						container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
					}
					if(Object.prototype.hasOwnProperty.call(_gthis._mapping.h,type) == false) {
						if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
							container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(_gthis,_gthis.__onMouseEvent));
						}
						_gthis._mapping.h[type] = listener;
						container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],$bind(_gthis,_gthis.__onMouseEvent));
					}
				};
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
				}
				return;
			}
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
				}
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var button = -1;
		var touchEvent = false;
		try {
			touchEvent = ((event) instanceof TouchEvent);
		} catch( _g ) {
		}
		if(touchEvent == false && ((event) instanceof MouseEvent)) {
			var me = js_Boot.__cast(event , MouseEvent);
			button = me.which;
		}
		var r = true;
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type == "rightclick") {
			event.stopPropagation();
			event.preventDefault();
			r = false;
		}
		if(type != null) {
			var fn = this._mapping.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
		return r;
	}
	,__onKeyEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			var fn = this._mapping.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{get_container:"get_container"})
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,focus: function() {
	}
	,blur: function() {
	}
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,_dataSource: null
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,supportsHtml: null
	,get_supportsHtml: function() {
		return false;
	}
	,validateData: function() {
	}
	,validateStyle: function() {
		return false;
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,measureText: function() {
	}
	,measureTextWidth: function() {
		var textDisplay = new haxe_ui_core_TextDisplay();
		textDisplay._textStyle = this._textStyle;
		textDisplay._fontInfo = this._fontInfo;
		textDisplay.validateStyle();
		textDisplay._text = this._text;
		textDisplay.validateData();
		textDisplay.measureText();
		return textDisplay._textWidth;
	}
	,__class__: haxe_ui_backend_TextBase
	,__properties__: {get_supportsHtml:"get_supportsHtml",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._fixedHeight = false;
	this._fixedWidth = false;
	this._isHTML = false;
	haxe_ui_backend_TextBase.call(this);
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	element: null
	,_html: null
	,_isHTML: null
	,validateData: function() {
		var html = null;
		if(this._text != null) {
			html = this.normalizeText(this._text);
			this._isHTML = false;
		} else if(this._htmlText != null) {
			html = this.normalizeText(this._htmlText,false);
			this._isHTML = true;
		}
		if(html != null && this._html != html) {
			if(this._isHTML == false) {
				this.element.textContent = html;
			} else {
				this.element.innerHTML = html;
			}
			this._html = html;
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
	}
	,_rawFontName: null
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "pre-wrap";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "pre") {
			this.element.style.whiteSpace = "pre";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
		if(measureTextRequired == true) {
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,_fixedWidth: null
	,_fixedHeight: null
	,validateDisplay: function() {
		var style = this.element.style;
		var allowFixed = true;
		if(this.get_autoWidth() == false && style.width != "" + this._width + "px") {
			allowFixed = false;
		}
		if(this._width > 0 && this.get_autoWidth() == false) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0 && this.get_autoWidth() == false) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
		if(allowFixed == false) {
			this._fixedHeight = false;
		}
	}
	,measureText: function() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		if(this._fixedWidth == false) {
			this._textWidth = div.clientWidth + 1;
		}
		if(this._fixedHeight == false) {
			this._textHeight = div.clientHeight;
		}
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,setTempDivData: function(div) {
		var t = null;
		if(this._text != null) {
			t = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			t = this.normalizeText(this._htmlText,false);
		}
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.wordBreak = this.element.style.wordBreak;
		div.style.lineHeight = null;
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		if(this._isHTML == false) {
			div.textContent = t;
		} else {
			div.innerHTML = t;
		}
	}
	,normalizeText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		return text;
	}
	,autoWidth: null
	,get_autoWidth: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoWidth();
		}
		return false;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoHeight();
		}
		return false;
	}
	,get_supportsHtml: function() {
		return true;
	}
	,measureTextWidth: function() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		div.style.width = "";
		return div.clientWidth;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
	,__properties__: $extend(haxe_ui_backend_TextBase.prototype.__properties__,{get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_TextInputImpl = function() {
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	focus: function() {
		this.element.focus({preventScroll: true});
	}
	,blur: function() {
		this.element.blur();
	}
	,onChangeEvent: function(e) {
		var newText = null;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		this._textWidth = div.clientWidth;
		this._textHeight = div.clientHeight;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,createElement: function() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "pre";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "pre-wrap";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,validatePosition: function() {
		var x = this._left;
		var y = this._top;
		if(this._displayData.multiline == false && this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().borderLeftSize != null) {
				x -= this.parentComponent.get_style().borderLeftSize;
			}
			if(this.parentComponent.get_style().borderTopSize != null) {
				y -= this.parentComponent.get_style().borderTopSize;
			}
		}
		var style = this.element.style;
		style.left = "" + x + "px";
		style.top = "" + y + "px";
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.lineHeight = this.element.style.lineHeight;
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		var normalizedText = haxe_ui_backend_TextDisplayImpl.prototype.normalizeText.call(this,t);
		if(this._displayData.multiline == true) {
			normalizedText += "<br>";
		}
		div.innerHTML = normalizedText;
	}
	,normalizeText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		return StringTools.replace(text,"\\n","\n");
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.prototype = {
	_timer: null
	,stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item = this._displayQueue[i];
			item.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	if(value == null) {
		return "rgba(0, 0, 0, 0)";
	}
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.namedChild = function(el,child,index) {
	if(index == null) {
		index = 0;
	}
	if(child != null) {
		var list = el.getElementsByTagName(child);
		if(list.length == 0) {
			return null;
		}
		el = list.item(index);
	}
	return el;
};
haxe_ui_backend_html5_HtmlUtils.onValidationStop = function(e) {
	var tmp = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER != null;
};
haxe_ui_backend_html5_HtmlUtils.createDivHelper = function() {
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = window.document.createElement("div");
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.position = "absolute";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.top = "-99999px";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.left = "-99999px";
		window.document.body.appendChild(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.createDivHelper();
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.width = "";
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.height = "";
	if(fontSize > 0) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "" + fontSize + "px";
	} else {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "";
	}
	if(fontName != null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = fontName;
	} else {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = "";
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.innerHTML = text;
	return new haxe_ui_geom_Size(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientWidth + addWidth,haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay = function() {
	if(haxe_ui_backend_html5_HtmlUtils._isRetina == null) {
		var query = "(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
		if(window.matchMedia(query).matches) {
			haxe_ui_backend_html5_HtmlUtils._isRetina = true;
		} else {
			haxe_ui_backend_html5_HtmlUtils._isRetina = false;
		}
	}
	return haxe_ui_backend_html5_HtmlUtils._isRetina;
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	var slice = null;
	if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
		slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
	}
	if(slice != null) {
		width = Math.round(width);
		height = Math.round(height);
	}
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	var borderStyle = style.borderStyle;
	if(borderStyle == null) {
		borderStyle = "solid";
	}
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(style.borderLeftSize > 0) {
			css.borderWidth = "" + style.borderLeftSize + "px";
			css.borderStyle = borderStyle;
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && style.borderTopSize > 0) {
			css.borderTopWidth = "" + style.borderTopSize + "px";
			css.borderTopStyle = borderStyle;
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && style.borderLeftSize > 0) {
			css.borderLeftWidth = "" + style.borderLeftSize + "px";
			css.borderLeftStyle = borderStyle;
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && style.borderBottomSize > 0) {
			css.borderBottomWidth = "" + style.borderBottomSize + "px";
			css.borderBottomStyle = borderStyle;
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && style.borderRightSize > 0) {
			css.borderRightWidth = "" + style.borderRightSize + "px";
			css.borderRightStyle = borderStyle;
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		if(style.borderOpacity == null) {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
		}
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null && style.borderTopSize != null) {
			if(style.borderOpacity == null) {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
			} else {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderTopColor,style.borderOpacity);
			}
		} else if(style.borderTopColor == null && style.borderTopSize != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null && style.borderLeftSize != null) {
			if(style.borderOpacity == null) {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
			} else {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
			}
		} else if(style.borderLeftColor == null && style.borderLeftSize != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null && style.borderBottomSize != null) {
			if(style.borderOpacity == null) {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
			} else {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderBottomColor,style.borderOpacity);
			}
		} else if(style.borderBottomColor == null && style.borderBottomSize != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null && style.borderRightSize != null) {
			if(style.borderOpacity == null) {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
			} else {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderRightColor,style.borderOpacity);
			}
		} else if(style.borderRightColor == null && style.borderRightSize != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	var background = [];
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				} else if(gradientStyle == "horizontal") {
					background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				}
			} else if(gradientStyle == "vertical") {
				background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			} else if(gradientStyle == "horizontal") {
				background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && style.borderRadius > 0 && (style.borderRadiusTopLeft == null || style.borderRadiusTopLeft == style.borderRadius) && (style.borderRadiusTopRight == null || style.borderRadiusTopRight == style.borderRadius) && (style.borderRadiusBottomLeft == null || style.borderRadiusBottomLeft == style.borderRadius) && (style.borderRadiusBottomRight == null || style.borderRadiusBottomRight == style.borderRadius)) {
		css.borderRadius = "" + style.borderRadius + "px";
	} else if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0 || style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0 || style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0 || style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
		if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0) {
			css.borderTopLeftRadius = "" + style.borderRadiusTopLeft + "px";
		} else {
			css.removeProperty("border-top-left-radius");
		}
		if(style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0) {
			css.borderTopRightRadius = "" + style.borderRadiusTopRight + "px";
		} else {
			css.removeProperty("border-top-right-radius");
		}
		if(style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0) {
			css.borderBottomLeftRadius = "" + style.borderRadiusBottomLeft + "px";
		} else {
			css.removeProperty("border-bottom-left-radius");
		}
		if(style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
			css.borderBottomRightRadius = "" + style.borderRadiusBottomRight + "px";
		} else {
			css.removeProperty("border-bottom-right-radius");
		}
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		haxe_ui_Toolkit.get_assets().getImage(style.backgroundImage,function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					background.push("url(" + imageInfo.data.src + ")");
					if(style.backgroundImageRepeat == null) {
						css.backgroundRepeat = "no-repeat";
						css.removeProperty("background-size");
					} else if(style.backgroundImageRepeat == "repeat") {
						css.backgroundRepeat = "repeat";
						css.removeProperty("background-size");
					} else if(style.backgroundImageRepeat == "stretch") {
						css.backgroundRepeat = "no-repeat";
						css.backgroundSize = "100% 100%";
					}
					background.reverse();
					css.background = background.join(",");
				} else {
					var canvas = component.getCanvas(width,height);
					var ctx = canvas.getContext("2d",null);
					ctx.clearRect(0,0,width,height);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
				}
			} else {
				var rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas = component.getCanvas(width,height);
				var ctx = canvas.getContext("2d",null);
				ctx.clearRect(0,0,width,height);
				ctx.imageSmoothingEnabled = false;
				var _g = 0;
				var _g1 = srcRects.length;
				while(_g < _g1) {
					var i = _g++;
					var srcRect = new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,srcRect,dstRect);
				}
			}
		});
	} else {
		component.removeCanvas();
		css.background = background[0];
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	if(srcRect.width == 0 || srcRect.height == 0) {
		return;
	}
	if(dstRect.width == 0 || dstRect.height == 0) {
		return;
	}
	ctx.drawImage(img,srcRect.left | 0,srcRect.top | 0,srcRect.width | 0,srcRect.height | 0,dstRect.left | 0,dstRect.top | 0,dstRect.width | 0,dstRect.height | 0);
};
var haxe_ui_backend_html5_UserAgent = function() {
	this._unknown = false;
	this._msie = false;
	this._firefox = false;
	this._safari = false;
	this._chrome = false;
	this._opera = false;
	var ua = $global.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	_opera: null
	,opera: null
	,get_opera: function() {
		return this._opera;
	}
	,_chrome: null
	,chrome: null
	,get_chrome: function() {
		return this._chrome;
	}
	,_safari: null
	,safari: null
	,get_safari: function() {
		return this._safari;
	}
	,_firefox: null
	,firefox: null
	,get_firefox: function() {
		return this._firefox;
	}
	,_msie: null
	,msie: null
	,get_msie: function() {
		return this._msie;
	}
	,_unknown: null
	,unknown: null
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g = 0;
	var _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g < _g1) {
		var ix = _g++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_backend_html5_util_StyleSheetHelper = function() {
};
$hxClasses["haxe.ui.backend.html5.util.StyleSheetHelper"] = haxe_ui_backend_html5_util_StyleSheetHelper;
haxe_ui_backend_html5_util_StyleSheetHelper.__name__ = "haxe.ui.backend.html5.util.StyleSheetHelper";
haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet = function() {
	if(haxe_ui_backend_html5_util_StyleSheetHelper._sheet != null) {
		return haxe_ui_backend_html5_util_StyleSheetHelper._sheet;
	}
	var sheet = null;
	var _g = 0;
	var _g1 = window.document.styleSheets;
	while(_g < _g1.length) {
		var test = _g1[_g];
		++_g;
		if(test.ownerNode == null || test.disabled == true) {
			continue;
		}
		var css = js_Boot.__cast(test , CSSStyleSheet);
		if(css.ownerNode.nodeName == "STYLE" && css.href == null) {
			try {
				var r = css.cssRules;
				sheet = css;
				break;
			} catch( _g2 ) {
			}
		}
	}
	if(sheet == null) {
		var styleElement = window.document.createElement("style");
		styleElement.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(styleElement);
		sheet = js_Boot.__cast(styleElement.sheet , CSSStyleSheet);
	}
	haxe_ui_backend_html5_util_StyleSheetHelper._sheet = sheet;
	return sheet;
};
haxe_ui_backend_html5_util_StyleSheetHelper.prototype = {
	__class__: haxe_ui_backend_html5_util_StyleSheetHelper
};
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,setDynamic: function(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		this._registry.h[id] = info;
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,isRegistered: function(id) {
		return Object.prototype.hasOwnProperty.call(this._registry.h,id);
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var h = this._registry.h;
		var id_h = h;
		var id_keys = Object.keys(h);
		var id_length = id_keys.length;
		var id_current = 0;
		while(id_current < id_length) {
			var id = id_keys[id_current++];
			ids.push(id);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				var registered = this._registry.h[id];
				var name = nativeProps.h["class"];
				var info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(js_Boot.__implements(b,haxe_ui_behaviours_IValidatingBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_IValidatingBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,get_updateOrder: function() {
		return this._updateOrder;
	}
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var h = this._instances.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var b = this._instances.h[id];
		if(b == null && create == true) {
			var info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var h = this._registry.h;
		var registeredKey_h = h;
		var registeredKey_keys = Object.keys(h);
		var registeredKey_length = registeredKey_keys.length;
		var registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			var registeredKey = registeredKey_keys[registeredKey_current++];
			var v = this._registry.h[registeredKey].defaultValue;
			var instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	,dispose: function() {
		this._component = null;
		this._registry = null;
		var h = this._instances.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var inst = this._instances.h[key];
			inst._component = null;
		}
		this._instances = null;
		this._cache = null;
		this._actualUpdateOrder = null;
		this._updateOrder = null;
	}
	,detatch: function() {
		var h = this._instances.h;
		var b_h = h;
		var b_keys = Object.keys(h);
		var b_length = b_keys.length;
		var b_current = 0;
		while(b_current < b_length) {
			var b = b_h[b_keys[b_current++]];
			b.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,setDynamic: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = haxe_ui_util_Variant.toDynamic((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value);
			changed = v != value;
		}
		b.setDynamic(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = (js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value;
			changed = haxe_ui_util_Variant.neq(v,value);
		}
		b.set(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,softSet: function(id,value) {
		var b = this.find(id);
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			(js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value = value;
		}
	}
	,ready: function() {
		if(this._autoDispatch == null) {
			return;
		}
		var b = this._autoDispatch.keys();
		while(b.hasNext()) {
			var b1 = b.next();
			var changed = this._autoDispatch.h[b1.__id__];
			this.performAutoDispatch(b1,changed);
		}
		this._autoDispatch = null;
	}
	,_autoDispatch: null
	,performAutoDispatch: function(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var h = this._registry.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key = order[_g];
			++_g;
			var r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder",get_updateOrder:"get_updateOrder"}
};
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_behaviours_IValidatingBehaviour = function() { };
$hxClasses["haxe.ui.behaviours.IValidatingBehaviour"] = haxe_ui_behaviours_IValidatingBehaviour;
haxe_ui_behaviours_IValidatingBehaviour.__name__ = "haxe.ui.behaviours.IValidatingBehaviour";
haxe_ui_behaviours_IValidatingBehaviour.__isInterface__ = true;
haxe_ui_behaviours_IValidatingBehaviour.prototype = {
	validate: null
	,__class__: haxe_ui_behaviours_IValidatingBehaviour
};
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	this._value = null;
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._allowFocus = true;
	this._focus = false;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	actionStart: function(type) {
		if(this._internalEvents != null) {
			return this._internalEvents.actionStart(type);
		}
		return false;
	}
	,actionEnd: function(type) {
		if(this._internalEvents != null) {
			return this._internalEvents.actionEnd(type);
		}
		return false;
	}
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			this.addClass(":active");
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findScroller();
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			this.removeClass(":active");
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data",false);
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,findScroller: function() {
		var view = null;
		var ref = this;
		while(ref != null) {
			if(js_Boot.__implements(ref,haxe_ui_core_IScrollView)) {
				view = js_Boot.__cast(ref , haxe_ui_core_IScrollView);
				break;
			}
			ref = ref.parentComponent;
		}
		return view;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	,get_allowInteraction: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"allowInteraction"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(50));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
	}
	,get_repeater: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeatInterval"));
		return value;
	}
	,get_easeInRepeater: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"easeInRepeater"));
		return value;
	}
	,get_remainPressed: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"remainPressed"));
		return value;
	}
	,get_toggle: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"toggle"));
		return value;
	}
	,get_selected: function() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		return value;
	}
	,get_icon: function() {
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_iconPosition: function() {
		if(this.get_customStyle().iconPosition != null) {
			return this.get_customStyle().iconPosition;
		}
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.get_customStyle().iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().iconPosition = null;
		} else {
			this.get_customStyle().iconPosition = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.get_customStyle().fontSize != null) {
			return this.get_customStyle().fontSize;
		}
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return this.get_style().fontSize;
	}
	,set_fontSize: function(value) {
		if(this.get_customStyle().fontSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().fontSize = null;
		} else {
			this.get_customStyle().fontSize = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponents(styleName,type,maxDepth);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,borderSize: null
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		var tmp = n > 0;
		return n;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",get_borderSize:"get_borderSize",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	this._calcFullHeights = false;
	this._calcFullWidths = false;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_calcFullWidths: null
	,_calcFullHeights: null
	,resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var fullWidthValue = 100;
		var fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			var n1 = 0;
			var n2 = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				var childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(this._component.get_autoWidth() == false) {
			var ucx = this.get_usableSize();
			if(label != null) {
				var cx = ucx.width;
				if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
					cx -= icon.get_width() + this.get_verticalSpacing();
				}
				label.set_width(cx);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		if(label != null && label.get_hidden() == true) {
			label = null;
		}
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && icon.get_hidden() == true) {
			icon = null;
		}
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("button-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			this._component.get_customStyle().icon = null;
			this._component.removeComponent(icon);
			return;
		}
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.set_scriptAccess(false);
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		var events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(events.lastMouseEvent != null && button.hitTest(events.lastMouseEvent.screenX,events.lastMouseEvent.screenY)) {
			button.addClass(":hover",true,true);
			events.lastMouseEvent = null;
		} else {
			button.removeClass(":hover",true,true);
		}
		events.dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,actionStart: function(type) {
		return false;
	}
	,actionEnd: function(type) {
		return false;
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this._lastScreenEvent = null;
	this.recursiveStyling = true;
	this.lastMouseEvent = null;
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,lastMouseEvent: null
	,recursiveStyling: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick),100);
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.classes.indexOf(":down") != -1) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		this._button.removeClass(":hover",true,this.recursiveStyling);
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		if(this._button.get_allowFocus() == true && haxe_ui_focus_FocusManager.get_instance().get_focusInfo() != null && haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus != null) {
			haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus.set_focus(false);
		}
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,this.recursiveStyling);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,_lastScreenEvent: null
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._lastScreenEvent = event;
		this._button.removeClass(":down",true,this.recursiveStyling);
		var over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onMove: function(event) {
		if(this._lastScreenEvent == null) {
			return;
		}
		var over = this._button.hitTest(this._lastScreenEvent.screenX,this._lastScreenEvent.screenY);
		if(this._lastScreenEvent.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		this._lastScreenEvent = null;
	}
	,onRepeatTimer: function() {
		if(this._button.classes.indexOf(":hover") != -1 && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,press: function() {
		this._down = true;
		if(this._button.get_toggle() == true) {
			this._button.addClass(":down",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,release: function() {
		if(this._down == true) {
			this._down = false;
			if(this._button.get_toggle() == true) {
				this._button.set_selected(!this._button.get_selected());
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			} else {
				this._button.removeClass(":down",true,this.recursiveStyling);
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			}
		}
	}
	,actionStart: function(type) {
		if(type == "actionPress") {
			this.press();
			return false;
		} else {
			return false;
		}
	}
	,actionEnd: function(type) {
		if(type == "actionPress") {
			this.release();
			return false;
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		return null;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this._component.get_componentClipRect() != null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_isComponentClipped:"get_isComponentClipped",get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,applyStyle: function(style) {
		var label = this._button.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.get_customStyle().color != style.color || label.get_customStyle().fontName != style.fontName || label.get_customStyle().fontSize != style.fontSize || label.get_customStyle().cursor != style.cursor || label.get_customStyle().textAlign != style.textAlign)) {
			label.get_customStyle().color = style.color;
			label.get_customStyle().fontName = style.fontName;
			label.get_customStyle().fontSize = style.fontSize;
			label.get_customStyle().cursor = style.cursor;
			label.get_customStyle().textAlign = style.textAlign;
			label.invalidateComponent("style",false);
		}
		var icon = this._button.findComponent("button-icon",null,false);
		if(icon != null && icon.get_customStyle().cursor != style.cursor) {
			icon.get_customStyle().cursor = style.cursor;
			icon.invalidateComponent("style",false);
		}
		if(style.icon != null) {
			this._button.set_icon(haxe_ui_util_Variant.fromString(style.icon));
		}
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_resource: function() {
		return this.behaviours.get("resource");
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"resource"));
		return value;
	}
	,get_scaleMode: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"scaleMode"));
		return value;
	}
	,get_imageHorizontalAlign: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageHorizontalAlign"));
		return value;
	}
	,get_imageVerticalAlign: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageVerticalAlign"));
		return value;
	}
	,get_originalWidth: function() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalWidth"));
		return value;
	}
	,get_originalHeight: function() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalHeight"));
		return value;
	}
	,get_value: function() {
		return haxe_ui_util_Variant.toDynamic(this.get_resource());
	}
	,set_value: function(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		var imageLoader = new haxe_ui_util_ImageLoader(this._value);
		imageLoader.load(function(imageInfo) {
			if(imageInfo != null) {
				if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
					_gthis._component.removeImageDisplay();
					_gthis._component.invalidateComponent();
					return;
				}
				var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
				if(image == null) {
					return;
				}
				var display = image.getImageDisplay();
				if(display != null) {
					display.set_imageInfo(imageInfo);
					image.set_originalWidth(imageInfo.width);
					image.set_originalHeight(imageInfo.height);
					if(image.autoSize() == true && image.parentComponent != null) {
						var _this = image.parentComponent;
						if(!(_this._layout == null || _this._layoutLocked == true)) {
							_this.invalidateComponent("layout",false);
						}
					}
					image.invalidateComponent();
					display.validateComponent();
				}
			}
		});
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	var _gthis = this;
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
	this._image.registerEvent("shown",function(_) {
		if(_gthis._image.parentComponent != null) {
			var _this = _gthis._image.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	});
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(haxe_ui_util_Variant.fromString(style.resource));
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"htmlText"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_wordWrap: function() {
		if(this.get_customStyle().wordWrap != null) {
			return this.get_customStyle().wordWrap;
		}
		if(this.get_style() == null || this.get_style().wordWrap == null) {
			return null;
		}
		return this.get_style().wordWrap;
	}
	,set_wordWrap: function(value) {
		if(this.get_customStyle().wordWrap == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().wordWrap = null;
		} else {
			this.get_customStyle().wordWrap = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			var wordWrap = true;
			if(this._component.get_style() != null && this._component.get_style().wordWrap != null) {
				wordWrap = this._component.get_style().wordWrap;
			}
			this.get_component().getTextDisplay().set_wordWrap(wordWrap);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				var v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
	,get_isComponentClipped: function() {
		var componentClipRect = this._component.get_componentClipRect();
		if(componentClipRect == null) {
			return false;
		}
		return this._label.getTextDisplay().measureTextWidth() > componentClipRect.width;
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	alias = StringTools.replace(alias,"-","").toLowerCase();
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	return new haxe_ds__$StringMap_StringMapKeyIterator(haxe_ui_core_ComponentClassMap.get_instance()._map.h);
};
haxe_ui_core_ComponentClassMap.clear = function() {
	haxe_ui_core_ComponentClassMap.get_instance()._map = new haxe_ds_StringMap();
};
haxe_ui_core_ComponentClassMap.hasClass = function(className) {
	return haxe_ui_core_ComponentClassMap.get_instance().hasClassName(className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		return this._map.h[alias];
	}
	,registerClassName: function(alias,className) {
		this._map.h[alias] = className;
	}
	,hasClassName: function(className) {
		var h = this._map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(this._map.h[k] == className) {
				return true;
			}
		}
		return false;
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ComponentTextBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentTextBehaviour"] = haxe_ui_core_ComponentTextBehaviour;
haxe_ui_core_ComponentTextBehaviour.__name__ = "haxe.ui.core.ComponentTextBehaviour";
haxe_ui_core_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentTextBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_core_ComponentTextBehaviour
});
var haxe_ui_core_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
	this._value = haxe_ui_util_Variant.fromBool(false);
};
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			this._component.disableInteractivity(haxe_ui_util_Variant.toBool(value),true,true);
		}
	}
	,get: function() {
		return haxe_ui_util_Variant.fromBool(this._component.classes.indexOf(":disabled") != -1);
	}
	,__class__: haxe_ui_core_ComponentDisabledBehaviour
});
var haxe_ui_core_ComponentValueBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentValueBehaviour"] = haxe_ui_core_ComponentValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.__name__ = "haxe.ui.core.ComponentValueBehaviour";
haxe_ui_core_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	,get: function() {
		return this._value;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
	,__class__: haxe_ui_core_ComponentValueBehaviour
});
var haxe_ui_core_ComponentToolTipBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipBehaviour"] = haxe_ui_core_ComponentToolTipBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.__name__ = "haxe.ui.core.ComponentToolTipBehaviour";
haxe_ui_core_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	,setDynamic: function(value) {
		if(value == null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	,getDynamic: function() {
		var options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
	,__class__: haxe_ui_core_ComponentToolTipBehaviour
});
var haxe_ui_core_ComponentToolTipRendererBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipRendererBehaviour"] = haxe_ui_core_ComponentToolTipRendererBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.core.ComponentToolTipRendererBehaviour";
haxe_ui_core_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
	,__class__: haxe_ui_core_ComponentToolTipRendererBehaviour
});
var haxe_ui_core_IScrollView = function() { };
$hxClasses["haxe.ui.core.IScrollView"] = haxe_ui_core_IScrollView;
haxe_ui_core_IScrollView.__name__ = "haxe.ui.core.IScrollView";
haxe_ui_core_IScrollView.__isInterface__ = true;
haxe_ui_core_IScrollView.prototype = {
	ensureVisible: null
	,__class__: haxe_ui_core_IScrollView
};
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this.parentComponent == null) {
			return;
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
	this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
	this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			var _g = Type.typeof(this._data);
			switch(_g._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g1 = 0;
						while(_g1 < instanceFields.length) {
							var i = instanceFields[_g1];
							++_g1;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				var _g1 = _g.c;
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g = 0;
						while(_g < instanceFields.length) {
							var i = instanceFields[_g];
							++_g;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
		var _g = 0;
		while(_g < components.length) {
			var c = components[_g];
			++_g;
			if(((c) instanceof haxe_ui_components_Button)) {
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
			} else if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
				c.registerEvent("change",$bind(this,this.onItemChange));
			}
		}
		this.onDataChanged(this._data);
	}
	,onDataChanged: function(data) {
	}
	,onItemChange: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var v = event.target.get_value();
		if(this._data != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,onItemClick: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var valueObject = null;
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			var _g1 = _g.c;
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(valueObject,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				var propValue = haxe_ui_util_TypeConverter.convertTo(v,haxe_ui_core_TypeMap.getTypeInfo(c.get_className(),"value"));
				c.set_value(propValue);
				if(((c) instanceof haxe_ui_core_InteractiveComponent)) {
					if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
						c.registerEvent("change",$bind(this,this.onItemChange));
					}
					if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
						c.registerEvent("click",$bind(this,this.onItemClick));
					}
				}
				c.show();
			} else if(c != null) {
				c.hide();
			} else if(f != "id") {
				try {
					Reflect.setProperty(this,f,v);
				} catch( _g1 ) {
				}
			} else if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	haxe_ui_backend_ScreenImpl.call(this);
	this.rootComponents = [];
	this._eventMap = new haxe_ui_util_EventMap();
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	_eventMap: null
	,addComponent: function(component) {
		var wasReady = component.get_isReady();
		component._hasScreen = true;
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
		}
		if(haxe_ui_focus_FocusManager.get_instance().hasView(component) == false) {
			haxe_ui_focus_FocusManager.get_instance().pushView(component);
		}
		if(component.hasEvent("resize",$bind(this,this._onRootComponentResize)) == false) {
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		if(wasReady && component.get_hidden() == false) {
			component.dispatch(new haxe_ui_events_UIEvent("shown"));
		}
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this.rootComponents.indexOf(component) == -1) {
			return component;
		}
		component._hasScreen = false;
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component,dispose);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		if(dispose == true) {
			component.disposeComponent();
		}
		return component;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var copy = this.rootComponents.slice();
		copy.reverse();
		var c = [];
		var _g = 0;
		while(_g < copy.length) {
			var r = copy[_g];
			++_g;
			if(r.hitTest(screenX,screenY)) {
				var match = true;
				if(type != null && js_Boot.__instanceof(r,type) == false) {
					match = false;
				}
				if(match == true) {
					c.push(r);
				}
			}
			c = c.concat(r.findComponentsUnderPoint(screenX,screenY,type));
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var copy = this.rootComponents.slice();
		copy.reverse();
		var _g = 0;
		while(_g < copy.length) {
			var r = copy[_g];
			++_g;
			if(r.hasComponentUnderPoint(screenX,screenY,type) == true) {
				return true;
			}
		}
		return false;
	}
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.onThemeChangedChildren(c);
		}
	}
	,onThemeChangedChildren: function(c) {
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.onThemeChangedChildren(child);
		}
		c.onThemeChanged();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textdisplay";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: $extend(haxe_ui_backend_TextDisplayImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textinput";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
		if(dataInvalid) {
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: $extend(haxe_ui_backend_TextInputImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TypeMap = function() { };
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
haxe_ui_core_TypeMap.getTypeInfo = function(className,property) {
	var entry = haxe_ui_util_RTTI.getClassInfo(className);
	if(entry == null) {
		return null;
	}
	if(entry.properties == null) {
		return null;
	}
	var propInfo = entry.properties.h[property.toLowerCase()];
	if(propInfo == null) {
		return null;
	}
	return propInfo.propertyType;
};
var haxe_ui_data_DataSource = function(transformer) {
	this.onClear = null;
	this.onRemove = null;
	this.onUpdate = null;
	this.onInsert = null;
	this.onAdd = null;
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	onChange: null
	,transformer: null
	,_changed: null
	,onAdd: null
	,onInsert: null
	,onUpdate: null
	,onRemove: null
	,onClear: null
	,_allowCallbacks: null
	,get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			if(this.onChange != null) {
				this.onChange();
			}
		}
		return value;
	}
	,get_data: function() {
		return this.handleGetData();
	}
	,set_data: function(value) {
		this.handleSetData(value);
		this.handleChanged();
		return value;
	}
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = this.onChange;
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onAdd != null) {
			this.onAdd(r);
		}
		return r;
	}
	,insert: function(index,item) {
		var r = this.handleInsert(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onInsert != null) {
			this.onInsert(index,r);
		}
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onRemove != null) {
			this.onRemove(r);
		}
		return r;
	}
	,removeAt: function(index) {
		var item = this.get(index);
		return this.remove(item);
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onUpdate != null) {
			this.onUpdate(index,r);
		}
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		this.handleClear();
		this._allowCallbacks = o;
		this.handleChanged();
		if(this._allowCallbacks == true && this.onClear != null) {
			this.onClear();
		}
	}
	,clearFilter: function() {
	}
	,filter: function(fn) {
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true && this.onChange != null) {
			this._changed = false;
			this.onChange();
		}
	}
	,sortCustom: function(fn) {
	}
	,sort: function(field,direction) {
		var _g = $bind(this,this.sortByFn);
		var field1 = field;
		var direction1 = direction;
		this.sortCustom(function(o1,o2) {
			return _g(o1,o2,field1,direction1);
		});
	}
	,sortByFn: function(o1,o2,field,direction) {
		var f1 = o1;
		var f2 = o2;
		if(field != null) {
			f1 = Reflect.field(o1,field);
			f2 = Reflect.field(o2,field);
		}
		if(f1 == null || f2 == null) {
			return 0;
		}
		f1 = Std.string(f1);
		f2 = Std.string(f2);
		if(direction == null) {
			direction = "asc";
		}
		var high = 1;
		var low = -1;
		if(direction == "desc") {
			high = -1;
			low = 1;
		}
		var alpha1 = f1.replace(haxe_ui_data_DataSource.regexAlpha.r,"");
		var alpha2 = f2.replace(haxe_ui_data_DataSource.regexAlpha.r,"");
		if(alpha1 == alpha2) {
			var numeric1 = Std.parseInt(f1.replace(haxe_ui_data_DataSource.regexNumeric.r,""));
			var numeric2 = Std.parseInt(f2.replace(haxe_ui_data_DataSource.regexNumeric.r,""));
			if(numeric1 == numeric2) {
				return 0;
			} else if(numeric1 > numeric2) {
				return high;
			} else {
				return low;
			}
		}
		if(alpha1 > alpha2) {
			return high;
		} else {
			return low;
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(index,item) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleGetData: function() {
		return null;
	}
	,handleSetData: function(v) {
	}
	,handleClear: function() {
		var cachedTransformer = this.transformer;
		this.transformer = null;
		while(this.get_size() > 0) this.remove(this.get(0));
		this.transformer = cachedTransformer;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_size:"get_size",set_data:"set_data",get_data:"get_data",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_dragdrop_DragManager = function() {
	this._dragComponents = new haxe_ds_ObjectMap();
	this._mouseTargetToDragTarget = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.dragdrop.DragManager"] = haxe_ui_dragdrop_DragManager;
haxe_ui_dragdrop_DragManager.__name__ = "haxe.ui.dragdrop.DragManager";
haxe_ui_dragdrop_DragManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_dragdrop_DragManager.get_instance = function() {
	if(haxe_ui_dragdrop_DragManager._instance == null) {
		haxe_ui_dragdrop_DragManager._instance = new haxe_ui_dragdrop_DragManager();
	}
	return haxe_ui_dragdrop_DragManager._instance;
};
haxe_ui_dragdrop_DragManager.prototype = {
	_dragComponents: null
	,_mouseTargetToDragTarget: null
	,_currentComponent: null
	,_currentOptions: null
	,_mouseOffset: null
	,getDragOptions: function(component) {
		var dragOptions = this._dragComponents.h[component.__id__];
		return dragOptions;
	}
	,registerDraggable: function(component,dragOptions) {
		if(this.isRegisteredDraggable(component)) {
			return null;
		}
		if(dragOptions == null) {
			dragOptions = { };
		}
		if(dragOptions.mouseTarget == null) {
			dragOptions.mouseTarget = component;
		}
		if(dragOptions.dragOffsetX == null) {
			dragOptions.dragOffsetX = 0;
		}
		if(dragOptions.dragOffsetY == null) {
			dragOptions.dragOffsetY = 0;
		}
		if(dragOptions.dragTolerance == null) {
			dragOptions.dragTolerance = haxe_ui_Toolkit.get_scale() | 0;
		}
		if(dragOptions.draggableStyleName == null) {
			dragOptions.draggableStyleName = "draggable";
		}
		if(dragOptions.draggingStyleName == null) {
			dragOptions.draggingStyleName = "dragging";
		}
		this._dragComponents.set(component,dragOptions);
		this._mouseTargetToDragTarget.set(dragOptions.mouseTarget,component);
		if(!dragOptions.mouseTarget.hasEvent("mousedown",$bind(this,this.onMouseDown))) {
			dragOptions.mouseTarget.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(dragOptions.draggableStyleName != null) {
			dragOptions.mouseTarget.addClass(dragOptions.draggableStyleName);
		}
		return dragOptions;
	}
	,unregisterDraggable: function(component) {
		if(!this.isRegisteredDraggable(component)) {
			return;
		}
		var dragOptions = this.getDragOptions(component);
		if(dragOptions != null && dragOptions.mouseTarget != null) {
			dragOptions.mouseTarget.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
			this._mouseTargetToDragTarget.remove(dragOptions.mouseTarget);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._dragComponents.remove(component);
	}
	,isRegisteredDraggable: function(component) {
		return this._dragComponents.h.__keys__[component.__id__] != null;
	}
	,onMouseDown: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		this._currentComponent = this._mouseTargetToDragTarget.h[e.target.__id__];
		this._currentOptions = this.getDragOptions(this._currentComponent);
		this._mouseOffset = new haxe_ui_geom_Point(e.screenX - this._currentComponent.get_left(),e.screenY - this._currentComponent.get_top());
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
	}
	,onScreenCheckForDrag: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var x1 = e.screenX - this._currentComponent.get_left();
		var y1 = e.screenY - this._currentComponent.get_top();
		var x2 = this._mouseOffset.x;
		var y2 = this._mouseOffset.y;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) > this._currentOptions.dragTolerance) {
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
			haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenDrag));
			this._mouseOffset.x -= this._currentOptions.dragOffsetX;
			this._mouseOffset.y -= this._currentOptions.dragOffsetY;
			if(this._currentOptions.draggingStyleName != null) {
				this._currentComponent.addClass(this._currentOptions.draggingStyleName);
			}
			this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragStart"));
		}
	}
	,onScreenDrag: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var event = new haxe_ui_events_DragEvent("drag");
		if(this._currentOptions.dragBounds != null) {
			var v = e.screenX;
			var min = this._currentOptions.dragBounds.left + this._mouseOffset.x;
			var max = this._currentOptions.dragBounds.get_right() - this._currentComponent.get_actualComponentWidth() + this._mouseOffset.x;
			var boundX;
			if(v == null || isNaN(v)) {
				boundX = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundX = v;
			}
			var v = e.screenY;
			var min = this._currentOptions.dragBounds.top + this._mouseOffset.y;
			var max = this._currentOptions.dragBounds.get_bottom() - this._currentComponent.get_actualComponentHeight() + this._mouseOffset.y;
			var boundY;
			if(v == null || isNaN(v)) {
				boundY = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundY = v;
			}
			event.left = boundX - this._mouseOffset.x;
			event.top = boundY - this._mouseOffset.y;
		} else {
			var xpos = e.screenX;
			var ypos = e.screenY;
			event.left = xpos - this._mouseOffset.x;
			event.top = ypos - this._mouseOffset.y;
		}
		this._currentComponent.dispatch(event);
		if(event.canceled == true) {
			return;
		}
		this._currentComponent.moveComponent(event.left,event.top);
	}
	,onScreenMouseUp: function(e) {
		if(this._currentOptions.draggingStyleName != null) {
			this._currentComponent.removeClass(this._currentOptions.draggingStyleName);
		}
		this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragEnd"));
		this._currentComponent = null;
		this._currentOptions = null;
		this._mouseOffset.x = 0;
		this._mouseOffset.y = 0;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
	}
	,__class__: haxe_ui_dragdrop_DragManager
};
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.relatedEvent = null;
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,relatedEvent: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
	}
	,__class__: haxe_ui_events_UIEvent
});
var haxe_ui_events_ActionEvent = function(type,action,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
	this.action = action;
};
$hxClasses["haxe.ui.events.ActionEvent"] = haxe_ui_events_ActionEvent;
haxe_ui_events_ActionEvent.__name__ = "haxe.ui.events.ActionEvent";
haxe_ui_events_ActionEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ActionEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	action: null
	,clone: function() {
		var c = new haxe_ui_events_ActionEvent(this.type,this.action);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.action = this.action;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ActionEvent
});
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_DragEvent = function(type,bubble,data) {
	this.top = 0;
	this.left = 0;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.DragEvent"] = haxe_ui_events_DragEvent;
haxe_ui_events_DragEvent.__name__ = "haxe.ui.events.DragEvent";
haxe_ui_events_DragEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_DragEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	left: null
	,top: null
	,clone: function() {
		var c = new haxe_ui_events_DragEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.left = this.left;
		c.top = this.top;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
		var d = js_Boot.__cast(c , haxe_ui_events_DragEvent);
		this.left = d.left;
		this.top = d.top;
	}
	,__class__: haxe_ui_events_DragEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.itemIndex = -1;
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,itemIndex: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_ThemeEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ThemeEvent"] = haxe_ui_events_ThemeEvent;
haxe_ui_events_ThemeEvent.__name__ = "haxe.ui.events.ThemeEvent";
haxe_ui_events_ThemeEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ThemeEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_events_ThemeEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_FilterParser = function() { };
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
haxe_ui_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
	} else if(filterDetails[0] == "outline") {
		filter = haxe_ui_filters_FilterParser.parseOutline(filterDetails);
	} else if(filterDetails[0] == "grayscale") {
		filter = haxe_ui_filters_FilterParser.parseGrayscale(filterDetails);
	}
	return filter;
};
haxe_ui_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_filters_FilterParser.parseOutline = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var outline = new haxe_ui_filters_Outline();
	outline.color = copy[0];
	outline.size = copy[1];
	return outline;
};
haxe_ui_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var defaultParams = haxe_ui_filters_FilterParser.filterParamDefaults.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g = 0;
		while(_g < params.length) {
			var p = params[_g];
			++_g;
			copy[n] = p;
			++n;
		}
	}
	return copy;
};
haxe_ui_filters_FilterParser.parseGrayscale = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var grayscale = new haxe_ui_filters_Grayscale();
	grayscale.amount = copy[0];
	return grayscale;
};
haxe_ui_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"].concat([4,45,0,1,4,4,1,1,false,false,false]);
	this1.h["drop-shadow"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"].concat([1]);
	this1.h["blur"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"].concat([0,1]);
	this1.h["outline"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"].concat([100]);
	this1.h["grayscale"] = v;
};
var haxe_ui_filters_Grayscale = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Grayscale.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Grayscale
});
var haxe_ui_filters_Outline = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Outline.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	color: null
	,size: null
	,__class__: haxe_ui_filters_Outline
});
var haxe_ui_focus_FocusManager = function() {
	this._views = [];
	this._focusInfo = new haxe_ds_ObjectMap();
	haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.prototype = {
	_views: null
	,_focusInfo: null
	,onScreenMouseDown: function(event) {
		var list = haxe_ui_core_Screen.get_instance().findComponentsUnderPoint(event.screenX,event.screenY);
		var _g = 0;
		while(_g < list.length) {
			var l = list[_g];
			++_g;
			if(js_Boot.__implements(l,haxe_ui_focus_IFocusable)) {
				return;
			}
		}
		this.set_focus(null);
	}
	,pushView: function(component) {
		this._views.push(component);
		var info = this._focusInfo.h[component.__id__];
		if(info == null) {
			this._focusInfo.set(component,{ view : component, currentFocus : null});
		}
	}
	,hasView: function(component) {
		return this._views.indexOf(component) != -1;
	}
	,popView: function() {
		var c = this._views.pop();
		this.removeView(c);
	}
	,removeView: function(component) {
		HxOverrides.remove(this._views,component);
		this._focusInfo.remove(component);
	}
	,focusInfo: null
	,get_focusInfo: function() {
		if(this._views.length == 0) {
			return null;
		}
		var c = this._views[this._views.length - 1];
		var info = this._focusInfo.h[c.__id__];
		return info;
	}
	,get_focus: function() {
		if(this.get_focusInfo() == null) {
			return null;
		}
		return this.get_focusInfo().currentFocus;
	}
	,set_focus: function(value) {
		if(value != null && js_Boot.__implements(value,haxe_ui_focus_IFocusable) == false) {
			throw haxe_Exception.thrown("Component does not implement IFocusable");
		}
		if(this.get_focusInfo() != null && this.get_focusInfo().currentFocus != null && this.get_focusInfo().currentFocus != value) {
			this.get_focusInfo().currentFocus.set_focus(false);
			this.get_focusInfo().currentFocus = null;
		}
		if(value != null) {
			this.get_focusInfo().currentFocus = value;
			this.get_focusInfo().currentFocus.set_focus(true);
		}
		haxe_ui_Toolkit.get_screen().set_focus(value);
		if(this.get_focusInfo() == null) {
			return value;
		}
		return this.get_focusInfo().currentFocus;
	}
	,focusNext: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list) {
		var currentFocus = null;
		if(c.get_hidden() == true) {
			return null;
		}
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(f.get_allowFocus() == true) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				list.push(f);
			}
		}
		var childList = c._children == null ? [] : c._children;
		childList.sort(function(c1,c2) {
			return c1.componentTabIndex - c2.componentTabIndex;
		});
		var _g = 0;
		while(_g < childList.length) {
			var child = childList[_g];
			++_g;
			var f = this.buildFocusableList(child,list);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus",get_focusInfo:"get_focusInfo"}
};
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this._intersectionCache = null;
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,set: function(left,top,width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		if(top == null) {
			top = 0;
		}
		if(left == null) {
			left = 0;
		}
		this.left = left;
		this.top = top;
		this.width = width;
		this.height = height;
	}
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,intersects: function(rect) {
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			return false;
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		return y1 > y0;
	}
	,_intersectionCache: null
	,intersection: function(rect,noAlloc) {
		if(noAlloc == null) {
			noAlloc = true;
		}
		if(noAlloc == true && this._intersectionCache == null) {
			this._intersectionCache = new haxe_ui_geom_Rectangle();
		}
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		if(y1 <= y0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var r = null;
		if(noAlloc == true) {
			r = this._intersectionCache;
		} else {
			r = new haxe_ui_geom_Rectangle();
		}
		r.set(x0,y0,x1 - x0,y1 - y0);
		return r;
	}
	,toInts: function() {
		this.left = this.left | 0;
		this.top = this.top | 0;
		this.width = this.width | 0;
		this.height = this.height | 0;
	}
	,copy: function() {
		return new haxe_ui_geom_Rectangle(this.left,this.top,this.width,this.height);
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,round: function() {
		this.width = Math.round(this.width);
		this.height = Math.round(this.height);
	}
	,toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullWidths = true;
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width;
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g = 0;
		while(_g < dimensions.length) {
			var r = dimensions[_g];
			++_g;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g1 = 0;
			while(_g1 < r.length) {
				var c = r[_g1];
				++_g1;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var columns = Math.ceil((_this._children == null ? [] : _this._children).length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var cx = usableSize.width * child.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var cy = usableSize.height * child.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			var c = this.get_columns();
			var _this = this.get_component();
			var c1 = Math.min(c,(_this._children == null ? [] : _this._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var fullWidthsCounts = [0];
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						var f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					var cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var newRow = true;
			var fullHeightRowCount = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					var cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					} else {
						var tmp = usableSize.height > rowHeights[rowIndex];
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullHeights = true;
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_locale_LocaleEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.locale.LocaleEvent"] = haxe_ui_locale_LocaleEvent;
haxe_ui_locale_LocaleEvent.__name__ = "haxe.ui.locale.LocaleEvent";
haxe_ui_locale_LocaleEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_locale_LocaleEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_locale_LocaleEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_locale_LocaleEvent
});
var haxe_ui_locale_LocaleManager = function() {
	this._localeMap = new haxe_ds_StringMap();
	this._language = "en";
	this._eventMap = null;
};
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_locale_LocaleManager.get_instance = function() {
	if(haxe_ui_locale_LocaleManager._instance == null) {
		haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
	}
	return haxe_ui_locale_LocaleManager._instance;
};
haxe_ui_locale_LocaleManager.prototype = {
	_eventMap: null
	,registerComponent: function(component,prop,callback,expr,fix) {
		if(fix == null) {
			fix = true;
		}
		if(callback == null && expr == null) {
			return;
		}
		var fixedExpr = null;
		if(fix == true) {
			if(expr != null) {
				fixedExpr = haxe_ui_util_ExpressionUtil.stringToLanguageExpression(expr,"LocaleManager");
				if(StringTools.endsWith(fixedExpr,";") == true) {
					fixedExpr = HxOverrides.substr(fixedExpr,0,fixedExpr.length - 1);
				}
			}
		} else {
			fixedExpr = expr;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			propMap = new haxe_ds_StringMap();
			haxe_ui_locale_LocaleManager._registeredComponents.set(component,propMap);
		}
		propMap.h[prop] = { callback : callback, expr : fixedExpr};
		this.refreshFor(component);
	}
	,unregisterComponent: function(component) {
		haxe_ui_locale_LocaleManager._registeredComponents.remove(component);
	}
	,findBindingExpr: function(component,prop) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return null;
		}
		var entry = propMap.h[prop];
		return entry.expr;
	}
	,cloneForComponent: function(from,to) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[from.__id__];
		if(propMap == null) {
			return;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			this.registerComponent(to,prop,entry.callback,entry.expr,false);
		}
	}
	,onComponentReady: function(e) {
		e.target.unregisterEvent("initialize",$bind(this,this.onComponentReady));
		this.refreshFor(e.target);
	}
	,refreshFor: function(component) {
		if(component.get_isReady() == false) {
			component.registerEvent("initialize",$bind(this,this.onComponentReady));
			return;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return;
		}
		var context = { LocaleManager : haxe_ui_locale_LocaleManager, MathUtil : haxe_ui_util_MathUtil};
		var root = this.findRoot(component);
		var _g = 0;
		var _g1 = root.get_namedComponents();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(k.get_scriptAccess() == false) {
				continue;
			}
			context[k.get_id()] = k;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			if(entry.callback != null) {
				var value = entry.callback();
				Reflect.setProperty(component,prop,value);
			} else if(entry.expr != null) {
				var value1 = haxe_ui_util_SimpleExpressionEvaluator.eval(entry.expr,context);
				Reflect.setProperty(component,prop,value1);
			}
		}
	}
	,refreshAll: function() {
		var c = haxe_ui_locale_LocaleManager._registeredComponents.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			this.refreshFor(c1);
		}
	}
	,_language: null
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		if(value == null) {
			return value;
		}
		if(this._language == value) {
			return value;
		}
		if(this.getStrings(value) == null) {
			return value;
		}
		this._language = value;
		this.refreshAll();
		if(this._eventMap != null) {
			var event = new haxe_ui_locale_LocaleEvent("localeChanged");
			this._eventMap.invoke("localeChanged",event);
		}
		return value;
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this._eventMap == null) {
			return false;
		}
		return this._eventMap.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap != null) {
			this._eventMap.remove(type,listener);
		}
	}
	,parseResource: function(localeId,resourceId) {
		var content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			var parts = resourceId.split(".");
			var extension = parts.pop();
			var filename = parts.join(".");
			var n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			var parser = haxe_ui_parsers_locale_LocaleParser.get(extension);
			var map = parser.parse(content);
			this.addStrings(localeId,map,filename);
		}
	}
	,_localeMap: null
	,addStrings: function(localeId,map,filename) {
		var stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		var h = map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = map.h[k];
			if(filename != null && filename != localeId && StringTools.startsWith(k,filename) == false) {
				var altKey = filename + "." + k;
				stringMap.h[altKey] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(parts.length > 1) {
			var parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				var h = parent.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	,getStrings: function(localeId) {
		var strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		return this._localeMap.h[parts[0]];
	}
	,hasString: function(id) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	,lookupString: function(id,param0,param1,param2,param3) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return id;
		}
		var value = strings.h[id];
		if(value == null) {
			return id;
		}
		if(param0 != null) {
			value = StringTools.replace(value,"{0}",param0);
		}
		if(param1 != null) {
			value = StringTools.replace(value,"{1}",param1);
		}
		if(param2 != null) {
			value = StringTools.replace(value,"{2}",param2);
		}
		if(param3 != null) {
			value = StringTools.replace(value,"{3}",param3);
		}
		return value;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,__class__: haxe_ui_locale_LocaleManager
	,__properties__: {set_language:"set_language",get_language:"get_language"}
};
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = "haxe.ui.macros.BackendMacros";
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = "haxe.ui.macros.ModuleMacros";
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = "haxe.ui.macros.NativeMacros";
var haxe_ui_parsers_locale_LocaleParser = function() {
};
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
haxe_ui_parsers_locale_LocaleParser.get = function(extension) {
	haxe_ui_parsers_locale_LocaleParser.defaultParsers();
	var cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_locale_LocaleParser.defaultParsers = function() {
	haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
	haxe_ui_parsers_locale_LocaleParser.register("po",haxe_ui_parsers_locale_PoParser);
};
haxe_ui_parsers_locale_LocaleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
		haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_locale_LocaleParser.prototype = {
	parse: function(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	,__class__: haxe_ui_parsers_locale_LocaleParser
};
var haxe_ui_parsers_locale_PoParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PoParser"] = haxe_ui_parsers_locale_PoParser;
haxe_ui_parsers_locale_PoParser.__name__ = "haxe.ui.parsers.locale.PoParser";
haxe_ui_parsers_locale_PoParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PoParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var msgidEReg = new EReg("msgid *= *\"(.*)\"","");
		var msgstrEReg = new EReg("msgstr *= *\"(.*)\"","");
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var currentID = null;
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			if(currentID == null) {
				if(msgidEReg.match(line)) {
					currentID = msgidEReg.matched(1);
				} else {
					throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
				}
			} else if(msgstrEReg.match(line)) {
				var value = msgstrEReg.matched(1);
				result.h[currentID] = value;
				currentID = null;
			} else {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PoParser
});
var haxe_ui_parsers_locale_PropertiesParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PropertiesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			var separator = line.indexOf("=");
			if(separator == -1) {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
			var key = StringTools.trim(HxOverrides.substr(line,0,separator));
			var content = StringTools.trim(HxOverrides.substr(line,separator + 1,null));
			result.h[key] = content;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PropertiesParser
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:true,__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__:true,__constructs__:null
	,LINEAR: {_hx_name:"LINEAR",_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_name:"EASE",_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_name:"EASE_IN",_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_name:"EASE_OUT",_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_name:"EASE_IN_OUT",_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
haxe_ui_styles_EasingFunction.__constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		if(source.indexOf("$") != -1) {
			var h = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var value = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h[key];
				source = StringTools.replace(source,"$" + key,value);
			}
		}
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			var id = e.matched(1);
			var data = e.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				var selector = e.matched(1);
				var directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			var selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				var n1 = selector.indexOf("(");
				var n2 = selector.lastIndexOf(")");
				var mediaQuery = selector.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives = _gthis.parseDirectives(e.matched(6));
				var selectors = selector.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_StyleBorderType = $hxEnums["haxe.ui.styles.StyleBorderType"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Compound: {_hx_name:"Compound",_hx_index:2,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
};
haxe_ui_styles_StyleBorderType.__constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
var haxe_ui_styles_Style = function(left,top,autoWidth,width,percentWidth,initialWidth,initialPercentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,autoHeight,height,percentHeight,initialHeight,initialPercentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundColorEnd,backgroundGradientStyle,backgroundOpacity,backgroundImage,backgroundImageRepeat,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType,direction,contentWidth,contentWidthPercent,contentHeight,contentHeightPercent,wordWrap,imageRendering,layout,borderType,hasBorder,fullBorderSize) {
	this.left = left;
	this.top = top;
	this.autoWidth = autoWidth;
	this.width = width;
	this.percentWidth = percentWidth;
	this.initialWidth = initialWidth;
	this.initialPercentWidth = initialPercentWidth;
	this.minWidth = minWidth;
	this.minPercentWidth = minPercentWidth;
	this.maxWidth = maxWidth;
	this.maxPercentWidth = maxPercentWidth;
	this.autoHeight = autoHeight;
	this.height = height;
	this.percentHeight = percentHeight;
	this.initialHeight = initialHeight;
	this.initialPercentHeight = initialPercentHeight;
	this.minHeight = minHeight;
	this.minPercentHeight = minPercentHeight;
	this.maxHeight = maxHeight;
	this.maxPercentHeight = maxPercentHeight;
	this.padding = padding;
	this.paddingTop = paddingTop;
	this.paddingLeft = paddingLeft;
	this.paddingRight = paddingRight;
	this.paddingBottom = paddingBottom;
	this.marginTop = marginTop;
	this.marginLeft = marginLeft;
	this.marginRight = marginRight;
	this.marginBottom = marginBottom;
	this.horizontalSpacing = horizontalSpacing;
	this.verticalSpacing = verticalSpacing;
	this.color = color;
	this.backgroundColor = backgroundColor;
	this.backgroundColorEnd = backgroundColorEnd;
	this.backgroundGradientStyle = backgroundGradientStyle;
	this.backgroundOpacity = backgroundOpacity;
	this.backgroundImage = backgroundImage;
	this.backgroundImageRepeat = backgroundImageRepeat;
	this.backgroundImageClipTop = backgroundImageClipTop;
	this.backgroundImageClipLeft = backgroundImageClipLeft;
	this.backgroundImageClipBottom = backgroundImageClipBottom;
	this.backgroundImageClipRight = backgroundImageClipRight;
	this.backgroundImageSliceTop = backgroundImageSliceTop;
	this.backgroundImageSliceLeft = backgroundImageSliceLeft;
	this.backgroundImageSliceBottom = backgroundImageSliceBottom;
	this.backgroundImageSliceRight = backgroundImageSliceRight;
	this.borderColor = borderColor;
	this.borderTopColor = borderTopColor;
	this.borderLeftColor = borderLeftColor;
	this.borderBottomColor = borderBottomColor;
	this.borderRightColor = borderRightColor;
	this.borderSize = borderSize;
	this.borderTopSize = borderTopSize;
	this.borderLeftSize = borderLeftSize;
	this.borderBottomSize = borderBottomSize;
	this.borderRightSize = borderRightSize;
	this.borderRadius = borderRadius;
	this.borderRadiusTopLeft = borderRadiusTopLeft;
	this.borderRadiusTopRight = borderRadiusTopRight;
	this.borderRadiusBottomLeft = borderRadiusBottomLeft;
	this.borderRadiusBottomRight = borderRadiusBottomRight;
	this.borderOpacity = borderOpacity;
	this.borderStyle = borderStyle;
	this.icon = icon;
	this.iconPosition = iconPosition;
	this.horizontalAlign = horizontalAlign;
	this.verticalAlign = verticalAlign;
	this.textAlign = textAlign;
	this.opacity = opacity;
	this.clip = clip;
	this.native = native;
	this.fontName = fontName;
	this.fontSize = fontSize;
	this.fontBold = fontBold;
	this.fontUnderline = fontUnderline;
	this.fontItalic = fontItalic;
	this.cursor = cursor;
	this.hidden = hidden;
	this.filter = filter;
	this.backdropFilter = backdropFilter;
	this.resource = resource;
	this.animationName = animationName;
	this.animationOptions = animationOptions;
	this.mode = mode;
	this.pointerEvents = pointerEvents;
	this.contentType = contentType;
	this.direction = direction;
	this.contentWidth = contentWidth;
	this.contentWidthPercent = contentWidthPercent;
	this.contentHeight = contentHeight;
	this.contentHeightPercent = contentHeightPercent;
	this.wordWrap = wordWrap;
	this.imageRendering = imageRendering;
	this.layout = layout;
	this.borderType = borderType;
	this.hasBorder = hasBorder;
	this.fullBorderSize = fullBorderSize;
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,padding: null
	,set_padding: function(value) {
		this.paddingTop = value;
		this.paddingLeft = value;
		this.paddingRight = value;
		this.paddingBottom = value;
		return value;
	}
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundOpacity: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
	,direction: null
	,contentWidth: null
	,contentWidthPercent: null
	,contentHeight: null
	,contentHeightPercent: null
	,wordWrap: null
	,imageRendering: null
	,layout: null
	,borderType: null
	,get_borderType: function() {
		var t = haxe_ui_styles_StyleBorderType.Compound;
		if(this.borderLeftSize != null && this.borderLeftSize > 0 && this.borderLeftSize == this.borderRightSize && this.borderLeftSize == this.borderBottomSize && this.borderLeftSize == this.borderTopSize) {
			t = haxe_ui_styles_StyleBorderType.Full;
		} else if((this.borderLeftSize == null || this.borderLeftSize <= 0) && (this.borderRightSize == null || this.borderRightSize <= 0) && (this.borderBottomSize == null || this.borderRightSize <= 0) && (this.borderTopSize == null || this.borderTopSize <= 0)) {
			t = haxe_ui_styles_StyleBorderType.None;
		}
		return t;
	}
	,hasBorder: null
	,get_hasBorder: function() {
		return this.get_borderType() != haxe_ui_styles_StyleBorderType.None;
	}
	,fullBorderSize: null
	,get_fullBorderSize: function() {
		if(this.get_borderType() == haxe_ui_styles_StyleBorderType.Full) {
			return this.borderLeftSize;
		}
		return 0;
	}
	,mergeDirectives: function(map) {
		var h = map.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				var _g1 = v.value;
				switch(_g1._hx_index) {
				case 5:
					var f = _g1.f;
					var vl = _g1.vl;
					var arr = haxe_ui_styles_ValueTools.array(vl);
					arr.splice(0,0,f);
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					var f1 = _g1.v;
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter([f1])];
					break;
				case 9:
					this.backdropFilter = null;
					break;
				default:
				}
				break;
			case "background-color":
				var _g2 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-height":
				this.contentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "content-width":
				this.contentWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "direction":
				this.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "display":
				this.hidden = haxe_ui_styles_ValueTools.none(v.value);
				break;
			case "filter":
				var _g3 = v.value;
				switch(_g3._hx_index) {
				case 5:
					var f2 = _g3.f;
					var vl1 = _g3.vl;
					var arr1 = haxe_ui_styles_ValueTools.array(vl1);
					arr1.splice(0,0,f2);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr1)];
					break;
				case 6:
					var f3 = _g3.v;
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([f3])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "image-rendering":
				if(v.value._hx_index == 9) {
					this.imageRendering = null;
				} else {
					this.imageRendering = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "layout":
				if(v.value._hx_index == 9) {
					this.layout = null;
				} else {
					this.layout = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "word-wrap":
				this.wordWrap = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
		if(s.direction != null) {
			this.direction = s.direction;
		}
		if(s.contentWidth != null) {
			this.contentWidth = s.contentWidth;
		}
		if(s.contentWidthPercent != null) {
			this.contentWidthPercent = s.contentWidthPercent;
		}
		if(s.contentHeight != null) {
			this.contentHeight = s.contentHeight;
		}
		if(s.contentHeightPercent != null) {
			this.contentHeightPercent = s.contentHeightPercent;
		}
		if(s.wordWrap != null) {
			this.wordWrap = s.wordWrap;
		}
		if(s.imageRendering != null) {
			this.imageRendering = s.imageRendering;
		}
		if(s.layout != null) {
			this.layout = s.layout;
		}
	}
	,equalTo: function(s) {
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(s.backgroundImage != this.backgroundImage) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.icon != this.icon) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		if(s.direction != this.direction) {
			return false;
		}
		if(s.contentWidth != this.contentWidth) {
			return false;
		}
		if(s.contentWidthPercent != this.contentWidthPercent) {
			return false;
		}
		if(s.contentHeight != this.contentHeight) {
			return false;
		}
		if(s.contentHeightPercent != this.contentHeightPercent) {
			return false;
		}
		if(s.wordWrap != this.wordWrap) {
			return false;
		}
		if(s.imageRendering != this.imageRendering) {
			return false;
		}
		if(s.layout != this.layout) {
			return false;
		}
		return true;
	}
	,createAnimationOptions: function() {
		if(this.animationOptions == null) {
			this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
		}
	}
	,clone: function() {
		var c = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		c.apply(this);
		return c;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {get_fullBorderSize:"get_fullBorderSize",get_hasBorder:"get_hasBorder",get_borderType:"get_borderType",set_padding:"set_padding"}
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		return this._mediaQueries.length > 0;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				return r;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				m.push(r);
			}
		}
		return m;
	}
	,removeRule: function(selector) {
		var r = this.findRule(selector);
		if(r != null) {
			HxOverrides.remove(this._rules,r);
		}
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		this._animations.h[el.id] = el;
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var h = styleSheet._animations.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:true,__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_styles_ValueTools.validColor(s)) {
		v = haxe_ui_styles_ValueTools.parseColor(s);
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(s.indexOf("(") != -1 && StringTools.endsWith(s,")")) {
		var n = s.indexOf("(");
		var f = HxOverrides.substr(s,0,n);
		var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
		if(f == "calc") {
			params = "'" + params + "'";
		}
		var vl = [];
		var _g = 0;
		var _g1 = params.split(",");
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p = StringTools.trim(p);
			vl.push(haxe_ui_styles_ValueTools.parse(p));
		}
		v = haxe_ui_styles_Value.VCall(f,vl);
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < arr.length) {
				var a = arr[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.compositeParts = function(value) {
	if(value == null) {
		return 0;
	}
	if(value._hx_index == 7) {
		var vl = value.vl;
		return vl.length;
	} else {
		return 0;
	}
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1);
		if(s.length == 6) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
		} else if(s.length == 3) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
		}
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return haxe_ui_styles_Value.VColor(haxe_ui_styles_ValueTools.colors.h[s]);
	}
	return null;
};
haxe_ui_styles_ValueTools.validColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return true;
	}
	return false;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var v = value.v;
		var unit = value.unit;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 2:
		var v = value.v;
		if(v == null) {
			return "null";
		} else {
			return "" + v;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 6:
		var v = value.v;
		return v;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.none = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 9) {
		return true;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v = value.v;
		return v;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v = value.v;
		return v;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.any = function(v) {
	if(v == null) {
		return null;
	}
	switch(v._hx_index) {
	case 1:
		var v1 = v.v;
		return v1;
	case 2:
		var v1 = v.v;
		return v1;
	case 3:
		var _g = v.v;
		if(_g._hx_index == 1) {
			var v1 = _g.value;
			return v1;
		} else {
			return null;
		}
		break;
	case 4:
		var v1 = v.v;
		return v1;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.array = function(vl) {
	var arr = [];
	var _g = 0;
	while(_g < vl.length) {
		var v = vl[_g];
		++_g;
		var a = haxe_ui_styles_ValueTools.any(v);
		if(a != null) {
			arr.push(a);
		}
	}
	return arr;
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v = value.v;
		switch(v._hx_index) {
		case 1:
			var d = v.value;
			return d;
		case 2:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d = v.value;
			return d * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	case 6:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	switch(f) {
	case "calc":
		return null;
	case "platform-color":
		return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
	case "rgb":
		return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents(haxe_ui_styles_ValueTools.int(vl[0]),haxe_ui_styles_ValueTools.int(vl[1]),haxe_ui_styles_ValueTools.int(vl[2]),0));
	case "theme-icon":case "theme-image":
		return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
	default:
		return null;
	}
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var _g = $bind(this,this._runNextKeyframe);
			var onFinish1 = onFinish;
			var tmp = function() {
				_g(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = keyframe.directives;
			while(_g2 < _g3.length) {
				var directive = _g3[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					var this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var h = this._initialState.h;
			var property_h = h;
			var property_keys = Object.keys(h);
			var property_length = property_keys.length;
			var property_current = 0;
			while(property_current < property_length) {
				var property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},null));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.tween = function(target,properties,duration,options) {
	var actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,duration,options);
	actuator.run();
	return actuator;
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
		this.target = null;
	}
	,run: function() {
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			this._currentTime = HxOverrides.now() / 1000;
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay($bind(this,this._nextFrame),this.delay * 1000 | 0);
			} else {
				new haxe_ui_CallLater($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
	,_initialize: function() {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					var v1 = end.v;
					start = v1;
					break;
				case 1:
					var v2 = end.v;
					start = 0;
					break;
				case 3:
					var _g3 = end.v;
					if(_g3._hx_index == 0) {
						var v3 = _g3.value;
						start = 0;
					}
					break;
				default:
				}
			}
			var isVariant = false;
			if(start != null) {
				try {
					if(start._hx_index == 2) {
						var v4 = start.s;
						start = v4;
						isVariant = true;
					}
				} catch( _g4 ) {
				}
			}
			if(end != null) {
				try {
					if(end._hx_index == 2) {
						var v5 = end.s;
						end = v5;
						isVariant = true;
					}
				} catch( _g5 ) {
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				var v6 = end.v;
				var startVal = start;
				var endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					var n1 = endVal.indexOf("[[");
					var n2 = endVal.indexOf("]]") + 2;
					var before = HxOverrides.substr(endVal,0,n1);
					var after = HxOverrides.substr(endVal,n2,null);
					var s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					var startInt = Std.parseInt(s);
					var s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					var endInt = Std.parseInt(s1);
					var details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					var c = js_Boot.getClass(this.target);
					var typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					var details1 = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					this._stringPropertyDetails.push(details1);
				}
				break;
			case 3:
				var _g6 = end.v;
				if(_g6._hx_index == 0) {
					var v7 = _g6.value;
					var val = v7;
					if(val != null) {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details2);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details3 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details3);
					} else {
						var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details4);
					}
				}
				break;
			case 4:
				var v8 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v8;
				var details5 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details5);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details6 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details6);
				} else {
					var details7 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details7);
				}
			}
		}
	}
	,_nextFrame: function() {
		if(this._stopped == true) {
			return;
		}
		var currentTime = HxOverrides.now() / 1000;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime);
		}
		if(delta >= this.duration) {
			this._finish();
		} else {
			new haxe_ui_CallLater($bind(this,this._nextFrame));
		}
	}
	,_isValid: function() {
		if(this.target == null) {
			return false;
		}
		if(((this.target) instanceof haxe_ui_core_Component)) {
			var c = this.target;
			if(c._isDisposed == true) {
				return false;
			}
		}
		return true;
	}
	,_apply: function(position) {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		var _g = 0;
		var _g1 = this._stringPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			if(details.pattern != null) {
				var newInt = details.startInt + position * details.changeInt | 0;
				var newString = StringTools.replace(details.pattern,"[[n]]","" + newInt);
				if(details.isVariant) {
					var v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		var _g = 0;
		var _g1 = this._colorPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var currentColor = haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0);
			Reflect.setProperty(details.target,details.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		this.target = null;
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction._hx_index) {
	case 0:
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	case 2:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case 3:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	case 1:case 4:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_animation_util_StringPropertyDetails = function(target,propertyName,start,end) {
	this.isVariant = false;
	this.pattern = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.end = end;
};
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
haxe_ui_styles_animation_util_StringPropertyDetails.prototype = {
	propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
	,__class__: haxe_ui_styles_animation_util_StringPropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,set: function(directive) {
		var found = false;
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == directive.directive) {
				d.value = directive.value;
				found = true;
			}
		}
		if(found == false) {
			this.directives.push(directive);
		}
	}
	,find: function(id) {
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == id) {
				return d;
			}
		}
		return null;
	}
	,clear: function() {
		this.directives = [];
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,addDirective: function(el) {
		this._directives.push(el);
	}
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) != -1 == false) {
			return false;
		}
	}
	if(c.className != null) {
		var _g = 0;
		var _g1 = c.get_classNameParts();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(d.classes.indexOf(p) != -1 == false) {
				return false;
			}
		}
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.parent != null) {
		if(c.direct == true) {
			var p = d.parentComponent;
			if(p == null) {
				return false;
			}
			if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				return false;
			}
		} else {
			var p = d.parentComponent;
			while(p != null) {
				if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					break;
				}
				p = p.parentComponent;
			}
			if(p == null) {
				return false;
			}
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,addDirective: function(directive,value) {
		var d = new haxe_ui_styles_elements_Directive(directive,value);
		this.processDirective(d);
	}
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-style","border-top-color"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					this1.h["font-bold"] = value;
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					this2.h["font-italic"] = value1;
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					this3.h["font-underline"] = value2;
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["padding-left","padding-right"]);
			} else if(vl.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			var _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		var _g = d.value;
		switch(_g._hx_index) {
		case 1:
			var _g1 = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 3:
			var v = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(v));
				this1.h[p] = value;
			}
			break;
		case 4:
			var _g1 = _g.v;
			if(duplicate == false) {
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				this1.h[parts[0]] = value;
			} else {
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive(p,d.value);
					this1.h[p] = value;
				}
			}
			break;
		case 6:
			var _g1 = _g.v;
			break;
		case 7:
			var vl = _g.vl;
			var n = 0;
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p,vl[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	s = StringTools.replace(s,">"," > ");
	var p = s.split(" ");
	var parent = null;
	var nextDirect = false;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		if(i == ">") {
			nextDirect = true;
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		if(nextDirect == true) {
			current.direct = true;
			nextDirect = false;
		}
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,toString: function() {
		return this.parts.join(" ");
	}
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this._parts = null;
	this.direct = false;
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,get_classNameParts: function() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
	,toString: function() {
		var sb_b = "";
		if(this.id != null) {
			sb_b += Std.string("#" + this.id);
		}
		if(this.nodeName != null) {
			sb_b += Std.string(this.nodeName);
		}
		if(this.className != null) {
			sb_b += Std.string("." + this.className);
		}
		if(this.pseudoClass != null) {
			sb_b += Std.string(":" + this.pseudoClass);
		}
		return sb_b;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
	,__properties__: {get_classNameParts:"get_classNameParts"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
	this.images = [];
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,images: null
	,vars: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this.currentThemeVars = new haxe_ds_StringMap();
	this._eventMap = null;
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,_themeImages: null
	,_eventMap: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.invoke(event.type,new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,getTheme: function(themeName) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	,addStyleResource: function(themeName,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority});
	}
	,setThemeVar: function(themeName,varName,varValue) {
		var theme = this.getTheme(themeName);
		if(theme == null) {
			return;
		}
		theme.vars.h[varName] = varValue;
	}
	,setCurrentThemeVar: function(varName,varValue) {
		this.setThemeVar(haxe_ui_Toolkit.get_theme(),varName,varValue);
	}
	,addImageResource: function(themeName,id,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).images.push({ id : id, resourceId : resourceId, priority : priority});
	}
	,currentThemeVars: null
	,applyTheme: function(themeName) {
		haxe_ui_Toolkit.styleSheet.clear("default");
		var finalVars = new haxe_ds_StringMap();
		this.buildThemeVars("global",finalVars);
		this.buildThemeVars(themeName,finalVars);
		this.currentThemeVars = new haxe_ds_StringMap();
		var h = finalVars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.currentThemeVars.h[k] = finalVars.h[k];
		}
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId);
		}
		var images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < images.length) {
			var i = images[_g];
			++_g;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
		this.dispatch(new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,applyResource: function(resourceId) {
		var style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		if(style != null) {
			this.addStyleString(style);
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeVars: function(themeName,vars) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeVars(theme.parent,vars);
		}
		var h = theme.vars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = theme.vars.h[k];
			vars.h[k] = v;
		}
	}
	,buildThemeEntries: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,buildThemeImages: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.images;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,image: function(id) {
		var image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	,icon: function(id) {
		return this.image(id);
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_tooltips_ToolTip = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
haxe_ui_tooltips_ToolTip.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_tooltips_ToolTip();
	}
	,__class__: haxe_ui_tooltips_ToolTip
});
var haxe_ui_tooltips_ToolTipManager = function() {
	this._toolTipContents = null;
	this._toolTip = null;
	this._timer = null;
	this._currentComponent = null;
	this._lastMouseEvent = null;
	this._toolTipOptions = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_tooltips_ToolTipManager.get_instance = function() {
	if(haxe_ui_tooltips_ToolTipManager._instance == null) {
		haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
	}
	return haxe_ui_tooltips_ToolTipManager._instance;
};
haxe_ui_tooltips_ToolTipManager.prototype = {
	_lastMouseEvent: null
	,_toolTipOptions: null
	,registerTooltip: function(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	,unregisterTooltip: function(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	,getTooltipOptions: function(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	,updateTooltipRenderer: function(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		var options = this._toolTipOptions.h[target.__id__];
		options.renderer = renderer;
	}
	,_currentComponent: null
	,_timer: null
	,onTargetMouseOver: function(event) {
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	,onTargetMouseMove: function(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	,onTargetMouseOut: function(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	,onDelayTimer: function() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	,onScreenMouseMove: function(event) {
		this._lastMouseEvent = event;
	}
	,onScreenMouseDown: function(event) {
		this.hideToolTip();
	}
	,startTimer: function() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	,stopTimer: function() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	,stopCurrent: function() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,_toolTip: null
	,_toolTipContents: null
	,createToolTip: function() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	,showToolTip: function() {
		var _gthis = this;
		if(this._currentComponent == null) {
			return;
		}
		if(this._currentComponent.get_disabled() == true || this._currentComponent.get_hidden() == true) {
			this.stopCurrent();
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		var options = this._toolTipOptions.h[this._currentComponent.__id__];
		var renderer = this.createToolTipRenderer(options);
		var _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			var _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,positionToolTip: function() {
		var x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		var y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		var w = this._toolTip.get_width();
		var h = this._toolTip.get_height();
		var maxX = haxe_ui_core_Screen.get_instance().get_width();
		var maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x);
		this._toolTip.set_top(y);
	}
	,hideToolTip: function() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,createToolTipRenderer: function(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		var label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	,__class__: haxe_ui_tooltips_ToolTipManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			var _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,invoke: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util_Color = {};
haxe_ui_util_Color.__properties__ = {set_a:"set_a",get_a:"get_a",set_b:"set_b",get_b:"get_b",set_g:"set_g",get_g:"get_g",set_r:"set_r",get_r:"get_r"};
haxe_ui_util_Color.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aliceblue":
		return 15792383;
	case "antiquewhite":
		return 16444375;
	case "aqua":
		return 65535;
	case "aquamarine":
		return 8388564;
	case "azure":
		return 15794175;
	case "beige":
		return 16119260;
	case "bisque":
		return 16770244;
	case "black":
		return 0;
	case "blanchedalmond":
		return 16772045;
	case "blue":
		return 255;
	case "blueviolet":
		return 9055202;
	case "brown":
		return 10824234;
	case "burlywood":
		return 14596231;
	case "cadetblue":
		return 6266528;
	case "chartreuse":
		return 8388352;
	case "chocolate":
		return 13789470;
	case "coral":
		return 16744272;
	case "cornflowerblue":
		return 6591981;
	case "cornsilk":
		return 16775388;
	case "crimson":
		return 14423100;
	case "cyan":
		return 65535;
	case "darkblue":
		return 139;
	case "darkcyan":
		return 35723;
	case "darkgoldenrod":
		return 12092939;
	case "darkgray":
		return 11119017;
	case "darkgreen":
		return 25600;
	case "darkkhaki":
		return 12433259;
	case "darkmagenta":
		return 9109643;
	case "darkolivegreen":
		return 5597999;
	case "darkorange":
		return 16747520;
	case "darkorchid":
		return 10040012;
	case "darkred":
		return 9109504;
	case "darksalmon":
		return 15308410;
	case "darkseagreen":
		return 9419919;
	case "darkslateblue":
		return 4734347;
	case "darkslategray":
		return 3100495;
	case "darkturquoise":
		return 52945;
	case "darkviolet":
		return 9699539;
	case "deeppink":
		return 16716947;
	case "deepskyblue":
		return 49151;
	case "dimgray":
		return 6908265;
	case "dodgerblue":
		return 2003199;
	case "firebrick":
		return 11674146;
	case "floralwhite":
		return 16775920;
	case "forestgreen":
		return 2263842;
	case "fuchsia":
		return 16711935;
	case "gainsboro":
		return 14474460;
	case "ghostwhite":
		return 16316671;
	case "gold":
		return 16766720;
	case "goldenrod":
		return 14329120;
	case "green":
		return 32768;
	case "greenyellow":
		return 11403055;
	case "gray":case "grey":
		return 8421504;
	case "honeydew":
		return 15794160;
	case "hotpink":
		return 16738740;
	case "indianred":
		return 13458524;
	case "indigo":
		return 4915330;
	case "ivory":
		return 16777200;
	case "khaki":
		return 15787660;
	case "lavender":
		return 15132410;
	case "lavenderblush":
		return 16773365;
	case "lawngreen":
		return 8190976;
	case "lemonchiffon":
		return 16775885;
	case "lightblue":
		return 11393254;
	case "lightcoral":
		return 15761536;
	case "lightcyan":
		return 14745599;
	case "lightgoldenrodyellow":
		return 16448210;
	case "lightgray":
		return 13882323;
	case "lightgreen":
		return 9498256;
	case "lightpink":
		return 16758465;
	case "lightsalmon":
		return 16752762;
	case "lightseagreen":
		return 2142890;
	case "lightskyblue":
		return 8900346;
	case "lightslategray":
		return 7833753;
	case "lightsteelblue":
		return 11584734;
	case "lightyellow":
		return 16777184;
	case "lime":
		return 65280;
	case "limegreen":
		return 3329330;
	case "linen":
		return 16445670;
	case "magenta":
		return 16711935;
	case "maroon":
		return 8388608;
	case "mediumaquamarine":
		return 6737322;
	case "mediumblue":
		return 205;
	case "mediumorchid":
		return 12211667;
	case "mediumpurple":
		return 9662683;
	case "mediumseagreen":
		return 3978097;
	case "mediumslateblue":
		return 8087790;
	case "mediumspringgreen":
		return 64154;
	case "mediumturquoise":
		return 4772300;
	case "mediumvioletred":
		return 13047173;
	case "midnightblue":
		return 1644912;
	case "mintcream":
		return 16121850;
	case "mistyrose":
		return 16770273;
	case "moccasin":
		return 16770229;
	case "navajowhite":
		return 16768685;
	case "navy":
		return 128;
	case "oldlace":
		return 16643558;
	case "olive":
		return 8421376;
	case "olivedrab":
		return 7048739;
	case "orange":
		return 16753920;
	case "orangered":
		return 16729344;
	case "orchid":
		return 14315734;
	case "palegoldenrod":
		return 15657130;
	case "palegreen":
		return 10025880;
	case "paleturquoise":
		return 11529966;
	case "palevioletred":
		return 14381203;
	case "papayawhip":
		return 16773077;
	case "peachpuff":
		return 16767673;
	case "peru":
		return 13468991;
	case "pink":
		return 16761035;
	case "plum":
		return 14524637;
	case "powderblue":
		return 11591910;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "rosybrown":
		return 12357519;
	case "royalblue":
		return 4286945;
	case "saddlebrown":
		return 9127187;
	case "salmon":
		return 16416882;
	case "sandybrown":
		return 16032864;
	case "seagreen":
		return 3050327;
	case "seashell":
		return 16774638;
	case "sienna":
		return 10506797;
	case "silver":
		return 12632256;
	case "skyblue":
		return 8900331;
	case "slateblue":
		return 6970061;
	case "slategray":
		return 7372944;
	case "snow":
		return 16775930;
	case "springgreen":
		return 65407;
	case "steelblue":
		return 4620980;
	case "tan":
		return 13808780;
	case "teal":
		return 32896;
	case "thistle":
		return 14204888;
	case "tomato":
		return 16737095;
	case "turquoise":
		return 4251856;
	case "violet":
		return 15631086;
	case "wheat":
		return 16113331;
	case "white":
		return 16777215;
	case "whitesmoke":
		return 16119285;
	case "yellow":
		return 16776960;
	case "yellowgreen":
		return 10145074;
	default:
		return 0;
	}
};
haxe_ui_util_Color.fromComponents = function(r,g,b,a) {
	var result = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util_Color.get_r = function(this1) {
	return this1 >> 16 & 255;
};
haxe_ui_util_Color.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_g = function(this1) {
	return this1 >> 8 & 255;
};
haxe_ui_util_Color.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_b = function(this1) {
	return this1 & 255;
};
haxe_ui_util_Color.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return this1;
};
haxe_ui_util_Color.get_a = function(this1) {
	return this1 >> 24 & 255;
};
haxe_ui_util_Color.set_a = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.set = function(this1,r,g,b,a) {
	this1 = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return this1;
};
haxe_ui_util_Color.toInt = function(this1) {
	return this1;
};
haxe_ui_util_Color.or = function(a,b) {
	return haxe_ui_util_Color.toInt(a) | haxe_ui_util_Color.toInt(b);
};
haxe_ui_util_Color.sumColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) + (b >> 16 & 255),(a >> 8 & 255) + (b >> 8 & 255),(a & 255) + (b & 255),(a >> 24 & 255) + (b >> 24 & 255)));
};
haxe_ui_util_Color.restColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - (b >> 16 & 255),(a >> 8 & 255) - (b >> 8 & 255),(a & 255) - (b & 255),(a >> 24 & 255) - (b >> 24 & 255)));
};
haxe_ui_util_Color.sumFloat = function(a,b) {
	var bInt = b | 0;
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - bInt,(a >> 8 & 255) - bInt,(a & 255) - bInt,(a >> 24 & 255) - bInt));
};
haxe_ui_util_Color.mulFloat = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) * b | 0,(a >> 8 & 255) * b | 0,(a & 255) * b | 0,(a >> 24 & 255) * b | 0));
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = 0 | (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util_Color.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0x" + s);
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
var haxe_ui_util_Defines = function() { };
$hxClasses["haxe.ui.util.Defines"] = haxe_ui_util_Defines;
haxe_ui_util_Defines.__name__ = "haxe.ui.util.Defines";
haxe_ui_util_Defines.getAll = function() {
	haxe_ui_util_Defines.popuplate();
	return haxe_ui_util_Defines._map;
};
haxe_ui_util_Defines.set = function(name,value,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	haxe_ui_util_Defines.popuplate();
	if(overwrite == false && Object.prototype.hasOwnProperty.call(haxe_ui_util_Defines._map.h,name)) {
		return;
	}
	haxe_ui_util_Defines._map.h[name] = value;
};
haxe_ui_util_Defines.popuplate = function() {
	if(haxe_ui_util_Defines._map != null) {
		return;
	}
	haxe_ui_util_Defines._map = new haxe_ds_StringMap();
	if(haxe_ui_core_Platform.get_instance().get_isWindows()) {
		haxe_ui_util_Defines.set("windows","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isLinux()) {
		haxe_ui_util_Defines.set("linux","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isMac()) {
		haxe_ui_util_Defines.set("mac","1");
	}
};
haxe_ui_util_Defines.toObject = function() {
	haxe_ui_util_Defines.popuplate();
	var o = { };
	var h = haxe_ui_util_Defines._map.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var v = haxe_ui_util_Defines._map.h[k];
		o[k] = v;
	}
	return o;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.copyFrom(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var arr = this._map.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_ExpressionUtil = function() { };
$hxClasses["haxe.ui.util.ExpressionUtil"] = haxe_ui_util_ExpressionUtil;
haxe_ui_util_ExpressionUtil.__name__ = "haxe.ui.util.ExpressionUtil";
haxe_ui_util_ExpressionUtil.stringToLanguageExpression = function(s,localeManager) {
	if(localeManager == null) {
		localeManager = "haxe.ui.locale.LocaleManager";
	}
	var fixedParts = [];
	var beforePos = 0;
	var n1 = s.indexOf("{{");
	while(n1 != -1) {
		var before = s.substring(beforePos,n1);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
		var n2 = s.indexOf("}}",n1);
		var code = s.substring(n1 + 2,n2);
		var parts = code.split(",");
		var stringId = parts.shift();
		var callString = localeManager + ".instance.lookupString('";
		callString += stringId;
		callString += "'";
		if(parts.length > 0) {
			callString += ", ";
			callString += parts.join(", ");
		}
		callString += ")";
		fixedParts.push(callString);
		n1 = s.indexOf("{{",n2);
		beforePos = n2 + 2;
	}
	if(beforePos < s.length) {
		var before = s.substring(beforePos,s.length);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
	}
	var fixedCode = fixedParts.join(" + ");
	return fixedCode;
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var this1 = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var listener = this1;
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,pop: function() {
		return this._array.pop().callback;
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_ImageLoader = function(resource) {
	this._resource = resource;
};
$hxClasses["haxe.ui.util.ImageLoader"] = haxe_ui_util_ImageLoader;
haxe_ui_util_ImageLoader.__name__ = "haxe.ui.util.ImageLoader";
haxe_ui_util_ImageLoader.prototype = {
	_resource: null
	,load: function(callback) {
		if(haxe_ui_util_Variant.get_isString(this._resource)) {
			var stringResource = haxe_ui_util_Variant.toString(this._resource);
			stringResource = StringTools.trim(stringResource);
			if(StringTools.startsWith(stringResource,"http://") || StringTools.startsWith(stringResource,"https://")) {
				this.loadFromHttp(stringResource,callback);
			} else if(StringTools.startsWith(stringResource,"file://")) {
				var tmp = HxOverrides.substr(stringResource,7,null);
				haxe_ui_Toolkit.get_assets().imageFromFile(tmp,callback);
			} else {
				haxe_ui_Toolkit.get_assets().getImage(stringResource,callback);
			}
		} else if(haxe_ui_util_Variant.get_isImageData(this._resource)) {
			var imageData = haxe_ui_util_Variant.toImageData(this._resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( _g ) {
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,__class__: haxe_ui_util_ImageLoader
};
var haxe_ui_util_Listener = {};
haxe_ui_util_Listener._new = function(callback,priority) {
	var this1 = new haxe_ui_util__$Listener_ListenerInternal(callback,priority);
	return this1;
};
haxe_ui_util_Listener.compareListener = function(a,b) {
	return a.callback == b.callback;
};
haxe_ui_util_Listener.compareFunction = function(a,b) {
	return a.callback == b;
};
haxe_ui_util_Listener.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
haxe_ui_util_MathUtil.round = function(v,precision) {
	if(precision == null) {
		precision = 0;
	}
	return Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision);
};
haxe_ui_util_MathUtil.roundToNearest = function(v,n) {
	var r = v % n;
	if(r <= n / 2) {
		return Math.round(v - r);
	}
	return Math.round(v + n - r);
};
haxe_ui_util_MathUtil.clamp = function(v,min,max) {
	if(v == null || isNaN(v)) {
		return min;
	}
	if(min != null && v < min) {
		v = min;
	} else if(max != null && v > max) {
		v = max;
	}
	return v;
};
var haxe_ui_util_RTTI = function() { };
$hxClasses["haxe.ui.util.RTTI"] = haxe_ui_util_RTTI;
haxe_ui_util_RTTI.__name__ = "haxe.ui.util.RTTI";
haxe_ui_util_RTTI.addClassProperty = function(className,propertyName,propertyType) {
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	propertyType = propertyType.toLowerCase();
	if(propertyType == "null<bool>") {
		propertyType = "bool";
	}
	if(propertyType == "null<int>") {
		propertyType = "int";
	}
	if(propertyType == "null<float>") {
		propertyType = "float";
	}
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { };
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	if(entry.properties == null) {
		entry.properties = new haxe_ds_StringMap();
	}
	entry.properties.h[propertyName] = { propertyName : propertyName, propertyType : propertyType};
};
haxe_ui_util_RTTI.load = function() {
	if(haxe_ui_util_RTTI.classInfo != null) {
		return;
	}
	var s = haxe_Resource.getString("haxeui_rtti");
	if(s == null) {
		return;
	}
	var unserializer = new haxe_Unserializer(s);
	haxe_ui_util_RTTI.classInfo = unserializer.unserialize();
};
haxe_ui_util_RTTI.getClassInfo = function(className) {
	haxe_ui_util_RTTI.load();
	className = className.toLowerCase();
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	return entry;
};
haxe_ui_util_RTTI.save = function() {
};
var haxe_ui_util_SimpleExpressionEvaluatorOperation = $hxEnums["haxe.ui.util.SimpleExpressionEvaluatorOperation"] = { __ename__:true,__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Subtract: {_hx_name:"Subtract",_hx_index:1,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Divide: {_hx_name:"Divide",_hx_index:3,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:4,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:5,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:6,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:7,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:8,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:9,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalAnd: {_hx_name:"LogicalAnd",_hx_index:10,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalOr: {_hx_name:"LogicalOr",_hx_index:11,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
};
haxe_ui_util_SimpleExpressionEvaluatorOperation.__constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
var haxe_ui_util_SimpleExpressionEvaluator = function() { };
$hxClasses["haxe.ui.util.SimpleExpressionEvaluator"] = haxe_ui_util_SimpleExpressionEvaluator;
haxe_ui_util_SimpleExpressionEvaluator.__name__ = "haxe.ui.util.SimpleExpressionEvaluator";
haxe_ui_util_SimpleExpressionEvaluator.evalCondition = function(condition) {
	return haxe_ui_util_SimpleExpressionEvaluator.eval(condition,{ Backend : haxe_ui_Backend, backend : haxe_ui_Backend.get_id(), defined : haxe_ui_util_SimpleExpressionEvaluator.defined});
};
haxe_ui_util_SimpleExpressionEvaluator.defined = function(key) {
	var this1 = haxe_ui_util_Defines.getAll();
	return Object.prototype.hasOwnProperty.call(this1.h,key);
};
haxe_ui_util_SimpleExpressionEvaluator.eval = function(s,context) {
	var r = null;
	if(s.indexOf("||") != -1) {
		var parts = s.split("||");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r || haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else if(s.indexOf("&&") != -1) {
		var parts = s.split("&&");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r && haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	return r;
};
haxe_ui_util_SimpleExpressionEvaluator.evalSingle = function(s,context) {
	var result = null;
	var operation = null;
	var token = "";
	var inString = false;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = s.charAt(i);
		var next = s.charAt(i + 1);
		if(ch == "'" || ch == "\"") {
			inString = !inString;
		}
		if(inString == false) {
			if(ch == "+") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Add;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "-") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "*") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "/") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == ">" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "<" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "=" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "!" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == ">" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "<" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "&" && next == "&") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "|" && next == "|") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			}
		}
		token += ch;
		if(i == s.length - 1) {
			s = "";
			break;
		}
	}
	var r = null;
	if(s.length > 0) {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	var trimmedToken = StringTools.trim(token);
	var v = parseFloat(trimmedToken);
	if(!isNaN(v) && isFinite(v)) {
		result = parseFloat(trimmedToken);
	} else {
		var value = trimmedToken;
		value = value.toLowerCase();
		if(value == "true" || value == "false") {
			result = trimmedToken.toLowerCase() == "true";
		} else if(StringTools.startsWith(trimmedToken,"'") && StringTools.endsWith(trimmedToken,"'") ? true : StringTools.startsWith(trimmedToken,"\"") && StringTools.endsWith(trimmedToken,"\"")) {
			result = HxOverrides.substr(trimmedToken,1,trimmedToken.length - 2);
		} else {
			var token = "";
			var bracketsOpen = 0;
			var call = null;
			var callParams = null;
			var _g = 0;
			var _g1 = trimmedToken.length;
			while(_g < _g1) {
				var i = _g++;
				var ch = trimmedToken.charAt(i);
				if(ch == "(") {
					++bracketsOpen;
					if(bracketsOpen == 1) {
						call = token;
						token = "";
					} else {
						token += ch;
					}
				} else if(ch == ")") {
					--bracketsOpen;
					if(bracketsOpen == 0) {
						callParams = token;
					} else {
						token += ")";
					}
				} else {
					token += ch;
				}
			}
			var prop = null;
			if(call == null) {
				prop = token;
			}
			var parsedCallParams = [];
			if(callParams != null) {
				bracketsOpen = 0;
				token = "";
				var _g = 0;
				var _g1 = callParams.length;
				while(_g < _g1) {
					var i = _g++;
					var ch = callParams.charAt(i);
					if(ch == "(") {
						++bracketsOpen;
					} else if(ch == ")") {
						--bracketsOpen;
					}
					if(ch == ",") {
						if(bracketsOpen == 0) {
							parsedCallParams.push(token);
							token = "";
						} else {
							token += ch;
						}
					} else {
						token += ch;
					}
				}
				if(token.length != 0) {
					parsedCallParams.push(token);
				}
			}
			if(call != null) {
				var trimmedCall = StringTools.trim(call);
				if(trimmedCall.length > 0) {
					var callParts = trimmedCall.split(".");
					var ref = context;
					var prevRef = null;
					var _g = 0;
					while(_g < callParts.length) {
						var callPart = callParts[_g];
						++_g;
						prevRef = ref;
						if(Object.prototype.hasOwnProperty.call(ref,callPart)) {
							ref = Reflect.field(ref,callPart);
						} else {
							ref = Reflect.getProperty(ref,callPart);
						}
						if(ref == null) {
							throw haxe_Exception.thrown(callPart + " not found");
						}
					}
					if(ref != null && Reflect.isFunction(ref)) {
						var paramValues = [];
						var _g = 0;
						while(_g < parsedCallParams.length) {
							var param = parsedCallParams[_g];
							++_g;
							var paramResult = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(param,context);
							paramValues.push(paramResult);
						}
						result = ref.apply(prevRef,paramValues);
					}
				}
			} else if(prop != null) {
				var trimmedProp = StringTools.trim(prop);
				if(trimmedProp.length > 0) {
					var propParts = trimmedProp.split(".");
					var propName = propParts.pop();
					var ref = context;
					var _g = 0;
					while(_g < propParts.length) {
						var propPart = propParts[_g];
						++_g;
						ref = Reflect.field(ref,propPart);
					}
					if(Object.prototype.hasOwnProperty.call(ref,propName)) {
						result = Reflect.field(ref,propName);
					} else {
						result = Reflect.getProperty(ref,propName);
					}
				}
			}
		}
	}
	if(r != null) {
		switch(operation._hx_index) {
		case 0:
			result += r;
			break;
		case 1:
			result -= r;
			break;
		case 2:
			result *= r;
			break;
		case 3:
			result /= r;
			break;
		case 4:
			result = result == r;
			break;
		case 5:
			result = result != r;
			break;
		case 6:
			result = result > r;
			break;
		case 7:
			result = result >= r;
			break;
		case 8:
			result = result < r;
			break;
		case 9:
			result = result <= r;
			break;
		case 10:
			result = result && r;
			break;
		case 11:
			result = result || r;
			break;
		}
	}
	return result;
};
haxe_ui_util_SimpleExpressionEvaluator.isNum = function(value) {
	var v = parseFloat(value);
	if(!isNaN(v)) {
		return isFinite(v);
	} else {
		return false;
	}
};
haxe_ui_util_SimpleExpressionEvaluator.isString = function(value) {
	if(StringTools.startsWith(value,"'") && StringTools.endsWith(value,"'")) {
		return true;
	}
	if(StringTools.startsWith(value,"\"") && StringTools.endsWith(value,"\"")) {
		return true;
	}
	return false;
};
haxe_ui_util_SimpleExpressionEvaluator.isBool = function(value) {
	value = value.toLowerCase();
	if(value != "true") {
		return value == "false";
	} else {
		return true;
	}
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.uncapitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
};
haxe_ui_util_StringUtil.capitalizeDelim = function(s,d) {
	var r = s;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var h = params.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			s = StringTools.replace(s,"${" + k + "}",params.h[k]);
		}
	}
	return s;
};
haxe_ui_util_StringUtil.rpad = function(s,count,c) {
	if(c == null) {
		c = " ";
	}
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		s += c;
	}
	return s;
};
haxe_ui_util_StringUtil.padDecimal = function(v,precision) {
	var s = v == null ? "null" : "" + v;
	if(precision == null || precision <= 0) {
		return s;
	}
	var n = s.indexOf(".");
	if(n == -1) {
		n = s.length;
		s += ".";
	}
	var delta = precision - (s.length - n - 1);
	return haxe_ui_util_StringUtil.rpad(s,delta,"0");
};
haxe_ui_util_StringUtil.countTokens = function(s,token) {
	if(s == null || s == "") {
		return 0;
	}
	return s.split(token).length - 1;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
haxe_ui_util_StyleUtil.componentProperty2StyleProperty = function(property) {
	return haxe_ui_util_StyleUtil.component2StyleEReg.map(property,function(re) {
		return "-" + re.matched(1).toLowerCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,timeMs) {
	var t = null;
	t = new haxe_ui_util_Timer(timeMs,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convertFrom = function(input) {
	var output = input;
	var _g = Type.typeof(input);
	if(_g._hx_index == 6) {
		if(_g.c == String) {
			var s = Std.string(input);
			if(s == "true" || s == "false") {
				output = s == "true";
			} else if(new EReg("^-?[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = Std.parseInt(s);
			} else if(new EReg("^-?[0-9]*\\.[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = parseFloat(s);
			}
		}
	}
	return output;
};
haxe_ui_util_TypeConverter.convertTo = function(input,type) {
	if(type == null) {
		return input;
	}
	switch(type.toLowerCase()) {
	case "bool":
		return Std.string(input) == "true";
	case "string":
		return Std.string(input);
	}
	return input;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:true,__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
var haxe_ui_util_Variant = {};
haxe_ui_util_Variant.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isImageData:"get_isImageData",get_isComponent:"get_isComponent",get_isDate:"get_isDate",get_isArray:"get_isArray",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isInt:"get_isInt",get_isFloat:"get_isFloat",get_isString:"get_isString"};
haxe_ui_util_Variant.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util_Variant.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 2:
		var s = this1.s;
		return s;
	case 3:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 4:
		var s = this1.s;
		return Std.string(s);
	case 5:
		var _g = this1.s;
		return "";
	case 6:
		var s = this1.s;
		return Std.string(s);
	case 7:
		var s = this1.s;
		return Std.string(s);
	case 8:
		var s = this1.s;
		return "";
	}
};
haxe_ui_util_Variant.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util_Variant.toFloat = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util_Variant.toInt = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s | 0;
	default:
		throw haxe_Exception.thrown("Variant Type Error " + Std.string(this1));
	}
};
haxe_ui_util_Variant.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		return true;
	case 1:
		var _g = this1.s;
		return true;
	default:
		return false;
	}
};
haxe_ui_util_Variant.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util_Variant.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util_Variant.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isArray = function(this1) {
	if(this1._hx_index == 4) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util_Variant.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDate = function(this1) {
	if(this1._hx_index == 7) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util_Variant.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromImageData = function(s) {
	return haxe_ui_util_VariantType.VT_ImageData(s);
};
haxe_ui_util_Variant.toImageData = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 8) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isImageData = function(this1) {
	if(this1._hx_index == 8) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util_Variant.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) + haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this1) + haxe_ui_util_Variant.toString(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) - haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(StringTools.replace(haxe_ui_util_Variant.toString(this1),haxe_ui_util_Variant.toString(rhs),""));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) * haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) / haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) >= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) >= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) <= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) <= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(-haxe_ui_util_Variant.toNumber(this1));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.invert = function(this1) {
	if(haxe_ui_util_Variant.get_isBool(this1)) {
		var v = haxe_ui_util_Variant.toBool(this1);
		v = !v;
		return haxe_ui_util_Variant.fromBool(v);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.eq = function(this1,rhs) {
	if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
		return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
	}
	return false;
};
haxe_ui_util_Variant.neq = function(this1,rhs) {
	return !haxe_ui_util_Variant.eq(this1,rhs);
};
haxe_ui_util_Variant.get_isNull = function(this1) {
	if(this1 != null) {
		return haxe_ui_util_Variant.toString(this1) == null;
	} else {
		return true;
	}
};
haxe_ui_util_Variant.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		var tmp;
		if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
			var f = parseFloat(("" + Std.string(r)));
			tmp = isNaN(f) == false;
		} else {
			tmp = false;
		}
		if(tmp) {
			if(Std.string(r).indexOf(".") != -1) {
				v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
			} else {
				v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
			}
		} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
			v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
		} else if(typeof(r) == "string") {
			v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else if(((r) instanceof Array)) {
			v = r;
		} else if(((r) instanceof Date)) {
			v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
		} else if(((r) instanceof HTMLImageElement)) {
			v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , HTMLImageElement));
		} else {
			v = r;
		}
	}
	return v;
};
haxe_ui_util_Variant.containsOnlyDigits = function(s) {
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != "." && c != "-") {
			return false;
		}
	}
	return true;
};
haxe_ui_util_Variant.toDynamic = function(v) {
	var d = v;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y = v.s;
			d = y;
			break;
		case 2:
			var y = v.s;
			d = y;
			break;
		case 3:
			var y = v.s;
			d = y;
			break;
		case 4:
			var y = v.s;
			d = y;
			break;
		case 5:
			var y = v.s;
			d = y;
			break;
		case 6:
			var y = v.s;
			d = y;
			break;
		case 7:
			var y = v.s;
			d = y;
			break;
		case 8:
			var y = v.s;
			d = y;
			break;
		}
	}
	return d;
};
var hxbit_ConvertField = function(path,from,to) {
	this.path = path;
	this.from = from;
	this.to = to;
};
$hxClasses["hxbit.ConvertField"] = hxbit_ConvertField;
hxbit_ConvertField.__name__ = "hxbit.ConvertField";
hxbit_ConvertField.prototype = {
	path: null
	,index: null
	,same: null
	,defaultValue: null
	,from: null
	,to: null
	,conv: null
	,__class__: hxbit_ConvertField
};
var hxbit_Convert = function(classPath,ourSchema,schema) {
	var ourMap_h = Object.create(null);
	var _g = 0;
	var _g1 = ourSchema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		ourMap_h[ourSchema.fieldsNames[i]] = ourSchema.fieldsTypes[i];
	}
	this.read = [];
	this.hadCID = !schema.isFinal;
	this.hasCID = !ourSchema.isFinal;
	var map_h = Object.create(null);
	var _g = 0;
	var _g1 = schema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		var oldT = schema.fieldsTypes[i];
		var newT = ourMap_h[schema.fieldsNames[i]];
		var c = new hxbit_ConvertField(classPath + "." + schema.fieldsNames[i],oldT,newT);
		if(newT != null) {
			if(hxbit_Convert.sameType(oldT,newT)) {
				c.same = true;
			} else {
				c.conv = hxbit_Convert.convFuns.h[c.path];
				c.defaultValue = hxbit_Convert.getDefault(newT);
			}
		}
		c.index = this.read.length;
		this.read.push(c);
		map_h[schema.fieldsNames[i]] = c;
	}
	this.write = [];
	var _g = 0;
	var _g1 = ourSchema.fieldsNames.length;
	while(_g < _g1) {
		var i = _g++;
		var newT = ourSchema.fieldsTypes[i];
		var c = map_h[ourSchema.fieldsNames[i]];
		if(c == null) {
			c = new hxbit_ConvertField(null,null,newT);
			c.defaultValue = hxbit_Convert.getDefault(newT);
		}
		this.write.push(c);
	}
};
$hxClasses["hxbit.Convert"] = hxbit_Convert;
hxbit_Convert.__name__ = "hxbit.Convert";
hxbit_Convert.sameType = function(a,b) {
	switch(a._hx_index) {
	case 0:
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 16:
			var _g = b.t;
			return true;
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 7:
		var _g = a.k;
		var _g1 = a.v;
		switch(b._hx_index) {
		case 7:
			var bk = b.k;
			var bv = b.v;
			var av = _g1;
			var ak = _g;
			if(hxbit_Convert.sameType(ak,bk)) {
				return hxbit_Convert.sameType(av,bv);
			} else {
				return false;
			}
			break;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 8:
		var _g = a.k;
		switch(b._hx_index) {
		case 8:
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 9:
		var _g = a.fields;
		switch(b._hx_index) {
		case 9:
			var fb = b.fields;
			var fa = _g;
			if(fa.length != fb.length) {
				return false;
			}
			var _g = 0;
			var _g1 = fa.length;
			while(_g < _g1) {
				var i = _g++;
				var a1 = fa[i];
				var b1 = fb[i];
				if(a1.name != b1.name || a1.opt != b1.opt || !hxbit_Convert.sameType(a1.type,b1.type)) {
					return false;
				}
			}
			return true;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 10:
		var _g = a.k;
		if(b._hx_index == 10) {
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		} else {
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b);
		}
		break;
	case 11:
		var _g = a.k;
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 11:
			var b1 = b.k;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 12:
		var _g = a.t;
		switch(b._hx_index) {
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		case 12:
			var b1 = b.t;
			var a1 = _g;
			return hxbit_Convert.sameType(a1,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	case 16:
		var _g = a.t;
		switch(b._hx_index) {
		case 0:
			return true;
		case 10:
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		default:
			return Type.enumEq(a,b);
		}
		break;
	default:
		if(b._hx_index == 10) {
			var b1 = b.k;
			return hxbit_Convert.sameType(a,b1);
		} else {
			return Type.enumEq(a,b);
		}
	}
};
hxbit_Convert.getDefault = function(t) {
	switch(t._hx_index) {
	case 0:
		return 0;
	case 1:
		return 0.;
	case 2:
		return false;
	case 5:
		var _g = t.name;
		return null;
	case 6:
		var _g = t.name;
		return null;
	case 7:
		var _g = t.v;
		var k = t.k;
		switch(k._hx_index) {
		case 0:
			return new haxe_ds_IntMap();
		case 3:
			return new haxe_ds_StringMap();
		default:
			return new haxe_ds_ObjectMap();
		}
		break;
	case 8:
		var _g = t.k;
		return [];
	case 9:
		var _g = t.fields;
		return null;
	case 10:
		var t1 = t.k;
		return hxbit_Convert.getDefault(t1);
	case 11:
		var _g = t.k;
		var this1 = new Array(0);
		return this1;
	case 12:
		var _g = t.t;
		return null;
	case 3:case 4:case 13:case 14:case 17:
		return null;
	case 15:
		var this1 = new haxe__$Int64__$_$_$Int64(0,0);
		return this1;
	case 16:
		var _g = t.t;
		return 0;
	}
};
hxbit_Convert.registerConverter = function(path,f) {
	hxbit_Convert.convFuns.h[path] = f;
};
hxbit_Convert.prototype = {
	read: null
	,write: null
	,hasCID: null
	,hadCID: null
	,toString: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.write.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var w = this.write[i];
			if(w.from == null) {
				_g.push("insert:" + Std.string(w.defaultValue));
			} else if(w.same) {
				_g.push(i == w.index ? "s" : "@" + w.index);
			} else {
				_g.push("@" + w.index + ":" + Std.string(w.to));
			}
		}
		return _g.toString();
	}
	,__class__: hxbit_Convert
};
var hxbit_RpcMode = $hxEnums["hxbit.RpcMode"] = { __ename__:true,__constructs__:null
	,All: {_hx_name:"All",_hx_index:0,__enum__:"hxbit.RpcMode",toString:$estr}
	,Clients: {_hx_name:"Clients",_hx_index:1,__enum__:"hxbit.RpcMode",toString:$estr}
	,Server: {_hx_name:"Server",_hx_index:2,__enum__:"hxbit.RpcMode",toString:$estr}
	,Owner: {_hx_name:"Owner",_hx_index:3,__enum__:"hxbit.RpcMode",toString:$estr}
	,Immediate: {_hx_name:"Immediate",_hx_index:4,__enum__:"hxbit.RpcMode",toString:$estr}
};
hxbit_RpcMode.__constructs__ = [hxbit_RpcMode.All,hxbit_RpcMode.Clients,hxbit_RpcMode.Server,hxbit_RpcMode.Owner,hxbit_RpcMode.Immediate];
var hxbit_PropTypeDesc = $hxEnums["hxbit.PropTypeDesc"] = { __ename__:true,__constructs__:null
	,PInt: {_hx_name:"PInt",_hx_index:0,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PFloat: {_hx_name:"PFloat",_hx_index:1,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PBool: {_hx_name:"PBool",_hx_index:2,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PString: {_hx_name:"PString",_hx_index:3,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PBytes: {_hx_name:"PBytes",_hx_index:4,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PSerializable: ($_=function(name) { return {_hx_index:5,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PSerializable",$_.__params__ = ["name"],$_)
	,PEnum: ($_=function(name) { return {_hx_index:6,name:name,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PEnum",$_.__params__ = ["name"],$_)
	,PMap: ($_=function(k,v) { return {_hx_index:7,k:k,v:v,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PMap",$_.__params__ = ["k","v"],$_)
	,PArray: ($_=function(k) { return {_hx_index:8,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PArray",$_.__params__ = ["k"],$_)
	,PObj: ($_=function(fields) { return {_hx_index:9,fields:fields,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PObj",$_.__params__ = ["fields"],$_)
	,PAlias: ($_=function(k) { return {_hx_index:10,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PAlias",$_.__params__ = ["k"],$_)
	,PVector: ($_=function(k) { return {_hx_index:11,k:k,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PVector",$_.__params__ = ["k"],$_)
	,PNull: ($_=function(t) { return {_hx_index:12,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PNull",$_.__params__ = ["t"],$_)
	,PUnknown: {_hx_name:"PUnknown",_hx_index:13,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PDynamic: {_hx_name:"PDynamic",_hx_index:14,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PInt64: {_hx_name:"PInt64",_hx_index:15,__enum__:"hxbit.PropTypeDesc",toString:$estr}
	,PFlags: ($_=function(t) { return {_hx_index:16,t:t,__enum__:"hxbit.PropTypeDesc",toString:$estr}; },$_._hx_name="PFlags",$_.__params__ = ["t"],$_)
	,PStruct: {_hx_name:"PStruct",_hx_index:17,__enum__:"hxbit.PropTypeDesc",toString:$estr}
};
hxbit_PropTypeDesc.__constructs__ = [hxbit_PropTypeDesc.PInt,hxbit_PropTypeDesc.PFloat,hxbit_PropTypeDesc.PBool,hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PBytes,hxbit_PropTypeDesc.PSerializable,hxbit_PropTypeDesc.PEnum,hxbit_PropTypeDesc.PMap,hxbit_PropTypeDesc.PArray,hxbit_PropTypeDesc.PObj,hxbit_PropTypeDesc.PAlias,hxbit_PropTypeDesc.PVector,hxbit_PropTypeDesc.PNull,hxbit_PropTypeDesc.PUnknown,hxbit_PropTypeDesc.PDynamic,hxbit_PropTypeDesc.PInt64,hxbit_PropTypeDesc.PFlags,hxbit_PropTypeDesc.PStruct];
var hxbit_Macros = function() { };
$hxClasses["hxbit.Macros"] = hxbit_Macros;
hxbit_Macros.__name__ = "hxbit.Macros";
var hxbit_Serializable = function() { };
$hxClasses["hxbit.Serializable"] = hxbit_Serializable;
hxbit_Serializable.__name__ = "hxbit.Serializable";
hxbit_Serializable.__isInterface__ = true;
hxbit_Serializable.prototype = {
	__uid: null
	,getCLID: null
	,serialize: null
	,unserializeInit: null
	,unserialize: null
	,getSerializeSchema: null
	,__class__: hxbit_Serializable
};
var hxbit_Serializer = function() {
	this.usedClasses = [];
	if(hxbit_Serializer.CLIDS == null) {
		hxbit_Serializer.initClassIDS();
	}
};
$hxClasses["hxbit.Serializer"] = hxbit_Serializer;
hxbit_Serializer.__name__ = "hxbit.Serializer";
hxbit_Serializer.resetCounters = function() {
	hxbit_Serializer.UID = 0;
	hxbit_Serializer.SEQ = 0;
};
hxbit_Serializer.allocUID = function() {
	return hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
};
hxbit_Serializer.registerClass = function(c) {
	if(hxbit_Serializer.CLIDS != null) {
		throw haxe_Exception.thrown("Too late to register class");
	}
	var idx = hxbit_Serializer.CLASSES.length;
	hxbit_Serializer.CLASSES.push(c);
	return idx;
};
hxbit_Serializer.hash = function(name) {
	var v = 1;
	var _g = 0;
	var _g1 = name.length;
	while(_g < _g1) {
		var i = _g++;
		v = v * 223 + name.charCodeAt(i) | 0;
	}
	v = 1 + (v & 1073741823) % 65423;
	return v;
};
hxbit_Serializer.initClassIDS = function() {
	var cl = hxbit_Serializer.CLASSES;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cl.length) {
		var c = cl[_g1];
		++_g1;
		_g.push([]);
	}
	var subClasses = _g;
	var isSub = [];
	var _g = 0;
	var _g1 = cl.length;
	while(_g < _g1) {
		var i = _g++;
		var c = cl[i];
		while(true) {
			c = c.__super__;
			if(c == null) {
				break;
			}
			var idx = cl.indexOf(c);
			if(idx < 0) {
				break;
			}
			subClasses[idx].push(i);
			isSub[i] = true;
		}
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = hxbit_Serializer.CLASSES.length;
	while(_g1 < _g2) {
		var i = _g1++;
		if(subClasses[i].length == 0 && !isSub[i]) {
			_g.push(0);
		} else {
			var name = cl[i].__name__;
			var v = 1;
			var _g3 = 0;
			var _g4 = name.length;
			while(_g3 < _g4) {
				var i1 = _g3++;
				v = v * 223 + name.charCodeAt(i1) | 0;
			}
			v = 1 + (v & 1073741823) % 65423;
			_g.push(v);
		}
	}
	hxbit_Serializer.CLIDS = _g;
	hxbit_Serializer.CL_BYID = [];
	var _g = 0;
	var _g1 = hxbit_Serializer.CLIDS.length;
	while(_g < _g1) {
		var i = _g++;
		var cid = hxbit_Serializer.CLIDS[i];
		if(cid == 0) {
			continue;
		}
		if(hxbit_Serializer.CL_BYID[cid] != null) {
			var c = hxbit_Serializer.CL_BYID[cid];
			throw haxe_Exception.thrown("Conflicting CLID between " + c.__name__ + " and " + cl[i].__name__);
		}
		hxbit_Serializer.CL_BYID[cid] = cl[i];
	}
};
hxbit_Serializer.getSignature = function() {
	if(hxbit_Serializer.__SIGN != null) {
		return hxbit_Serializer.__SIGN;
	}
	var s = new hxbit_Serializer();
	s.begin();
	var v = hxbit_Serializer.CLASSES.length;
	if(v >= 0 && v < 128) {
		s.out.addByte(v);
	} else {
		s.out.addByte(128);
		s.out.addInt32(v);
	}
	var _g = 0;
	var _g1 = hxbit_Serializer.CLASSES.length;
	while(_g < _g1) {
		var i = _g++;
		var v = hxbit_Serializer.CLIDS[i];
		if(v >= 0 && v < 128) {
			s.out.addByte(v);
		} else {
			s.out.addByte(128);
			s.out.addInt32(v);
		}
		var v1 = Object.create(hxbit_Serializer.CLASSES[i].prototype).getSerializeSchema().get_checkSum();
		s.out.addInt32(v1);
	}
	return hxbit_Serializer.__SIGN = haxe_crypto_Md5.make(s.end());
};
hxbit_Serializer.isClassFinal = function(index) {
	return hxbit_Serializer.CLIDS[index] == 0;
};
hxbit_Serializer.save = function(value) {
	var s = new hxbit_Serializer();
	s.beginSave();
	s.addKnownRef(value);
	return s.endSave();
};
hxbit_Serializer.load = function(bytes,cl) {
	var s = new hxbit_Serializer();
	s.beginLoad(bytes);
	var value = s.getRef(cl,cl.__clid);
	s.endLoad();
	return value;
};
hxbit_Serializer.prototype = {
	refs: null
	,remapObjs: null
	,newObjects: null
	,out: null
	,input: null
	,inPos: null
	,usedClasses: null
	,convert: null
	,mapIndexes: null
	,knownStructs: null
	,set_remapIds: function(b) {
		this.remapObjs = b ? new haxe_ds_ObjectMap() : null;
		return b;
	}
	,get_remapIds: function() {
		return this.remapObjs != null;
	}
	,remap: function(s) {
		if(this.remapObjs.h.__keys__[s.__id__] != null) {
			return;
		}
		this.remapObjs.set(s,s.__uid);
		s.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	}
	,begin: function() {
		this.out = new haxe_io_BytesBuffer();
		this.refs = new haxe_ds_IntMap();
		this.knownStructs = [];
	}
	,end: function() {
		var bytes = this.out.getBytes();
		this.out = null;
		this.refs = null;
		this.knownStructs = null;
		return bytes;
	}
	,setInput: function(data,pos) {
		this.input = data;
		this.inPos = pos;
		if(this.refs == null) {
			this.refs = new haxe_ds_IntMap();
		}
		if(this.knownStructs == null) {
			this.knownStructs = [];
		}
	}
	,serialize: function(s) {
		this.begin();
		this.addKnownRef(s);
		return this.out.getBytes();
	}
	,unserialize: function(data,c,startPos) {
		if(startPos == null) {
			startPos = 0;
		}
		this.refs = new haxe_ds_IntMap();
		this.knownStructs = [];
		this.setInput(data,startPos);
		return this.getRef(c,c.__clid);
	}
	,getByte: function() {
		return this.input.b[this.inPos++];
	}
	,addByte: function(v) {
		this.out.addByte(v);
	}
	,addInt: function(v) {
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
	}
	,addInt32: function(v) {
		this.out.addInt32(v);
	}
	,addInt64: function(v) {
		this.out.addInt64(v);
	}
	,addFloat: function(v) {
		this.out.addFloat(v);
	}
	,addDouble: function(v) {
		this.out.addDouble(v);
	}
	,addBool: function(v) {
		this.out.addByte(v ? 1 : 0);
	}
	,addArray: function(a,f) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var v = a.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < a.length) {
			var v = a[_g];
			++_g;
			f(v);
		}
	}
	,addVector: function(a,f) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var v = a.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < a.length) {
			var v = a[_g];
			++_g;
			f(v);
		}
	}
	,getArray: function(f) {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var a = [];
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			a[i] = f();
		}
		return a;
	}
	,getVector: function(f) {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var this1 = new Array(len);
		var a = this1;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			a[i] = f();
		}
		return a;
	}
	,addMap: function(a,fk,ft) {
		if(a == null) {
			this.out.addByte(0);
			return;
		}
		var _g = [];
		var k = a.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			_g.push(k1);
		}
		var keys = _g;
		var v = keys.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		var _g = 0;
		while(_g < keys.length) {
			var k = keys[_g];
			++_g;
			fk(k);
			ft(a.get(k));
		}
	}
	,getBool: function() {
		return this.input.b[this.inPos++] != 0;
	}
	,getInt: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		return v;
	}
	,skip: function(size) {
		this.inPos += size;
	}
	,getInt32: function() {
		var v = this.input.getInt32(this.inPos);
		this.inPos += 4;
		return v;
	}
	,getInt64: function() {
		var v = this.input.getInt64(this.inPos);
		this.inPos += 8;
		return v;
	}
	,getDouble: function() {
		var v = this.input.getDouble(this.inPos);
		this.inPos += 8;
		return v;
	}
	,getFloat: function() {
		var v = this.input.getFloat(this.inPos);
		this.inPos += 4;
		return v;
	}
	,addString: function(s) {
		if(s == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
	}
	,addBytes: function(b) {
		if(b == null) {
			this.out.addByte(0);
		} else {
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
	}
	,addBytesSub: function(b,pos,len) {
		if(b == null) {
			this.out.addByte(0);
		} else {
			var v = len + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.addBytes(b,pos,len);
		}
	}
	,getString: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var s = this.input.getString(this.inPos,len);
		this.inPos += len;
		return s;
	}
	,getBytes: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			return null;
		}
		--len;
		var s = this.input.sub(this.inPos,len);
		this.inPos += len;
		return s;
	}
	,getDynamic: function() {
		var _g = this.input.b[this.inPos++];
		switch(_g) {
		case 0:
			return null;
		case 1:
			return false;
		case 2:
			return true;
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 4:
			var v = this.input.getFloat(this.inPos);
			this.inPos += 4;
			return v;
		case 5:
			var o = { };
			var _g1 = 0;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var _g2 = v;
			while(_g1 < _g2) {
				var i = _g1++;
				var v = this.input.b[this.inPos++];
				if(v == 128) {
					v = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v;
				var field;
				if(len == 0) {
					field = null;
				} else {
					--len;
					var s = this.input.getString(this.inPos,len);
					this.inPos += len;
					field = s;
				}
				o[field] = this.getDynamic();
			}
			return o;
		case 6:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 7:
			var _g1 = [];
			var _g2 = 0;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var _g3 = v;
			while(_g2 < _g3) {
				var i = _g2++;
				_g1.push(this.getDynamic());
			}
			return _g1;
		case 8:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.sub(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		default:
			var x = _g;
			throw haxe_Exception.thrown("Invalid dynamic prefix " + x);
		}
	}
	,addDynamic: function(v) {
		if(v == null) {
			this.out.addByte(0);
			return;
		}
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 1:
			this.out.addByte(3);
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 2:
			this.out.addByte(4);
			this.out.addFloat(v);
			break;
		case 3:
			this.out.addByte(v ? 2 : 1);
			break;
		case 4:
			var fields = Reflect.fields(v);
			this.out.addByte(5);
			var v1 = fields.length;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				if(f == null) {
					this.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(f);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						this.out.addByte(v1);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v1);
					}
					this.out.add(b);
				}
				this.addDynamic(Reflect.field(v,f));
			}
			break;
		case 6:
			var c = _g.c;
			switch(c) {
			case Array:
				this.out.addByte(7);
				var a = v;
				var v1 = a.length;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g1 = 0;
				while(_g1 < a.length) {
					var v1 = a[_g1];
					++_g1;
					this.addDynamic(v1);
				}
				break;
			case String:
				this.out.addByte(6);
				var s = v;
				if(s == null) {
					this.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(s);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						this.out.addByte(v1);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v1);
					}
					this.out.add(b);
				}
				break;
			case haxe_io_Bytes:
				this.out.addByte(8);
				var b = v;
				if(b == null) {
					this.out.addByte(0);
				} else {
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						this.out.addByte(v);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v);
					}
					this.out.add(b);
				}
				break;
			default:
				throw haxe_Exception.thrown("Unsupported dynamic " + Std.string(c));
			}
			break;
		default:
			var t = _g;
			throw haxe_Exception.thrown("Unsupported dynamic " + Std.string(t));
		}
	}
	,addCLID: function(clid) {
		this.out.addByte(clid >> 8);
		this.out.addByte(clid & 255);
	}
	,getCLID: function() {
		return this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
	}
	,addStruct: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		var c = js_Boot.__implements(s,hxbit_Serializable) ? s : null;
		if(c != null) {
			this.out.addByte(1);
			this.addAnyRef(c);
			return;
		}
		var index = this.knownStructs.indexOf(s);
		if(index >= 0) {
			this.out.addByte(2);
			if(index >= 0 && index < 128) {
				this.out.addByte(index);
			} else {
				this.out.addByte(128);
				this.out.addInt32(index);
			}
			return;
		}
		this.knownStructs.push(s);
		this.out.addByte(3);
		var c = js_Boot.getClass(s);
		if(c == null) {
			throw haxe_Exception.thrown(Std.string(s) + " does not have a class ?");
		}
		var s1 = c.__name__;
		if(s1 == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s1);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
		s.customSerialize(this);
		this.out.addByte(255);
	}
	,getStruct: function() {
		switch(this.input.b[this.inPos++]) {
		case 0:
			return null;
		case 1:
			return this.getAnyRef();
		case 2:
			var tmp = this.knownStructs;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return tmp[v];
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			var cname;
			if(len == 0) {
				cname = null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				cname = s;
			}
			var cl = $hxClasses[cname];
			if(cl == null) {
				throw haxe_Exception.thrown("Missing struct class " + cname);
			}
			var s = Object.create(cl.prototype);
			this.knownStructs.push(s);
			s.customUnserialize(this);
			if(this.input.b[this.inPos++] != 255) {
				throw haxe_Exception.thrown("Invalid customUnserialize for " + Std.string(s));
			}
			return s;
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,addObjRef: function(s) {
		var v = s.__uid;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
	}
	,getObjRef: function() {
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		return v;
	}
	,addAnyRef: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		if(this.remapObjs != null) {
			this.remap(s);
		}
		this.addObjRef(s);
		if(this.refs.h[s.__uid] != null) {
			return;
		}
		this.refs.h[s.__uid] = s;
		var index = s.getCLID();
		this.usedClasses[index] = true;
		this.out.addByte(index >> 8);
		this.out.addByte(index & 255);
		s.serialize(this);
	}
	,addKnownRef: function(s) {
		if(s == null) {
			this.out.addByte(0);
			return;
		}
		if(this.remapObjs != null) {
			this.remap(s);
		}
		this.addObjRef(s);
		if(this.refs.h[s.__uid] != null) {
			return;
		}
		this.refs.h[s.__uid] = s;
		var index = s.getCLID();
		this.usedClasses[index] = true;
		var clid = hxbit_Serializer.CLIDS[index];
		if(clid != 0) {
			this.out.addByte(clid >> 8);
			this.out.addByte(clid & 255);
		}
		s.serialize(this);
	}
	,getAnyRef: function() {
		var id = this.getObjRef();
		if(id == 0) {
			return null;
		}
		if(this.refs.h[id] != null) {
			return this.refs.h[id];
		}
		var rid = id & 16777215;
		if(hxbit_Serializer.UID < rid) {
			hxbit_Serializer.UID = rid;
		}
		var clidx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
		if(this.mapIndexes != null) {
			clidx = this.mapIndexes[clidx];
		}
		var i = Object.create(hxbit_Serializer.CLASSES[clidx].prototype);
		if(this.newObjects != null) {
			this.newObjects.push(i);
		}
		i.__uid = id;
		i.unserializeInit();
		this.refs.h[id] = i;
		if(this.convert != null && this.convert[clidx] != null) {
			this.convertRef(i,this.convert[clidx]);
		} else {
			i.unserialize(this);
		}
		return i;
	}
	,getRef: function(c,clidx) {
		var id = this.getObjRef();
		if(id == 0) {
			return null;
		}
		if(this.refs.h[id] != null) {
			return this.refs.h[id];
		}
		var rid = id & 16777215;
		if(hxbit_Serializer.UID < rid) {
			hxbit_Serializer.UID = rid;
		}
		if(this.convert != null && this.convert[clidx] != null) {
			var conv = this.convert[clidx];
			if(conv.hadCID) {
				var realIdx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
				if(conv.hasCID) {
					c = hxbit_Serializer.CL_BYID[realIdx];
					clidx = c.__clid;
				}
			}
		} else if(hxbit_Serializer.CLIDS[clidx] != 0) {
			var realIdx = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
			c = hxbit_Serializer.CL_BYID[realIdx];
			if(this.convert != null) {
				clidx = c.__clid;
			}
		}
		var i = Object.create(c.prototype);
		if(this.newObjects != null) {
			this.newObjects.push(i);
		}
		i.__uid = id;
		i.unserializeInit();
		this.refs.h[id] = i;
		if(this.convert != null && this.convert[clidx] != null) {
			this.convertRef(i,this.convert[clidx]);
		} else {
			i.unserialize(this);
		}
		return i;
	}
	,getKnownRef: function(c) {
		return this.getRef(c,c.__clid);
	}
	,beginSave: function() {
		this.begin();
		this.usedClasses = [];
	}
	,endSave: function(savePosition) {
		if(savePosition == null) {
			savePosition = 0;
		}
		var content = this.end();
		this.begin();
		var classes = [];
		var schemas = [];
		var sidx = hxbit_Serializer.CLASSES.indexOf(hxbit_Schema);
		var _g = 0;
		var _g1 = this.usedClasses.length;
		while(_g < _g1) {
			var i = _g++;
			if(!this.usedClasses[i] || i == sidx) {
				continue;
			}
			var c = hxbit_Serializer.CLASSES[i];
			var schema = Object.create(c.prototype).getSerializeSchema();
			schemas.push(schema);
			classes.push(i);
			this.addKnownRef(schema);
			this.refs.remove(schema.__uid);
		}
		var schemaData = this.end();
		this.begin();
		this.out.addBytes(content,0,savePosition);
		var b = haxe_io_Bytes.ofString("HXS");
		var v = b.length + 1;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		this.out.add(b);
		this.out.addByte(1);
		var _g = 0;
		var _g1 = classes.length;
		while(_g < _g1) {
			var i = _g++;
			var index = classes[i];
			var c = hxbit_Serializer.CLASSES[index];
			var s = c.__name__;
			if(s == null) {
				this.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(s);
				var v = b.length + 1;
				if(v >= 0 && v < 128) {
					this.out.addByte(v);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v);
				}
				this.out.add(b);
			}
			this.out.addByte(index >> 8);
			this.out.addByte(index & 255);
			var v1 = schemas[i].get_checkSum();
			this.out.addInt32(v1);
		}
		var s = null;
		if(s == null) {
			this.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				this.out.addByte(v);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v);
			}
			this.out.add(b);
		}
		var v = schemaData.length;
		if(v >= 0 && v < 128) {
			this.out.addByte(v);
		} else {
			this.out.addByte(128);
			this.out.addInt32(v);
		}
		this.out.add(schemaData);
		this.out.addBytes(content,savePosition,content.length - savePosition);
		return this.end();
	}
	,beginLoad: function(bytes,position) {
		if(position == null) {
			position = 0;
		}
		this.setInput(bytes,position);
		var classByName_h = Object.create(null);
		var schemas = [];
		var mapIndexes = [];
		var indexes = [];
		var needConvert = false;
		var needReindex = false;
		var _g = 0;
		var _g1 = hxbit_Serializer.CLASSES.length;
		while(_g < _g1) {
			var i = _g++;
			var c = hxbit_Serializer.CLASSES[i];
			classByName_h[c.__name__] = i;
			mapIndexes[i] = i;
		}
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = this.input.getString(this.inPos,len);
			this.inPos += len;
			tmp = s;
		}
		if(tmp != "HXS") {
			throw haxe_Exception.thrown("Invalid HXS data");
		}
		var version = this.input.b[this.inPos++];
		if(version != 1) {
			throw haxe_Exception.thrown("Unsupported HXS version " + version);
		}
		while(true) {
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			var clname;
			if(len == 0) {
				clname = null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				clname = s;
			}
			if(clname == null) {
				break;
			}
			var index = this.input.b[this.inPos++] << 8 | this.input.b[this.inPos++];
			var v1 = this.input.getInt32(this.inPos);
			this.inPos += 4;
			var crc = v1;
			var ourClassIndex = classByName_h[clname];
			if(ourClassIndex == null) {
				throw haxe_Exception.thrown("Missing class " + clname + " found in HXS data");
			}
			var ourSchema = Object.create(hxbit_Serializer.CLASSES[ourClassIndex].prototype).getSerializeSchema();
			if(ourSchema.get_checkSum() != crc) {
				needConvert = true;
				schemas[index] = ourSchema;
			}
			if(index != ourClassIndex) {
				needReindex = true;
				mapIndexes[index] = ourClassIndex;
			}
			indexes.push(index);
		}
		var v = this.input.b[this.inPos++];
		if(v == 128) {
			v = this.input.getInt32(this.inPos);
			this.inPos += 4;
		}
		var schemaDataSize = v;
		if(needConvert) {
			this.convert = [];
			var _g = 0;
			while(_g < indexes.length) {
				var index = indexes[_g];
				++_g;
				var ourSchema = schemas[index];
				var c = hxbit_Schema;
				var schema = this.getRef(c,c.__clid);
				this.refs.remove(schema.__uid);
				if(ourSchema != null) {
					var c1 = hxbit_Serializer.CLASSES[mapIndexes[index]];
					this.convert[mapIndexes[index]] = new hxbit_Convert(c1.__name__,ourSchema,schema);
				}
			}
		} else {
			this.inPos += schemaDataSize;
		}
		if(needReindex) {
			this.mapIndexes = mapIndexes;
		}
	}
	,endLoad: function() {
		this.convert = null;
		this.mapIndexes = null;
		this.setInput(null,0);
	}
	,convertRef: function(i,c) {
		var this1 = new Array(c.read.length);
		var values = this1;
		var writePos = 0;
		var _g = 0;
		var _g1 = c.read;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			values[r.index] = this.readValue(r.from);
		}
		var oldOut = this.out;
		this.out = new haxe_io_BytesBuffer();
		var _g = 0;
		var _g1 = c.write;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			var v;
			if(w.from == null) {
				v = w.defaultValue;
			} else {
				v = values[w.index];
				if(!w.same) {
					if(v == null) {
						v = w.defaultValue;
					} else if(w.conv != null) {
						v = w.conv(v);
					} else {
						v = this.convertValue(w.path,v,w.from,w.to);
					}
				}
			}
			this.writeValue(v,w.to);
		}
		var bytes = this.out.getBytes();
		this.out = oldOut;
		var oldIn = this.input;
		var oldPos = this.inPos;
		this.setInput(bytes,0);
		i.unserialize(this);
		this.setInput(oldIn,oldPos);
	}
	,isNullable: function(t) {
		switch(t._hx_index) {
		case 0:case 1:case 2:
			return false;
		default:
			return true;
		}
	}
	,convertValue: function(path,v,from,to) {
		if(v == null) {
			return hxbit_Convert.getDefault(to);
		}
		if(hxbit_Convert.sameType(from,to)) {
			return v;
		}
		var conv = hxbit_Convert.convFuns.h[path];
		if(conv != null) {
			return conv(v);
		}
		switch(from._hx_index) {
		case 0:
			switch(to._hx_index) {
			case 1:
				return v * 1.0;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 1:
			switch(to._hx_index) {
			case 0:
				return v | 0;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 2:
			switch(to._hx_index) {
			case 0:
				if(v) {
					return 1;
				} else {
					return 0;
				}
				break;
			case 1:
				if(v) {
					return 1.;
				} else {
					return 0.;
				}
				break;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 5:
			var _g = from.name;
			switch(to._hx_index) {
			case 5:
				var to1 = to.name;
				var value = v;
				var v2 = js_Boot.__downcastCheck(value,$hxClasses[to1]) ? value : null;
				if(v2 != null) {
					return v2;
				}
				break;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 8:
			var _g = from.k;
			switch(to._hx_index) {
			case 8:
				var to1 = to.k;
				var from1 = _g;
				var arr = v;
				var _g = [];
				var _g1 = 0;
				while(_g1 < arr.length) {
					var v1 = arr[_g1];
					++_g1;
					_g.push(this.convertValue(path + "[]",v1,from1,to1));
				}
				return _g;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 9:
			var _g = from.fields;
			switch(to._hx_index) {
			case 9:
				var obj2 = to.fields;
				var obj1 = _g;
				var v2 = { };
				var _g = 0;
				while(_g < obj2.length) {
					var f = obj2[_g];
					++_g;
					var found = false;
					var field = null;
					var _g1 = 0;
					while(_g1 < obj1.length) {
						var f2 = obj1[_g1];
						++_g1;
						if(f2.name == f.name) {
							found = true;
							field = this.convertValue(path + "." + f2.name,Reflect.field(v,f2.name),f2.type,f.type);
							break;
						}
					}
					if(!found) {
						if(f.opt) {
							continue;
						}
						field = hxbit_Convert.getDefault(f.type);
					} else if(field == null && f.opt) {
						continue;
					}
					v2[f.name] = field;
				}
				return v2;
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
			break;
		case 10:
			var _g = from.k;
			switch(to._hx_index) {
			case 10:
				var _g1 = to.k;
				var from1 = _g;
				return this.convertValue(path,v,from1,to);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
				var from1 = _g;
				return this.convertValue(path,v,from1,to);
			}
			break;
		case 12:
			var from1 = from.t;
			return this.convertValue(path,v,from1,to);
		default:
			switch(to._hx_index) {
			case 10:
				var to1 = to.k;
				return this.convertValue(path,v,from,to1);
			case 12:
				var to1 = to.t;
				return this.convertValue(path,v,from,to1);
			default:
			}
		}
		throw haxe_Exception.thrown("Cannot convert " + path + "(" + Std.string(v) + ") from " + Std.string(from) + " to " + Std.string(to));
	}
	,getEnumClass: function(name) {
		var cl = hxbit_Serializer.ENUM_CLASSES.h[name];
		if(cl != null) {
			return cl;
		}
		var path = name.split(".").join("_");
		path = path.charAt(0).toUpperCase() + HxOverrides.substr(path,1,null);
		cl = $hxClasses["hxbit.enumSer." + path];
		if(cl != null) {
			hxbit_Serializer.ENUM_CLASSES.h[name] = cl;
		}
		return cl;
	}
	,readValue: function(t) {
		var _gthis = this;
		switch(t._hx_index) {
		case 0:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 1:
			var v = this.input.getFloat(this.inPos);
			this.inPos += 4;
			return v;
		case 2:
			return this.input.b[this.inPos++] != 0;
		case 3:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.getString(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 4:
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var s = this.input.sub(this.inPos,len);
				this.inPos += len;
				return s;
			}
			break;
		case 5:
			var name = t.name;
			var c = $hxClasses[name];
			return this.getRef(c,c.__clid);
		case 6:
			var name = t.name;
			var ser = this.getEnumClass(name);
			if(ser == null) {
				var e = $hxEnums[name];
				var tmp;
				if(e != null) {
					var o = haxe_rtti_Meta.getType(e);
					tmp = Object.prototype.hasOwnProperty.call(o,"skipSerialize");
				} else {
					tmp = false;
				}
				if(tmp) {
					var v = this.input.b[this.inPos++];
					if(v == 128) {
						v = this.input.getInt32(this.inPos);
						this.inPos += 4;
					}
					return null;
				}
				throw haxe_Exception.thrown("No enum unserializer found for " + name);
			}
			return ser.doUnserialize(this);
		case 7:
			var k = t.k;
			var v = t.v;
			switch(k._hx_index) {
			case 0:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_IntMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.h[k1] = v1;
					}
					tmp = m;
				}
				return tmp;
			case 3:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.h[k1] = v1;
					}
					tmp = m;
				}
				return tmp;
			case 6:
				var _g = k.name;
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				if(len == 0) {
					return null;
				}
				var m = new haxe_ds_EnumValueMap();
				while(--len > 0) {
					var k1 = this.readValue(k);
					var v1 = this.readValue(v);
					m.set(k1,v1);
				}
				return m;
			default:
				var v1 = this.input.b[this.inPos++];
				if(v1 == 128) {
					v1 = this.input.getInt32(this.inPos);
					this.inPos += 4;
				}
				var len = v1;
				var tmp;
				if(len == 0) {
					tmp = null;
				} else {
					var m = new haxe_ds_ObjectMap();
					while(--len > 0) {
						var k1 = _gthis.readValue(k);
						var v1 = _gthis.readValue(v);
						m.set(k1,v1);
					}
					tmp = m;
				}
				return tmp;
			}
			break;
		case 8:
			var t1 = t.k;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var a = [];
				var _g = 0;
				var _g1 = len;
				while(_g < _g1) {
					var i = _g++;
					a[i] = _gthis.readValue(t1);
				}
				return a;
			}
			break;
		case 9:
			var fields = t.fields;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var bits = v;
			if(bits == 0) {
				return null;
			}
			var o = { };
			--bits;
			var _g = [];
			var _g1 = 0;
			while(_g1 < fields.length) {
				var f = fields[_g1];
				++_g1;
				if(this.isNullable(f.type)) {
					_g.push(f);
				}
			}
			var nullables = _g;
			var _g = 0;
			while(_g < fields.length) {
				var f = fields[_g];
				++_g;
				var nidx = nullables.indexOf(f);
				if(nidx >= 0 && (bits & 1 << nidx) == 0) {
					continue;
				}
				o[f.name] = this.readValue(f.type);
			}
			return o;
		case 10:
			var t1 = t.k;
			return this.readValue(t1);
		case 11:
			var t1 = t.k;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			var len = v;
			if(len == 0) {
				return null;
			} else {
				--len;
				var this1 = new Array(len);
				var a = this1;
				var _g = 0;
				var _g1 = len;
				while(_g < _g1) {
					var i = _g++;
					a[i] = _gthis.readValue(t1);
				}
				return a;
			}
			break;
		case 12:
			var t1 = t.t;
			if(this.input.b[this.inPos++] == 0) {
				return null;
			} else {
				return this.readValue(t1);
			}
			break;
		case 13:
			throw haxe_Exception.thrown("assert");
		case 14:
			return this.getDynamic();
		case 15:
			var v = this.input.getInt64(this.inPos);
			this.inPos += 8;
			return v;
		case 16:
			var _g = t.t;
			var v = this.input.b[this.inPos++];
			if(v == 128) {
				v = this.input.getInt32(this.inPos);
				this.inPos += 4;
			}
			return v;
		case 17:
			return this.getStruct();
		}
	}
	,writeValue: function(v,t) {
		var _gthis = this;
		switch(t._hx_index) {
		case 0:
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 1:
			this.out.addFloat(v);
			break;
		case 2:
			this.out.addByte(v ? 1 : 0);
			break;
		case 3:
			var s = v;
			if(s == null) {
				this.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(s);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				this.out.add(b);
			}
			break;
		case 4:
			var b = v;
			if(b == null) {
				this.out.addByte(0);
			} else {
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				this.out.add(b);
			}
			break;
		case 5:
			var _g = t.name;
			this.addKnownRef(v);
			break;
		case 6:
			var name = t.name;
			var ser = this.getEnumClass(name);
			if(ser == null) {
				throw haxe_Exception.thrown("No enum unserializer found for " + name);
			}
			ser.doSerialize(this,v);
			break;
		case 7:
			var k = t.k;
			var t1 = t.v;
			switch(k._hx_index) {
			case 0:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var k1 = v1.keys();
					while(k1.hasNext()) {
						var k2 = k1.next();
						_g.push(k2);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1],t1);
					}
				}
				break;
			case 3:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var h = v1.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k1 = k_keys[k_current++];
						_g.push(k1);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1],t1);
					}
				}
				break;
			case 6:
				var _g = k.name;
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
					return;
				}
				var _g = [];
				var k1 = v1.keys();
				while(k1.hasNext()) {
					var k2 = k1.next();
					_g.push(k2);
				}
				var keys = _g;
				var v2 = keys.length + 1;
				if(v2 >= 0 && v2 < 128) {
					this.out.addByte(v2);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v2);
				}
				var _g = 0;
				while(_g < keys.length) {
					var vk = keys[_g];
					++_g;
					this.writeValue(vk,k);
					this.writeValue(v1.get(vk),t1);
				}
				break;
			default:
				var v1 = v;
				if(v1 == null) {
					this.out.addByte(0);
				} else {
					var _g = [];
					var k1 = v1.keys();
					while(k1.hasNext()) {
						var k2 = k1.next();
						_g.push(k2);
					}
					var keys = _g;
					var v2 = keys.length + 1;
					if(v2 >= 0 && v2 < 128) {
						this.out.addByte(v2);
					} else {
						this.out.addByte(128);
						this.out.addInt32(v2);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k1 = keys[_g];
						++_g;
						_gthis.writeValue(k1,k);
						_gthis.writeValue(v1.h[k1.__id__],t1);
					}
				}
			}
			break;
		case 8:
			var t1 = t.k;
			var a = v;
			if(a == null) {
				this.out.addByte(0);
			} else {
				var v1 = a.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < a.length) {
					var v1 = a[_g];
					++_g;
					_gthis.writeValue(v1,t1);
				}
			}
			break;
		case 9:
			var fields = t.fields;
			if(v == null) {
				this.out.addByte(0);
			} else {
				var fbits = 0;
				var _g = [];
				var _g1 = 0;
				while(_g1 < fields.length) {
					var f = fields[_g1];
					++_g1;
					if(this.isNullable(f.type)) {
						_g.push(f);
					}
				}
				var nullables = _g;
				var _g = 0;
				var _g1 = nullables.length;
				while(_g < _g1) {
					var i = _g++;
					if(Reflect.field(v,nullables[i].name) != null) {
						fbits |= 1 << i;
					}
				}
				var v1 = fbits + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < fields.length) {
					var f = fields[_g];
					++_g;
					var nidx = nullables.indexOf(f);
					if(nidx >= 0 && (fbits & 1 << nidx) == 0) {
						continue;
					}
					this.writeValue(Reflect.field(v,f.name),f.type);
				}
			}
			break;
		case 10:
			var t1 = t.k;
			this.writeValue(v,t1);
			break;
		case 11:
			var t1 = t.k;
			var a = v;
			if(a == null) {
				this.out.addByte(0);
			} else {
				var v1 = a.length + 1;
				if(v1 >= 0 && v1 < 128) {
					this.out.addByte(v1);
				} else {
					this.out.addByte(128);
					this.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < a.length) {
					var v1 = a[_g];
					++_g;
					_gthis.writeValue(v1,t1);
				}
			}
			break;
		case 12:
			var t1 = t.t;
			if(v == null) {
				this.out.addByte(0);
			} else {
				this.out.addByte(1);
				this.writeValue(v,t1);
			}
			break;
		case 13:
			throw haxe_Exception.thrown("assert");
		case 14:
			this.addDynamic(v);
			break;
		case 15:
			this.out.addInt64(v);
			break;
		case 16:
			var _g = t.t;
			var v1 = v;
			if(v1 >= 0 && v1 < 128) {
				this.out.addByte(v1);
			} else {
				this.out.addByte(128);
				this.out.addInt32(v1);
			}
			break;
		case 17:
			this.addStruct(v);
			break;
		}
	}
	,__class__: hxbit_Serializer
	,__properties__: {set_remapIds:"set_remapIds",get_remapIds:"get_remapIds"}
};
var hxbit_Schema = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.fieldsNames = [];
	this.fieldsTypes = [];
};
$hxClasses["hxbit.Schema"] = hxbit_Schema;
hxbit_Schema.__name__ = "hxbit.Schema";
hxbit_Schema.__interfaces__ = [hxbit_Serializable];
hxbit_Schema.prototype = {
	isFinal: null
	,fieldsNames: null
	,fieldsTypes: null
	,get_checkSum: function() {
		var s = new hxbit_Serializer();
		s.begin();
		var old = this.__uid;
		this.__uid = 0;
		s.addKnownRef(this);
		this.__uid = old;
		var bytes = s.end();
		return haxe_crypto_Crc32.make(bytes);
	}
	,__uid: null
	,getCLID: function() {
		return hxbit_Schema.__clid;
	}
	,serialize: function(__ctx) {
		__ctx.out.addByte(this.isFinal ? 1 : 0);
		var a = this.fieldsNames;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
		var a = this.fieldsTypes;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(__ctx,v);
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("isFinal");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("fieldsNames");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("fieldsTypes");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")));
		schema.isFinal = hxbit_Serializer.isClassFinal(hxbit_Schema.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		this.isFinal = __ctx.input.b[__ctx.inPos++] != 0;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.fieldsNames = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(__ctx);
				e0 = __e;
				a[i] = e0;
			}
			tmp = a;
		}
		this.fieldsTypes = tmp;
	}
	,__class__: hxbit_Schema
	,__properties__: {get_checkSum:"get_checkSum"}
};
var hxbit_SerializableEnum = function() { };
$hxClasses["hxbit.SerializableEnum"] = hxbit_SerializableEnum;
hxbit_SerializableEnum.__name__ = "hxbit.SerializableEnum";
var hxbit_StructSerializable = function() { };
$hxClasses["hxbit.StructSerializable"] = hxbit_StructSerializable;
hxbit_StructSerializable.__name__ = "hxbit.StructSerializable";
hxbit_StructSerializable.__isInterface__ = true;
hxbit_StructSerializable.prototype = {
	customSerialize: null
	,customUnserialize: null
	,__class__: hxbit_StructSerializable
};
var hxbit_enumSer_Haxe_$ds_$Option = function() { };
$hxClasses["hxbit.enumSer.Haxe_ds_Option"] = hxbit_enumSer_Haxe_$ds_$Option;
hxbit_enumSer_Haxe_$ds_$Option.__name__ = "hxbit.enumSer.Haxe_ds_Option";
hxbit_enumSer_Haxe_$ds_$Option.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			var v1 = v.v;
			ctx.out.addByte(1);
			hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.doSerialize(ctx,v1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		}
	}
};
hxbit_enumSer_Haxe_$ds_$Option.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		var _v;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.doUnserialize(ctx);
		_v = __e;
		return haxe_ds_Option.Some(_v);
	case 2:
		return haxe_ds_Option.None;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Haxe_$ds_$Option.getSchema = function() {
	var s = new hxbit_Schema();
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("model.ver1.game.define.StepKeyword");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("Some");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("None");
	return s;
};
var hxbit_enumSer_Hxbit_$PropTypeDesc = function() { };
$hxClasses["hxbit.enumSer.Hxbit_PropTypeDesc"] = hxbit_enumSer_Hxbit_$PropTypeDesc;
hxbit_enumSer_Hxbit_$PropTypeDesc.__name__ = "hxbit.enumSer.Hxbit_PropTypeDesc";
hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		case 4:
			ctx.out.addByte(5);
			break;
		case 5:
			var name = v.name;
			ctx.out.addByte(6);
			if(name == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(name);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 6:
			var name = v.name;
			ctx.out.addByte(7);
			if(name == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(name);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 7:
			var k = v.k;
			var v1 = v.v;
			ctx.out.addByte(8);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,v1);
			break;
		case 8:
			var k = v.k;
			ctx.out.addByte(9);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 9:
			var fields = v.fields;
			ctx.out.addByte(10);
			if(fields == null) {
				ctx.out.addByte(0);
			} else {
				var v1 = fields.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				var _g = 0;
				while(_g < fields.length) {
					var v1 = fields[_g];
					++_g;
					var v2 = v1;
					if(v2 == null) {
						ctx.out.addByte(0);
					} else {
						var fbits = 0;
						if(v2.name != null) {
							fbits |= 1;
						}
						if(v2.type != null) {
							fbits |= 2;
						}
						var v3 = fbits + 1;
						if(v3 >= 0 && v3 < 128) {
							ctx.out.addByte(v3);
						} else {
							ctx.out.addByte(128);
							ctx.out.addInt32(v3);
						}
						if((fbits & 1) != 0) {
							var s = v2.name;
							if(s == null) {
								ctx.out.addByte(0);
							} else {
								var b = haxe_io_Bytes.ofString(s);
								var v4 = b.length + 1;
								if(v4 >= 0 && v4 < 128) {
									ctx.out.addByte(v4);
								} else {
									ctx.out.addByte(128);
									ctx.out.addInt32(v4);
								}
								ctx.out.add(b);
							}
						}
						ctx.out.addByte(v2.opt ? 1 : 0);
						if((fbits & 2) != 0) {
							hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,v2.type);
						}
					}
				}
			}
			break;
		case 10:
			var k = v.k;
			ctx.out.addByte(11);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 11:
			var k = v.k;
			ctx.out.addByte(12);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,k);
			break;
		case 12:
			var t = v.t;
			ctx.out.addByte(13);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,t);
			break;
		case 13:
			ctx.out.addByte(14);
			break;
		case 14:
			ctx.out.addByte(15);
			break;
		case 15:
			ctx.out.addByte(16);
			break;
		case 16:
			var t = v.t;
			ctx.out.addByte(17);
			hxbit_enumSer_Hxbit_$PropTypeDesc.doSerialize(ctx,t);
			break;
		case 17:
			ctx.out.addByte(18);
			break;
		}
	}
};
hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return hxbit_PropTypeDesc.PInt;
	case 2:
		return hxbit_PropTypeDesc.PFloat;
	case 3:
		return hxbit_PropTypeDesc.PBool;
	case 4:
		return hxbit_PropTypeDesc.PString;
	case 5:
		return hxbit_PropTypeDesc.PBytes;
	case 6:
		var _name;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_name = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_name = s;
		}
		return hxbit_PropTypeDesc.PSerializable(_name);
	case 7:
		var _name;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_name = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_name = s;
		}
		return hxbit_PropTypeDesc.PEnum(_name);
	case 8:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		var _v;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_v = __e;
		return hxbit_PropTypeDesc.PMap(_k,_v);
	case 9:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PArray(_k);
	case 10:
		var _fields;
		var e0;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_fields = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = ctx.input.b[ctx.inPos++];
				if(v == 128) {
					v = ctx.input.getInt32(ctx.inPos);
					ctx.inPos += 4;
				}
				var fbits = v;
				if(fbits == 0) {
					e0 = null;
				} else {
					--fbits;
					var type = null;
					var name = null;
					if((fbits & 1) != 0) {
						var v1 = ctx.input.b[ctx.inPos++];
						if(v1 == 128) {
							v1 = ctx.input.getInt32(ctx.inPos);
							ctx.inPos += 4;
						}
						var len = v1;
						if(len == 0) {
							name = null;
						} else {
							--len;
							var s = ctx.input.getString(ctx.inPos,len);
							ctx.inPos += len;
							name = s;
						}
					}
					var opt = ctx.input.b[ctx.inPos++] != 0;
					if((fbits & 2) != 0) {
						var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
						type = __e;
					}
					e0 = { name : name, opt : opt, type : type};
				}
				a[i] = e0;
			}
			_fields = a;
		}
		return hxbit_PropTypeDesc.PObj(_fields);
	case 11:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PAlias(_k);
	case 12:
		var _k;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_k = __e;
		return hxbit_PropTypeDesc.PVector(_k);
	case 13:
		var _t;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_t = __e;
		return hxbit_PropTypeDesc.PNull(_t);
	case 14:
		return hxbit_PropTypeDesc.PUnknown;
	case 15:
		return hxbit_PropTypeDesc.PDynamic;
	case 16:
		return hxbit_PropTypeDesc.PInt64;
	case 17:
		var _t;
		var __e = hxbit_enumSer_Hxbit_$PropTypeDesc.doUnserialize(ctx);
		_t = __e;
		return hxbit_PropTypeDesc.PFlags(_t);
	case 18:
		return hxbit_PropTypeDesc.PStruct;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Hxbit_$PropTypeDesc.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PInt");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PFloat");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PBool");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PString");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PBytes");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PSerializable");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PEnum");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PMap");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PArray");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PObj([{ name : "name", opt : false, type : hxbit_PropTypeDesc.PString},{ name : "opt", opt : false, type : hxbit_PropTypeDesc.PBool},{ name : "type", opt : false, type : hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc")}]));
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PObj");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PAlias");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PVector");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PNull");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PUnknown");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PDynamic");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PInt64");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("hxbit.PropTypeDesc");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PFlags");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PStruct");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_BattlePoint"] = hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint;
hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.__name__ = "hxbit.enumSer.Model_ver1_game_define_BattlePoint";
hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		var melee = v.melee;
		var range = v.range;
		var hp = v.hp;
		ctx.out.addByte(1);
		if(melee >= 0 && melee < 128) {
			ctx.out.addByte(melee);
		} else {
			ctx.out.addByte(128);
			ctx.out.addInt32(melee);
		}
		if(range >= 0 && range < 128) {
			ctx.out.addByte(range);
		} else {
			ctx.out.addByte(128);
			ctx.out.addInt32(range);
		}
		if(hp >= 0 && hp < 128) {
			ctx.out.addByte(hp);
		} else {
			ctx.out.addByte(128);
			ctx.out.addInt32(hp);
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	if(b == 1) {
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var _melee = v;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var _range = v;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var _hp = v;
		return model_ver1_game_define_BattlePoint.Default(_melee,_range,_hp);
	} else {
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.getSchema = function() {
	var s = new hxbit_Schema();
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PInt;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("Default");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_BlockCause"] = hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause;
hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.__name__ = "hxbit.enumSer.Model_ver1_game_define_BlockCause";
hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			var respnosePlayerId = v.respnosePlayerId;
			ctx.out.addByte(2);
			if(respnosePlayerId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(respnosePlayerId);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 2:
			var playerId = v.playerId;
			var cardId = v.cardId;
			ctx.out.addByte(3);
			if(playerId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(playerId);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			if(cardId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(cardId);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 3:
			var cardId = v.cardId;
			var textId = v.textId;
			ctx.out.addByte(4);
			if(cardId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(cardId);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			if(textId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(textId);
				var v1 = b.length + 1;
				if(v1 >= 0 && v1 < 128) {
					ctx.out.addByte(v1);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v1);
				}
				ctx.out.add(b);
			}
			break;
		case 4:
			var cardId = v.cardId;
			var textId = v.textId;
			ctx.out.addByte(5);
			if(cardId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(cardId);
				var v = b.length + 1;
				if(v >= 0 && v < 128) {
					ctx.out.addByte(v);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v);
				}
				ctx.out.add(b);
			}
			if(textId == null) {
				ctx.out.addByte(0);
			} else {
				var b = haxe_io_Bytes.ofString(textId);
				var v = b.length + 1;
				if(v >= 0 && v < 128) {
					ctx.out.addByte(v);
				} else {
					ctx.out.addByte(128);
					ctx.out.addInt32(v);
				}
				ctx.out.add(b);
			}
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_BlockCause.Pending;
	case 2:
		var _respnosePlayerId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_respnosePlayerId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_respnosePlayerId = s;
		}
		return model_ver1_game_define_BlockCause.System(_respnosePlayerId);
	case 3:
		var _playerId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_playerId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_playerId = s;
		}
		var _cardId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_cardId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_cardId = s;
		}
		return model_ver1_game_define_BlockCause.PlayCard(_playerId,_cardId);
	case 4:
		var _cardId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_cardId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_cardId = s;
		}
		var _textId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_textId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_textId = s;
		}
		return model_ver1_game_define_BlockCause.PlayText(_cardId,_textId);
	case 5:
		var _cardId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_cardId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_cardId = s;
		}
		var _textId;
		var v = ctx.input.b[ctx.inPos++];
		if(v == 128) {
			v = ctx.input.getInt32(ctx.inPos);
			ctx.inPos += 4;
		}
		var len = v;
		if(len == 0) {
			_textId = null;
		} else {
			--len;
			var s = ctx.input.getString(ctx.inPos,len);
			ctx.inPos += len;
			_textId = s;
		}
		return model_ver1_game_define_BlockCause.TextEffect(_cardId,_textId);
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Pending");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("System");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PlayCard");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("PlayText");
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PString;
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("TextEffect");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_FlowMemoryState"] = hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState;
hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.__name__ = "hxbit.enumSer.Model_ver1_game_define_FlowMemoryState";
hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_FlowMemoryState.PrepareDeck;
	case 2:
		return model_ver1_game_define_FlowMemoryState.WhoFirst;
	case 3:
		return model_ver1_game_define_FlowMemoryState.Draw6AndConfirm;
	case 4:
		return model_ver1_game_define_FlowMemoryState.Playing;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("PrepareDeck");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("WhoFirst");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Draw6AndConfirm");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Playing");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_PhaseKeyword"] = hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword;
hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.__name__ = "hxbit.enumSer.Model_ver1_game_define_PhaseKeyword";
hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_PhaseKeyword.Reroll;
	case 2:
		return model_ver1_game_define_PhaseKeyword.Draw;
	case 3:
		return model_ver1_game_define_PhaseKeyword.Maintenance;
	case 4:
		return model_ver1_game_define_PhaseKeyword.Battle;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Reroll");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Draw");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Maintenance");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Battle");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_StepKeyword"] = hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword;
hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.__name__ = "hxbit.enumSer.Model_ver1_game_define_StepKeyword";
hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		case 4:
			ctx.out.addByte(5);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_StepKeyword.Attack;
	case 2:
		return model_ver1_game_define_StepKeyword.Defense;
	case 3:
		return model_ver1_game_define_StepKeyword.DamageChecking;
	case 4:
		return model_ver1_game_define_StepKeyword.Return;
	case 5:
		return model_ver1_game_define_StepKeyword.End;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$StepKeyword.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Attack");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Defense");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("DamageChecking");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Return");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("End");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$TextType = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_TextType"] = hxbit_enumSer_Model_$ver1_$game_$define_$TextType;
hxbit_enumSer_Model_$ver1_$game_$define_$TextType.__name__ = "hxbit.enumSer.Model_ver1_game_define_TextType";
hxbit_enumSer_Model_$ver1_$game_$define_$TextType.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			var type = v.type;
			ctx.out.addByte(1);
			hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.doSerialize(ctx,type);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TextType.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		var _type;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.doUnserialize(ctx);
		_type = __e;
		return model_ver1_game_define_TextType.Automatic(_type);
	case 2:
		return model_ver1_game_define_TextType.Use;
	case 3:
		return model_ver1_game_define_TextType.Special;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TextType.getSchema = function() {
	var s = new hxbit_Schema();
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var t = hxbit_PropTypeDesc.PEnum("model.ver1.game.define.TextTypeAutomaticType");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("Automatic");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Use");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Special");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_TextTypeAutomaticType"] = hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType;
hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.__name__ = "hxbit.enumSer.Model_ver1_game_define_TextTypeAutomaticType";
hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_TextTypeAutomaticType.Resident;
	case 2:
		return model_ver1_game_define_TextTypeAutomaticType.Trigger;
	case 3:
		return model_ver1_game_define_TextTypeAutomaticType.Constant;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TextTypeAutomaticType.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Resident");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Trigger");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Constant");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$Timing = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_Timing"] = hxbit_enumSer_Model_$ver1_$game_$define_$Timing;
hxbit_enumSer_Model_$ver1_$game_$define_$Timing.__name__ = "hxbit.enumSer.Model_ver1_game_define_Timing";
hxbit_enumSer_Model_$ver1_$game_$define_$Timing.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		var phase = v.phase;
		var step = v.step;
		var timing = v.timing;
		ctx.out.addByte(1);
		hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.doSerialize(ctx,phase);
		hxbit_enumSer_Haxe_$ds_$Option.doSerialize(ctx,step);
		hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.doSerialize(ctx,timing);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$Timing.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	if(b == 1) {
		var _phase;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$PhaseKeyword.doUnserialize(ctx);
		_phase = __e;
		var _step;
		var __e = hxbit_enumSer_Haxe_$ds_$Option.doUnserialize(ctx);
		_step = __e;
		var _timing;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.doUnserialize(ctx);
		_timing = __e;
		return model_ver1_game_define_Timing.Default(_phase,_step,_timing);
	} else {
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$Timing.getSchema = function() {
	var s = new hxbit_Schema();
	var s1 = s.fieldsTypes;
	var _g = [];
	var v;
	var v;
	var v;
	var t = hxbit_PropTypeDesc.PEnum("model.ver1.game.define.TimingKeyword");
	_g.push({ name : "", type : t, opt : false});
	s1.push(hxbit_PropTypeDesc.PObj(_g));
	s.fieldsNames.push("Default");
	return s;
};
var hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword = function() { };
$hxClasses["hxbit.enumSer.Model_ver1_game_define_TimingKeyword"] = hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword;
hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.__name__ = "hxbit.enumSer.Model_ver1_game_define_TimingKeyword";
hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.doSerialize = function(ctx,v) {
	if(v == null) {
		ctx.out.addByte(0);
	} else {
		switch(v._hx_index) {
		case 0:
			ctx.out.addByte(1);
			break;
		case 1:
			ctx.out.addByte(2);
			break;
		case 2:
			ctx.out.addByte(3);
			break;
		case 3:
			ctx.out.addByte(4);
			break;
		case 4:
			ctx.out.addByte(5);
			break;
		case 5:
			ctx.out.addByte(6);
			break;
		case 6:
			ctx.out.addByte(7);
			break;
		case 7:
			ctx.out.addByte(8);
			break;
		case 8:
			ctx.out.addByte(9);
			break;
		}
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.doUnserialize = function(ctx) {
	var b = ctx.input.b[ctx.inPos++];
	if(b == 0) {
		return null;
	}
	switch(b) {
	case 1:
		return model_ver1_game_define_TimingKeyword.Start;
	case 2:
		return model_ver1_game_define_TimingKeyword.Free1;
	case 3:
		return model_ver1_game_define_TimingKeyword.Rule;
	case 4:
		return model_ver1_game_define_TimingKeyword.Free2;
	case 5:
		return model_ver1_game_define_TimingKeyword.End;
	case 6:
		return model_ver1_game_define_TimingKeyword.DamageReset;
	case 7:
		return model_ver1_game_define_TimingKeyword.ResolveEffect;
	case 8:
		return model_ver1_game_define_TimingKeyword.AdjustHand;
	case 9:
		return model_ver1_game_define_TimingKeyword.TurnEnd;
	default:
		throw haxe_Exception.thrown("Invalid enum index " + b);
	}
};
hxbit_enumSer_Model_$ver1_$game_$define_$TimingKeyword.getSchema = function() {
	var s = new hxbit_Schema();
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Start");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Free1");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Rule");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("Free2");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("End");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("DamageReset");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("ResolveEffect");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("AdjustHand");
	s.fieldsTypes.push(null);
	s.fieldsNames.push("TurnEnd");
	return s;
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.lib._ArrayBuffer.ArrayBufferCompat";
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var model_ver0_NativeModel = function() {
};
$hxClasses["model.ver0.NativeModel"] = model_ver0_NativeModel;
model_ver0_NativeModel.__name__ = "model.ver0.NativeModel";
model_ver0_NativeModel.__super__ = viewModel_DefaultViewModel;
model_ver0_NativeModel.prototype = $extend(viewModel_DefaultViewModel.prototype,{
	getGame: function() {
		var app = Native.getApp();
		var _this = app.players;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			var player = _this[i];
			var handCards = app.table.cardStacks[player.handId];
			if(handCards == null) {
				throw new haxe_Exception("" + player.handId + " not found");
			}
			var tmp = "" + player.id;
			var tmp1 = "" + player.id;
			var result1 = new Array(handCards.length);
			var _g2 = 0;
			var _g3 = handCards.length;
			while(_g2 < _g3) {
				var i1 = _g2++;
				result1[i1] = model_ver0_NativeModel_toCardModel(app,app.table.cards[handCards[i1]]);
			}
			var tmp2 = result1;
			var result2 = new Array(handCards.length);
			var _g4 = 0;
			var _g5 = handCards.length;
			while(_g4 < _g5) {
				var i2 = _g4++;
				result2[i2] = model_ver0_NativeModel_toCardModel(app,app.table.cards[handCards[i2]]);
			}
			result[i] = { id : tmp, name : tmp1, hand : tmp2, deck : result2, url : ""};
		}
		return { players : result, commands : []};
	}
	,__class__: model_ver0_NativeModel
});
function model_ver0_NativeModel_toCardModel(app,card) {
	return { id : "" + card.id, protoId : "", watchingByPlayer : [], owner : card.owner, faceup : false};
}
var model_ver1_TestModel = function() {
	this.game = new model_ver1_game_Game();
};
$hxClasses["model.ver1.TestModel"] = model_ver1_TestModel;
model_ver1_TestModel.__name__ = "model.ver1.TestModel";
model_ver1_TestModel.__super__ = viewModel_DefaultViewModel;
model_ver1_TestModel.prototype = $extend(viewModel_DefaultViewModel.prototype,{
	game: null
	,getGame: function() {
		var _g = [];
		var h = this.game.ctx.table.cards.h;
		var card_h = h;
		var card_keys = Object.keys(h);
		var card_length = card_keys.length;
		var card_current = 0;
		while(card_current < card_length) {
			var card = card_h[card_keys[card_current++]];
			_g.push(model_ver1_TestModel_toCardModel(this.game.ctx,card));
		}
		var cards = _g;
		return { players : [{ id : "test", name : "test", hand : cards, deck : cards, url : ""}], commands : []};
	}
	,previewPlayCard: function(id) {
		return { success : false, msg : "should have xxxx", content : { }};
	}
	,__class__: model_ver1_TestModel
});
function model_ver1_TestModel_toCardModel(ctx,card) {
	return { id : "" + card.id, protoId : "", watchingByPlayer : [], owner : card.owner, faceup : false};
}
var model_ver1_game_define_CardProto = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.category = model_ver1_game_define_CardCategory.Unit;
};
$hxClasses["model.ver1.game.define.CardProto"] = model_ver1_game_define_CardProto;
model_ver1_game_define_CardProto.__name__ = "model.ver1.game.define.CardProto";
model_ver1_game_define_CardProto.__interfaces__ = [hxbit_Serializable];
model_ver1_game_define_CardProto.prototype = {
	category: null
	,getTexts: function(ctx,runtime) {
		return [];
	}
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_define_CardProto.__clid;
	}
	,serialize: function(__ctx) {
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_CardProto.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.category = model_ver1_game_define_CardCategory.Unit;
	}
	,unserialize: function(__ctx) {
	}
	,__class__: model_ver1_game_define_CardProto
};
var model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white = function() {
	model_ver1_game_define_CardProto.call(this);
};
$hxClasses["model.ver1.data.CardProto_179001_01A_CH_WT007R_white"] = model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white;
model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white.__name__ = "model.ver1.data.CardProto_179001_01A_CH_WT007R_white";
model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white.__super__ = model_ver1_game_define_CardProto;
model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white.prototype = $extend(model_ver1_game_define_CardProto.prototype,{
	getTexts: function(ctx,runtime) {
		return [new model_ver1_data_PlayerPlayCard("" + runtime.getCardId() + "_PlayerPlayCard"),new model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1("" + runtime.getCardId() + "_Text1")];
	}
	,getCLID: function() {
		return model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white.__clid;
	}
	,__class__: model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white
});
var model_ver1_game_define_CardText = function(id,description) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.isSurroundedByArrows = false;
	this.type = model_ver1_game_define_TextType.Use;
	this.id = id;
	this.description = description;
};
$hxClasses["model.ver1.game.define.CardText"] = model_ver1_game_define_CardText;
model_ver1_game_define_CardText.__name__ = "model.ver1.game.define.CardText";
model_ver1_game_define_CardText.__interfaces__ = [hxbit_Serializable];
model_ver1_game_define_CardText.prototype = {
	id: null
	,description: null
	,type: null
	,isSurroundedByArrows: null
	,getSubKey: function(v) {
		return "" + this.id + "_" + v;
	}
	,getEffect: function(ctx,runtime) {
		return [];
	}
	,getRequires: function(ctx,runtime) {
		return [];
	}
	,getRequires2: function(ctx,runtime) {
		return [];
	}
	,action: function(ctx,runtime) {
	}
	,onEvent: function(ctx,event,runtime) {
	}
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_define_CardText.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.id;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.description;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		hxbit_enumSer_Model_$ver1_$game_$define_$TextType.doSerialize(__ctx,this.type);
		__ctx.out.addByte(this.isSurroundedByArrows ? 1 : 0);
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("description");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("type");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PEnum("model.ver1.game.define.TextType"));
		schema.fieldsNames.push("isSurroundedByArrows");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_CardText.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.type = model_ver1_game_define_TextType.Use;
		this.isSurroundedByArrows = false;
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.id = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.description = tmp;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$TextType.doUnserialize(__ctx);
		this.type = __e;
		this.isSurroundedByArrows = __ctx.input.b[__ctx.inPos++] != 0;
	}
	,__class__: model_ver1_game_define_CardText
};
var model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"（戦闘フェイズ）〔２〕：このセットグループのユニットは、ターン終了時まで「速攻」を得る。");
	this.type = model_ver1_game_define_TextType.Use;
};
$hxClasses["model.ver1.data._CardProto_179001_01A_CH_WT007R_white.Text1"] = model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1;
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1.__name__ = "model.ver1.data._CardProto_179001_01A_CH_WT007R_white.Text1";
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires: function(ctx,runtime) {
		var unit;
		var _g = model_ver1_game_alg_Context_getUnitOfSetGroup(ctx,runtime.getCardId());
		if(_g._hx_index == 0) {
			var cardId = _g.v;
			unit = cardId;
		} else {
			unit = "unknown";
		}
		return [new model_ver1_data_RequirePhase("" + this.id + "_req1",model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free1)),new model_ver1_data_RequireGTap("" + this.id + "_req2",[model_ver1_game_define_GColor.Red,model_ver1_game_define_GColor.Red],ctx,runtime),new model_ver1_data_ForceTargetCard("" + this.id + "_req3","このセットグループのユニット","このセットグループのユニット",unit)];
	}
	,action: function(ctx,runtime) {
		var selectUnits = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,"このセットグループのユニット");
		var _g = 0;
		while(_g < selectUnits.length) {
			var unit = selectUnits[_g];
			++_g;
			var mark = new model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1("" + this.id + "_Mark1",unit);
			ctx.marks.h[mark.id] = mark;
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1
});
var model_ver1_game_define_Mark = function(id) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.id = id;
};
$hxClasses["model.ver1.game.define.Mark"] = model_ver1_game_define_Mark;
model_ver1_game_define_Mark.__name__ = "model.ver1.game.define.Mark";
model_ver1_game_define_Mark.__interfaces__ = [hxbit_Serializable];
model_ver1_game_define_Mark.prototype = {
	id: null
	,age: null
	,getEffect: function(ctx) {
		return [];
	}
	,onEvent: function(ctx,event) {
		if(this.age != null) {
			if(event._hx_index == 0) {
				var _g = ctx.timing;
				var _g1 = _g.step;
				if(_g.phase._hx_index == 3) {
					if(_g1._hx_index == 0) {
						if(_g1.v._hx_index == 4) {
							if(_g.timing._hx_index == 4) {
								this.age -= 1;
								if(this.age <= 0) {
									var key = this.id;
									var _this = ctx.marks;
									if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
										delete(_this.h[key]);
									}
								}
							}
						}
					}
				}
			}
		}
	}
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_define_Mark.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.id;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		if(this.age == null) {
			__ctx.out.addByte(0);
		} else {
			__ctx.out.addByte(1);
			var v = this.age;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("age");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PNull(hxbit_PropTypeDesc.PInt));
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_Mark.__clid);
		return schema;
	}
	,unserializeInit: function() {
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.id = tmp;
		if(__ctx.input.b[__ctx.inPos++] == 0) {
			this.age = null;
		} else {
			var v = __ctx.input.b[__ctx.inPos++];
			if(v == 128) {
				v = __ctx.input.getInt32(__ctx.inPos);
				__ctx.inPos += 4;
			}
			this.age = v;
		}
	}
	,__class__: model_ver1_game_define_Mark
};
var model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1 = function(id,attachCardId) {
	model_ver1_game_define_Mark.call(this,id);
	this.attachCardId = attachCardId;
};
$hxClasses["model.ver1.data._CardProto_179001_01A_CH_WT007R_white.Mark1"] = model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1;
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.__name__ = "model.ver1.data._CardProto_179001_01A_CH_WT007R_white.Mark1";
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.__super__ = model_ver1_game_define_Mark;
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.prototype = $extend(model_ver1_game_define_Mark.prototype,{
	attachCardId: null
	,getEffect: function(ctx) {
		return [model_ver1_game_define_MarkEffect.AttackSpeed(this.attachCardId,1)];
	}
	,onEvent: function(ctx,event) {
		if(event._hx_index == 0) {
			var _g = ctx.timing;
			var _g1 = _g.step;
			if(_g.phase._hx_index == 3) {
				if(_g1._hx_index == 0) {
					if(_g1.v._hx_index == 4) {
						if(_g.timing._hx_index == 4) {
							var key = this.id;
							var _this = ctx.marks;
							if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
								delete(_this.h[key]);
							}
						}
					}
				}
			}
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.__clid;
	}
	,serialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.serialize.call(this,__ctx);
		var s = this.attachCardId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = model_ver1_game_define_Mark.prototype.getSerializeSchema.call(this);
		schema.fieldsNames.push("attachCardId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.__clid);
		return schema;
	}
	,unserialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.unserialize.call(this,__ctx);
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.attachCardId = tmp;
	}
	,__class__: model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1
});
function model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white_test() {
	var ctx = new model_ver1_game_define_Context();
	var card1 = new tool_Card("0");
	card1.protoId = "179001_01A_CH_WT007R_white";
	ctx.table.cards.h[card1.id] = card1;
	ctx.timing = model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.Start);
	var _this = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var info = _this[i];
		result[i] = { cardId : info.runtime.getCardId(), text : info.text, reqs : info.text.getRequires(ctx,info.runtime)};
	}
	var infos = result;
	haxe_Log.trace(infos,{ fileName : "src/model/ver1/data/CardProto_179001_01A_CH_WT007R_white.hx", lineNumber : 104, className : "model.ver1.data._CardProto_179001_01A_CH_WT007R_white.CardProto_179001_01A_CH_WT007R_white_Fields_", methodName : "test"});
	if(infos.length == 0) {
		throw new haxe_Exception("infos.length == 0");
	}
	var selectTextId = infos[0].text.id;
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v.text.id == selectTextId) {
			_g.push(v);
		}
	}
	var findText = _g;
	if(findText.length == 0) {
		throw new haxe_Exception("findText not found");
	}
	var text = findText[0].text;
	var runtime = findText[0].runtime;
	var _g = 0;
	var _g1 = text.getRequires(ctx,runtime);
	while(_g < _g1.length) {
		var req = _g1[_g];
		++_g;
		req.action(ctx,runtime);
	}
	text.action(ctx,runtime);
}
var model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black = function() {
	model_ver1_game_define_CardProto.call(this);
};
$hxClasses["model.ver1.data.CardProto_179003_01A_U_BK008U_black"] = model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black;
model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black.__name__ = "model.ver1.data.CardProto_179003_01A_U_BK008U_black";
model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black.__super__ = model_ver1_game_define_CardProto;
model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black.prototype = $extend(model_ver1_game_define_CardProto.prototype,{
	getTexts: function(ctx,runtime) {
		return [new model_ver1_data_PlayerPlayCard("" + runtime.getCardId() + "_PlayerPlayCard"),new model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1("" + runtime.getCardId() + "_Text1")];
	}
	,getCLID: function() {
		return model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black.__clid;
	}
	,__class__: model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black
});
var model_ver1_game_define_Require = function(id,description) {
	this.id = id;
	this.description = description;
};
$hxClasses["model.ver1.game.define.Require"] = model_ver1_game_define_Require;
model_ver1_game_define_Require.__name__ = "model.ver1.game.define.Require";
model_ver1_game_define_Require.prototype = {
	id: null
	,description: null
	,action: function(ctx,runtime) {
	}
	,__class__: model_ver1_game_define_Require
};
var model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage = function(id) {
	model_ver1_game_define_Require.call(this,id,"このカードが戦闘ダメージで破壊されている場合");
};
$hxClasses["model.ver1.data._CardProto_179003_01A_U_BK008U_black.RequireThisCardDestroyByBattleDamage"] = model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage.__name__ = "model.ver1.data._CardProto_179003_01A_U_BK008U_black.RequireThisCardDestroyByBattleDamage";
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage.__super__ = model_ver1_game_define_Require;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage.prototype = $extend(model_ver1_game_define_Require.prototype,{
	action: function(ctx,runtime) {
		if(model_ver1_game_alg_Destroy_isDestroyNow(ctx,runtime.getCardId(),{ isByBattleDamage : true}) == false) {
			throw new haxe_Exception("這張卡必須是破壞中的狀態");
		}
	}
	,__class__: model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage
});
var model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"（ダメージ判定ステップ）〔２〕：このカードが戦闘ダメージで破壊されている場合、このカードを、破壊を無効にした上で自軍Gにする。");
	this.type = model_ver1_game_define_TextType.Use;
};
$hxClasses["model.ver1.data._CardProto_179003_01A_U_BK008U_black.Text1"] = model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1.__name__ = "model.ver1.data._CardProto_179003_01A_U_BK008U_black.Text1";
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires: function(ctx,runtime) {
		return [new model_ver1_data_RequirePhase("" + this.id + "_Text1_Req1",model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Free1)),new model_ver1_data_RequireGTap("" + this.id + "_Text1_Req2",[model_ver1_game_define_GColor.Black,model_ver1_game_define_GColor.Black],ctx,runtime),new model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_RequireThisCardDestroyByBattleDamage("" + this.id + "_Text1_Req3")];
	}
	,action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		var block = new model_ver1_game_define_Block("" + this.id + "_" + Std.string(new Date()),model_ver1_game_define_BlockCause.PlayText(cardId,this.id),new model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2("" + this.id + "_Text2"));
		model_ver1_game_alg_Cut_cutIn(ctx,block);
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1
});
var model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"このカードを、破壊を無効にした上で自軍Gにする。");
};
$hxClasses["model.ver1.data._CardProto_179003_01A_U_BK008U_black.Text2"] = model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2.__name__ = "model.ver1.data._CardProto_179003_01A_U_BK008U_black.Text2";
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		model_ver1_game_alg_Destroy_removeDestroyEffect(ctx,cardId);
		model_ver1_game_alg_Context_becomeG(ctx,cardId);
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2
});
function model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black_test() {
	var ctx = new model_ver1_game_define_Context();
	var card1 = new tool_Card("0");
	card1.protoId = "179003_01A_U_BK008U_black";
	ctx.table.cards.h[card1.id] = card1;
	ctx.timing = model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Start);
	var _this = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var info = _this[i];
		result[i] = { cardId : info.runtime.getCardId(), text : info.text, reqs : info.text.getRequires(ctx,info.runtime)};
	}
	var infos = result;
	haxe_Log.trace(infos,{ fileName : "src/model/ver1/data/CardProto_179003_01A_U_BK008U_black.hx", lineNumber : 96, className : "model.ver1.data._CardProto_179003_01A_U_BK008U_black.CardProto_179003_01A_U_BK008U_black_Fields_", methodName : "test"});
	if(infos.length == 0) {
		throw new haxe_Exception("infos.length == 0");
	}
	var selectTextId = infos[0].text.id;
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v.text.id == selectTextId) {
			_g.push(v);
		}
	}
	var findText = _g;
	if(findText.length == 0) {
		throw new haxe_Exception("findText not found");
	}
	var text = findText[0].text;
	var runtime = findText[0].runtime;
	var _g = 0;
	var _g1 = text.getRequires(ctx,runtime);
	while(_g < _g1.length) {
		var req = _g1[_g];
		++_g;
		req.action(ctx,runtime);
	}
	text.action(ctx,runtime);
}
var model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white = function() {
	model_ver1_game_define_CardProto.call(this);
	this.category = model_ver1_game_define_CardCategory.Character;
};
$hxClasses["model.ver1.data.CardProto_179004_01A_CH_WT009R_white"] = model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white;
model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white.__name__ = "model.ver1.data.CardProto_179004_01A_CH_WT009R_white";
model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white.__super__ = model_ver1_game_define_CardProto;
model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white.prototype = $extend(model_ver1_game_define_CardProto.prototype,{
	getTexts: function(ctx,runtime) {
		var thisCardId = runtime.getCardId();
		return [new model_ver1_data_PlayerPlayCard("" + thisCardId + "_PlayerPlayCard"),new model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1("" + thisCardId + "_Text1")];
	}
	,getCLID: function() {
		return model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white.__clid;
	}
	,__class__: model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white
});
var model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"『起動』：自軍カードが、「ゲイン」の効果で戦闘修正を得た場合、そのカードのセットグループ以外の自軍ユニット１枚は、ターン終了時まで、その戦闘修正と同じ値の戦闘修正を得る。");
	this.type = model_ver1_game_define_TextType.Automatic(model_ver1_game_define_TextTypeAutomaticType.Trigger);
};
$hxClasses["model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Text1"] = model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1.__name__ = "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Text1";
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	onEvent: function(ctx,event,runtime) {
		var thisCardId = runtime.getCardId();
		if(event._hx_index == 1) {
			var gainCardId = event.cardId;
			var gainValue = event.value;
			if(model_ver1_game_alg_Context_isMyCard(ctx,thisCardId,gainCardId)) {
				var block = new model_ver1_game_define_Block("" + this.id + "_" + Std.string(new Date()),model_ver1_game_define_BlockCause.TextEffect(thisCardId,this.id),new model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1("" + this.id + "_Text1_1",gainCardId,gainValue));
				block.isImmediate = true;
				model_ver1_game_alg_Cut_cutIn(ctx,block);
			}
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1
});
var model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1 = function(id,gainCardId,gainValue) {
	model_ver1_game_define_CardText.call(this,id,"そのカードのセットグループ以外の自軍ユニット１枚は、ターン終了時まで、その戦闘修正と同じ値の戦闘修正を得る。");
	this.gainCardId = gainCardId;
	this.gainValue = gainValue;
};
$hxClasses["model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Text1_1"] = model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.__name__ = "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Text1_1";
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	gainCardId: null
	,gainValue: null
	,getRequires: function(ctx,runtime) {
		var thisCardId = runtime.getCardId();
		var gainCardSetGroupsIds = model_ver1_game_alg_Context_getCardSetGroupCardIds(ctx,this.gainCardId);
		var _g = [];
		var h = ctx.table.cards.h;
		var card_h = h;
		var card_keys = Object.keys(h);
		var card_length = card_keys.length;
		var card_current = 0;
		while(card_current < card_length) {
			var card = card_h[card_keys[card_current++]];
			_g.push(card);
		}
		var _g1 = [];
		var _g2 = 0;
		var _g3 = _g;
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			if(gainCardSetGroupsIds.indexOf(v.id) != -1 == false && model_ver1_game_alg_Context_isMyCard(ctx,thisCardId,v.id)) {
				_g1.push(v);
			}
		}
		var _this = _g1;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].id;
		}
		var tips = result;
		var req = new model_ver1_data_RequireUserSelectCard(this.getSubKey(0),"そのカードのセットグループ以外の自軍ユニット１枚は");
		req.tips = tips;
		return [req];
	}
	,getRequires2: function(ctx,runtime) {
		var _gthis = this;
		var thisCardId = runtime.getCardId();
		var gainCardSetGroupsIds = model_ver1_game_alg_Context_getCardSetGroupCardIds(ctx,this.gainCardId);
		var _g = [];
		var h = ctx.table.cards.h;
		var card_h = h;
		var card_keys = Object.keys(h);
		var card_length = card_keys.length;
		var card_current = 0;
		while(card_current < card_length) {
			var card = card_h[card_keys[card_current++]];
			_g.push(card);
		}
		var _g1 = [];
		var _g2 = 0;
		var _g3 = _g;
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			if(model_ver1_game_alg_Context_isMyCard(ctx,thisCardId,v.id)) {
				_g1.push(v);
			}
		}
		var _g = [];
		var _g2 = 0;
		var _g3 = _g1;
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			if(gainCardSetGroupsIds.indexOf(v.id) != -1 == false) {
				_g.push(v);
			}
		}
		var _g1 = [];
		var _g2 = 0;
		var _g3 = _g;
		while(_g2 < _g3.length) {
			var v = _g3[_g2];
			++_g2;
			var _g = model_ver1_game_alg_Context_getCardEntityCategory(ctx,v.id);
			if(_g._hx_index == 0 && _g.v._hx_index == 0) {
				_g1.push(v);
			}
		}
		var _this = _g1;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].id;
		}
		var _this = result;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = { value : _this[i], weight : 0.0};
		}
		var tips = result;
		var tipsLengths = [1];
		return [{ id : this.getSubKey(0), description : "そのカードのセットグループ以外の自軍ユニット１枚は", type : model_ver1_game_define_RequireType.SelectCard(tips,tipsLengths), action : function() {
			var selection = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,_gthis.getSubKey(0));
			if(tipsLengths.indexOf(selection.length) != -1 == false) {
				throw haxe_Exception.thrown("length not right");
			}
		}}];
	}
	,action: function(ctx,runtime) {
		var selectUnits = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,this.getSubKey(0));
		var _g = 0;
		while(_g < selectUnits.length) {
			var unit = selectUnits[_g];
			++_g;
			var mark = new model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1("" + this.id + "_Mark1",this.gainCardId,this.gainValue);
			mark.age = 1;
			ctx.marks.h[mark.id] = mark;
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.__clid;
	}
	,serialize: function(__ctx) {
		model_ver1_game_define_CardText.prototype.serialize.call(this,__ctx);
		var s = this.gainCardId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doSerialize(__ctx,this.gainValue);
	}
	,getSerializeSchema: function() {
		var schema = model_ver1_game_define_CardText.prototype.getSerializeSchema.call(this);
		schema.fieldsNames.push("gainCardId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("gainValue");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PEnum("model.ver1.game.define.BattlePoint"));
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.__clid);
		return schema;
	}
	,unserialize: function(__ctx) {
		model_ver1_game_define_CardText.prototype.unserialize.call(this,__ctx);
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.gainCardId = tmp;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doUnserialize(__ctx);
		this.gainValue = __e;
	}
	,__class__: model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1
});
var model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1 = function(id,attachCardId,battlePoint) {
	model_ver1_game_define_Mark.call(this,id);
	this.attachCardId = attachCardId;
	this.battlePoint = battlePoint;
};
$hxClasses["model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Mark1"] = model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.__name__ = "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.Mark1";
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.__super__ = model_ver1_game_define_Mark;
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.prototype = $extend(model_ver1_game_define_Mark.prototype,{
	attachCardId: null
	,battlePoint: null
	,getEffect: function(ctx) {
		return [model_ver1_game_define_MarkEffect.AddBattlePoint(this.attachCardId,this.battlePoint)];
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.__clid;
	}
	,serialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.serialize.call(this,__ctx);
		var s = this.attachCardId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doSerialize(__ctx,this.battlePoint);
	}
	,getSerializeSchema: function() {
		var schema = model_ver1_game_define_Mark.prototype.getSerializeSchema.call(this);
		schema.fieldsNames.push("attachCardId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("battlePoint");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PEnum("model.ver1.game.define.BattlePoint"));
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.__clid);
		return schema;
	}
	,unserialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.unserialize.call(this,__ctx);
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.attachCardId = tmp;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$BattlePoint.doUnserialize(__ctx);
		this.battlePoint = __e;
	}
	,__class__: model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1
});
function model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white_test() {
	var player1 = model_ver1_game_define_PlayerId.A;
	var player2 = model_ver1_game_define_PlayerId.B;
	var ctx = new model_ver1_game_define_Context();
	model_ver1_game_alg_CardProto_registerCardProto(ctx,"testUnit",new model_ver1_game_define_CardProto());
	haxe_Log.trace("角色在場",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 149, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	var card = new tool_Card("1");
	card.owner = player1;
	card.protoId = "179004_01A_CH_WT009R_white";
	var baSyou = model_ver1_game_define_BaSyou.Default(player1,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card);
	haxe_Log.trace("機體1出場",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 154, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	var card2 = new tool_Card("2");
	card2.owner = player1;
	card2.protoId = "testUnit";
	var baSyou = model_ver1_game_define_BaSyou.Default(player1,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card2);
	haxe_Log.trace("機體2出場",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 159, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	var card3 = new tool_Card("3");
	card3.owner = player1;
	card3.protoId = "testUnit";
	var baSyou = model_ver1_game_define_BaSyou.Default(player1,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card3);
	haxe_Log.trace("敵機體出場",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 164, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	var card4 = new tool_Card("4");
	card4.owner = player2;
	card4.protoId = "testUnit";
	var baSyou = model_ver1_game_define_BaSyou.Default(player2,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card4);
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 0) {
		throw haxe_Exception.thrown("一開始堆疊中沒有效果");
	}
	haxe_Log.trace("獲得gain",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 173, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.Gain(card2.id,model_ver1_game_define_BattlePoint.Default(1,0,0)));
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 1) {
		throw haxe_Exception.thrown("堆疊中必須有一個效果");
	}
	var block = model_ver1_game_alg_Cut_getTopCut(ctx)[0];
	var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card.id,player1);
	var requires = block.text.getRequires2(ctx,runtime);
	if(requires.length != 1) {
		throw haxe_Exception.thrown("requires.length != 1");
	}
	var $require = requires[0];
	var tips;
	var _g = $require.type;
	if(_g._hx_index == 1) {
		var tips1 = _g.tips;
		var lengthInclude = _g.lengthInclude;
		tips = tips1;
	} else {
		throw haxe_Exception.thrown("must be SelectCard");
	}
	if(tips.length != 1) {
		throw haxe_Exception.thrown("必須有一個可選機");
	}
	if(tips[0].value != card3.id) {
		throw haxe_Exception.thrown("必須可以選card3");
	}
	haxe_Log.trace("選擇",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 197, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_setPlayerSelectionCardId(ctx,$require.id,[tips[0].value]);
	haxe_Log.trace("驗証支付",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 199, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	$require.action();
	haxe_Log.trace("解決效果",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 201, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	block.text.action(ctx,runtime);
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		_g.push(mark);
	}
	if(_g.length != 1) {
		throw haxe_Exception.thrown("必須有效果");
	}
	haxe_Log.trace("結束一個turn",{ fileName : "src/model/ver1/data/CardProto_179004_01A_CH_WT009R_white.hx", lineNumber : 206, className : "model.ver1.data._CardProto_179004_01A_CH_WT009R_white.CardProto_179004_01A_CH_WT009R_white_Fields_", methodName : "test"});
	ctx.timing = model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.End);
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.ChangePhase);
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		_g.push(mark);
	}
	if(_g.length != 0) {
		throw haxe_Exception.thrown("效果必須被移除");
	}
}
var model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown = function() {
	model_ver1_game_define_CardProto.call(this);
	this.category = model_ver1_game_define_CardCategory.Character;
};
$hxClasses["model.ver1.data.CardProto_179030_11E_CH_BN091N_brown"] = model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown;
model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown.__name__ = "model.ver1.data.CardProto_179030_11E_CH_BN091N_brown";
model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown.__super__ = model_ver1_game_define_CardProto;
model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown.prototype = $extend(model_ver1_game_define_CardProto.prototype,{
	getTexts: function(ctx,runtime) {
		return [new model_ver1_data_PlayerPlayCard("" + runtime.getCardId() + "_PlayerPlayCard"),new model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1("" + runtime.getCardId() + "_Text1")];
	}
	,getCLID: function() {
		return model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown.__clid;
	}
	,__class__: model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown
});
var model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"『起動』：このカードがロールした場合、敵軍G１枚をロールする。その場合、このセットグループは、このターンと次のターン、リロールできない。");
	this.type = model_ver1_game_define_TextType.Automatic(model_ver1_game_define_TextTypeAutomaticType.Trigger);
};
$hxClasses["model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.Text1"] = model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1;
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1.__name__ = "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.Text1";
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	onEvent: function(ctx,event,runtime) {
		var thisCardId = runtime.getCardId();
		var responsePlayerId = runtime.getResponsePlayerId();
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var opponentPlayerId = this1 == model_ver1_game_define_PlayerId.A ? model_ver1_game_define_PlayerId.B : model_ver1_game_define_PlayerId.A;
		if(event._hx_index == 3) {
			var rollCardId = event.cardId;
			if(rollCardId == thisCardId) {
				if(model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown_getOpponentG(ctx,runtime).length >= 1) {
					var block = new model_ver1_game_define_Block(this.getSubKey(0),model_ver1_game_define_BlockCause.TextEffect(thisCardId,this.id),new model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1("" + this.id + "_Process1"));
					block.isImmediate = true;
					model_ver1_game_alg_Cut_cutIn(ctx,block);
				}
			}
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1
});
var model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"敵軍G１枚をロールする。その場合、このセットグループは、このターンと次のターン、リロールできない。");
};
$hxClasses["model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.Process1"] = model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1;
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1.__name__ = "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.Process1";
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires2: function(ctx,runtime) {
		var _gthis = this;
		var _this = model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown_getOpponentG(ctx,runtime);
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = { value : _this[i], weight : 0.0};
		}
		var tips = result;
		return [{ id : this.getSubKey(0), description : "敵軍G１枚をロールする。", type : model_ver1_game_define_RequireType.SelectCard(tips,[1]), action : function() {
			var selectUnits = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,_gthis.getSubKey(0));
			var _g = 0;
			while(_g < selectUnits.length) {
				var unit = selectUnits[_g];
				++_g;
				model_ver1_game_alg_Context_tapCard(ctx,unit);
			}
		}}];
	}
	,action: function(ctx,runtime) {
		var thisCardId = runtime.getCardId();
		var _g = 0;
		var _g1 = model_ver1_game_alg_Context_getThisCardSetGroupCardIds(ctx,thisCardId);
		while(_g < _g1.length) {
			var cardId = _g1[_g];
			++_g;
			var markId = "" + this.id + "_" + cardId;
			var mark = new model_ver1_game_define_CanNotRerollMark(markId,cardId);
			mark.age = 2;
			ctx.marks.h[mark.id] = mark;
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1
});
function model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown_getOpponentG(ctx,runtime) {
	var responsePlayerId = runtime.getResponsePlayerId();
	if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
		throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
	}
	var this1 = responsePlayerId;
	var opponentPlayerId = this1 == model_ver1_game_define_PlayerId.A ? model_ver1_game_define_PlayerId.B : model_ver1_game_define_PlayerId.A;
	var _g = [];
	var h = ctx.table.cards.h;
	var card_h = h;
	var card_keys = Object.keys(h);
	var card_length = card_keys.length;
	var card_current = 0;
	while(card_current < card_length) {
		var card = card_h[card_keys[card_current++]];
		_g.push(card);
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].id;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = result;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var s = model_ver1_game_alg_Context_getCardOwner(ctx,v);
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = s;
		if(this1 == opponentPlayerId) {
			_g.push(v);
		}
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var _g = model_ver1_game_alg_Context_getCardEntityCategory(ctx,v);
		if(_g._hx_index == 0 && _g.v._hx_index == 3) {
			_g1.push(v);
		}
	}
	return _g1;
}
function model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown_test() {
	var player1 = model_ver1_game_define_PlayerId.A;
	var player2 = model_ver1_game_define_PlayerId.B;
	var ctx = new model_ver1_game_define_Context();
	var baSyou = model_ver1_game_define_BaSyou.Default(player2,model_ver1_game_define_BaSyouKeyword.TeHuTa);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var player2Hand = new tool_CardStack(this1);
	ctx.table.cardStacks.h[player2Hand.id] = player2Hand;
	haxe_Log.trace("卡牌1在場",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 123, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	var card = new tool_Card("1");
	card.owner = player1;
	card.protoId = "179030_11E_CH_BN091N_brown";
	var baSyou = model_ver1_game_define_BaSyou.Default(player1,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card);
	haxe_Log.trace("敵軍G在場",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 128, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	var card2 = new tool_Card("2");
	card2.owner = player2;
	card2.protoId = "179030_11E_CH_BN091N_brown";
	card2.isTap = false;
	var baSyou = model_ver1_game_define_BaSyou.Default(player2,model_ver1_game_define_BaSyouKeyword.GZone);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card2);
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 0) {
		throw haxe_Exception.thrown("一開始堆疊中沒有效果");
	}
	haxe_Log.trace("卡牌横置",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 138, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.CardRoll(card.id));
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 1) {
		throw haxe_Exception.thrown("堆疊中必須有一個效果");
	}
	var block = model_ver1_game_alg_Cut_getTopCut(ctx)[0];
	var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card.id,player1);
	var requires = block.text.getRequires2(ctx,runtime);
	if(requires.length != 1) {
		throw haxe_Exception.thrown("requires.length != 1");
	}
	var $require = requires[0];
	var tips;
	var _g = $require.type;
	if(_g._hx_index == 1) {
		var tips1 = _g.tips;
		var lengthInclude = _g.lengthInclude;
		tips = tips1;
	} else {
		throw haxe_Exception.thrown("must be SelectCard");
	}
	if(tips.length != 1) {
		throw haxe_Exception.thrown("必須有一個可選G");
	}
	haxe_Log.trace("選擇",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 159, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_setPlayerSelectionCardId(ctx,$require.id,[tips[0].value]);
	haxe_Log.trace("驗証支付",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 161, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	$require.action();
	if(card2.isTap != true) {
		throw haxe_Exception.thrown("牌必須被横置");
	}
	haxe_Log.trace("解決效果",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 166, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	block.text.action(ctx,runtime);
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		_g.push(mark);
	}
	if(_g.length != 1) {
		throw haxe_Exception.thrown("必須有不能重置效果");
	}
	haxe_Log.trace("結束一個turn",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 171, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	ctx.timing = model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.End);
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.ChangePhase);
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		_g.push(mark);
	}
	if(_g.length != 1) {
		throw haxe_Exception.thrown("必須有不能重置效果");
	}
	haxe_Log.trace("再結束一個turn",{ fileName : "src/model/ver1/data/CardProto_179030_11E_CH_BN091N_brown.hx", lineNumber : 177, className : "model.ver1.data._CardProto_179030_11E_CH_BN091N_brown.CardProto_179030_11E_CH_BN091N_brown_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.ChangePhase);
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		_g.push(mark);
	}
	if(_g.length != 0) {
		throw haxe_Exception.thrown("不能重置效果必須被移除");
	}
}
var model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple = function() {
	model_ver1_game_define_CardProto.call(this);
	this.category = model_ver1_game_define_CardCategory.Unit;
};
$hxClasses["model.ver1.data.CardProto_179030_11E_U_VT186R_purple"] = model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple;
model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple.__name__ = "model.ver1.data.CardProto_179030_11E_U_VT186R_purple";
model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple.__super__ = model_ver1_game_define_CardProto;
model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple.prototype = $extend(model_ver1_game_define_CardProto.prototype,{
	getTexts: function(ctx,runtime) {
		return [new model_ver1_data_PlayerPlayCard("CardProto_179030_11E_U_VT186R_purple_1"),new model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1("CardProto_179030_11E_U_VT186R_purple_2")];
	}
	,getCLID: function() {
		return model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple.__clid;
	}
	,__class__: model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple
});
var model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"『起動』：このカードが場に出た場合、このターン中に場に出た敵軍ユニット１枚を、持ち主の手札に移す。");
	this.type = model_ver1_game_define_TextType.Automatic(model_ver1_game_define_TextTypeAutomaticType.Trigger);
};
$hxClasses["model.ver1.data._CardProto_179030_11E_U_VT186R_purple.Text1"] = model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1.__name__ = "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.Text1";
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	onEvent: function(ctx,event,runtime) {
		var thisCardId = runtime.getCardId();
		if(event._hx_index == 2) {
			var enterFieldCardId = event.cardId;
			if(enterFieldCardId == thisCardId) {
				var block = new model_ver1_game_define_Block(this.getSubKey(0),model_ver1_game_define_BlockCause.TextEffect(thisCardId,this.id),new model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1("" + this.id + "_Process1"));
				block.isImmediate = true;
				model_ver1_game_alg_Cut_cutIn(ctx,block);
			}
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1
});
var model_ver1_data_RequireUserSelect = function(id,description) {
	this.responsePlayerId = model_ver1_game_define_RelativePlayer.You;
	this.lengthInclude = [1];
	this.tips = [];
	model_ver1_game_define_Require.call(this,id,description);
};
$hxClasses["model.ver1.data.RequireUserSelect"] = model_ver1_data_RequireUserSelect;
model_ver1_data_RequireUserSelect.__name__ = "model.ver1.data.RequireUserSelect";
model_ver1_data_RequireUserSelect.__super__ = model_ver1_game_define_Require;
model_ver1_data_RequireUserSelect.prototype = $extend(model_ver1_game_define_Require.prototype,{
	tips: null
	,lengthInclude: null
	,responsePlayerId: null
	,__class__: model_ver1_data_RequireUserSelect
});
var model_ver1_data_RequireUserSelectCard = function(id,description) {
	model_ver1_data_RequireUserSelect.call(this,id,description);
};
$hxClasses["model.ver1.data.RequireUserSelectCard"] = model_ver1_data_RequireUserSelectCard;
model_ver1_data_RequireUserSelectCard.__name__ = "model.ver1.data.RequireUserSelectCard";
model_ver1_data_RequireUserSelectCard.__super__ = model_ver1_data_RequireUserSelect;
model_ver1_data_RequireUserSelectCard.prototype = $extend(model_ver1_data_RequireUserSelect.prototype,{
	action: function(ctx,runtime) {
		var selection = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,this.id);
		if(this.lengthInclude.indexOf(selection.length) != -1 == false) {
			throw haxe_Exception.thrown("select card length not right");
		}
	}
	,__class__: model_ver1_data_RequireUserSelectCard
});
var model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn = function(id,ctx,runtime) {
	model_ver1_data_RequireUserSelectCard.call(this,id,"このターン中に場に出た敵軍ユニット１枚を");
	var thisCardId = runtime.getCardId();
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Context_getEnterFieldThisTurnCardIds(ctx);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var _g3 = model_ver1_game_alg_Context_getCardEntityCategory(ctx,v);
		if(_g3._hx_index == 0 && _g3.v._hx_index == 0) {
			_g.push(v);
		}
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		if(model_ver1_game_alg_Context_isOpponentsCard(ctx,thisCardId,v)) {
			_g1.push(v);
		}
	}
	var unitsEnterFieldThisTurn = _g1;
	this.tips = unitsEnterFieldThisTurn;
};
$hxClasses["model.ver1.data._CardProto_179030_11E_U_VT186R_purple.RequireOpponentUnitsEnterFieldThisTurn"] = model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn.__name__ = "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.RequireOpponentUnitsEnterFieldThisTurn";
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn.__super__ = model_ver1_data_RequireUserSelectCard;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn.prototype = $extend(model_ver1_data_RequireUserSelectCard.prototype,{
	__class__: model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn
});
var model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1 = function(id) {
	model_ver1_game_define_CardText.call(this,id,"このターン中に場に出た敵軍ユニット１枚を、持ち主の手札に移す。");
};
$hxClasses["model.ver1.data._CardProto_179030_11E_U_VT186R_purple.Process1"] = model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1.__name__ = "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.Process1";
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires: function(ctx,runtime) {
		return [new model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_RequireOpponentUnitsEnterFieldThisTurn(this.getSubKey(0),ctx,runtime)];
	}
	,getRequires2: function(ctx,runtime) {
		return [model_ver1_data_RequireImpl_getRequireOpponentUnitsEnterFieldThisTurn(ctx,runtime,this.getSubKey(0))];
	}
	,action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		var selectCardIds = model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,this.getSubKey(0));
		var _g = 0;
		while(_g < selectCardIds.length) {
			var cardId = selectCardIds[_g];
			++_g;
			model_ver1_game_alg_Context_returnToOwnerHand(ctx,cardId);
		}
	}
	,getCLID: function() {
		return model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1.__clid;
	}
	,__class__: model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1
});
function model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple_test() {
	var player1 = model_ver1_game_define_PlayerId.A;
	var player2 = model_ver1_game_define_PlayerId.B;
	var ctx = new model_ver1_game_define_Context();
	var baSyou = model_ver1_game_define_BaSyou.Default(player2,model_ver1_game_define_BaSyouKeyword.TeHuTa);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var player2Hand = new tool_CardStack(this1);
	ctx.table.cardStacks.h[player2Hand.id] = player2Hand;
	haxe_Log.trace("機體1在場",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 107, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	var card = new tool_Card("1");
	card.owner = player1;
	card.protoId = "179030_11E_U_VT186R_purple";
	var baSyou = model_ver1_game_define_BaSyou.Default(player1,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card);
	haxe_Log.trace("機體2這回合剛出場",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 112, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	var card2 = new tool_Card("2");
	card2.owner = player2;
	card2.protoId = "179030_11E_U_VT186R_purple";
	var baSyou = model_ver1_game_define_BaSyou.Default(player2,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_addCard(ctx.table,this1,card2);
	haxe_Log.trace("設置剛出場標記",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 117, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	var enterFieldMark = new model_ver1_game_define_EnterFieldThisTurnMark("EnterFieldThisTurnMark",card2.id);
	ctx.marks.h[enterFieldMark.id] = enterFieldMark;
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 0) {
		throw haxe_Exception.thrown("一開始堆疊中沒有效果");
	}
	haxe_Log.trace("機體1出場事件",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 124, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.CardEnterField(card.id));
	if(model_ver1_game_alg_Cut_getTopCut(ctx).length != 1) {
		throw haxe_Exception.thrown("堆疊中必須有一個效果");
	}
	var block = model_ver1_game_alg_Cut_getTopCut(ctx)[0];
	var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card.id,player1);
	var requires = block.text.getRequires2(ctx,runtime);
	if(requires.length != 1) {
		throw haxe_Exception.thrown("requires.length != 1");
	}
	var $require = requires[0];
	var tips;
	var _g = $require.type;
	if(_g._hx_index == 1) {
		var tips1 = _g.tips;
		var lengthInclude = _g.lengthInclude;
		tips = tips1;
	} else {
		throw haxe_Exception.thrown("must be SelectCard");
	}
	if(tips.length != 1) {
		throw haxe_Exception.thrown("必須有一個可選機體");
	}
	haxe_Log.trace("選擇要回手的一個敵機",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 145, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	model_ver1_game_alg_Context_setPlayerSelectionCardId(ctx,$require.id,[tips[0].value]);
	haxe_Log.trace("驗証支付",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 147, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	$require.action();
	haxe_Log.trace("解決效果",{ fileName : "src/model/ver1/data/CardProto_179030_11E_U_VT186R_purple.hx", lineNumber : 149, className : "model.ver1.data._CardProto_179030_11E_U_VT186R_purple.CardProto_179030_11E_U_VT186R_purple_Fields_", methodName : "test"});
	block.text.action(ctx,runtime);
	if(player2Hand.cardIds.length != 1) {
		throw haxe_Exception.thrown("牌被移到手上");
	}
}
var model_ver1_data_PlayerPlayCard = function(id) {
	model_ver1_game_define_CardText.call(this,id,"カードのプレイ");
	this.type = model_ver1_game_define_TextType.Automatic(model_ver1_game_define_TextTypeAutomaticType.Constant);
};
$hxClasses["model.ver1.data.PlayerPlayCard"] = model_ver1_data_PlayerPlayCard;
model_ver1_data_PlayerPlayCard.__name__ = "model.ver1.data.PlayerPlayCard";
model_ver1_data_PlayerPlayCard.__super__ = model_ver1_game_define_CardText;
model_ver1_data_PlayerPlayCard.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		switch(model_ver1_game_alg_Context_getCardType(ctx,cardId)._hx_index) {
		case 2:
			break;
		case 1:case 4:
			break;
		default:
		}
		return [new model_ver1_data_RequirePhase("" + this.id + "_RequirePhase",model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Maintenance,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free1)),new model_ver1_data_RequireGCount("" + this.id + "_RequireGCount",3),new model_ver1_data_RequireGTap("" + this.id + "_RequireGTap",[model_ver1_game_define_GColor.Black,model_ver1_game_define_GColor.Black],ctx,runtime)];
	}
	,action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		var responsePlayerId = runtime.getResponsePlayerId();
		var from = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
		switch(model_ver1_game_alg_Context_getCardType(ctx,cardId)._hx_index) {
		case 0:case 1:case 3:case 4:
			var to = model_ver1_game_define_BaSyou.Default(responsePlayerId,model_ver1_game_define_BaSyouKeyword.PlayedCard);
			model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
			ctx.table.cards.h[cardId].isFaceUp = true;
			break;
		default:
		}
		switch(model_ver1_game_alg_Context_getCardType(ctx,cardId)._hx_index) {
		case 2:
			break;
		case 0:case 1:case 3:case 4:
			var block = new model_ver1_game_define_Block("" + this.id + "_" + Std.string(new Date()),model_ver1_game_define_BlockCause.PlayCard(responsePlayerId,cardId),new model_ver1_data__$PlayerPlayCard_EnterFieldEffect("" + this.id + "_PlayerPlayCardEffect"));
			model_ver1_game_alg_Cut_cutIn(ctx,block);
			break;
		case 5:
			var to = model_ver1_game_define_BaSyou.Default(responsePlayerId,model_ver1_game_define_BaSyouKeyword.GZone);
			model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
			break;
		default:
			throw new haxe_Exception("unsupport type");
		}
	}
	,getCLID: function() {
		return model_ver1_data_PlayerPlayCard.__clid;
	}
	,__class__: model_ver1_data_PlayerPlayCard
});
var model_ver1_data__$PlayerPlayCard_EnterFieldEffect = function(id) {
	model_ver1_game_define_CardText.call(this,id,"場に出る効果");
};
$hxClasses["model.ver1.data._PlayerPlayCard.EnterFieldEffect"] = model_ver1_data__$PlayerPlayCard_EnterFieldEffect;
model_ver1_data__$PlayerPlayCard_EnterFieldEffect.__name__ = "model.ver1.data._PlayerPlayCard.EnterFieldEffect";
model_ver1_data__$PlayerPlayCard_EnterFieldEffect.__super__ = model_ver1_game_define_CardText;
model_ver1_data__$PlayerPlayCard_EnterFieldEffect.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		var responsePlayerId = runtime.getResponsePlayerId();
		var from = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
		switch(model_ver1_game_alg_Context_getCardType(ctx,cardId)._hx_index) {
		case 0:
			var to = model_ver1_game_define_BaSyou.Default(responsePlayerId,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
			model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
			ctx.table.cards.h[cardId].isTap = true;
			var enterFieldMark = new model_ver1_game_define_EnterFieldThisTurnMark("" + this.id + "_EnterFieldMark",cardId);
			ctx.marks.h[enterFieldMark.id] = enterFieldMark;
			model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.CardEnterField(cardId));
			break;
		case 1:
			break;
		case 2:
			break;
		case 3:
			var to = model_ver1_game_define_BaSyou.Default(responsePlayerId,model_ver1_game_define_BaSyouKeyword.MaintenanceArea);
			model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
			ctx.table.cards.h[cardId].isTap = false;
			model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.CardEnterField(cardId));
			break;
		case 4:
			break;
		default:
			throw new haxe_Exception("unsupport type");
		}
	}
	,getCLID: function() {
		return model_ver1_data__$PlayerPlayCard_EnterFieldEffect.__clid;
	}
	,__class__: model_ver1_data__$PlayerPlayCard_EnterFieldEffect
});
var model_ver1_data_PlayerPlayG = function(id) {
	model_ver1_game_define_CardText.call(this,id,"Gのプレイ");
};
$hxClasses["model.ver1.data.PlayerPlayG"] = model_ver1_data_PlayerPlayG;
model_ver1_data_PlayerPlayG.__name__ = "model.ver1.data.PlayerPlayG";
model_ver1_data_PlayerPlayG.__super__ = model_ver1_game_define_CardText;
model_ver1_data_PlayerPlayG.prototype = $extend(model_ver1_game_define_CardText.prototype,{
	getRequires: function(ctx,runtime) {
		return [];
	}
	,action: function(ctx,runtime) {
		var cardId = runtime.getCardId();
		var responsePlayerId = runtime.getResponsePlayerId();
		var from = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
		var to = model_ver1_game_define_BaSyou.Default(responsePlayerId,model_ver1_game_define_BaSyouKeyword.GZone);
		ctx.table.cards.h[cardId].isReverse = true;
		model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
	}
	,getCLID: function() {
		return model_ver1_data_PlayerPlayG.__clid;
	}
	,__class__: model_ver1_data_PlayerPlayG
});
var model_ver1_data_RequirePhase = function(id,timing) {
	model_ver1_game_define_Require.call(this,id,"RequirePhase");
	this.timing = timing;
};
$hxClasses["model.ver1.data.RequirePhase"] = model_ver1_data_RequirePhase;
model_ver1_data_RequirePhase.__name__ = "model.ver1.data.RequirePhase";
model_ver1_data_RequirePhase.__super__ = model_ver1_game_define_Require;
model_ver1_data_RequirePhase.prototype = $extend(model_ver1_game_define_Require.prototype,{
	timing: null
	,action: function(ctx,runtime) {
		if(Type.enumEq(ctx.timing,this.timing) == false) {
			throw new haxe_Exception("ctx.phase != this.phase: " + Std.string(ctx.timing) + " != " + Std.string(this.timing));
		}
	}
	,__class__: model_ver1_data_RequirePhase
});
var model_ver1_data_RequireGTap = function(id,colors,ctx,runtime) {
	model_ver1_data_RequireUserSelectCard.call(this,id,"RequireGTap");
	var responsePlayerId = runtime.getResponsePlayerId();
	var gCardIds = model_ver1_game_alg_Context_getPlayerGCardIds(ctx,responsePlayerId);
	var _g = [];
	var _g1 = 0;
	var _g2 = gCardIds;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var _g3 = model_ver1_game_alg_Context_getCardGSign(ctx,v);
		var _g4 = _g3.property;
		var color = _g3.color;
		var cardColor = color;
		if(colors.indexOf(cardColor) != -1) {
			_g.push(v);
		}
	}
	var tips = _g;
	this.tips = tips;
	this.lengthInclude = [2];
};
$hxClasses["model.ver1.data.RequireGTap"] = model_ver1_data_RequireGTap;
model_ver1_data_RequireGTap.__name__ = "model.ver1.data.RequireGTap";
model_ver1_data_RequireGTap.__super__ = model_ver1_data_RequireUserSelectCard;
model_ver1_data_RequireGTap.prototype = $extend(model_ver1_data_RequireUserSelectCard.prototype,{
	action: function(ctx,runtime) {
		var selectIds = ctx.memory.playerSelection.cardIds.h[this.id];
		if(selectIds == null) {
			throw new haxe_Exception("selectIds not found");
		}
		var _g = 0;
		while(_g < selectIds.length) {
			var cardId = selectIds[_g];
			++_g;
			model_ver1_game_alg_Context_tapCard(ctx,cardId);
		}
	}
	,__class__: model_ver1_data_RequireGTap
});
var model_ver1_data_ForceTargetCard = function(id,description,selectKey,cardId) {
	model_ver1_game_define_Require.call(this,id,description);
	this.selectKey = selectKey;
	this.cardId = cardId;
};
$hxClasses["model.ver1.data.ForceTargetCard"] = model_ver1_data_ForceTargetCard;
model_ver1_data_ForceTargetCard.__name__ = "model.ver1.data.ForceTargetCard";
model_ver1_data_ForceTargetCard.__super__ = model_ver1_game_define_Require;
model_ver1_data_ForceTargetCard.prototype = $extend(model_ver1_game_define_Require.prototype,{
	cardId: null
	,selectKey: null
	,action: function(ctx,runtime) {
		var selectCard = ctx.table.cards.h[this.cardId];
		if(selectCard == null) {
			throw new haxe_Exception("指定的卡不存在: " + this.cardId);
		}
		var v = [this.cardId];
		ctx.memory.playerSelection.cardIds.h[this.selectKey] = v;
	}
	,__class__: model_ver1_data_ForceTargetCard
});
var model_ver1_data_RequireGCount = function(id,count) {
	model_ver1_game_define_Require.call(this,id,"RequireGCount");
	this.count = count;
};
$hxClasses["model.ver1.data.RequireGCount"] = model_ver1_data_RequireGCount;
model_ver1_data_RequireGCount.__name__ = "model.ver1.data.RequireGCount";
model_ver1_data_RequireGCount.__super__ = model_ver1_game_define_Require;
model_ver1_data_RequireGCount.prototype = $extend(model_ver1_game_define_Require.prototype,{
	count: null
	,action: function(ctx,runtime) {
		var responsePlayerId = runtime.getResponsePlayerId();
		var gCount = model_ver1_game_alg_Context_getPlayerGCountForPlay(ctx,responsePlayerId);
		if(gCount < this.count) {
			throw new haxe_Exception("g count not enougth: " + gCount + " < " + this.count);
		}
	}
	,__class__: model_ver1_data_RequireGCount
});
var model_ver1_data_RequireUserSelectBattlePoint = function(id,description) {
	model_ver1_data_RequireUserSelect.call(this,id,description);
};
$hxClasses["model.ver1.data.RequireUserSelectBattlePoint"] = model_ver1_data_RequireUserSelectBattlePoint;
model_ver1_data_RequireUserSelectBattlePoint.__name__ = "model.ver1.data.RequireUserSelectBattlePoint";
model_ver1_data_RequireUserSelectBattlePoint.__super__ = model_ver1_data_RequireUserSelect;
model_ver1_data_RequireUserSelectBattlePoint.prototype = $extend(model_ver1_data_RequireUserSelect.prototype,{
	__class__: model_ver1_data_RequireUserSelectBattlePoint
});
function model_ver1_data_RequireImpl_getRequirePhase(ctx,runtime,timing,id) {
	return { id : id, description : "RequirePhase", type : model_ver1_game_define_RequireType.Pending, action : function() {
		if(Type.enumEq(ctx.timing,timing) == false) {
			throw new haxe_Exception("ctx.phase != this.phase: " + Std.string(ctx.timing) + " != " + Std.string(timing));
		}
	}};
}
function model_ver1_data_RequireImpl_getRequireGTap(ctx,runtime,colors,id) {
	var responsePlayerId = runtime.getResponsePlayerId();
	var gCardIds = model_ver1_game_alg_Context_getPlayerGCardIds(ctx,responsePlayerId);
	var _g = [];
	var _g1 = 0;
	var _g2 = gCardIds;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var _g3 = model_ver1_game_alg_Context_getCardGSign(ctx,v);
		var _g4 = _g3.property;
		var color = _g3.color;
		var cardColor = color;
		if(colors.indexOf(cardColor) != -1) {
			_g.push(v);
		}
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = { value : _this[i], weight : 0.0};
	}
	var tips = result;
	return { id : id, description : "RequireGTap", type : model_ver1_game_define_RequireType.SelectCard(tips,[2]), action : function() {
		var selectIds = ctx.memory.playerSelection.cardIds.h[id];
		if(selectIds == null) {
			throw new haxe_Exception("selectIds not found");
		}
		var _g = 0;
		while(_g < selectIds.length) {
			var cardId = selectIds[_g];
			++_g;
			model_ver1_game_alg_Context_tapCard(ctx,cardId);
		}
	}};
}
function model_ver1_data_RequireImpl_getRequireOpponentUnitsEnterFieldThisTurn(ctx,runtime,id) {
	var thisCardId = runtime.getCardId();
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Context_getEnterFieldThisTurnCardIds(ctx);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(model_ver1_game_alg_Context_isOpponentsCard(ctx,thisCardId,v)) {
			_g.push(v);
		}
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var _g = model_ver1_game_alg_Context_getCardEntityCategory(ctx,v);
		if(_g._hx_index == 0 && _g.v._hx_index == 0) {
			_g1.push(v);
		}
	}
	var unitsEnterFieldThisTurn = _g1;
	var result = new Array(unitsEnterFieldThisTurn.length);
	var _g = 0;
	var _g1 = unitsEnterFieldThisTurn.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = { value : unitsEnterFieldThisTurn[i], weight : 0.0};
	}
	var tips = result;
	return { id : id, description : "このターン中に場に出た敵軍ユニット１枚を", type : model_ver1_game_define_RequireType.SelectCard(tips,[1]), action : function() {
	}};
}
var model_ver1_game_Game = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.ctx = new model_ver1_game_define_Context();
};
$hxClasses["model.ver1.game.Game"] = model_ver1_game_Game;
model_ver1_game_Game.__name__ = "model.ver1.game.Game";
model_ver1_game_Game.__interfaces__ = [hxbit_Serializable];
model_ver1_game_Game.ofMemonto = function(memonto) {
	return tool_Helper_ofMemonto(memonto,model_ver1_game_Game);
};
model_ver1_game_Game.prototype = {
	ctx: null
	,getMemonto: function() {
		return tool_Helper_getMemonto(this);
	}
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_Game.__clid;
	}
	,serialize: function(__ctx) {
		__ctx.addKnownRef(this.ctx);
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("ctx");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PSerializable("model.ver1.game.define.Context"));
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_Game.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.ctx = new model_ver1_game_define_Context();
	}
	,unserialize: function(__ctx) {
		this.ctx = __ctx.getRef(model_ver1_game_define_Context,model_ver1_game_define_Context.__clid);
	}
	,__class__: model_ver1_game_Game
};
function model_ver1_game_Game_test() {
	var game = new model_ver1_game_Game();
	var card1 = new tool_Card("0");
	card1.protoId = "179003_01A_U_BK008U_black";
	var card2 = new tool_Card("1");
	card2.protoId = "179003_01A_U_BK008U_black";
	game.ctx.table.cards.h[card1.id] = card1;
	game.ctx.table.cards.h[card2.id] = card2;
	var loadGame = model_ver1_game_Game.ofMemonto(game.getMemonto());
	if(loadGame.ctx.table.cards.h[card1.id].id != card1.id) {
		throw new haxe_Exception("loadGame.ctx.table.cards[card1.id].id != card1.id");
	}
	if(loadGame.ctx.table.cards.h[card2.id].id != card2.id) {
		throw new haxe_Exception("loadGame.ctx.table.cards[card2.id].id != card2.id");
	}
}
function model_ver1_game_alg_Block_getBlocks(ctx) {
	return Lambda.fold(ctx.cuts,function(c,a) {
		return a.concat(c);
	},[]);
}
function model_ver1_game_alg_Block_getBlock(ctx,blockId) {
	var blocks = model_ver1_game_alg_Block_getBlocks(ctx);
	var _g = [];
	var _g1 = 0;
	var _g2 = blocks;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v.id == blockId) {
			_g.push(v);
		}
	}
	var findBlock = _g;
	if(findBlock.length == 0) {
		throw new haxe_Exception("block not found");
	}
	return findBlock[0];
}
function model_ver1_game_alg_Block_getBlockRuntime(ctx,blockId) {
	var block = model_ver1_game_alg_Block_getBlock(ctx,blockId);
	var _g = block.cause;
	switch(_g._hx_index) {
	case 1:
		var respnosePlayerId = _g.respnosePlayerId;
		return new model_ver1_game_define_SystemExecuteRuntime(respnosePlayerId);
	case 2:
		var playCardPlayerId = _g.playerId;
		var cardId = _g.cardId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(playCardPlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + playCardPlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = playCardPlayerId;
		return new model_ver1_game_define_DefaultExecuteRuntime(cardId,this1);
	case 3:
		var cardId = _g.cardId;
		var textId = _g.textId;
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,cardId);
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		return new model_ver1_game_define_DefaultExecuteRuntime(cardId,this1);
	case 4:
		var cardId = _g.cardId;
		var textId = _g.textId;
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,cardId);
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		return new model_ver1_game_define_DefaultExecuteRuntime(cardId,this1);
	default:
		return new model_ver1_game_define_AbstractExecuteRuntime();
	}
}
function model_ver1_game_alg_Block_removeBlock(ctx,blockId) {
	var block = model_ver1_game_alg_Block_getBlock(ctx,blockId);
	var _g = 0;
	var _g1 = ctx.cuts;
	while(_g < _g1.length) {
		var cut = _g1[_g];
		++_g;
		HxOverrides.remove(cut,block);
	}
}
function model_ver1_game_alg_CardProto_registerCardProto(ctx,key,proto) {
	ctx.cardProtoPool.h[key] = proto;
}
function model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,key) {
	var obj = ctx.cardProtoPool.h[key];
	if(obj == null) {
		return model_ver1_game_data_DataBinding_getCardProto(key);
	}
	return obj;
}
function model_ver1_game_alg_Context_returnToOwnerHand(ctx,cardId) {
	var from = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
	var to = model_ver1_game_define_BaSyou.Default(model_ver1_game_alg_Context_getCardOwner(ctx,cardId),model_ver1_game_define_BaSyouKeyword.TeHuTa);
	model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to);
}
function model_ver1_game_alg_Context_getCardOwner(ctx,cardId) {
	var owner = tool_Table_getCard(ctx.table,cardId).owner;
	if(owner == null) {
		throw haxe_Exception.thrown("owner not set yet");
	}
	return owner;
}
function model_ver1_game_alg_Context_becomeG(ctx,cardId) {
	haxe_Log.trace("將自己變成G",{ fileName : "src/model/ver1/game/alg/Context.hx", lineNumber : 35, className : "model.ver1.game.alg._Context.Context_Fields_", methodName : "becomeG"});
}
function model_ver1_game_alg_Context_getUnitOfSetGroup(ctx,cardId) {
	return haxe_ds_Option.None;
}
function model_ver1_game_alg_Context_tapCard(ctx,cardId) {
	var card = tool_Table_getCard(ctx.table,cardId);
	if(card.isTap) {
		throw new haxe_Exception("already tap");
	}
	card.isTap = true;
	model_ver1_game_alg_Context_sendEvent(ctx,model_ver1_game_define_Event.CardRoll(card.id));
}
function model_ver1_game_alg_Context_moveCard(ctx,cardId,from,to) {
	var playerId = from.playerId;
	var baSyouKeyword = from.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var playerId = to.playerId;
	var baSyouKeyword = to.baSyouKeyword;
	var this2 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	tool_Table_moveCard(ctx.table,cardId,this1,this2);
}
function model_ver1_game_alg_Context_sendEvent(ctx,evt) {
	var _g = 0;
	var _g1 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g < _g1.length) {
		var info = _g1[_g];
		++_g;
		var runtime = info.runtime;
		var text = info.text;
		text.onEvent(ctx,evt,runtime);
	}
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		mark.onEvent(ctx,evt);
	}
}
function model_ver1_game_alg_Context_getCardType(ctx,cardId) {
	var proto = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,tool_Table_getCard(ctx.table,cardId).protoId);
	return proto.category;
}
function model_ver1_game_alg_Context_getCardEntityCategory(ctx,cardId) {
	var _g = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
	var _g1 = _g.playerId;
	var _g1 = _g.baSyouKeyword;
	if(_g1._hx_index == 5) {
		return haxe_ds_Option.Some(model_ver1_game_define_CardEntityCategory.G);
	} else {
		var kw = _g1;
		if(model_ver1_game_define_BaSyou_isBa(kw)) {
			switch(model_ver1_game_alg_Context_getCardType(ctx,cardId)._hx_index) {
			case 0:
				return haxe_ds_Option.Some(model_ver1_game_define_CardEntityCategory.Unit);
			case 1:
				return haxe_ds_Option.Some(model_ver1_game_define_CardEntityCategory.Character);
			case 3:case 4:
				return haxe_ds_Option.Some(model_ver1_game_define_CardEntityCategory.Operation);
			default:
				throw haxe_Exception.thrown("不知到為什麼在這裡:" + Std.string(kw) + ":" + cardId);
			}
		} else {
			return haxe_ds_Option.None;
		}
	}
}
function model_ver1_game_alg_Context_getThisCardSetGroupCardIds(ctx,cardId) {
	return [cardId];
}
function model_ver1_game_alg_Context_getPlayerSelectionCardId(ctx,key) {
	var selection = ctx.memory.playerSelection.cardIds.h[key];
	if(selection == null) {
		throw new haxe_Exception("selection not found");
	}
	return selection;
}
function model_ver1_game_alg_Context_setPlayerSelectionCardId(ctx,key,values) {
	ctx.memory.playerSelection.cardIds.h[key] = values;
}
function model_ver1_game_alg_Context_getCardController(ctx,cardId) {
	var _g = model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId);
	if(_g._hx_index == 0) {
		var playerId = _g.playerId;
		var baSyouKeyword = _g.baSyouKeyword;
		if(model_ver1_game_define_BaSyou_isBa(baSyouKeyword)) {
			return haxe_ds_Option.Some(playerId);
		} else {
			return haxe_ds_Option.None;
		}
	} else {
		return haxe_ds_Option.None;
	}
}
function model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,cardId) {
	var _g = model_ver1_game_alg_Context_getCardController(ctx,cardId);
	if(_g._hx_index == 0) {
		var playerId = _g.v;
		return playerId;
	} else {
		throw new haxe_Exception("卡片被除外，沒有控制者");
	}
}
function model_ver1_game_alg_Context_getBaSyouController(ctx,baSyou) {
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	return haxe_ds_Option.Some(playerId);
}
function model_ver1_game_alg_Context_getBaSyouControllerAndAssertExist(ctx,baSyou) {
	var _g = model_ver1_game_alg_Context_getBaSyouController(ctx,baSyou);
	if(_g._hx_index == 0) {
		var playerId = _g.v;
		return playerId;
	} else {
		throw new haxe_Exception("沒有控制者");
	}
}
function model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,cardId) {
	var _g = tool_Table_getCardCardStack(ctx.table,cardId);
	if(_g._hx_index == 0) {
		var cardStack = _g.v;
		var this1 = cardStack.id;
		var ret = this1;
		model_ver1_game_define_BaSyouId.toBaSyou(ret);
		return model_ver1_game_define_BaSyouId.toBaSyou(ret);
	} else {
		haxe_Log.trace(ctx,{ fileName : "src/model/ver1/game/alg/Context.hx", lineNumber : 162, className : "model.ver1.game.alg._Context.Context_Fields_", methodName : "getCardBaSyouAndAssertExist"});
		throw new haxe_Exception("card baSyou not found: " + cardId);
	}
}
function model_ver1_game_alg_Context_getCardGSign(ctx,cardId) {
	return model_ver1_game_define_GSign.Default(model_ver1_game_define_GColor.Red,model_ver1_game_define_GProperty.Uc);
}
function model_ver1_game_alg_Context_getPlayerGCountForPlay(ctx,playerId) {
	return 0;
}
function model_ver1_game_alg_Context_getPlayerGCardIds(ctx,playerId) {
	return [];
}
function model_ver1_game_alg_Context_getCardSetGroupCardIds(ctx,cardId) {
	return [cardId];
}
function model_ver1_game_alg_Context_isMyCard(ctx,masterCardId,slaveCardId) {
	var _g = model_ver1_game_alg_Context_getCardController(ctx,masterCardId);
	var _g1 = model_ver1_game_alg_Context_getCardController(ctx,slaveCardId);
	if(_g._hx_index == 0) {
		if(_g1._hx_index == 0) {
			var c2 = _g1.v;
			var c1 = _g.v;
			if(c1 == c2) {
				return true;
			} else {
				return false;
			}
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function model_ver1_game_alg_Context_isOpponentsCard(ctx,masterCardId,slaveCardId) {
	var _g = model_ver1_game_alg_Context_getCardController(ctx,masterCardId);
	var _g1 = model_ver1_game_alg_Context_getCardController(ctx,slaveCardId);
	if(_g._hx_index == 0) {
		if(_g1._hx_index == 0) {
			var c2 = _g1.v;
			var c1 = _g.v;
			if(c1 != c2) {
				return true;
			} else {
				return false;
			}
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function model_ver1_game_alg_Context_getEnterFieldThisTurnCardIds(ctx) {
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getMarkEffects(ctx);
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var tmp;
		if(v._hx_index == 3) {
			var _g3 = v.cardId;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			_g.push(v);
		}
	}
	var _this = _g;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		var e = _this[i];
		var tmp;
		if(e._hx_index == 3) {
			var cardId = e.cardId;
			tmp = cardId;
		} else {
			throw haxe_Exception.thrown("should not go here");
		}
		result[i] = tmp;
	}
	return result;
}
function model_ver1_game_alg_Context_getAddBattlePoint(ctx) {
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g1 < _g2.length) {
		var info = _g2[_g1];
		++_g1;
		var runtime = info.runtime;
		var text = info.text;
		var effects = text.getEffect(ctx,runtime);
		var _g3 = 0;
		while(_g3 < effects.length) {
			var effect = effects[_g3];
			++_g3;
			var tmp;
			if(effect._hx_index == 0) {
				var cardId = effect.cardId;
				var battlePoint = effect.battlePoint;
				tmp = { cardId : cardId, battlePoint : battlePoint};
			} else {
				tmp = null;
			}
			_g.push(tmp);
		}
	}
	var infos = _g;
}
function model_ver1_game_alg_Context_getAttackSpeed(ctx) {
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g1 < _g2.length) {
		var info = _g2[_g1];
		++_g1;
		var runtime = info.runtime;
		var text = info.text;
		var effects = text.getEffect(ctx,runtime);
		var _g3 = 0;
		while(_g3 < effects.length) {
			var effect = effects[_g3];
			++_g3;
			var tmp;
			if(effect._hx_index == 1) {
				var cardId = effect.cardId;
				var speed = effect.speed;
				tmp = { cardId : cardId, speed : speed};
			} else {
				tmp = null;
			}
			_g.push(tmp);
		}
	}
	var infos = _g;
}
function model_ver1_game_alg_Cut_getTopCut(ctx) {
	if(ctx.cuts.length == 0) {
		ctx.cuts.push([]);
	}
	var topCut = ctx.cuts[ctx.cuts.length - 1];
	return topCut;
}
function model_ver1_game_alg_Cut_cutIn(ctx,block) {
	model_ver1_game_alg_Cut_getTopCut(ctx).push(block);
}
function model_ver1_game_alg_Cut_newCut(ctx,block) {
	ctx.cuts.push([block]);
}
function model_ver1_game_alg_Destroy_isDestroyNow(ctx,cardId,condition) {
	var condition1 = condition.isByBattleDamage;
	return false;
}
function model_ver1_game_alg_Destroy_removeDestroyEffect(ctx,cardId) {
	haxe_Log.trace("移除堆疊中的破壞效果",{ fileName : "src/model/ver1/game/alg/Destroy.hx", lineNumber : 14, className : "model.ver1.game.alg._Destroy.Destroy_Fields_", methodName : "removeDestroyEffect"});
}
function model_ver1_game_alg_Runtime_isContantType(text) {
	var _g = text.type;
	if(_g._hx_index == 0) {
		if(_g.type._hx_index == 2) {
			return true;
		} else {
			return false;
		}
	} else {
		return false;
	}
}
function model_ver1_game_alg_Runtime_getRuntimeText(ctx) {
	var _g = [];
	var h = ctx.table.cardStacks.h;
	var cs_h = h;
	var cs_keys = Object.keys(h);
	var cs_length = cs_keys.length;
	var cs_current = 0;
	while(cs_current < cs_length) {
		var cs = cs_h[cs_keys[cs_current++]];
		_g.push(cs);
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var _this;
		var this1 = v.id;
		var ret = this1;
		model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g = model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g4 = _g.playerId;
		switch(_g.baSyouKeyword._hx_index) {
		case 7:case 8:
			_this = true;
			break;
		default:
			_this = false;
		}
		if(_this) {
			_g1.push(v);
		}
	}
	var _this = _g1;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].cardIds;
	}
	var _this = Lambda.fold(result,function(c,a) {
		return a.concat(c);
	},[]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = ctx.table.cards.h[_this[i]];
	}
	var cardsInHandAndHanger = result;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cardsInHandAndHanger.length) {
		var card = cardsInHandAndHanger[_g1];
		++_g1;
		var responsePlayerId = model_ver1_game_alg_Context_getBaSyouControllerAndAssertExist(ctx,model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,card.id));
		var card1 = card.id;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card1,this1);
		var _g2 = 0;
		var f = model_ver1_game_alg_Runtime_isContantType;
		var _g3 = [];
		var _g4 = 0;
		var _g5 = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,card.protoId).getTexts(ctx,runtime);
		while(_g4 < _g5.length) {
			var v = _g5[_g4];
			++_g4;
			if(f(v)) {
				_g3.push(v);
			}
		}
		var _g6 = _g3;
		while(_g2 < _g6.length) {
			var text = _g6[_g2];
			++_g2;
			_g.push({ runtime : runtime, text : text});
		}
	}
	var playReturn = _g;
	var _g = [];
	var h = ctx.table.cardStacks.h;
	var cs_h = h;
	var cs_keys = Object.keys(h);
	var cs_length = cs_keys.length;
	var cs_current = 0;
	while(cs_current < cs_length) {
		var cs = cs_h[cs_keys[cs_current++]];
		_g.push(cs);
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var this1 = v.id;
		var ret = this1;
		model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g = model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g4 = _g.playerId;
		if(_g.baSyouKeyword._hx_index == 5) {
			_g1.push(v);
		}
	}
	var _this = _g1;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].cardIds;
	}
	var _this = Lambda.fold(result,function(c,a) {
		return a.concat(c);
	},[]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = ctx.table.cards.h[_this[i]];
	}
	var cardsInGZone = result;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cardsInGZone.length) {
		var card = cardsInGZone[_g1];
		++_g1;
		var responsePlayerId = model_ver1_game_alg_Context_getBaSyouControllerAndAssertExist(ctx,model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,card.id));
		var card1 = card.id;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card1,this1);
		var _g2 = 0;
		var _g3 = [];
		var _g4 = 0;
		var _g5 = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,card.protoId).getTexts(ctx,runtime);
		while(_g4 < _g5.length) {
			var v = _g5[_g4];
			++_g4;
			if(v.isSurroundedByArrows) {
				_g3.push(v);
			}
		}
		var _g6 = _g3;
		while(_g2 < _g6.length) {
			var text = _g6[_g2];
			++_g2;
			_g.push({ runtime : runtime, text : text});
		}
	}
	var specialReturn = _g;
	var _g = [];
	var h = ctx.table.cardStacks.h;
	var cs_h = h;
	var cs_keys = Object.keys(h);
	var cs_length = cs_keys.length;
	var cs_current = 0;
	while(cs_current < cs_length) {
		var cs = cs_h[cs_keys[cs_current++]];
		_g.push(cs);
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var this1 = v.id;
		var ret = this1;
		model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g = model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g4 = _g.playerId;
		if(_g.baSyouKeyword._hx_index == 6) {
			_g1.push(v);
		}
	}
	var _this = _g1;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].cardIds;
	}
	var _this = Lambda.fold(result,function(c,a) {
		return a.concat(c);
	},[]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = ctx.table.cards.h[_this[i]];
	}
	var cardsInJunkYard = result;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cardsInJunkYard.length) {
		var card = cardsInJunkYard[_g1];
		++_g1;
		var responsePlayerId = model_ver1_game_alg_Context_getBaSyouControllerAndAssertExist(ctx,model_ver1_game_alg_Context_getCardBaSyouAndAssertExist(ctx,card.id));
		var card1 = card.id;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card1,this1);
		var _g2 = 0;
		var f = model_ver1_game_alg_Runtime_isContantType;
		var _g3 = [];
		var _g4 = 0;
		var _g5 = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,card.protoId).getTexts(ctx,runtime);
		while(_g4 < _g5.length) {
			var v = _g5[_g4];
			++_g4;
			if(f(v)) {
				_g3.push(v);
			}
		}
		var _g6 = _g3;
		while(_g2 < _g6.length) {
			var text = _g6[_g2];
			++_g2;
			_g.push({ runtime : runtime, text : text});
		}
	}
	var specialReturn2 = _g;
	var _g = [];
	var h = ctx.table.cardStacks.h;
	var cs_h = h;
	var cs_keys = Object.keys(h);
	var cs_length = cs_keys.length;
	var cs_current = 0;
	while(cs_current < cs_length) {
		var cs = cs_h[cs_keys[cs_current++]];
		_g.push(cs);
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var this1 = v.id;
		var ret = this1;
		model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g = model_ver1_game_define_BaSyouId.toBaSyou(ret);
		var _g4 = _g.playerId;
		var kw = _g.baSyouKeyword;
		if(model_ver1_game_define_BaSyou_isBa(kw)) {
			_g1.push(v);
		}
	}
	var _this = _g1;
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = _this[i].cardIds;
	}
	var _this = Lambda.fold(result,function(c,a) {
		return a.concat(c);
	},[]);
	var result = new Array(_this.length);
	var _g = 0;
	var _g1 = _this.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = ctx.table.cards.h[_this[i]];
	}
	var cardsHasController = result;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cardsHasController.length) {
		var card = cardsHasController[_g1];
		++_g1;
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,card.id);
		var card1 = card.id;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card1,this1);
		var _g2 = 0;
		var _g3 = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,card.protoId).getTexts(ctx,runtime);
		while(_g2 < _g3.length) {
			var text = _g3[_g2];
			++_g2;
			_g.push({ runtime : runtime, text : text});
		}
	}
	var originReturn = _g;
	var _g = [];
	var _g1 = 0;
	while(_g1 < cardsHasController.length) {
		var card = cardsHasController[_g1];
		++_g1;
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,card.id);
		var card1 = card.id;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(card1,this1);
		var _g2 = 0;
		var _g3 = model_ver1_game_alg_CardProto_getCurrentCardProto(ctx,card.protoId).getTexts(ctx,runtime);
		while(_g2 < _g3.length) {
			var text = _g3[_g2];
			++_g2;
			var _g4 = 0;
			var _g5 = text.getEffect(ctx,runtime);
			while(_g4 < _g5.length) {
				var effect = _g5[_g4];
				++_g4;
				_g.push(effect);
			}
		}
	}
	var originMarkEffects = _g;
	var _g = [];
	var _g1 = 0;
	var _g2 = originMarkEffects;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var tmp;
		if(v._hx_index == 2) {
			var _g3 = v.cardId;
			var _g4 = v.text;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			_g.push(v);
		}
	}
	var attachTextEffect = _g;
	var result = new Array(attachTextEffect.length);
	var _g = 0;
	var _g1 = attachTextEffect.length;
	while(_g < _g1) {
		var i = _g++;
		var effect = attachTextEffect[i];
		var info;
		if(effect._hx_index == 2) {
			var cardId = effect.cardId;
			var text = effect.text;
			info = { cardId : cardId, text : text};
		} else {
			throw new haxe_Exception("addedReturn xxx");
		}
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,info.cardId);
		var info1 = info.cardId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(info1,this1);
		result[i] = { runtime : runtime, text : info.text};
	}
	var addedReturn = result;
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		var _g1 = 0;
		var _g2 = mark.getEffect(ctx);
		while(_g1 < _g2.length) {
			var effect = _g2[_g1];
			++_g1;
			_g.push(effect);
		}
	}
	var globalMarkEffects = _g;
	var _g = [];
	var _g1 = 0;
	var _g2 = globalMarkEffects;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var tmp;
		if(v._hx_index == 2) {
			var _g3 = v.cardId;
			var _g4 = v.text;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			_g.push(v);
		}
	}
	var globalAttachTextEffect = _g;
	var result = new Array(globalAttachTextEffect.length);
	var _g = 0;
	var _g1 = globalAttachTextEffect.length;
	while(_g < _g1) {
		var i = _g++;
		var effect = globalAttachTextEffect[i];
		var info;
		if(effect._hx_index == 2) {
			var cardId = effect.cardId;
			var text = effect.text;
			info = { cardId : cardId, text : text};
		} else {
			throw new haxe_Exception("globalAddedReturn xxx");
		}
		var responsePlayerId = model_ver1_game_alg_Context_getCardControllerAndAssertExist(ctx,info.cardId);
		var info1 = info.cardId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(responsePlayerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + responsePlayerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = responsePlayerId;
		var runtime = new model_ver1_game_define_DefaultExecuteRuntime(info1,this1);
		result[i] = { runtime : runtime, text : info.text};
	}
	var globalAddedReturn = result;
	return playReturn.concat(specialReturn).concat(specialReturn2).concat(originReturn).concat(addedReturn).concat(globalAddedReturn);
}
function model_ver1_game_alg_Runtime_getMarkEffects(ctx) {
	var _g = [];
	var _g1 = 0;
	var _g2 = model_ver1_game_alg_Runtime_getRuntimeText(ctx);
	while(_g1 < _g2.length) {
		var info = _g2[_g1];
		++_g1;
		var runtime = info.runtime;
		var text = info.text;
		var effects = text.getEffect(ctx,runtime);
		var _g3 = 0;
		while(_g3 < effects.length) {
			var effect = effects[_g3];
			++_g3;
			_g.push(effect);
		}
	}
	var textEffects = _g;
	var _g = [];
	var h = ctx.marks.h;
	var mark_h = h;
	var mark_keys = Object.keys(h);
	var mark_length = mark_keys.length;
	var mark_current = 0;
	while(mark_current < mark_length) {
		var mark = mark_h[mark_keys[mark_current++]];
		var effects = mark.getEffect(ctx);
		var _g1 = 0;
		while(_g1 < effects.length) {
			var effect = effects[_g1];
			++_g1;
			_g.push(effect);
		}
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		var tmp;
		if(v._hx_index == 2) {
			var _g = v.cardId;
			var _g4 = v.text;
			tmp = false;
		} else {
			tmp = true;
		}
		if(tmp) {
			_g1.push(v);
		}
	}
	var markEffects = _g1;
	return textEffects.concat(markEffects);
}
var model_ver1_game_define_CardCategory = $hxEnums["model.ver1.game.define.CardCategory"] = { __ename__:true,__constructs__:null
	,Unit: {_hx_name:"Unit",_hx_index:0,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,Character: {_hx_name:"Character",_hx_index:1,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,Command: {_hx_name:"Command",_hx_index:2,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,Operation: {_hx_name:"Operation",_hx_index:3,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,OperationUnit: {_hx_name:"OperationUnit",_hx_index:4,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,Graphic: {_hx_name:"Graphic",_hx_index:5,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
	,Ace: {_hx_name:"Ace",_hx_index:6,__enum__:"model.ver1.game.define.CardCategory",toString:$estr}
};
model_ver1_game_define_CardCategory.__constructs__ = [model_ver1_game_define_CardCategory.Unit,model_ver1_game_define_CardCategory.Character,model_ver1_game_define_CardCategory.Command,model_ver1_game_define_CardCategory.Operation,model_ver1_game_define_CardCategory.OperationUnit,model_ver1_game_define_CardCategory.Graphic,model_ver1_game_define_CardCategory.Ace];
function model_ver1_game_data_DataBinding_getCardProto(key) {
	var obj = model_ver1_game_data_DataBinding__cardProtoPool.h[key];
	if(obj == null) {
		throw new haxe_Exception("" + key + " not found");
	}
	return obj;
}
var model_ver1_game_define_BaSyouKeyword = $hxEnums["model.ver1.game.define.BaSyouKeyword"] = { __ename__:true,__constructs__:null
	,HonGoku: {_hx_name:"HonGoku",_hx_index:0,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,SuteYama: {_hx_name:"SuteYama",_hx_index:1,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,SpaceArea: {_hx_name:"SpaceArea",_hx_index:2,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,EarchArea: {_hx_name:"EarchArea",_hx_index:3,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,MaintenanceArea: {_hx_name:"MaintenanceArea",_hx_index:4,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,GZone: {_hx_name:"GZone",_hx_index:5,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,JunkYard: {_hx_name:"JunkYard",_hx_index:6,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,TeHuTa: {_hx_name:"TeHuTa",_hx_index:7,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,Hanger: {_hx_name:"Hanger",_hx_index:8,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,PlayedCard: {_hx_name:"PlayedCard",_hx_index:9,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
	,RemovedCard: {_hx_name:"RemovedCard",_hx_index:10,__enum__:"model.ver1.game.define.BaSyouKeyword",toString:$estr}
};
model_ver1_game_define_BaSyouKeyword.__constructs__ = [model_ver1_game_define_BaSyouKeyword.HonGoku,model_ver1_game_define_BaSyouKeyword.SuteYama,model_ver1_game_define_BaSyouKeyword.SpaceArea,model_ver1_game_define_BaSyouKeyword.EarchArea,model_ver1_game_define_BaSyouKeyword.MaintenanceArea,model_ver1_game_define_BaSyouKeyword.GZone,model_ver1_game_define_BaSyouKeyword.JunkYard,model_ver1_game_define_BaSyouKeyword.TeHuTa,model_ver1_game_define_BaSyouKeyword.Hanger,model_ver1_game_define_BaSyouKeyword.PlayedCard,model_ver1_game_define_BaSyouKeyword.RemovedCard];
var model_ver1_game_define_BaSyou = $hxEnums["model.ver1.game.define.BaSyou"] = { __ename__:true,__constructs__:null
	,Default: ($_=function(playerId,baSyouKeyword) { return {_hx_index:0,playerId:playerId,baSyouKeyword:baSyouKeyword,__enum__:"model.ver1.game.define.BaSyou",toString:$estr}; },$_._hx_name="Default",$_.__params__ = ["playerId","baSyouKeyword"],$_)
};
model_ver1_game_define_BaSyou.__constructs__ = [model_ver1_game_define_BaSyou.Default];
var model_ver1_game_define_BaSyouId = {};
model_ver1_game_define_BaSyouId._new = function(i) {
	var this1 = i;
	return this1;
};
model_ver1_game_define_BaSyouId.toBaSyou = function(this1) {
	try {
		var pair = this1.split(model_ver1_game_define_BaSyouId._split);
		var s = pair[0];
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this2 = s;
		var playerId = this2;
		var kw = Type.createEnum(model_ver1_game_define_BaSyouKeyword,pair[1],null);
		return model_ver1_game_define_BaSyou.Default(playerId,kw);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g);
		haxe_Log.trace(e,{ fileName : "src/model/ver1/game/define/BaSyou.hx", lineNumber : 79, className : "model.ver1.game.define._BaSyou.BaSyouId_Impl_", methodName : "toBaSyou"});
		throw haxe_Exception.thrown("can not parse BaSyou (" + this1 + "), because " + Std.string(e));
	}
};
model_ver1_game_define_BaSyouId.fromString = function(v) {
	var this1 = v;
	var ret = this1;
	model_ver1_game_define_BaSyouId.toBaSyou(ret);
	return ret;
};
model_ver1_game_define_BaSyouId.fromBaSyou = function(baSyou) {
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	return this1;
};
function model_ver1_game_define_BaSyou_isBattleArea(k) {
	switch(k._hx_index) {
	case 2:case 3:
		return true;
	default:
		return false;
	}
}
function model_ver1_game_define_BaSyou_isMaintenanceArea(k) {
	switch(k._hx_index) {
	case 4:case 5:
		return true;
	default:
		return false;
	}
}
function model_ver1_game_define_BaSyou_isBa(k) {
	if(model_ver1_game_define_BaSyou_isBattleArea(k)) {
		return true;
	}
	if(model_ver1_game_define_BaSyou_isMaintenanceArea(k)) {
		return true;
	}
	return false;
}
function model_ver1_game_define_BaSyou_test() {
	var b1 = model_ver1_game_define_BaSyou.Default(model_ver1_game_define_PlayerId.A,model_ver1_game_define_BaSyouKeyword.HonGoku);
	var playerId = b1.playerId;
	var baSyouKeyword = b1.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var csId = this1;
	var b2 = model_ver1_game_define_BaSyouId.toBaSyou(csId);
	if(Type.enumEq(b1,b2) == false) {
		throw new haxe_Exception("b1 must equals b2");
	}
	var b3 = model_ver1_game_define_BaSyou.Default(model_ver1_game_define_PlayerId.A,model_ver1_game_define_BaSyouKeyword.HonGoku);
	var playerId = b3.playerId;
	var baSyouKeyword = b3.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var csId3 = this1;
	if(csId != csId3) {
		throw haxe_Exception.thrown("csId != csId3");
	}
	var this1 = "A@@@Hanger";
	var ret = this1;
	model_ver1_game_define_BaSyouId.toBaSyou(ret);
	var b4 = ret;
	var baSyou = model_ver1_game_define_BaSyou.Default(model_ver1_game_define_PlayerId.A,model_ver1_game_define_BaSyouKeyword.Hanger);
	var playerId = baSyou.playerId;
	var baSyouKeyword = baSyou.baSyouKeyword;
	var this1 = "" + playerId + model_ver1_game_define_BaSyouId._split + $hxEnums[baSyouKeyword.__enum__].__constructs__[baSyouKeyword._hx_index]._hx_name;
	var b5 = this1;
}
var model_ver1_game_define_BlockCause = $hxEnums["model.ver1.game.define.BlockCause"] = { __ename__:true,__constructs__:null
	,Pending: {_hx_name:"Pending",_hx_index:0,__enum__:"model.ver1.game.define.BlockCause",toString:$estr}
	,System: ($_=function(respnosePlayerId) { return {_hx_index:1,respnosePlayerId:respnosePlayerId,__enum__:"model.ver1.game.define.BlockCause",toString:$estr}; },$_._hx_name="System",$_.__params__ = ["respnosePlayerId"],$_)
	,PlayCard: ($_=function(playerId,cardId) { return {_hx_index:2,playerId:playerId,cardId:cardId,__enum__:"model.ver1.game.define.BlockCause",toString:$estr}; },$_._hx_name="PlayCard",$_.__params__ = ["playerId","cardId"],$_)
	,PlayText: ($_=function(cardId,textId) { return {_hx_index:3,cardId:cardId,textId:textId,__enum__:"model.ver1.game.define.BlockCause",toString:$estr}; },$_._hx_name="PlayText",$_.__params__ = ["cardId","textId"],$_)
	,TextEffect: ($_=function(cardId,textId) { return {_hx_index:4,cardId:cardId,textId:textId,__enum__:"model.ver1.game.define.BlockCause",toString:$estr}; },$_._hx_name="TextEffect",$_.__params__ = ["cardId","textId"],$_)
};
model_ver1_game_define_BlockCause.__constructs__ = [model_ver1_game_define_BlockCause.Pending,model_ver1_game_define_BlockCause.System,model_ver1_game_define_BlockCause.PlayCard,model_ver1_game_define_BlockCause.PlayText,model_ver1_game_define_BlockCause.TextEffect];
var model_ver1_game_define_Block = function(id,cause,text) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.isOption = false;
	this.isImmediate = false;
	this.id = id;
	this.cause = cause;
	this.text = text;
};
$hxClasses["model.ver1.game.define.Block"] = model_ver1_game_define_Block;
model_ver1_game_define_Block.__name__ = "model.ver1.game.define.Block";
model_ver1_game_define_Block.__interfaces__ = [hxbit_Serializable];
model_ver1_game_define_Block.prototype = {
	id: null
	,cause: null
	,text: null
	,isImmediate: null
	,isOption: null
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_define_Block.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.id;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.doSerialize(__ctx,this.cause);
		__ctx.addKnownRef(this.text);
		__ctx.out.addByte(this.isImmediate ? 1 : 0);
		__ctx.out.addByte(this.isOption ? 1 : 0);
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("cause");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PEnum("model.ver1.game.define.BlockCause"));
		schema.fieldsNames.push("text");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PSerializable("model.ver1.game.define.CardText"));
		schema.fieldsNames.push("isImmediate");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("isOption");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_Block.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.isImmediate = false;
		this.isOption = false;
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.id = tmp;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$BlockCause.doUnserialize(__ctx);
		this.cause = __e;
		this.text = __ctx.getRef(model_ver1_game_define_CardText,model_ver1_game_define_CardText.__clid);
		this.isImmediate = __ctx.input.b[__ctx.inPos++] != 0;
		this.isOption = __ctx.input.b[__ctx.inPos++] != 0;
	}
	,__class__: model_ver1_game_define_Block
};
var model_ver1_game_define_Context = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.flowMemory = { state : model_ver1_game_define_FlowMemoryState.PrepareDeck, hasTriggerEvent : false, hasPlayerPassPhase : new haxe_ds_StringMap(), hasPlayerPassCut : new haxe_ds_StringMap(), hasPlayerPassPayCost : new haxe_ds_StringMap(), shouldTriggerStackEffectFinishedEvent : false, msgs : []};
	this.cuts = [];
	this.memory = { playerSelection : { cardIds : new haxe_ds_StringMap()}};
	this.cardProtoPool = new haxe_ds_StringMap();
	this.timing = model_ver1_game_define_Timing_TIMINGS[0];
	this.marks = new haxe_ds_StringMap();
	this.table = new tool_Table();
	this.playersOrder = [];
};
$hxClasses["model.ver1.game.define.Context"] = model_ver1_game_define_Context;
model_ver1_game_define_Context.__name__ = "model.ver1.game.define.Context";
model_ver1_game_define_Context.__interfaces__ = [hxbit_Serializable];
model_ver1_game_define_Context.prototype = {
	playersOrder: null
	,table: null
	,marks: null
	,timing: null
	,cardProtoPool: null
	,memory: null
	,cuts: null
	,flowMemory: null
	,activePlayerId: null
	,__uid: null
	,getCLID: function() {
		return model_ver1_game_define_Context.__clid;
	}
	,serialize: function(__ctx) {
		var a = this.playersOrder;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
		__ctx.addKnownRef(this.table);
		var a = this.marks;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addKnownRef(a.h[k]);
			}
		}
		hxbit_enumSer_Model_$ver1_$game_$define_$Timing.doSerialize(__ctx,this.timing);
		var a = this.cardProtoPool;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addKnownRef(a.h[k]);
			}
		}
		var v = this.memory;
		if(v == null) {
			__ctx.out.addByte(0);
		} else {
			var fbits = 0;
			if(v.playerSelection != null) {
				fbits |= 1;
			}
			var v1 = fbits + 1;
			if(v1 >= 0 && v1 < 128) {
				__ctx.out.addByte(v1);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v1);
			}
			if((fbits & 1) != 0) {
				var v1 = v.playerSelection;
				if(v1 == null) {
					__ctx.out.addByte(0);
				} else {
					var fbits = 0;
					if(v1.cardIds != null) {
						fbits |= 1;
					}
					var v = fbits + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					if((fbits & 1) != 0) {
						var a = v1.cardIds;
						if(a == null) {
							__ctx.out.addByte(0);
						} else {
							var _g = [];
							var h = a.h;
							var k_h = h;
							var k_keys = Object.keys(h);
							var k_length = k_keys.length;
							var k_current = 0;
							while(k_current < k_length) {
								var k = k_keys[k_current++];
								_g.push(k);
							}
							var keys = _g;
							var v = keys.length + 1;
							if(v >= 0 && v < 128) {
								__ctx.out.addByte(v);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v);
							}
							var _g = 0;
							while(_g < keys.length) {
								var k = keys[_g];
								++_g;
								if(k == null) {
									__ctx.out.addByte(0);
								} else {
									var b = haxe_io_Bytes.ofString(k);
									var v = b.length + 1;
									if(v >= 0 && v < 128) {
										__ctx.out.addByte(v);
									} else {
										__ctx.out.addByte(128);
										__ctx.out.addInt32(v);
									}
									__ctx.out.add(b);
								}
								var v1 = a.h[k];
								if(v1 == null) {
									__ctx.out.addByte(0);
								} else {
									var v2 = v1.length + 1;
									if(v2 >= 0 && v2 < 128) {
										__ctx.out.addByte(v2);
									} else {
										__ctx.out.addByte(128);
										__ctx.out.addInt32(v2);
									}
									var _g1 = 0;
									while(_g1 < v1.length) {
										var v3 = v1[_g1];
										++_g1;
										if(v3 == null) {
											__ctx.out.addByte(0);
										} else {
											var b1 = haxe_io_Bytes.ofString(v3);
											var v4 = b1.length + 1;
											if(v4 >= 0 && v4 < 128) {
												__ctx.out.addByte(v4);
											} else {
												__ctx.out.addByte(128);
												__ctx.out.addInt32(v4);
											}
											__ctx.out.add(b1);
										}
									}
								}
							}
						}
					}
				}
			}
		}
		var a = this.cuts;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var v1 = v.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g1 = 0;
					while(_g1 < v.length) {
						var v2 = v[_g1];
						++_g1;
						__ctx.addKnownRef(v2);
					}
				}
			}
		}
		var v = this.flowMemory;
		if(v == null) {
			__ctx.out.addByte(0);
		} else {
			var fbits = 0;
			if(v.hasPlayerPassCut != null) {
				fbits |= 1;
			}
			if(v.hasPlayerPassPayCost != null) {
				fbits |= 2;
			}
			if(v.hasPlayerPassPhase != null) {
				fbits |= 4;
			}
			if(v.msgs != null) {
				fbits |= 8;
			}
			if(v.state != null) {
				fbits |= 16;
			}
			var v1 = fbits + 1;
			if(v1 >= 0 && v1 < 128) {
				__ctx.out.addByte(v1);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v1);
			}
			if((fbits & 1) != 0) {
				var a = v.hasPlayerPassCut;
				if(a == null) {
					__ctx.out.addByte(0);
				} else {
					var _g = [];
					var h = a.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g.push(k);
					}
					var keys = _g;
					var v1 = keys.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k = keys[_g];
						++_g;
						if(k == null) {
							__ctx.out.addByte(0);
						} else {
							var b = haxe_io_Bytes.ofString(k);
							var v1 = b.length + 1;
							if(v1 >= 0 && v1 < 128) {
								__ctx.out.addByte(v1);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v1);
							}
							__ctx.out.add(b);
						}
						__ctx.out.addByte(a.h[k] ? 1 : 0);
					}
				}
			}
			if((fbits & 2) != 0) {
				var a = v.hasPlayerPassPayCost;
				if(a == null) {
					__ctx.out.addByte(0);
				} else {
					var _g = [];
					var h = a.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g.push(k);
					}
					var keys = _g;
					var v1 = keys.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k = keys[_g];
						++_g;
						if(k == null) {
							__ctx.out.addByte(0);
						} else {
							var b = haxe_io_Bytes.ofString(k);
							var v1 = b.length + 1;
							if(v1 >= 0 && v1 < 128) {
								__ctx.out.addByte(v1);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v1);
							}
							__ctx.out.add(b);
						}
						__ctx.out.addByte(a.h[k] ? 1 : 0);
					}
				}
			}
			if((fbits & 4) != 0) {
				var a = v.hasPlayerPassPhase;
				if(a == null) {
					__ctx.out.addByte(0);
				} else {
					var _g = [];
					var h = a.h;
					var k_h = h;
					var k_keys = Object.keys(h);
					var k_length = k_keys.length;
					var k_current = 0;
					while(k_current < k_length) {
						var k = k_keys[k_current++];
						_g.push(k);
					}
					var keys = _g;
					var v1 = keys.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g = 0;
					while(_g < keys.length) {
						var k = keys[_g];
						++_g;
						if(k == null) {
							__ctx.out.addByte(0);
						} else {
							var b = haxe_io_Bytes.ofString(k);
							var v1 = b.length + 1;
							if(v1 >= 0 && v1 < 128) {
								__ctx.out.addByte(v1);
							} else {
								__ctx.out.addByte(128);
								__ctx.out.addInt32(v1);
							}
							__ctx.out.add(b);
						}
						__ctx.out.addByte(a.h[k] ? 1 : 0);
					}
				}
			}
			__ctx.out.addByte(v.hasTriggerEvent ? 1 : 0);
			if((fbits & 8) != 0) {
				var a = v.msgs;
				if(a == null) {
					__ctx.out.addByte(0);
				} else {
					var v1 = a.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					var _g = 0;
					while(_g < a.length) {
						var v1 = a[_g];
						++_g;
						__ctx.addDynamic(v1);
					}
				}
			}
			__ctx.out.addByte(v.shouldTriggerStackEffectFinishedEvent ? 1 : 0);
			if((fbits & 16) != 0) {
				hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.doSerialize(__ctx,v.state);
			}
		}
		var s = this.activePlayerId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("playersOrder");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.fieldsNames.push("table");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PSerializable("tool.Table"));
		schema.fieldsNames.push("marks");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PSerializable("model.ver1.game.define.Mark")));
		schema.fieldsNames.push("timing");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PEnum("model.ver1.game.define.Timing"));
		schema.fieldsNames.push("cardProtoPool");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PSerializable("model.ver1.game.define.CardProto")));
		schema.fieldsNames.push("memory");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PObj([{ name : "playerSelection", opt : false, type : hxbit_PropTypeDesc.PObj([{ name : "cardIds", opt : false, type : hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString))}])}]));
		schema.fieldsNames.push("cuts");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PSerializable("model.ver1.game.define.Block"))));
		schema.fieldsNames.push("flowMemory");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PObj([{ name : "hasPlayerPassCut", opt : false, type : hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PBool)},{ name : "hasPlayerPassPayCost", opt : false, type : hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PBool)},{ name : "hasPlayerPassPhase", opt : false, type : hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PBool)},{ name : "hasTriggerEvent", opt : false, type : hxbit_PropTypeDesc.PBool},{ name : "msgs", opt : false, type : hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PDynamic)},{ name : "shouldTriggerStackEffectFinishedEvent", opt : false, type : hxbit_PropTypeDesc.PBool},{ name : "state", opt : false, type : hxbit_PropTypeDesc.PEnum("model.ver1.game.define.FlowMemoryState")}]));
		schema.fieldsNames.push("activePlayerId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_Context.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.playersOrder = [];
		this.table = new tool_Table();
		this.marks = new haxe_ds_StringMap();
		this.timing = model_ver1_game_define_Timing_TIMINGS[0];
		this.cardProtoPool = new haxe_ds_StringMap();
		this.memory = { playerSelection : { cardIds : new haxe_ds_StringMap()}};
		this.cuts = [];
		this.flowMemory = { state : model_ver1_game_define_FlowMemoryState.PrepareDeck, hasTriggerEvent : false, hasPlayerPassPhase : new haxe_ds_StringMap(), hasPlayerPassCut : new haxe_ds_StringMap(), hasPlayerPassPayCost : new haxe_ds_StringMap(), shouldTriggerStackEffectFinishedEvent : false, msgs : []};
	}
	,unserialize: function(__ctx) {
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.playersOrder = tmp;
		this.table = __ctx.getRef(tool_Table,tool_Table.__clid);
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getRef(model_ver1_game_define_Mark,model_ver1_game_define_Mark.__clid);
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.marks = tmp;
		var __e = hxbit_enumSer_Model_$ver1_$game_$define_$Timing.doUnserialize(__ctx);
		this.timing = __e;
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getRef(model_ver1_game_define_CardProto,model_ver1_game_define_CardProto.__clid);
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.cardProtoPool = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var fbits = v;
		if(fbits == 0) {
			this.memory = null;
		} else {
			--fbits;
			var playerSelection = null;
			if((fbits & 1) != 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var fbits = v;
				if(fbits == 0) {
					playerSelection = null;
				} else {
					--fbits;
					var cardIds = null;
					if((fbits & 1) != 0) {
						var k2;
						var v2;
						var v = __ctx.input.b[__ctx.inPos++];
						if(v == 128) {
							v = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len = v;
						if(len == 0) {
							cardIds = null;
						} else {
							var m = new haxe_ds_StringMap();
							while(--len > 0) {
								var v = __ctx.input.b[__ctx.inPos++];
								if(v == 128) {
									v = __ctx.input.getInt32(__ctx.inPos);
									__ctx.inPos += 4;
								}
								var len1 = v;
								if(len1 == 0) {
									k2 = null;
								} else {
									--len1;
									var s = __ctx.input.getString(__ctx.inPos,len1);
									__ctx.inPos += len1;
									k2 = s;
								}
								var k = k2;
								var e3;
								var v1 = __ctx.input.b[__ctx.inPos++];
								if(v1 == 128) {
									v1 = __ctx.input.getInt32(__ctx.inPos);
									__ctx.inPos += 4;
								}
								var len2 = v1;
								if(len2 == 0) {
									v2 = null;
								} else {
									--len2;
									var a = [];
									var _g = 0;
									var _g1 = len2;
									while(_g < _g1) {
										var i = _g++;
										var v3 = __ctx.input.b[__ctx.inPos++];
										if(v3 == 128) {
											v3 = __ctx.input.getInt32(__ctx.inPos);
											__ctx.inPos += 4;
										}
										var len3 = v3;
										if(len3 == 0) {
											e3 = null;
										} else {
											--len3;
											var s1 = __ctx.input.getString(__ctx.inPos,len3);
											__ctx.inPos += len3;
											e3 = s1;
										}
										a[i] = e3;
									}
									v2 = a;
								}
								var v4 = v2;
								m.h[k] = v4;
							}
							cardIds = m;
						}
					}
					playerSelection = { cardIds : cardIds};
				}
			}
			this.memory = { playerSelection : playerSelection};
		}
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var e1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var a1 = [];
					var _g2 = 0;
					var _g3 = len;
					while(_g2 < _g3) {
						var i1 = _g2++;
						e1 = __ctx.getRef(model_ver1_game_define_Block,model_ver1_game_define_Block.__clid);
						a1[i1] = e1;
					}
					e0 = a1;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.cuts = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var fbits = v;
		if(fbits == 0) {
			this.flowMemory = null;
		} else {
			--fbits;
			var state = null;
			var msgs = null;
			var hasPlayerPassPhase = null;
			var hasPlayerPassPayCost = null;
			var hasPlayerPassCut = null;
			if((fbits & 1) != 0) {
				var k1;
				var v1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					hasPlayerPassCut = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var v = __ctx.input.b[__ctx.inPos++];
						if(v == 128) {
							v = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len1 = v;
						if(len1 == 0) {
							k1 = null;
						} else {
							--len1;
							var s = __ctx.input.getString(__ctx.inPos,len1);
							__ctx.inPos += len1;
							k1 = s;
						}
						var k = k1;
						v1 = __ctx.input.b[__ctx.inPos++] != 0;
						var v2 = v1;
						m.h[k] = v2;
					}
					hasPlayerPassCut = m;
				}
			}
			if((fbits & 2) != 0) {
				var k1;
				var v1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					hasPlayerPassPayCost = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var v = __ctx.input.b[__ctx.inPos++];
						if(v == 128) {
							v = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len1 = v;
						if(len1 == 0) {
							k1 = null;
						} else {
							--len1;
							var s = __ctx.input.getString(__ctx.inPos,len1);
							__ctx.inPos += len1;
							k1 = s;
						}
						var k = k1;
						v1 = __ctx.input.b[__ctx.inPos++] != 0;
						var v2 = v1;
						m.h[k] = v2;
					}
					hasPlayerPassPayCost = m;
				}
			}
			if((fbits & 4) != 0) {
				var k1;
				var v1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					hasPlayerPassPhase = null;
				} else {
					var m = new haxe_ds_StringMap();
					while(--len > 0) {
						var v = __ctx.input.b[__ctx.inPos++];
						if(v == 128) {
							v = __ctx.input.getInt32(__ctx.inPos);
							__ctx.inPos += 4;
						}
						var len1 = v;
						if(len1 == 0) {
							k1 = null;
						} else {
							--len1;
							var s = __ctx.input.getString(__ctx.inPos,len1);
							__ctx.inPos += len1;
							k1 = s;
						}
						var k = k1;
						v1 = __ctx.input.b[__ctx.inPos++] != 0;
						var v2 = v1;
						m.h[k] = v2;
					}
					hasPlayerPassPhase = m;
				}
			}
			var hasTriggerEvent = __ctx.input.b[__ctx.inPos++] != 0;
			if((fbits & 8) != 0) {
				var e1;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					msgs = null;
				} else {
					--len;
					var a = [];
					var _g = 0;
					var _g1 = len;
					while(_g < _g1) {
						var i = _g++;
						var v2 = __ctx.getDynamic();
						e1 = v2;
						a[i] = e1;
					}
					msgs = a;
				}
			}
			var shouldTriggerStackEffectFinishedEvent = __ctx.input.b[__ctx.inPos++] != 0;
			if((fbits & 16) != 0) {
				var __e = hxbit_enumSer_Model_$ver1_$game_$define_$FlowMemoryState.doUnserialize(__ctx);
				state = __e;
			}
			this.flowMemory = { hasPlayerPassCut : hasPlayerPassCut, hasPlayerPassPayCost : hasPlayerPassPayCost, hasPlayerPassPhase : hasPlayerPassPhase, hasTriggerEvent : hasTriggerEvent, msgs : msgs, shouldTriggerStackEffectFinishedEvent : shouldTriggerStackEffectFinishedEvent, state : state};
		}
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.activePlayerId = tmp;
	}
	,__class__: model_ver1_game_define_Context
};
var model_ver1_game_define_TextTypeAutomaticType = $hxEnums["model.ver1.game.define.TextTypeAutomaticType"] = { __ename__:true,__constructs__:null
	,Resident: {_hx_name:"Resident",_hx_index:0,__enum__:"model.ver1.game.define.TextTypeAutomaticType",toString:$estr}
	,Trigger: {_hx_name:"Trigger",_hx_index:1,__enum__:"model.ver1.game.define.TextTypeAutomaticType",toString:$estr}
	,Constant: {_hx_name:"Constant",_hx_index:2,__enum__:"model.ver1.game.define.TextTypeAutomaticType",toString:$estr}
};
model_ver1_game_define_TextTypeAutomaticType.__constructs__ = [model_ver1_game_define_TextTypeAutomaticType.Resident,model_ver1_game_define_TextTypeAutomaticType.Trigger,model_ver1_game_define_TextTypeAutomaticType.Constant];
var model_ver1_game_define_TextType = $hxEnums["model.ver1.game.define.TextType"] = { __ename__:true,__constructs__:null
	,Automatic: ($_=function(type) { return {_hx_index:0,type:type,__enum__:"model.ver1.game.define.TextType",toString:$estr}; },$_._hx_name="Automatic",$_.__params__ = ["type"],$_)
	,Use: {_hx_name:"Use",_hx_index:1,__enum__:"model.ver1.game.define.TextType",toString:$estr}
	,Special: {_hx_name:"Special",_hx_index:2,__enum__:"model.ver1.game.define.TextType",toString:$estr}
};
model_ver1_game_define_TextType.__constructs__ = [model_ver1_game_define_TextType.Automatic,model_ver1_game_define_TextType.Use,model_ver1_game_define_TextType.Special];
var model_ver1_game_define_CardEntityCategory = $hxEnums["model.ver1.game.define.CardEntityCategory"] = { __ename__:true,__constructs__:null
	,Unit: {_hx_name:"Unit",_hx_index:0,__enum__:"model.ver1.game.define.CardEntityCategory",toString:$estr}
	,Character: {_hx_name:"Character",_hx_index:1,__enum__:"model.ver1.game.define.CardEntityCategory",toString:$estr}
	,Operation: {_hx_name:"Operation",_hx_index:2,__enum__:"model.ver1.game.define.CardEntityCategory",toString:$estr}
	,G: {_hx_name:"G",_hx_index:3,__enum__:"model.ver1.game.define.CardEntityCategory",toString:$estr}
};
model_ver1_game_define_CardEntityCategory.__constructs__ = [model_ver1_game_define_CardEntityCategory.Unit,model_ver1_game_define_CardEntityCategory.Character,model_ver1_game_define_CardEntityCategory.Operation,model_ver1_game_define_CardEntityCategory.G];
var model_ver1_game_define_GColor = $hxEnums["model.ver1.game.define.GColor"] = { __ename__:true,__constructs__:null
	,Red: {_hx_name:"Red",_hx_index:0,__enum__:"model.ver1.game.define.GColor",toString:$estr}
	,Black: {_hx_name:"Black",_hx_index:1,__enum__:"model.ver1.game.define.GColor",toString:$estr}
	,Purple: {_hx_name:"Purple",_hx_index:2,__enum__:"model.ver1.game.define.GColor",toString:$estr}
};
model_ver1_game_define_GColor.__constructs__ = [model_ver1_game_define_GColor.Red,model_ver1_game_define_GColor.Black,model_ver1_game_define_GColor.Purple];
var model_ver1_game_define_GProperty = $hxEnums["model.ver1.game.define.GProperty"] = { __ename__:true,__constructs__:null
	,Uc: {_hx_name:"Uc",_hx_index:0,__enum__:"model.ver1.game.define.GProperty",toString:$estr}
	,Zero8: {_hx_name:"Zero8",_hx_index:1,__enum__:"model.ver1.game.define.GProperty",toString:$estr}
};
model_ver1_game_define_GProperty.__constructs__ = [model_ver1_game_define_GProperty.Uc,model_ver1_game_define_GProperty.Zero8];
var model_ver1_game_define_GSign = $hxEnums["model.ver1.game.define.GSign"] = { __ename__:true,__constructs__:null
	,Default: ($_=function(color,property) { return {_hx_index:0,color:color,property:property,__enum__:"model.ver1.game.define.GSign",toString:$estr}; },$_._hx_name="Default",$_.__params__ = ["color","property"],$_)
};
model_ver1_game_define_GSign.__constructs__ = [model_ver1_game_define_GSign.Default];
var model_ver1_game_define_BattlePoint = $hxEnums["model.ver1.game.define.BattlePoint"] = { __ename__:true,__constructs__:null
	,Default: ($_=function(melee,range,hp) { return {_hx_index:0,melee:melee,range:range,hp:hp,__enum__:"model.ver1.game.define.BattlePoint",toString:$estr}; },$_._hx_name="Default",$_.__params__ = ["melee","range","hp"],$_)
};
model_ver1_game_define_BattlePoint.__constructs__ = [model_ver1_game_define_BattlePoint.Default];
var model_ver1_game_define_RelativePlayer = $hxEnums["model.ver1.game.define.RelativePlayer"] = { __ename__:true,__constructs__:null
	,You: {_hx_name:"You",_hx_index:0,__enum__:"model.ver1.game.define.RelativePlayer",toString:$estr}
	,Opponent: {_hx_name:"Opponent",_hx_index:1,__enum__:"model.ver1.game.define.RelativePlayer",toString:$estr}
};
model_ver1_game_define_RelativePlayer.__constructs__ = [model_ver1_game_define_RelativePlayer.You,model_ver1_game_define_RelativePlayer.Opponent];
var model_ver1_game_define_Event = $hxEnums["model.ver1.game.define.Event"] = { __ename__:true,__constructs__:null
	,ChangePhase: {_hx_name:"ChangePhase",_hx_index:0,__enum__:"model.ver1.game.define.Event",toString:$estr}
	,Gain: ($_=function(cardId,value) { return {_hx_index:1,cardId:cardId,value:value,__enum__:"model.ver1.game.define.Event",toString:$estr}; },$_._hx_name="Gain",$_.__params__ = ["cardId","value"],$_)
	,CardEnterField: ($_=function(cardId) { return {_hx_index:2,cardId:cardId,__enum__:"model.ver1.game.define.Event",toString:$estr}; },$_._hx_name="CardEnterField",$_.__params__ = ["cardId"],$_)
	,CardRoll: ($_=function(cardId) { return {_hx_index:3,cardId:cardId,__enum__:"model.ver1.game.define.Event",toString:$estr}; },$_._hx_name="CardRoll",$_.__params__ = ["cardId"],$_)
};
model_ver1_game_define_Event.__constructs__ = [model_ver1_game_define_Event.ChangePhase,model_ver1_game_define_Event.Gain,model_ver1_game_define_Event.CardEnterField,model_ver1_game_define_Event.CardRoll];
var model_ver1_game_define_ExecuteRuntime = function() { };
$hxClasses["model.ver1.game.define.ExecuteRuntime"] = model_ver1_game_define_ExecuteRuntime;
model_ver1_game_define_ExecuteRuntime.__name__ = "model.ver1.game.define.ExecuteRuntime";
model_ver1_game_define_ExecuteRuntime.__isInterface__ = true;
model_ver1_game_define_ExecuteRuntime.prototype = {
	getCardId: null
	,getResponsePlayerId: null
	,__class__: model_ver1_game_define_ExecuteRuntime
};
var model_ver1_game_define_AbstractExecuteRuntime = function() {
};
$hxClasses["model.ver1.game.define.AbstractExecuteRuntime"] = model_ver1_game_define_AbstractExecuteRuntime;
model_ver1_game_define_AbstractExecuteRuntime.__name__ = "model.ver1.game.define.AbstractExecuteRuntime";
model_ver1_game_define_AbstractExecuteRuntime.__interfaces__ = [model_ver1_game_define_ExecuteRuntime];
model_ver1_game_define_AbstractExecuteRuntime.prototype = {
	getCardId: function() {
		throw new haxe_Exception("not support");
	}
	,getResponsePlayerId: function() {
		throw new haxe_Exception("not support");
	}
	,__class__: model_ver1_game_define_AbstractExecuteRuntime
};
var model_ver1_game_define_SystemExecuteRuntime = function(responsePlayerId) {
	model_ver1_game_define_AbstractExecuteRuntime.call(this);
	this.responsePlayerId = responsePlayerId;
};
$hxClasses["model.ver1.game.define.SystemExecuteRuntime"] = model_ver1_game_define_SystemExecuteRuntime;
model_ver1_game_define_SystemExecuteRuntime.__name__ = "model.ver1.game.define.SystemExecuteRuntime";
model_ver1_game_define_SystemExecuteRuntime.__super__ = model_ver1_game_define_AbstractExecuteRuntime;
model_ver1_game_define_SystemExecuteRuntime.prototype = $extend(model_ver1_game_define_AbstractExecuteRuntime.prototype,{
	responsePlayerId: null
	,getResponsePlayerId: function() {
		var s = this.responsePlayerId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = s;
		return this1;
	}
	,__class__: model_ver1_game_define_SystemExecuteRuntime
});
var model_ver1_game_define_DefaultExecuteRuntime = function(cardId,responsePlayerId) {
	model_ver1_game_define_AbstractExecuteRuntime.call(this);
	this.cardId = cardId;
	this.responsePlayerId = responsePlayerId;
};
$hxClasses["model.ver1.game.define.DefaultExecuteRuntime"] = model_ver1_game_define_DefaultExecuteRuntime;
model_ver1_game_define_DefaultExecuteRuntime.__name__ = "model.ver1.game.define.DefaultExecuteRuntime";
model_ver1_game_define_DefaultExecuteRuntime.__super__ = model_ver1_game_define_AbstractExecuteRuntime;
model_ver1_game_define_DefaultExecuteRuntime.prototype = $extend(model_ver1_game_define_AbstractExecuteRuntime.prototype,{
	cardId: null
	,responsePlayerId: null
	,getCardId: function() {
		return this.cardId;
	}
	,getResponsePlayerId: function() {
		return this.responsePlayerId;
	}
	,__class__: model_ver1_game_define_DefaultExecuteRuntime
});
var model_ver1_game_define_FlowMemoryState = $hxEnums["model.ver1.game.define.FlowMemoryState"] = { __ename__:true,__constructs__:null
	,PrepareDeck: {_hx_name:"PrepareDeck",_hx_index:0,__enum__:"model.ver1.game.define.FlowMemoryState",toString:$estr}
	,WhoFirst: {_hx_name:"WhoFirst",_hx_index:1,__enum__:"model.ver1.game.define.FlowMemoryState",toString:$estr}
	,Draw6AndConfirm: {_hx_name:"Draw6AndConfirm",_hx_index:2,__enum__:"model.ver1.game.define.FlowMemoryState",toString:$estr}
	,Playing: {_hx_name:"Playing",_hx_index:3,__enum__:"model.ver1.game.define.FlowMemoryState",toString:$estr}
};
model_ver1_game_define_FlowMemoryState.__constructs__ = [model_ver1_game_define_FlowMemoryState.PrepareDeck,model_ver1_game_define_FlowMemoryState.WhoFirst,model_ver1_game_define_FlowMemoryState.Draw6AndConfirm,model_ver1_game_define_FlowMemoryState.Playing];
var model_ver1_game_define_FlowType = $hxEnums["model.ver1.game.define.FlowType"] = { __ename__:true,__constructs__:null
	,FlowWaitPlayer: {_hx_name:"FlowWaitPlayer",_hx_index:0,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowObserveEffect: {_hx_name:"FlowObserveEffect",_hx_index:1,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowDoEffect: ($_=function(blockId) { return {_hx_index:2,blockId:blockId,__enum__:"model.ver1.game.define.FlowType",toString:$estr}; },$_._hx_name="FlowDoEffect",$_.__params__ = ["blockId"],$_)
	,FlowPassPayCost: ($_=function(blockId) { return {_hx_index:3,blockId:blockId,__enum__:"model.ver1.game.define.FlowType",toString:$estr}; },$_._hx_name="FlowPassPayCost",$_.__params__ = ["blockId"],$_)
	,FlowCancelActiveEffect: {_hx_name:"FlowCancelActiveEffect",_hx_index:4,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowSetActiveEffectId: ($_=function(blockId,tips) { return {_hx_index:5,blockId:blockId,tips:tips,__enum__:"model.ver1.game.define.FlowType",toString:$estr}; },$_._hx_name="FlowSetActiveEffectId",$_.__params__ = ["blockId","tips"],$_)
	,FlowDeleteImmediateEffect: ($_=function(blockId,tips) { return {_hx_index:6,blockId:blockId,tips:tips,__enum__:"model.ver1.game.define.FlowType",toString:$estr}; },$_._hx_name="FlowDeleteImmediateEffect",$_.__params__ = ["blockId","tips"],$_)
	,FlowHandleStackEffectFinished: {_hx_name:"FlowHandleStackEffectFinished",_hx_index:7,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowCancelPassCut: {_hx_name:"FlowCancelPassCut",_hx_index:8,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowPassCut: {_hx_name:"FlowPassCut",_hx_index:9,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowPassPhase: {_hx_name:"FlowPassPhase",_hx_index:10,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowCancelPassPhase: {_hx_name:"FlowCancelPassPhase",_hx_index:11,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowNextTiming: {_hx_name:"FlowNextTiming",_hx_index:12,__enum__:"model.ver1.game.define.FlowType",toString:$estr}
	,FlowTriggerTextEvent: ($_=function(event) { return {_hx_index:13,event:event,__enum__:"model.ver1.game.define.FlowType",toString:$estr}; },$_._hx_name="FlowTriggerTextEvent",$_.__params__ = ["event"],$_)
};
model_ver1_game_define_FlowType.__constructs__ = [model_ver1_game_define_FlowType.FlowWaitPlayer,model_ver1_game_define_FlowType.FlowObserveEffect,model_ver1_game_define_FlowType.FlowDoEffect,model_ver1_game_define_FlowType.FlowPassPayCost,model_ver1_game_define_FlowType.FlowCancelActiveEffect,model_ver1_game_define_FlowType.FlowSetActiveEffectId,model_ver1_game_define_FlowType.FlowDeleteImmediateEffect,model_ver1_game_define_FlowType.FlowHandleStackEffectFinished,model_ver1_game_define_FlowType.FlowCancelPassCut,model_ver1_game_define_FlowType.FlowPassCut,model_ver1_game_define_FlowType.FlowPassPhase,model_ver1_game_define_FlowType.FlowCancelPassPhase,model_ver1_game_define_FlowType.FlowNextTiming,model_ver1_game_define_FlowType.FlowTriggerTextEvent];
var model_ver1_game_define_Flow = $hxEnums["model.ver1.game.define.Flow"] = { __ename__:true,__constructs__:null
	,Default: ($_=function(type,description) { return {_hx_index:0,type:type,description:description,__enum__:"model.ver1.game.define.Flow",toString:$estr}; },$_._hx_name="Default",$_.__params__ = ["type","description"],$_)
};
model_ver1_game_define_Flow.__constructs__ = [model_ver1_game_define_Flow.Default];
function model_ver1_game_define_Flow_passPhase(memory,playerId) {
	memory.hasPlayerPassPhase.h[playerId] = true;
}
function model_ver1_game_define_Flow_cancelPassPhase(memory,playerId) {
	var _this = memory.hasPlayerPassPhase;
	if(Object.prototype.hasOwnProperty.call(_this.h,playerId)) {
		delete(_this.h[playerId]);
	}
}
function model_ver1_game_define_Flow_resetPassPhase(memory) {
	var h = memory.hasPlayerPassPhase.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var _this = memory.hasPlayerPassPhase;
		if(Object.prototype.hasOwnProperty.call(_this.h,k)) {
			delete(_this.h[k]);
		}
	}
}
function model_ver1_game_define_Flow_passCut(memory,playerId) {
	memory.hasPlayerPassPayCost.h[playerId] = true;
}
function model_ver1_game_define_Flow_cancelPassCut(memory,playerId) {
	var _this = memory.hasPlayerPassPayCost;
	if(Object.prototype.hasOwnProperty.call(_this.h,playerId)) {
		delete(_this.h[playerId]);
	}
}
function model_ver1_game_define_Flow_resetPassCut(memory) {
	var h = memory.hasPlayerPassCut.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var _this = memory.hasPlayerPassCut;
		if(Object.prototype.hasOwnProperty.call(_this.h,k)) {
			delete(_this.h[k]);
		}
	}
}
function model_ver1_game_define_Flow_resetPassCost(memory) {
	var h = memory.hasPlayerPassPayCost.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var _this = memory.hasPlayerPassPayCost;
		if(Object.prototype.hasOwnProperty.call(_this.h,k)) {
			delete(_this.h[k]);
		}
	}
}
function model_ver1_game_define_Flow_hasTriggerEvent(memory) {
	return memory.hasTriggerEvent;
}
function model_ver1_game_define_Flow_triggerEvent(memory) {
	memory.hasTriggerEvent = true;
}
function model_ver1_game_define_Flow_cancelTriggerEvent(memory) {
	memory.hasTriggerEvent = false;
}
function model_ver1_game_define_Flow_markTriggerStackEffectFinishedEventDone(memory) {
	memory.shouldTriggerStackEffectFinishedEvent = true;
}
function model_ver1_game_define_Flow_applyFlow(ctx,playerID,flow) {
	var _g = flow.type;
	var _g1 = flow.description;
	var tmp = _g._hx_index == 5;
}
function model_ver1_game_define_Flow_queryFlow(ctx,playerId) {
	var _g = model_ver1_game_define_Flow_hasSomeoneLiveIsZero(ctx);
	if(_g._hx_index == 0) {
		var playerId1 = _g.v;
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"遊戲結束")];
	}
	var _g = model_ver1_game_define_Flow_getActiveBlockId(ctx);
	switch(_g._hx_index) {
	case 0:
		var activeBlockId = _g.v;
		var runtime = model_ver1_game_alg_Block_getBlockRuntime(ctx,activeBlockId);
		var controller = runtime.getResponsePlayerId();
		var isPass = ctx.flowMemory.hasPlayerPassPayCost.h[playerId];
		var this1 = ctx.flowMemory.hasPlayerPassPayCost;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(playerId) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + playerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this2 = playerId;
		var isOpponentPass = this1.h[this2 == model_ver1_game_define_PlayerId.A ? model_ver1_game_define_PlayerId.B : model_ver1_game_define_PlayerId.A];
		if(isPass && isOpponentPass) {
			if(controller != playerId) {
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowObserveEffect,"")];
			}
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowDoEffect(activeBlockId),"")];
		} else if(isPass || isOpponentPass) {
			if(controller == playerId) {
				if(isPass) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowObserveEffect,"")];
				}
			} else {
				if(isOpponentPass == false) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowObserveEffect,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowPassPayCost(activeBlockId),"")];
			}
		}
		if(controller != playerId) {
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待對方支付ActiveEffectID")];
		}
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowCancelActiveEffect,"取消支付效果，讓其它玩家可以支付"),model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowPassPayCost(activeBlockId),"")];
	case 1:
		break;
	}
	var immediateEffects = model_ver1_game_define_Flow_getImmediateEffects(ctx);
	if(immediateEffects.length > 0) {
		var s = ctx.activePlayerId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = s;
		var isActivePlayer = this1 == playerId;
		var myEffect = [];
		var opponentEffect = [];
		var _g = 0;
		while(_g < immediateEffects.length) {
			var effect = immediateEffects[_g];
			++_g;
			var controller = model_ver1_game_alg_Block_getBlockRuntime(ctx,effect.id).getResponsePlayerId();
			if(controller == playerId) {
				myEffect.push(effect);
			} else {
				opponentEffect.push(effect);
			}
		}
		if(isActivePlayer == false) {
			if(opponentEffect.length > 0) {
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待主動玩家處理起動效果")];
			}
		}
		if(myEffect.length == 0) {
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待被動玩家處理起動效果")];
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = myEffect;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			if(v.isOption == true) {
				_g.push(v);
			}
		}
		var optionEffect = _g;
		var r1 = myEffect.length == 0 ? [] : [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowSetActiveEffectId(myEffect[0].id,myEffect),"選擇一個起動效果")];
		var r2 = optionEffect.length == 0 ? [] : [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowDeleteImmediateEffect(optionEffect[0].id,optionEffect),"你可以放棄這些效果")];
		return r1.concat(r2);
	}
	if(ctx.flowMemory.shouldTriggerStackEffectFinishedEvent) {
		var s = ctx.activePlayerId;
		if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
			throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
		}
		var this1 = s;
		var isActivePlayer = this1 == playerId;
		if(isActivePlayer == false) {
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待主動玩家處理")];
		}
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowHandleStackEffectFinished,"處理堆疊結束")];
	}
	var myCommandList = model_ver1_game_define_Flow_getClientCommand(ctx,playerId);
	var blocks = model_ver1_game_alg_Block_getBlocks(ctx);
	if(blocks.length > 0) {
		var effect = blocks[0];
		var controller = model_ver1_game_alg_Block_getBlockRuntime(ctx,effect.id).getResponsePlayerId();
		var isAllPassCut = ctx.flowMemory.hasPlayerPassCut.h[model_ver1_game_define_PlayerId.A] && ctx.flowMemory.hasPlayerPassCut.h[model_ver1_game_define_PlayerId.B];
		if(isAllPassCut == false) {
			var isPassCut = ctx.flowMemory.hasPlayerPassCut.h[playerId];
			if(isPassCut) {
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowCancelPassCut,"")];
			}
			if(controller == playerId) {
				if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(playerId) != -1 == false) {
					throw haxe_Exception.thrown("playerId (" + playerId + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
				}
				var this1 = playerId;
				var opponentPlayerID = this1 == model_ver1_game_define_PlayerId.A ? model_ver1_game_define_PlayerId.B : model_ver1_game_define_PlayerId.A;
				var isOpponentPassCut = ctx.flowMemory.hasPlayerPassCut.h[opponentPlayerID];
				if(isOpponentPassCut == false) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"現在的切入優先權在對方")];
				}
			}
			var r1 = myCommandList.length == 0 ? [] : [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowSetActiveEffectId(myCommandList[0].id,myCommandList),"你可以切入")];
			var r2 = [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowPassCut,"")];
			return r1.concat(r2);
		}
		if(controller != playerId) {
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待效果控制者處理")];
		}
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowSetActiveEffectId(effect.id,[effect]),"支付最上方的堆疊效果")];
	}
	var myCommandList = model_ver1_game_define_Flow_getClientCommand(ctx,playerId);
	var _g = ctx.timing;
	var _g1 = _g.phase;
	var _g1 = _g.step;
	switch(_g.timing._hx_index) {
	case 1:case 3:
		var isAllPassPhase = ctx.flowMemory.hasPlayerPassPhase.h[model_ver1_game_define_PlayerId.A] && ctx.flowMemory.hasPlayerPassPhase.h[model_ver1_game_define_PlayerId.B];
		if(isAllPassPhase == false) {
			if(ctx.flowMemory.hasPlayerPassPhase.h[playerId]) {
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowCancelPassPhase,"等待對方結束或是取消[" + Std.string(ctx.timing) + "]結束")];
			}
			var r1 = myCommandList.length == 0 ? [] : [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowSetActiveEffectId(myCommandList[0].id,myCommandList),"選擇一個指令")];
			var r2 = [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowPassPhase,"宣告[" + Std.string(ctx.timing) + "]結束")];
			return r1.concat(r2);
		}
		if(playerId != ctx.activePlayerId) {
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待伺服器處理")];
		}
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
	default:
	}
	if(playerId != ctx.activePlayerId) {
		return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowWaitPlayer,"等待伺服器處理")];
	}
	var _g = ctx.timing;
	var _g1 = _g.step;
	var _g2 = _g.timing;
	switch(_g.phase._hx_index) {
	case 0:
		if(_g1._hx_index == 1) {
			switch(_g2._hx_index) {
			case 2:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				break;
			case 0:case 4:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
			default:
			}
		} else {
			switch(_g2._hx_index) {
			case 0:case 4:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
			default:
			}
		}
		break;
	case 1:
		if(_g1._hx_index == 1) {
			switch(_g2._hx_index) {
			case 2:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				break;
			case 0:case 4:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
			default:
			}
		} else {
			switch(_g2._hx_index) {
			case 0:case 4:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
			default:
			}
		}
		break;
	case 3:
		if(_g1._hx_index == 0) {
			switch(_g1.v._hx_index) {
			case 0:
				switch(_g2._hx_index) {
				case 2:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					break;
				case 0:case 4:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				default:
				}
				break;
			case 1:
				switch(_g2._hx_index) {
				case 2:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					break;
				case 0:case 4:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				default:
				}
				break;
			case 2:
				switch(_g2._hx_index) {
				case 2:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					break;
				case 0:case 4:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				default:
				}
				break;
			case 3:
				switch(_g2._hx_index) {
				case 2:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					break;
				case 0:case 4:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				default:
				}
				break;
			case 4:
				switch(_g2._hx_index) {
				case 0:case 4:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				case 5:
					break;
				case 6:
					break;
				case 7:
					break;
				case 8:
					if(ctx.flowMemory.hasTriggerEvent) {
						return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
					}
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
				default:
				}
				break;
			}
		} else {
			switch(_g2._hx_index) {
			case 0:case 4:
				if(ctx.flowMemory.hasTriggerEvent) {
					return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
				}
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
			default:
			}
		}
		break;
	default:
		switch(_g2._hx_index) {
		case 0:case 4:
			if(ctx.flowMemory.hasTriggerEvent) {
				return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowNextTiming,"")];
			}
			return [model_ver1_game_define_Flow.Default(model_ver1_game_define_FlowType.FlowTriggerTextEvent(model_ver1_game_define_Event.ChangePhase),"")];
		default:
		}
	}
	return [];
}
function model_ver1_game_define_Flow_hasSomeoneLiveIsZero(ctx) {
	return haxe_ds_Option.None;
}
function model_ver1_game_define_Flow_getActiveBlockId(ctx) {
	return haxe_ds_Option.None;
}
function model_ver1_game_define_Flow_getImmediateEffects(ctx) {
	return [];
}
function model_ver1_game_define_Flow_getClientCommand(ctx,playerId) {
	return [];
}
function model_ver1_game_define_Flow_addDrawRuleEffect(ctx) {
}
function model_ver1_game_define_Flow_addRerollRuleEffect(ctx) {
}
function model_ver1_game_define_Flow_test() {
}
var model_ver1_game_define_MarkEffect = $hxEnums["model.ver1.game.define.MarkEffect"] = { __ename__:true,__constructs__:null
	,AddBattlePoint: ($_=function(cardId,battlePoint) { return {_hx_index:0,cardId:cardId,battlePoint:battlePoint,__enum__:"model.ver1.game.define.MarkEffect",toString:$estr}; },$_._hx_name="AddBattlePoint",$_.__params__ = ["cardId","battlePoint"],$_)
	,AttackSpeed: ($_=function(cardId,speed) { return {_hx_index:1,cardId:cardId,speed:speed,__enum__:"model.ver1.game.define.MarkEffect",toString:$estr}; },$_._hx_name="AttackSpeed",$_.__params__ = ["cardId","speed"],$_)
	,AddText: ($_=function(cardId,text) { return {_hx_index:2,cardId:cardId,text:text,__enum__:"model.ver1.game.define.MarkEffect",toString:$estr}; },$_._hx_name="AddText",$_.__params__ = ["cardId","text"],$_)
	,EnterFieldThisTurn: ($_=function(cardId) { return {_hx_index:3,cardId:cardId,__enum__:"model.ver1.game.define.MarkEffect",toString:$estr}; },$_._hx_name="EnterFieldThisTurn",$_.__params__ = ["cardId"],$_)
	,CanNotReroll: ($_=function(cardId) { return {_hx_index:4,cardId:cardId,__enum__:"model.ver1.game.define.MarkEffect",toString:$estr}; },$_._hx_name="CanNotReroll",$_.__params__ = ["cardId"],$_)
};
model_ver1_game_define_MarkEffect.__constructs__ = [model_ver1_game_define_MarkEffect.AddBattlePoint,model_ver1_game_define_MarkEffect.AttackSpeed,model_ver1_game_define_MarkEffect.AddText,model_ver1_game_define_MarkEffect.EnterFieldThisTurn,model_ver1_game_define_MarkEffect.CanNotReroll];
var model_ver1_game_define_EnterFieldThisTurnMark = function(id,cardId) {
	model_ver1_game_define_Mark.call(this,id);
	this.cardId = cardId;
	this.age = 1;
};
$hxClasses["model.ver1.game.define.EnterFieldThisTurnMark"] = model_ver1_game_define_EnterFieldThisTurnMark;
model_ver1_game_define_EnterFieldThisTurnMark.__name__ = "model.ver1.game.define.EnterFieldThisTurnMark";
model_ver1_game_define_EnterFieldThisTurnMark.__super__ = model_ver1_game_define_Mark;
model_ver1_game_define_EnterFieldThisTurnMark.prototype = $extend(model_ver1_game_define_Mark.prototype,{
	cardId: null
	,getEffect: function(ctx) {
		return [model_ver1_game_define_MarkEffect.EnterFieldThisTurn(this.cardId)];
	}
	,getCLID: function() {
		return model_ver1_game_define_EnterFieldThisTurnMark.__clid;
	}
	,serialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.serialize.call(this,__ctx);
		var s = this.cardId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = model_ver1_game_define_Mark.prototype.getSerializeSchema.call(this);
		schema.fieldsNames.push("cardId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_EnterFieldThisTurnMark.__clid);
		return schema;
	}
	,unserialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.unserialize.call(this,__ctx);
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.cardId = tmp;
	}
	,__class__: model_ver1_game_define_EnterFieldThisTurnMark
});
var model_ver1_game_define_CanNotRerollMark = function(id,cardId) {
	model_ver1_game_define_Mark.call(this,id);
	this.cardId = cardId;
};
$hxClasses["model.ver1.game.define.CanNotRerollMark"] = model_ver1_game_define_CanNotRerollMark;
model_ver1_game_define_CanNotRerollMark.__name__ = "model.ver1.game.define.CanNotRerollMark";
model_ver1_game_define_CanNotRerollMark.__super__ = model_ver1_game_define_Mark;
model_ver1_game_define_CanNotRerollMark.prototype = $extend(model_ver1_game_define_Mark.prototype,{
	cardId: null
	,getEffect: function(ctx) {
		return [model_ver1_game_define_MarkEffect.CanNotReroll(this.cardId)];
	}
	,getCLID: function() {
		return model_ver1_game_define_CanNotRerollMark.__clid;
	}
	,serialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.serialize.call(this,__ctx);
		var s = this.cardId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = model_ver1_game_define_Mark.prototype.getSerializeSchema.call(this);
		schema.fieldsNames.push("cardId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(model_ver1_game_define_CanNotRerollMark.__clid);
		return schema;
	}
	,unserialize: function(__ctx) {
		model_ver1_game_define_Mark.prototype.unserialize.call(this,__ctx);
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.cardId = tmp;
	}
	,__class__: model_ver1_game_define_CanNotRerollMark
});
var model_ver1_game_define_PlayerId = {};
model_ver1_game_define_PlayerId._new = function(i) {
	var this1 = i;
	return this1;
};
model_ver1_game_define_PlayerId.fromString = function(s) {
	if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(s) != -1 == false) {
		throw haxe_Exception.thrown("playerId (" + s + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
	}
	var this1 = s;
	return this1;
};
model_ver1_game_define_PlayerId.getOpponentPlayerId = function(this1) {
	if([model_ver1_game_define_PlayerId.A,model_ver1_game_define_PlayerId.B].indexOf(this1) != -1 == false) {
		throw haxe_Exception.thrown("playerId (" + this1 + ") must be " + model_ver1_game_define_PlayerId.A + " or " + model_ver1_game_define_PlayerId.B);
	}
	var this2 = this1;
	if(this2 == model_ver1_game_define_PlayerId.A) {
		return model_ver1_game_define_PlayerId.B;
	} else {
		return model_ver1_game_define_PlayerId.A;
	}
};
var model_ver1_game_define_RequireType = $hxEnums["model.ver1.game.define.RequireType"] = { __ename__:true,__constructs__:null
	,Pending: {_hx_name:"Pending",_hx_index:0,__enum__:"model.ver1.game.define.RequireType",toString:$estr}
	,SelectCard: ($_=function(tips,lengthInclude) { return {_hx_index:1,tips:tips,lengthInclude:lengthInclude,__enum__:"model.ver1.game.define.RequireType",toString:$estr}; },$_._hx_name="SelectCard",$_.__params__ = ["tips","lengthInclude"],$_)
	,SelectBattlePoint: ($_=function(tips) { return {_hx_index:2,tips:tips,__enum__:"model.ver1.game.define.RequireType",toString:$estr}; },$_._hx_name="SelectBattlePoint",$_.__params__ = ["tips"],$_)
};
model_ver1_game_define_RequireType.__constructs__ = [model_ver1_game_define_RequireType.Pending,model_ver1_game_define_RequireType.SelectCard,model_ver1_game_define_RequireType.SelectBattlePoint];
var model_ver1_game_define_TurnKeyword = $hxEnums["model.ver1.game.define.TurnKeyword"] = { __ename__:true,__constructs__:null
	,You: {_hx_name:"You",_hx_index:0,__enum__:"model.ver1.game.define.TurnKeyword",toString:$estr}
	,Opponent: {_hx_name:"Opponent",_hx_index:1,__enum__:"model.ver1.game.define.TurnKeyword",toString:$estr}
};
model_ver1_game_define_TurnKeyword.__constructs__ = [model_ver1_game_define_TurnKeyword.You,model_ver1_game_define_TurnKeyword.Opponent];
var model_ver1_game_define_PhaseKeyword = $hxEnums["model.ver1.game.define.PhaseKeyword"] = { __ename__:true,__constructs__:null
	,Reroll: {_hx_name:"Reroll",_hx_index:0,__enum__:"model.ver1.game.define.PhaseKeyword",toString:$estr}
	,Draw: {_hx_name:"Draw",_hx_index:1,__enum__:"model.ver1.game.define.PhaseKeyword",toString:$estr}
	,Maintenance: {_hx_name:"Maintenance",_hx_index:2,__enum__:"model.ver1.game.define.PhaseKeyword",toString:$estr}
	,Battle: {_hx_name:"Battle",_hx_index:3,__enum__:"model.ver1.game.define.PhaseKeyword",toString:$estr}
};
model_ver1_game_define_PhaseKeyword.__constructs__ = [model_ver1_game_define_PhaseKeyword.Reroll,model_ver1_game_define_PhaseKeyword.Draw,model_ver1_game_define_PhaseKeyword.Maintenance,model_ver1_game_define_PhaseKeyword.Battle];
var model_ver1_game_define_StepKeyword = $hxEnums["model.ver1.game.define.StepKeyword"] = { __ename__:true,__constructs__:null
	,Attack: {_hx_name:"Attack",_hx_index:0,__enum__:"model.ver1.game.define.StepKeyword",toString:$estr}
	,Defense: {_hx_name:"Defense",_hx_index:1,__enum__:"model.ver1.game.define.StepKeyword",toString:$estr}
	,DamageChecking: {_hx_name:"DamageChecking",_hx_index:2,__enum__:"model.ver1.game.define.StepKeyword",toString:$estr}
	,Return: {_hx_name:"Return",_hx_index:3,__enum__:"model.ver1.game.define.StepKeyword",toString:$estr}
	,End: {_hx_name:"End",_hx_index:4,__enum__:"model.ver1.game.define.StepKeyword",toString:$estr}
};
model_ver1_game_define_StepKeyword.__constructs__ = [model_ver1_game_define_StepKeyword.Attack,model_ver1_game_define_StepKeyword.Defense,model_ver1_game_define_StepKeyword.DamageChecking,model_ver1_game_define_StepKeyword.Return,model_ver1_game_define_StepKeyword.End];
var model_ver1_game_define_TimingKeyword = $hxEnums["model.ver1.game.define.TimingKeyword"] = { __ename__:true,__constructs__:null
	,Start: {_hx_name:"Start",_hx_index:0,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,Free1: {_hx_name:"Free1",_hx_index:1,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,Rule: {_hx_name:"Rule",_hx_index:2,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,Free2: {_hx_name:"Free2",_hx_index:3,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,End: {_hx_name:"End",_hx_index:4,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,DamageReset: {_hx_name:"DamageReset",_hx_index:5,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,ResolveEffect: {_hx_name:"ResolveEffect",_hx_index:6,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,AdjustHand: {_hx_name:"AdjustHand",_hx_index:7,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
	,TurnEnd: {_hx_name:"TurnEnd",_hx_index:8,__enum__:"model.ver1.game.define.TimingKeyword",toString:$estr}
};
model_ver1_game_define_TimingKeyword.__constructs__ = [model_ver1_game_define_TimingKeyword.Start,model_ver1_game_define_TimingKeyword.Free1,model_ver1_game_define_TimingKeyword.Rule,model_ver1_game_define_TimingKeyword.Free2,model_ver1_game_define_TimingKeyword.End,model_ver1_game_define_TimingKeyword.DamageReset,model_ver1_game_define_TimingKeyword.ResolveEffect,model_ver1_game_define_TimingKeyword.AdjustHand,model_ver1_game_define_TimingKeyword.TurnEnd];
var model_ver1_game_define_Timing = $hxEnums["model.ver1.game.define.Timing"] = { __ename__:true,__constructs__:null
	,Default: ($_=function(phase,step,timing) { return {_hx_index:0,phase:phase,step:step,timing:timing,__enum__:"model.ver1.game.define.Timing",toString:$estr}; },$_._hx_name="Default",$_.__params__ = ["phase","step","timing"],$_)
};
model_ver1_game_define_Timing.__constructs__ = [model_ver1_game_define_Timing.Default];
var signals_BaseSignal = $hx_exports["BaseSignal"] = function(fireOnAdd) {
	if(fireOnAdd == null) {
		fireOnAdd = false;
	}
	this.defaultCallbackProps = 0;
	this.requiresSort = false;
	this.toTrigger = [];
	this.callbacks = [];
	this.mute = false;
	this._fireOnAdd = false;
	this._fireOnAdd = fireOnAdd;
};
$hxClasses["signals.BaseSignal"] = signals_BaseSignal;
signals_BaseSignal.__name__ = "signals.BaseSignal";
signals_BaseSignal.prototype = {
	numListeners: null
	,hasListeners: null
	,_fireOnAdd: null
	,mute: null
	,currentCallback: null
	,callbacks: null
	,toTrigger: null
	,requiresSort: null
	,defaultCallbackProps: null
	,sortPriority: function() {
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
	}
	,dispatchCallbacks: function() {
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
	}
	,dispatchCallback: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback1: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("implement in override");
	}
	,dispatchCheck: function(callback,callbackData) {
		try {
			this.dispatchCallback(callback,callbackData);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback);
	}
	,dispatchCheck1: function(callback,callbackData) {
		try {
			this.dispatchCallback1(callback,callbackData);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCallback(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback1);
	}
	,dispatchCheck2: function(callback,callbackData) {
		try {
			this.dispatchCallback2(callback,callbackData);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCheck1(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback2);
	}
	,dispatchCheck3: function(callback,callbackData) {
		try {
			this.dispatchCallback3(callback,callbackData);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e == "Invalid call") {
				this.dispatchCheck2(callback,callbackData);
				return;
			}
		}
		callbackData.dispatchMethod = $bind(this,this.dispatchCallback3);
	}
	,sortCallbacks: function(s1,s2) {
		if(s1.priority > s2.priority) {
			return -1;
		} else if(s1.priority < s2.priority) {
			return 1;
		} else {
			return 0;
		}
	}
	,get_numListeners: function() {
		return this.callbacks.length;
	}
	,get_hasListeners: function() {
		return this.get_numListeners() > 0;
	}
	,add: function(callback,fireOnce,priority,fireOnAdd) {
		if(priority == null) {
			priority = 0;
		}
		if(fireOnce == null) {
			fireOnce = false;
		}
		if(fireOnce != false || priority != 0 || fireOnAdd != null) {
			var warningMessage = "\nWARNING: fireOnce, priority and fireOnAdd params will be removed from 'Signals' in a future release\nInstead use daisy chain methods, eg: obj.add(callback).repeat(5).priority(1000).fireOnAdd();";
			console.warn(warningMessage);
		}
		var numParams = this.getNumParams(callback);
		var repeat = -1;
		if(fireOnce == true) {
			repeat = 0;
		}
		this.currentCallback = { params : numParams, callback : callback, callCount : 0, repeat : repeat, priority : priority, remove : false};
		if(numParams == 0) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck);
		} else if(numParams == 1) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck1);
		} else if(numParams == 2) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck2);
		} else if(numParams == 3) {
			this.currentCallback.dispatchMethod = $bind(this,this.dispatchCheck3);
		}
		this.callbacks.push(this.currentCallback);
		if(priority != 0) {
			this.requiresSort = true;
		}
		if(fireOnAdd == true || this._fireOnAdd == true) {
			this.currentCallback.dispatchMethod(callback,this.currentCallback);
		}
		return this;
	}
	,getNumParams: function(callback) {
		var length = Reflect.getProperty(callback,"length");
		if(length != null) {
			return length;
		}
		return this.defaultCallbackProps;
	}
	,priority: function(value) {
		if(this.currentCallback == null) {
			return this;
		}
		this.currentCallback.priority = value;
		this.requiresSort = true;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = -1;
		}
		if(this.currentCallback == null) {
			return this;
		}
		this.currentCallback.repeat = value;
		return this;
	}
	,fireOnAdd: function() {
		if(this.currentCallback == null) {
			return;
		}
		this.currentCallback.callCount++;
		this.currentCallback.dispatchMethod(this.currentCallback.callback,this.currentCallback);
	}
	,remove: function(callback) {
		if(callback == null) {
			callback = false;
		}
		if(callback == true) {
			this.callbacks = [];
		} else {
			var j = 0;
			while(j < this.callbacks.length) if(this.callbacks[j].callback == callback) {
				this.callbacks.splice(j,1);
			} else {
				++j;
			}
		}
	}
	,__class__: signals_BaseSignal
	,__properties__: {get_hasListeners:"get_hasListeners",get_numListeners:"get_numListeners"}
};
var notifier_api_IWritable = function() { };
$hxClasses["notifier.api.IWritable"] = notifier_api_IWritable;
notifier_api_IWritable.__name__ = "notifier.api.IWritable";
notifier_api_IWritable.__isInterface__ = true;
notifier_api_IWritable.prototype = {
	set_value: null
	,value: null
	,write: null
	,__class__: notifier_api_IWritable
	,__properties__: {set_value:"set_value"}
};
var notifier_api_IWatchable = function() { };
$hxClasses["notifier.api.IWatchable"] = notifier_api_IWatchable;
notifier_api_IWatchable.__name__ = "notifier.api.IWatchable";
notifier_api_IWatchable.__isInterface__ = true;
notifier_api_IWatchable.prototype = {
	watch: null
	,unwatch: null
	,__class__: notifier_api_IWatchable
};
var notifier_api_IReadable = function() { };
$hxClasses["notifier.api.IReadable"] = notifier_api_IReadable;
notifier_api_IReadable.__name__ = "notifier.api.IReadable";
notifier_api_IReadable.__isInterface__ = true;
notifier_api_IReadable.__interfaces__ = [notifier_api_IWatchable];
notifier_api_IReadable.prototype = {
	get_value: null
	,value: null
	,read: null
	,__class__: notifier_api_IReadable
	,__properties__: {get_value:"get_value"}
};
var notifier_api_IReadWritable = function() { };
$hxClasses["notifier.api.IReadWritable"] = notifier_api_IReadWritable;
notifier_api_IReadWritable.__name__ = "notifier.api.IReadWritable";
notifier_api_IReadWritable.__isInterface__ = true;
notifier_api_IReadWritable.__interfaces__ = [notifier_api_IWritable,notifier_api_IReadable];
notifier_api_IReadWritable.prototype = {
	get_value: null
	,set_value: null
	,__class__: notifier_api_IReadWritable
	,__properties__: {set_value:"set_value",get_value:"get_value"}
};
var notifier_Notifier = $hx_exports["Notifier"] = function(defaultValue,id,fireOnAdd) {
	if(fireOnAdd == null) {
		fireOnAdd = false;
	}
	this.requireChange = true;
	this._value = this.defaultValue = defaultValue;
	this.id = id;
	signals_BaseSignal.call(this,fireOnAdd);
};
$hxClasses["notifier.Notifier"] = notifier_Notifier;
notifier_Notifier.__name__ = "notifier.Notifier";
notifier_Notifier.__interfaces__ = [notifier_api_IReadWritable];
notifier_Notifier.__super__ = signals_BaseSignal;
notifier_Notifier.prototype = $extend(signals_BaseSignal.prototype,{
	requireChange: null
	,modifiers: null
	,defaultValue: null
	,_value: null
	,id: null
	,toString: function() {
		return this.get_value();
	}
	,get_value: function() {
		var value = this._value;
		if(this.modifiers != null) {
			var _g = 0;
			var _g1 = this.modifiers.length;
			while(_g < _g1) {
				var i = _g++;
				value = this.modifiers[i](value);
			}
		}
		return value;
	}
	,set_value: function(value) {
		if(!(this._value != value || !this.requireChange)) {
			return value;
		}
		this._value = value;
		this.dispatch();
		return value;
	}
	,silentlySet: function(value) {
		this._value = value;
	}
	,changeRequired: function(value) {
		if(this._value == value) {
			return !this.requireChange;
		} else {
			return true;
		}
	}
	,dispatch: function() {
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
	}
	,callback0: null
	,callback1: null
	,dispatchCallback: function(callback,callbackData) {
		callback();
	}
	,dispatchCallback1: function(callback,callbackData) {
		callback(this.get_value());
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("Notifier does not support two param dispatch");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("Notifier does not support three param dispatch");
	}
	,addAction: function(action) {
		var warningMessage = "\nWARNING: addAction methed will be removed in a future release, use addModifier instead";
		console.warn(warningMessage);
		this.addModifier(action);
	}
	,addModifier: function(modifier) {
		if(this.modifiers == null) {
			this.modifiers = [];
		}
		this.modifiers.push(modifier);
	}
	,applyModifiers: function(value) {
		if(this.modifiers != null) {
			var _g = 0;
			var _g1 = this.modifiers.length;
			while(_g < _g1) {
				var i = _g++;
				value = this.modifiers[i](value);
			}
		}
		return value;
	}
	,read: function() {
		return this.get_value();
	}
	,write: function(value) {
		this.set_value(value);
	}
	,watch: function(handler,priority) {
		if(priority != null) {
			var warningMessage = "\nWARNING:the priority param will be removed from 'Notifier.watch' in a future release\nInstead use daisy chain methods, eg: obj.watch(callback).priority(1000);";
			console.warn(warningMessage);
		}
		this.add(handler).priority(priority);
		return this;
	}
	,unwatch: function(handler) {
		this.remove(handler);
	}
	,__class__: notifier_Notifier
	,__properties__: $extend(signals_BaseSignal.prototype.__properties__,{set_value:"set_value",get_value:"get_value"})
});
var signals_Signal = $hx_exports["Signal"] = function(fireOnAdd) {
	if(fireOnAdd == null) {
		fireOnAdd = false;
	}
	signals_BaseSignal.call(this,fireOnAdd);
};
$hxClasses["signals.Signal"] = signals_Signal;
signals_Signal.__name__ = "signals.Signal";
signals_Signal.__super__ = signals_BaseSignal;
signals_Signal.prototype = $extend(signals_BaseSignal.prototype,{
	dispatch: function() {
		if(this.mute) {
			return;
		}
		if(this.requiresSort) {
			this.callbacks.sort($bind(this,this.sortCallbacks));
			this.requiresSort = false;
		}
		var i = 0;
		while(i < this.callbacks.length) {
			var callbackData = this.callbacks[i];
			if(callbackData.repeat < 0 || callbackData.callCount <= callbackData.repeat) {
				this.toTrigger.push(callbackData);
			} else {
				callbackData.remove = true;
			}
			callbackData.callCount++;
			++i;
		}
		var j = this.callbacks.length - 1;
		while(j >= 0) {
			var callbackData = this.callbacks[j];
			if(callbackData.remove == true) {
				this.callbacks.splice(j,1);
			}
			--j;
		}
		var _g = 0;
		var _g1 = this.toTrigger.length;
		while(_g < _g1) {
			var l = _g++;
			if(this.toTrigger[l] != null) {
				this.toTrigger[l].dispatchMethod(this.toTrigger[l].callback,this.toTrigger[l]);
			}
		}
		this.toTrigger = [];
	}
	,dispatchCallback: function(callback,callbackData) {
		callback();
	}
	,dispatchCallback1: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 1");
	}
	,dispatchCallback2: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 2");
	}
	,dispatchCallback3: function(callback,callbackData) {
		throw haxe_Exception.thrown("Use Signal 3");
	}
	,__class__: signals_Signal
});
var time_EnterFrame = function() { };
$hxClasses["time.EnterFrame"] = time_EnterFrame;
time_EnterFrame.__name__ = "time.EnterFrame";
time_EnterFrame.init = function() {
	if(time_EnterFrame.initialized) {
		return;
	}
	time_EnterFrame.callbacks = [];
	time_EnterFrame.tick = new time_Tick(time_EnterFrame.onTick);
	time_EnterFrame.initialized = true;
};
time_EnterFrame.onTick = function() {
	var i = 0;
	while(i < time_EnterFrame.callbacks.length) {
		var callback = time_EnterFrame.callbacks[i];
		if(callback != null) {
			callback();
			++i;
		} else {
			time_EnterFrame.callbacks.splice(i,1);
		}
	}
};
time_EnterFrame.add = function(callback) {
	time_EnterFrame.init();
	time_EnterFrame.tick.running.set_value(true);
	time_EnterFrame.callbacks.push(callback);
};
time_EnterFrame.addAt = function(callback,index) {
	time_EnterFrame.init();
	time_EnterFrame.tick.running.set_value(true);
	time_EnterFrame.callbacks.splice(index,0,callback);
};
time_EnterFrame.remove = function(callback) {
	var i = time_EnterFrame.callbacks.length - 1;
	while(i >= 0) {
		if(time_EnterFrame.callbacks[i] == callback) {
			time_EnterFrame.callbacks.splice(i,1);
		}
		--i;
	}
	if(time_EnterFrame.callbacks.length == 0) {
		time_EnterFrame.tick.running.set_value(false);
	}
};
var time_BaseTick = function(callback) {
	this.running = new notifier_Notifier(false);
	this.callback = callback;
	this.running.add($bind(this,this.onRunningChange));
};
$hxClasses["time.BaseTick"] = time_BaseTick;
time_BaseTick.__name__ = "time.BaseTick";
time_BaseTick.prototype = {
	callback: null
	,running: null
	,onRunningChange: function() {
		if(this.running.get_value()) {
			this.start();
		} else {
			this.stop();
		}
	}
	,start: function() {
	}
	,stop: function() {
	}
	,__class__: time_BaseTick
};
var time_Tick = function(callback) {
	this.fps = 60;
	time_BaseTick.call(this,callback);
};
$hxClasses["time.Tick"] = time_Tick;
time_Tick.__name__ = "time.Tick";
time_Tick.__super__ = time_BaseTick;
time_Tick.prototype = $extend(time_BaseTick.prototype,{
	timer: null
	,fps: null
	,start: function() {
		this.stop();
		this.timer = new haxe_Timer(1000 / this.fps | 0);
		this.timer.run = this.callback;
	}
	,stop: function() {
		if(this.timer != null) {
			this.timer.stop();
		}
	}
	,__class__: time_Tick
});
var time_GlobalTime = function() {
};
$hxClasses["time.GlobalTime"] = time_GlobalTime;
time_GlobalTime.__name__ = "time.GlobalTime";
time_GlobalTime.__properties__ = {get_timezoneOffset:"get_timezoneOffset",set_offset:"set_offset",get_offset:"get_offset",get_today:"get_today"};
time_GlobalTime.init = function() {
	if(time_GlobalTime.inited) {
		return;
	}
	time_GlobalTime.inited = true;
	time_EnterFrame.add(time_GlobalTime.OnTick);
};
time_GlobalTime.OnTick = function() {
	time_GlobalTime._nowDate = null;
	if(!time_GlobalTime.pause) {
		time_GlobalTime._nowTime = null;
	}
};
time_GlobalTime.now = function() {
	time_GlobalTime.init();
	if(time_GlobalTime._nowDate == null) {
		if(!time_GlobalTime.pause || time_GlobalTime._nowTime == null) {
			time_GlobalTime._nowTime = new Date().getTime();
		}
		time_GlobalTime._nowDate = new Date(time_GlobalTime._nowTime + time_GlobalTime.get_offset());
	}
	return time_GlobalTime._nowDate;
};
time_GlobalTime.nowTime = function() {
	time_GlobalTime.init();
	if(!time_GlobalTime.pause || time_GlobalTime._nowTime == null) {
		time_GlobalTime._nowTime = new Date().getTime();
	}
	time_GlobalTime._nowTime += time_GlobalTime.get_offset();
	return time_GlobalTime._nowTime;
};
time_GlobalTime.get_today = function() {
	var _now = time_GlobalTime.now();
	var todayTime = _now.getTime() - time_GlobalTime.get_timezoneOffset() * 60 * 1000;
	todayTime = Math.floor(todayTime / 1000 / 60 / 60 / 24);
	todayTime = todayTime * 1000 * 60 * 60 * 24;
	var todayDate = new Date(todayTime + time_GlobalTime.get_timezoneOffset() * 60 * 1000);
	return todayDate;
};
time_GlobalTime.get_timezoneOffset = function() {
	if(time_GlobalTime._timezoneOffset == null) {
		var _now = time_GlobalTime.now();
		time_GlobalTime._timezoneOffset = Reflect.getProperty(_now,"timezoneOffset");
	}
	return time_GlobalTime._timezoneOffset;
};
time_GlobalTime.get_offset = function() {
	return time_GlobalTime.offset;
};
time_GlobalTime.set_offset = function(value) {
	time_GlobalTime.OnTick();
	return time_GlobalTime.offset = value;
};
time_GlobalTime.prototype = {
	__class__: time_GlobalTime
};
var time_TimeUtils = function() { };
$hxClasses["time.TimeUtils"] = time_TimeUtils;
time_TimeUtils.__name__ = "time.TimeUtils";
time_TimeUtils.convert = function(value,from,to) {
	return value * from / to;
};
time_TimeUtils.milToYears = function(value) {
	return value * 1 / 31557600000;
};
time_TimeUtils.milToMonths = function(value) {
	return value * 1 / 2629800000;
};
time_TimeUtils.milToDays = function(value) {
	return value * 1 / 86400000;
};
time_TimeUtils.milToHours = function(value) {
	return value * 1 / 3600000;
};
time_TimeUtils.milToMinutes = function(value) {
	return value * 1 / 60000;
};
time_TimeUtils.milToSeconds = function(value) {
	return value * 1 / 1000;
};
time_TimeUtils.yearsToMil = function(value) {
	return value * 31557600000 / 1;
};
time_TimeUtils.monthsToMil = function(value) {
	return value * 2629800000 / 1;
};
time_TimeUtils.daysToMil = function(value) {
	return value * 86400000 / 1;
};
time_TimeUtils.hoursToMil = function(value) {
	return value * 3600000 / 1;
};
time_TimeUtils.minutesToMil = function(value) {
	return value * 60000 / 1;
};
time_TimeUtils.secondsToMil = function(value) {
	return value * 1000 / 1;
};
function tool_Helper_getMemonto(obj) {
	var s = new hxbit_Serializer();
	var bytes = s.serialize(obj);
	return bytes.toHex();
}
function tool_Helper_ofMemonto(memonto,clz) {
	var u = new hxbit_Serializer();
	return u.unserialize(haxe_io_Bytes.ofHex(memonto),clz);
}
var tool_Card = function(id) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.isReverse = false;
	this.isTap = false;
	this.isFaceUp = false;
	this.id = id;
};
$hxClasses["tool.Card"] = tool_Card;
tool_Card.__name__ = "tool.Card";
tool_Card.__interfaces__ = [hxbit_Serializable];
tool_Card.prototype = {
	id: null
	,isFaceUp: null
	,isTap: null
	,isReverse: null
	,protoId: null
	,owner: null
	,__uid: null
	,getCLID: function() {
		return tool_Card.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.id;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		__ctx.out.addByte(this.isFaceUp ? 1 : 0);
		__ctx.out.addByte(this.isTap ? 1 : 0);
		__ctx.out.addByte(this.isReverse ? 1 : 0);
		var s = this.protoId;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var s = this.owner;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("isFaceUp");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("isTap");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("isReverse");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PBool);
		schema.fieldsNames.push("protoId");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("owner");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.isFinal = hxbit_Serializer.isClassFinal(tool_Card.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.isFaceUp = false;
		this.isTap = false;
		this.isReverse = false;
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.id = tmp;
		this.isFaceUp = __ctx.input.b[__ctx.inPos++] != 0;
		this.isTap = __ctx.input.b[__ctx.inPos++] != 0;
		this.isReverse = __ctx.input.b[__ctx.inPos++] != 0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.protoId = tmp;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.owner = tmp;
	}
	,__class__: tool_Card
};
var tool_CardStack = function(id) {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.cardIds = [];
	this.id = id;
};
$hxClasses["tool.CardStack"] = tool_CardStack;
tool_CardStack.__name__ = "tool.CardStack";
tool_CardStack.__interfaces__ = [hxbit_Serializable];
tool_CardStack.prototype = {
	id: null
	,cardIds: null
	,__uid: null
	,getCLID: function() {
		return tool_CardStack.__clid;
	}
	,serialize: function(__ctx) {
		var s = this.id;
		if(s == null) {
			__ctx.out.addByte(0);
		} else {
			var b = haxe_io_Bytes.ofString(s);
			var v = b.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			__ctx.out.add(b);
		}
		var a = this.cardIds;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var v = a.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < a.length) {
				var v = a[_g];
				++_g;
				if(v == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(v);
					var v1 = b.length + 1;
					if(v1 >= 0 && v1 < 128) {
						__ctx.out.addByte(v1);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v1);
					}
					__ctx.out.add(b);
				}
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("id");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PString);
		schema.fieldsNames.push("cardIds");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PArray(hxbit_PropTypeDesc.PString));
		schema.isFinal = hxbit_Serializer.isClassFinal(tool_CardStack.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.cardIds = [];
	}
	,unserialize: function(__ctx) {
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var s = __ctx.input.getString(__ctx.inPos,len);
			__ctx.inPos += len;
			tmp = s;
		}
		this.id = tmp;
		var e0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			--len;
			var a = [];
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i = _g++;
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len = v;
				if(len == 0) {
					e0 = null;
				} else {
					--len;
					var s = __ctx.input.getString(__ctx.inPos,len);
					__ctx.inPos += len;
					e0 = s;
				}
				a[i] = e0;
			}
			tmp = a;
		}
		this.cardIds = tmp;
	}
	,__class__: tool_CardStack
};
var tool_Table = function() {
	this.__uid = hxbit_Serializer.SEQ << 24 | ++hxbit_Serializer.UID;
	this.cardStacks = new haxe_ds_StringMap();
	this.cards = new haxe_ds_StringMap();
};
$hxClasses["tool.Table"] = tool_Table;
tool_Table.__name__ = "tool.Table";
tool_Table.__interfaces__ = [hxbit_Serializable];
tool_Table.prototype = {
	cards: null
	,cardStacks: null
	,__uid: null
	,getCLID: function() {
		return tool_Table.__clid;
	}
	,serialize: function(__ctx) {
		var a = this.cards;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addKnownRef(a.h[k]);
			}
		}
		var a = this.cardStacks;
		if(a == null) {
			__ctx.out.addByte(0);
		} else {
			var _g = [];
			var h = a.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				_g.push(k);
			}
			var keys = _g;
			var v = keys.length + 1;
			if(v >= 0 && v < 128) {
				__ctx.out.addByte(v);
			} else {
				__ctx.out.addByte(128);
				__ctx.out.addInt32(v);
			}
			var _g = 0;
			while(_g < keys.length) {
				var k = keys[_g];
				++_g;
				if(k == null) {
					__ctx.out.addByte(0);
				} else {
					var b = haxe_io_Bytes.ofString(k);
					var v = b.length + 1;
					if(v >= 0 && v < 128) {
						__ctx.out.addByte(v);
					} else {
						__ctx.out.addByte(128);
						__ctx.out.addInt32(v);
					}
					__ctx.out.add(b);
				}
				__ctx.addKnownRef(a.h[k]);
			}
		}
	}
	,getSerializeSchema: function() {
		var schema = new hxbit_Schema();
		schema.fieldsNames.push("cards");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PSerializable("tool.Card")));
		schema.fieldsNames.push("cardStacks");
		schema.fieldsTypes.push(hxbit_PropTypeDesc.PMap(hxbit_PropTypeDesc.PString,hxbit_PropTypeDesc.PSerializable("tool.CardStack")));
		schema.isFinal = hxbit_Serializer.isClassFinal(tool_Table.__clid);
		return schema;
	}
	,unserializeInit: function() {
		this.cards = new haxe_ds_StringMap();
		this.cardStacks = new haxe_ds_StringMap();
	}
	,unserialize: function(__ctx) {
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getRef(tool_Card,tool_Card.__clid);
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.cards = tmp;
		var k0;
		var v0;
		var v = __ctx.input.b[__ctx.inPos++];
		if(v == 128) {
			v = __ctx.input.getInt32(__ctx.inPos);
			__ctx.inPos += 4;
		}
		var len = v;
		var tmp;
		if(len == 0) {
			tmp = null;
		} else {
			var m = new haxe_ds_StringMap();
			while(--len > 0) {
				var v = __ctx.input.b[__ctx.inPos++];
				if(v == 128) {
					v = __ctx.input.getInt32(__ctx.inPos);
					__ctx.inPos += 4;
				}
				var len1 = v;
				if(len1 == 0) {
					k0 = null;
				} else {
					--len1;
					var s = __ctx.input.getString(__ctx.inPos,len1);
					__ctx.inPos += len1;
					k0 = s;
				}
				var k = k0;
				v0 = __ctx.getRef(tool_CardStack,tool_CardStack.__clid);
				var v1 = v0;
				m.h[k] = v1;
			}
			tmp = m;
		}
		this.cardStacks = tmp;
	}
	,__class__: tool_Table
};
function tool_Table_addCard(table,cardStackId,card) {
	if(table.cards.h[card.id] != null) {
		throw new haxe_Exception("card key already exist. " + card.id);
	}
	if(table.cardStacks.h[cardStackId] == null) {
		var this1 = table.cardStacks;
		var v = new tool_CardStack(cardStackId);
		this1.h[cardStackId] = v;
	}
	table.cards.h[card.id] = card;
	table.cardStacks.h[cardStackId].cardIds.push(card.id);
}
function tool_Table_getCard(table,cardId) {
	var card = table.cards.h[cardId];
	if(card == null) {
		throw new haxe_Exception("card not found: " + cardId);
	}
	return card;
}
function tool_Table_getCardStack(table,cardStackId) {
	var ret = table.cardStacks.h[cardStackId];
	if(ret == null) {
		throw new haxe_Exception("cardStack not found: " + cardStackId);
	}
	return ret;
}
function tool_Table_getCardCardStack(table,cardId) {
	var _g = [];
	var h = table.cardStacks.h;
	var cs_h = h;
	var cs_keys = Object.keys(h);
	var cs_length = cs_keys.length;
	var cs_current = 0;
	while(cs_current < cs_length) {
		var cs = cs_h[cs_keys[cs_current++]];
		_g.push(cs);
	}
	var _g1 = [];
	var _g2 = 0;
	var _g3 = _g;
	while(_g2 < _g3.length) {
		var v = _g3[_g2];
		++_g2;
		if(v.cardIds.indexOf(cardId) != -1) {
			_g1.push(v);
		}
	}
	var findCs = _g1;
	if(findCs.length == 0) {
		return haxe_ds_Option.None;
	}
	return haxe_ds_Option.Some(findCs[0]);
}
function tool_Table_moveCard(table,cardId,fromId,toId) {
	if(tool_Table_getCardStack(table,fromId).cardIds.indexOf(cardId) != -1 == false) {
		throw new haxe_Exception("card not found: " + fromId + " > " + cardId);
	}
	HxOverrides.remove(tool_Table_getCardStack(table,fromId).cardIds,cardId);
	tool_Table_getCardStack(table,toId).cardIds.push(cardId);
}
var tweenx909_EventX = function() { };
$hxClasses["tweenx909.EventX"] = tweenx909_EventX;
tweenx909_EventX.__name__ = "tweenx909.EventX";
var tweenx909_advanced_CommandX = function(command,posInfos) {
	this.command = command;
	this.definedPosInfos = posInfos;
};
$hxClasses["tweenx909.advanced.CommandX"] = tweenx909_advanced_CommandX;
tweenx909_advanced_CommandX.__name__ = "tweenx909.advanced.CommandX";
tweenx909_advanced_CommandX.prototype = {
	command: null
	,definedPosInfos: null
	,__class__: tweenx909_advanced_CommandX
};
var tweenxcore_Easing = function() { };
$hxClasses["tweenxcore.Easing"] = tweenxcore_Easing;
tweenxcore_Easing.__name__ = "tweenxcore.Easing";
tweenxcore_Easing.linear = function(t) {
	return t;
};
tweenxcore_Easing.sineIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return 1 - Math.cos(t * 1.5707963267948966);
	}
};
tweenxcore_Easing.sineOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return Math.sin(t * 1.5707963267948966);
	}
};
tweenxcore_Easing.sineInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return -0.5 * (Math.cos(3.1415926535897932384626433832795 * t) - 1);
	}
};
tweenxcore_Easing.sineOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		return 0.5 * Math.sin(t * 2 * 1.5707963267948966);
	} else {
		return -0.5 * Math.cos((t * 2 - 1) * 1.5707963267948966) + 1;
	}
};
tweenxcore_Easing.quadIn = function(t) {
	return t * t;
};
tweenxcore_Easing.quadOut = function(t) {
	return -t * (t - 2);
};
tweenxcore_Easing.quadInOut = function(t) {
	if(t < 0.5) {
		return 2 * t * t;
	} else {
		return -2 * (--t * t) + 1;
	}
};
tweenxcore_Easing.quadOutIn = function(t) {
	if(t < 0.5) {
		return -0.5 * (t *= 2) * (t - 2);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t + 0.5;
	}
};
tweenxcore_Easing.cubicIn = function(t) {
	return t * t * t;
};
tweenxcore_Easing.cubicOut = function(t) {
	return --t * t * t + 1;
};
tweenxcore_Easing.cubicInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * t * t * t;
	} else {
		return 0.5 * ((t -= 2) * t * t + 2);
	}
};
tweenxcore_Easing.cubicOutIn = function(t) {
	t = t * 2 - 1;
	return 0.5 * (t * t * t + 1);
};
tweenxcore_Easing.quartIn = function(t) {
	return (t *= t) * t;
};
tweenxcore_Easing.quartOut = function(t) {
	t = --t * t;
	return 1 - t * t;
};
tweenxcore_Easing.quartInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * (t *= t) * t;
	} else {
		t = (t -= 2) * t;
		return -0.5 * (t * t - 2);
	}
};
tweenxcore_Easing.quartOutIn = function(t) {
	if(t < 0.5) {
		t = t * 2 - 1;
		return -0.5 * (t *= t) * t + 0.5;
	} else {
		t = t * 2 - 1;
		return 0.5 * (t *= t) * t + 0.5;
	}
};
tweenxcore_Easing.quintIn = function(t) {
	return t * (t *= t) * t;
};
tweenxcore_Easing.quintOut = function(t) {
	return --t * (t *= t) * t + 1;
};
tweenxcore_Easing.quintInOut = function(t) {
	if((t *= 2) < 1) {
		return 0.5 * t * (t *= t) * t;
	} else {
		return 0.5 * (t -= 2) * (t *= t) * t + 1;
	}
};
tweenxcore_Easing.quintOutIn = function(t) {
	t = t * 2 - 1;
	return 0.5 * (t * (t *= t) * t + 1);
};
tweenxcore_Easing.expoIn = function(t) {
	if(t == 0) {
		return 0;
	} else {
		return Math.exp(6.931471805599453 * (t - 1));
	}
};
tweenxcore_Easing.expoOut = function(t) {
	if(t == 1) {
		return 1;
	} else {
		return 1 - Math.exp(-6.9314718055994531 * t);
	}
};
tweenxcore_Easing.expoInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if((t *= 2) < 1) {
		return 0.5 * Math.exp(6.931471805599453 * (t - 1));
	} else {
		return 0.5 * (2 - Math.exp(-6.9314718055994531 * (t - 1)));
	}
};
tweenxcore_Easing.expoOutIn = function(t) {
	if(t < 0.5) {
		return 0.5 * (1 - Math.exp(-13.862943611198906 * t));
	} else if(t == 0.5) {
		return 0.5;
	} else {
		return 0.5 * (Math.exp(13.862943611198906 * (t - 1)) + 1);
	}
};
tweenxcore_Easing.circIn = function(t) {
	if(t < -1 || 1 < t) {
		return 0;
	} else {
		return 1 - Math.sqrt(1 - t * t);
	}
};
tweenxcore_Easing.circOut = function(t) {
	if(t < 0 || 2 < t) {
		return 0;
	} else {
		return Math.sqrt(t * (2 - t));
	}
};
tweenxcore_Easing.circInOut = function(t) {
	if(t < -0.5 || 1.5 < t) {
		return 0.5;
	} else if((t *= 2) < 1) {
		return -0.5 * (Math.sqrt(1 - t * t) - 1);
	} else {
		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
	}
};
tweenxcore_Easing.circOutIn = function(t) {
	if(t < 0) {
		return 0;
	} else if(1 < t) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * Math.sqrt(1 - t * t);
	} else {
		t = t * 2 - 1;
		return -0.5 * (Math.sqrt(1 - t * t) - 1 - 1);
	}
};
tweenxcore_Easing.bounceIn = function(t) {
	t = 1 - t;
	if(t < 0.36363636363636365) {
		return 1 - 7.5625 * t * t;
	} else if(t < 0.72727272727272729) {
		return 1 - (7.5625 * (t -= 0.54545454545454541) * t + 0.75);
	} else if(t < 0.90909090909090906) {
		return 1 - (7.5625 * (t -= 0.81818181818181823) * t + 0.9375);
	} else {
		return 1 - (7.5625 * (t -= 0.95454545454545459) * t + 0.984375);
	}
};
tweenxcore_Easing.bounceOut = function(t) {
	if(t < 0.36363636363636365) {
		return 7.5625 * t * t;
	} else if(t < 0.72727272727272729) {
		return 7.5625 * (t -= 0.54545454545454541) * t + 0.75;
	} else if(t < 0.90909090909090906) {
		return 7.5625 * (t -= 0.81818181818181823) * t + 0.9375;
	} else {
		return 7.5625 * (t -= 0.95454545454545459) * t + 0.984375;
	}
};
tweenxcore_Easing.bounceInOut = function(t) {
	if(t < 0.5) {
		t = 1 - t * 2;
		if(t < 0.36363636363636365) {
			return (1 - 7.5625 * t * t) * 0.5;
		} else if(t < 0.72727272727272729) {
			return (1 - (7.5625 * (t -= 0.54545454545454541) * t + 0.75)) * 0.5;
		} else if(t < 0.90909090909090906) {
			return (1 - (7.5625 * (t -= 0.81818181818181823) * t + 0.9375)) * 0.5;
		} else {
			return (1 - (7.5625 * (t -= 0.95454545454545459) * t + 0.984375)) * 0.5;
		}
	} else {
		t = t * 2 - 1;
		if(t < 0.36363636363636365) {
			return 7.5625 * t * t * 0.5 + 0.5;
		} else if(t < 0.72727272727272729) {
			return (7.5625 * (t -= 0.54545454545454541) * t + 0.75) * 0.5 + 0.5;
		} else if(t < 0.90909090909090906) {
			return (7.5625 * (t -= 0.81818181818181823) * t + 0.9375) * 0.5 + 0.5;
		} else {
			return (7.5625 * (t -= 0.95454545454545459) * t + 0.984375) * 0.5 + 0.5;
		}
	}
};
tweenxcore_Easing.bounceOutIn = function(t) {
	if(t < 0.5) {
		if((t *= 2) < 0.36363636363636365) {
			return 0.5 * (7.5625 * t * t);
		} else if(t < 0.72727272727272729) {
			return 0.5 * (7.5625 * (t -= 0.54545454545454541) * t + 0.75);
		} else if(t < 0.90909090909090906) {
			return 0.5 * (7.5625 * (t -= 0.81818181818181823) * t + 0.9375);
		} else {
			return 0.5 * (7.5625 * (t -= 0.95454545454545459) * t + 0.984375);
		}
	} else {
		t = 1 - (t * 2 - 1);
		if(t < 0.36363636363636365) {
			return 0.5 - 0.5 * (7.5625 * t * t) + 0.5;
		} else if(t < 0.72727272727272729) {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.54545454545454541) * t + 0.75) + 0.5;
		} else if(t < 0.90909090909090906) {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.81818181818181823) * t + 0.9375) + 0.5;
		} else {
			return 0.5 - 0.5 * (7.5625 * (t -= 0.95454545454545459) * t + 0.984375) + 0.5;
		}
	}
};
tweenxcore_Easing.backIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return t * t * (2.70158 * t - 1.70158);
	}
};
tweenxcore_Easing.backOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return --t * t * (2.70158 * t + 1.70158) + 1;
	}
};
tweenxcore_Easing.backInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if((t *= 2) < 1) {
		return 0.5 * (t * t * (3.5949095 * t - 2.5949095));
	} else {
		return 0.5 * ((t -= 2) * t * (3.5949095 * t + 2.5949095) + 2);
	}
};
tweenxcore_Easing.backOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * (t * t * (2.70158 * t + 1.70158) + 1);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t * (2.70158 * t - 1.70158) + 0.5;
	}
};
tweenxcore_Easing.elasticIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		return -(Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003));
	}
};
tweenxcore_Easing.elasticOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		return Math.exp(-6.9314718055994531 * t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) + 1;
	}
};
tweenxcore_Easing.elasticInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		var s = 7.5e-005;
		if((t *= 2) < 1) {
			return -0.5 * (Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003));
		} else {
			return Math.exp(-6.9314718055994531 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) * 0.5 + 1;
		}
	}
};
tweenxcore_Easing.elasticOutIn = function(t) {
	if(t < 0.5) {
		if((t *= 2) == 0) {
			return 0;
		} else {
			var s = 7.5e-005;
			return 0.5 * Math.exp(-6.9314718055994531 * t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003) + 0.5;
		}
	} else if(t == 0.5) {
		return 0.5;
	} else if(t == 1) {
		return 1;
	} else {
		t = t * 2 - 1;
		var s = 7.5e-005;
		return -(0.5 * Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - s) * 6.2831853071795862 / 0.0003)) + 0.5;
	}
};
tweenxcore_Easing.warpOut = function(t) {
	if(t <= 0) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpIn = function(t) {
	if(t < 1) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpInOut = function(t) {
	if(t < 0.5) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpOutIn = function(t) {
	if(t <= 0) {
		return 0;
	} else if(t < 1) {
		return 0.5;
	} else {
		return 1;
	}
};
var tweenx909_rule_BoolRuleX = function() { };
$hxClasses["tweenx909.rule.BoolRuleX"] = tweenx909_rule_BoolRuleX;
tweenx909_rule_BoolRuleX.__name__ = "tweenx909.rule.BoolRuleX";
tweenx909_rule_BoolRuleX.calc = function(_from,_to,t1,t2,tween) {
	return 0 < (_from ? 1 : 0) * t2 + (_to ? 1 : 0) * t1;
};
tweenx909_rule_BoolRuleX.defaultFrom = function(value,_to,tween) {
	return value;
};
var tweenx909_rule_ArrayRuleX = function() { };
$hxClasses["tweenx909.rule.ArrayRuleX"] = tweenx909_rule_ArrayRuleX;
tweenx909_rule_ArrayRuleX.__name__ = "tweenx909.rule.ArrayRuleX";
tweenx909_rule_ArrayRuleX.calc = function(_from,_to,t1,t2,tween) {
	var fi = $getIterator(_from);
	var arr = [];
	var t = $getIterator(_to);
	while(t.hasNext()) {
		var t3 = t.next();
		var f = fi.next();
		var _from = f;
		var _to = t3;
		var tmp;
		if(typeof(_to) == "number") {
			tmp = _from * t2 + _to * t1;
		} else {
			var result = null;
			var ok = false;
			var r = $getIterator(tweenx909_TweenX.get_rules());
			while(r.hasNext()) {
				var r1 = r.next();
				if(js_Boot.__instanceof(_to,r1.inputClass)) {
					ok = true;
					result = r1.calc(_from,_to,t1,t2,tween);
					break;
				}
			}
			if(!ok) {
				var eh = tween;
				var c = js_Boot.getClass(_to);
				throw haxe_Exception.thrown(eh.error("The tween rule for " + c.__name__ + " is not defined"));
			}
			tmp = result;
		}
		arr.push(tmp);
	}
	return arr;
};
tweenx909_rule_ArrayRuleX._calc = function(_from,_to,t1,t2,tween) {
	if(typeof(_to) == "number") {
		return _from * t2 + _to * t1;
	} else {
		var result = null;
		var ok = false;
		var r = $getIterator(tweenx909_TweenX.get_rules());
		while(r.hasNext()) {
			var r1 = r.next();
			if(js_Boot.__instanceof(_to,r1.inputClass)) {
				ok = true;
				result = r1.calc(_from,_to,t1,t2,tween);
				break;
			}
		}
		if(!ok) {
			var eh = tween;
			var c = js_Boot.getClass(_to);
			throw haxe_Exception.thrown(eh.error("The tween rule for " + c.__name__ + " is not defined"));
		}
		return result;
	}
};
tweenx909_rule_ArrayRuleX.defaultFrom = function(value,_to,tween) {
	var eh = tween;
	if(value != null) {
		var arr = [];
		var t = $getIterator(_to);
		while(t.hasNext()) {
			var t1 = t.next();
			arr.push(null);
		}
	} else if(Lambda.count(value) != Lambda.count(_to)) {
		throw haxe_Exception.thrown(eh.error("The array length must be same with start."));
	}
	var result = [];
	var it = $getIterator(_to);
	var v = $getIterator(value);
	while(v.hasNext()) {
		var v1 = v.next();
		var t = it.next();
		result.push(tweenx909_rule_ArrayRuleX._defaultFrom(v1,t,tween));
	}
	return result;
};
tweenx909_rule_ArrayRuleX._defaultFrom = function(value,_to,tween) {
	if(typeof(_to) == "number") {
		return value;
	}
	var r = $getIterator(tweenx909_TweenX.get_rules());
	while(r.hasNext()) {
		var r1 = r.next();
		if(js_Boot.__instanceof(_to,r1.inputClass)) {
			return r1.defaultFrom(value,_to,tween);
		}
	}
	var eh = tween;
	var c = js_Boot.getClass(_to);
	throw haxe_Exception.thrown(eh.error("The tween rule for " + c.__name__ + " is not defined"));
};
var tweenxcore_structure_Timeline = function() {
	this.dataArray = [];
	this.weightArray = [];
	this.totalWeight = 0;
};
$hxClasses["tweenxcore.structure.Timeline"] = tweenxcore_structure_Timeline;
tweenxcore_structure_Timeline.__name__ = "tweenxcore.structure.Timeline";
tweenxcore_structure_Timeline.prototype = {
	totalWeight: null
	,dataArray: null
	,weightArray: null
	,length: null
	,get_length: function() {
		return this.dataArray.length;
	}
	,add: function(data,weight) {
		if(weight == null) {
			weight = 1.0;
		}
		if(weight <= 0) {
			throw haxe_Exception.thrown("weight must be positive number");
		}
		if(this.dataArray.length == 0) {
			this.totalWeight = weight;
		} else {
			this.weightArray.push(this.totalWeight);
			this.totalWeight += weight;
		}
		this.dataArray.push(data);
		return this;
	}
	,search: function(rate,boundaryMode) {
		if(boundaryMode == null) {
			boundaryMode = 1;
		}
		if(this.dataArray.length == 0) {
			throw haxe_Exception.thrown("timeline is not initialized");
		}
		var sortedValues = this.weightArray;
		var value = rate * this.totalWeight;
		var boundaryMode1 = boundaryMode;
		if(boundaryMode1 == null) {
			boundaryMode1 = 0;
		}
		var min = 0;
		var max = sortedValues.length;
		if(boundaryMode1 == 0) {
			while(true) {
				var next = ((max - min) / 2 | 0) + min;
				var dv = sortedValues[next];
				if(dv <= value) {
					min = next + 1;
				} else {
					max = next;
				}
				if(min == max) {
					break;
				}
			}
		} else {
			while(true) {
				var next = ((max - min) / 2 | 0) + min;
				var dv = sortedValues[next];
				if(dv < value) {
					min = next + 1;
				} else {
					max = next;
				}
				if(min == max) {
					break;
				}
			}
		}
		var searchResult = min;
		var baseWeight = searchResult == 0 ? 0 : this.weightArray[searchResult - 1] / this.totalWeight;
		var nextWeight = searchResult == this.dataArray.length - 1 ? 1 : this.weightArray[searchResult] / this.totalWeight;
		return new tweenxcore_structure_TimelineSearchResult(this.dataArray[searchResult],searchResult,baseWeight,nextWeight);
	}
	,dataAt: function(index) {
		if(this.dataArray.length == 0) {
			throw haxe_Exception.thrown("timeline is not initialized");
		}
		return this.dataArray[index];
	}
	,rangeLeft: function(index) {
		if(index == 0) {
			return 0.0;
		}
		return this.weightArray[index - 1] / this.totalWeight;
	}
	,rangeRight: function(index) {
		if(index == this.dataArray.length) {
			return 1.0;
		}
		return this.weightArray[index] / this.totalWeight;
	}
	,__class__: tweenxcore_structure_Timeline
	,__properties__: {get_length:"get_length"}
};
var tweenx909_rule_TimelineRuleX = function() { };
$hxClasses["tweenx909.rule.TimelineRuleX"] = tweenx909_rule_TimelineRuleX;
tweenx909_rule_TimelineRuleX.__name__ = "tweenx909.rule.TimelineRuleX";
tweenx909_rule_TimelineRuleX.calc = function(_from,_to,t1,t2,tween) {
	return _to.search(t1).data;
};
tweenx909_rule_TimelineRuleX.defaultFrom = function(value,_to,tween) {
	return null;
};
var tweenxcore_color_IColor = function() { };
$hxClasses["tweenxcore.color.IColor"] = tweenxcore_color_IColor;
tweenxcore_color_IColor.__name__ = "tweenxcore.color.IColor";
tweenxcore_color_IColor.__isInterface__ = true;
tweenxcore_color_IColor.prototype = {
	getRed: null
	,getGreen: null
	,getBlue: null
	,getHue: null
	,getSaturation: null
	,getBrightness: null
	,toRgb: null
	,toHsv: null
	,toRgbWithAlpha: null
	,toHsvWithAlpha: null
	,toRgbInt: null
	,toRgbHexString: null
	,toRgbCssString: null
	,__class__: tweenxcore_color_IColor
};
var tweenxcore_color_RgbColor = function(red,green,blue) {
	this.r = red;
	this.g = green;
	this.b = blue;
};
$hxClasses["tweenxcore.color.RgbColor"] = tweenxcore_color_RgbColor;
tweenxcore_color_RgbColor.__name__ = "tweenxcore.color.RgbColor";
tweenxcore_color_RgbColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_RgbColor.rgbToInt = function(r,g,b) {
	if(r <= 0.0) {
		r = 0.0;
	} else if(1.0 <= r) {
		r = 1.0;
	}
	if(g <= 0.0) {
		g = 0.0;
	} else if(1.0 <= g) {
		g = 1.0;
	}
	if(b <= 0.0) {
		b = 0.0;
	} else if(1.0 <= b) {
		b = 1.0;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_RgbColor.of = function(color) {
	return new tweenxcore_color_RgbColor((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_RgbColor.fromHsv = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return new tweenxcore_color_RgbColor(r,g,b);
};
tweenxcore_color_RgbColor.prototype = {
	r: null
	,g: null
	,b: null
	,getRed: function() {
		return this.r;
	}
	,getGreen: function() {
		return this.g;
	}
	,getBlue: function() {
		return this.b;
	}
	,getHue: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).h;
	}
	,getSaturation: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).s;
	}
	,getBrightness: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).v;
	}
	,toRgb: function() {
		return new tweenxcore_color_RgbColor(this.r,this.g,this.b);
	}
	,toHsv: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b);
	}
	,toRgbWithAlpha: function(alpha) {
		return new tweenxcore_color_ArgbColor(alpha,this.r,this.g,this.b);
	}
	,toHsvWithAlpha: function(alpha) {
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(alpha,_this.h,_this.s,_this.v);
	}
	,toRgbInt: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
	}
	,toRgbHexString: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return StringTools.hex((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0),6);
	}
	,toRgbCssString: function() {
		return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_RgbColor
};
var tweenxcore_color_ITransparentColor = function() { };
$hxClasses["tweenxcore.color.ITransparentColor"] = tweenxcore_color_ITransparentColor;
tweenxcore_color_ITransparentColor.__name__ = "tweenxcore.color.ITransparentColor";
tweenxcore_color_ITransparentColor.__isInterface__ = true;
tweenxcore_color_ITransparentColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_ITransparentColor.prototype = {
	toArgb: null
	,toAhsv: null
	,getAlpha: null
	,toArgbInt: null
	,toArgbHexString: null
	,toRgbaCssString: null
	,__class__: tweenxcore_color_ITransparentColor
};
var tweenxcore_color_ArgbColor = function(alpha,red,green,blue) {
	this.a = alpha;
	tweenxcore_color_RgbColor.call(this,red,green,blue);
};
$hxClasses["tweenxcore.color.ArgbColor"] = tweenxcore_color_ArgbColor;
tweenxcore_color_ArgbColor.__name__ = "tweenxcore.color.ArgbColor";
tweenxcore_color_ArgbColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_ArgbColor.argbToInt = function(a,r,g,b) {
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r1 <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r1) {
		r1 = 1.0;
	}
	if(g1 <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g1) {
		g1 = 1.0;
	}
	if(b1 <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b1) {
		b1 = 1.0;
	}
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
};
tweenxcore_color_ArgbColor.of = function(color) {
	return new tweenxcore_color_ArgbColor((color >>> 24 & 255) / 255,(color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_ArgbColor.fromAhsv = function(a,h,s,v,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_RgbColor.fromHsv(h,s,v);
	return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
};
tweenxcore_color_ArgbColor.__super__ = tweenxcore_color_RgbColor;
tweenxcore_color_ArgbColor.prototype = $extend(tweenxcore_color_RgbColor.prototype,{
	a: null
	,getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		return new tweenxcore_color_ArgbColor(this.a,this.r,this.g,this.b);
	}
	,toAhsv: function() {
		var a = this.a;
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
	}
	,toArgbHexString: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		}
		return StringTools.hex(((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0)),8);
	}
	,toRgbaCssString: function() {
		return "rgba(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + "," + this.a + ")";
	}
	,__class__: tweenxcore_color_ArgbColor
});
var tweenx909_rule_ArgbRuleX = function() { };
$hxClasses["tweenx909.rule.ArgbRuleX"] = tweenx909_rule_ArgbRuleX;
tweenx909_rule_ArgbRuleX.__name__ = "tweenx909.rule.ArgbRuleX";
tweenx909_rule_ArgbRuleX.calc = function(_from,_to,t1,t2,tween) {
	var a = _from.a * t2 + _to.a * t1;
	var r = _from.r * t2 + _to.r * t1;
	var g = _from.g * t2 + _to.g * t1;
	var b = _from.b * t2 + _to.b * t1;
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r1 <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r1) {
		r1 = 1.0;
	}
	if(g1 <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g1) {
		g1 = 1.0;
	}
	if(b1 <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b1) {
		b1 = 1.0;
	}
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
};
tweenx909_rule_ArgbRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenxcore_color_ArgbColor((value >>> 24 & 255) / 255,(value >> 16 & 255) / 255,(value >> 8 & 255) / 255,(value & 255) / 255);
};
var tweenxcore_color_HsvColor = function(hue,saturation,value) {
	this.h = hue;
	this.s = saturation;
	this.v = value;
};
$hxClasses["tweenxcore.color.HsvColor"] = tweenxcore_color_HsvColor;
tweenxcore_color_HsvColor.__name__ = "tweenxcore.color.HsvColor";
tweenxcore_color_HsvColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_HsvColor.hsvToRgbInt = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_HsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	return tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
};
tweenxcore_color_HsvColor.fromRgb = function(r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var max;
	var min;
	var diff;
	var h;
	if(r < g) {
		if(g < b) {
			max = b;
			min = r;
			diff = max - min;
			h = (4 + (r - g) / diff) / 6;
		} else {
			max = g;
			min = r < b ? r : b;
			diff = max - min;
			h = (2 + (b - r) / diff) / 6;
		}
	} else if(r < b) {
		max = b;
		min = g;
		diff = max - min;
		h = (4 + (r - g) / diff) / 6;
	} else {
		max = r;
		min = g < b ? g : b;
		diff = max - min;
		h = (g - b) / diff / 6;
	}
	if(h < 0) {
		++h;
	}
	var s = diff / max;
	if(isNaN(h)) {
		h = 0;
	}
	if(isNaN(s)) {
		s = 0;
	}
	return new tweenxcore_color_HsvColor(h + hueIndex,s,max);
};
tweenxcore_color_HsvColor.prototype = {
	h: null
	,s: null
	,v: null
	,getRed: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).r;
	}
	,getGreen: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).g;
	}
	,getBlue: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).b;
	}
	,getHue: function() {
		return this.h;
	}
	,getSaturation: function() {
		return this.s;
	}
	,getBrightness: function() {
		return this.v;
	}
	,toRgb: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
	}
	,toHsv: function() {
		return new tweenxcore_color_HsvColor(this.h,this.s,this.v);
	}
	,toHsvWithAlpha: function(alpha) {
		return new tweenxcore_color_AhsvColor(alpha,this.h,this.s,this.v);
	}
	,toRgbWithAlpha: function(alpha) {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(alpha,_this.r,_this.g,_this.b);
	}
	,toRgbInt: function() {
		return tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toRgbHexString: function() {
		return StringTools.hex(tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),6);
	}
	,toRgbCssString: function() {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return "rgb(" + (_this.r * 255 | 0) + "," + (_this.g * 255 | 0) + "," + (_this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_HsvColor
};
var tweenxcore_color_AhsvColor = function(alpha,hue,saturation,value) {
	this.a = alpha;
	tweenxcore_color_HsvColor.call(this,hue,saturation,value);
};
$hxClasses["tweenxcore.color.AhsvColor"] = tweenxcore_color_AhsvColor;
tweenxcore_color_AhsvColor.__name__ = "tweenxcore.color.AhsvColor";
tweenxcore_color_AhsvColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_AhsvColor.ahsvToArgbInt = function(a,h,s,v) {
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(h,s,v);
};
tweenxcore_color_AhsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var a = (color >>> 24 & 255) / 255;
	var color1 = color & 16777215;
	var hueIndex1 = hueIndex;
	if(hueIndex1 == null) {
		hueIndex1 = 0;
	}
	var r = (color1 >> 16 & 255) / 255;
	var g = (color1 >> 8 & 255) / 255;
	var b = (color1 & 255) / 255;
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex1);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.fromArgb = function(a,r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.__super__ = tweenxcore_color_HsvColor;
tweenxcore_color_AhsvColor.prototype = $extend(tweenxcore_color_HsvColor.prototype,{
	a: null
	,getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
	}
	,toAhsv: function() {
		return new tweenxcore_color_AhsvColor(this.a,this.h,this.s,this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toArgbHexString: function() {
		var a = this.a;
		return StringTools.hex(((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),8);
	}
	,toRgbaCssString: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		var _this1 = new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
		return "rgba(" + (_this1.r * 255 | 0) + "," + (_this1.g * 255 | 0) + "," + (_this1.b * 255 | 0) + "," + _this1.a + ")";
	}
	,__class__: tweenxcore_color_AhsvColor
});
var tweenx909_rule_AhsvRuleX = function() { };
$hxClasses["tweenx909.rule.AhsvRuleX"] = tweenx909_rule_AhsvRuleX;
tweenx909_rule_AhsvRuleX.__name__ = "tweenx909.rule.AhsvRuleX";
tweenx909_rule_AhsvRuleX.calc = function(_from,_to,t1,t2,tween) {
	var a = _from.a * t2 + _to.a * t1;
	var h = _from.h * t2 + _to.h * t1;
	var s = _from.s * t2 + _to.s * t1;
	var v = _from.v * t2 + _to.v * t1;
	return ((a <= 0.0 ? 0.0 : 1.0 <= a ? 1.0 : a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(h,s,v);
};
tweenx909_rule_AhsvRuleX.defaultFrom = function(value,_to,tween) {
	var a = (value >>> 24 & 255) / 255;
	var color = value & 16777215;
	var hueIndex = 0;
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
var tweenx909_rule_RgbRuleX = function() { };
$hxClasses["tweenx909.rule.RgbRuleX"] = tweenx909_rule_RgbRuleX;
tweenx909_rule_RgbRuleX.__name__ = "tweenx909.rule.RgbRuleX";
tweenx909_rule_RgbRuleX.calc = function(_from,_to,t1,t2,tween) {
	var r = _from.r * t2 + _to.r * t1;
	var g = _from.g * t2 + _to.g * t1;
	var b = _from.b * t2 + _to.b * t1;
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r1 <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r1) {
		r1 = 1.0;
	}
	if(g1 <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g1) {
		g1 = 1.0;
	}
	if(b1 <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b1) {
		b1 = 1.0;
	}
	return (r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0);
};
tweenx909_rule_RgbRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenxcore_color_RgbColor((value >> 16 & 255) / 255,(value >> 8 & 255) / 255,(value & 255) / 255);
};
var tweenx909_rule_HsvRuleX = function() { };
$hxClasses["tweenx909.rule.HsvRuleX"] = tweenx909_rule_HsvRuleX;
tweenx909_rule_HsvRuleX.__name__ = "tweenx909.rule.HsvRuleX";
tweenx909_rule_HsvRuleX.calc = function(_from,_to,t1,t2,tween) {
	var h = _from.h * t2 + _to.h * t1;
	var s = _from.s * t2 + _to.s * t1;
	var v = _from.v * t2 + _to.v * t1;
	return tweenxcore_color_HsvColor.hsvToRgbInt(h,s,v);
};
tweenx909_rule_HsvRuleX.defaultFrom = function(value,_to,tween) {
	var r = (value >> 16 & 255) / 255;
	var g = (value >> 8 & 255) / 255;
	var b = (value & 255) / 255;
	return tweenxcore_color_HsvColor.fromRgb(r,g,b,0);
};
var tweenx909_rule_QuakeX = function(value,scale,ease) {
	this.value = value;
	this.scale = scale;
	if(ease == null) {
		this.ease = tweenxcore_Easing.warpOut;
	} else {
		this.ease = ease;
	}
};
$hxClasses["tweenx909.rule.QuakeX"] = tweenx909_rule_QuakeX;
tweenx909_rule_QuakeX.__name__ = "tweenx909.rule.QuakeX";
tweenx909_rule_QuakeX.prototype = {
	ease: null
	,value: null
	,scale: null
	,__class__: tweenx909_rule_QuakeX
};
var tweenx909_rule_QuakeRuleX = function() { };
$hxClasses["tweenx909.rule.QuakeRuleX"] = tweenx909_rule_QuakeRuleX;
tweenx909_rule_QuakeRuleX.__name__ = "tweenx909.rule.QuakeRuleX";
tweenx909_rule_QuakeRuleX.calc = function(_from,_to,t1,t2,tween) {
	var p = t1 < 0.5 ? _from.ease(t1 * 2) : _to.ease(t2 * 2);
	return _from.value * t2 + _to.value * t1 + p * (Math.random() * 2 - 1) * (_from.scale * t2 + _to.scale * t1);
};
tweenx909_rule_QuakeRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenx909_rule_QuakeX(value,_to.scale,_to.ease);
};
var tweenx909_advanced_UpdateModeX = $hxEnums["tweenx909.advanced.UpdateModeX"] = { __ename__:true,__constructs__:null
	,MANUAL: {_hx_name:"MANUAL",_hx_index:0,__enum__:"tweenx909.advanced.UpdateModeX",toString:$estr}
	,TIME: ($_=function(frameRate) { return {_hx_index:1,frameRate:frameRate,__enum__:"tweenx909.advanced.UpdateModeX",toString:$estr}; },$_._hx_name="TIME",$_.__params__ = ["frameRate"],$_)
};
tweenx909_advanced_UpdateModeX.__constructs__ = [tweenx909_advanced_UpdateModeX.MANUAL,tweenx909_advanced_UpdateModeX.TIME];
var tweenx909_TweenX = function(type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	this.timeScale = 1;
	this._skip = null;
	this._currentTime = 0;
	tweenx909_advanced_CommandX.call(this,tweenx909_advanced_CommandTypeX.TWEEN(this),posInfos);
	this._type = type;
	this._currentTime = 0;
	if(type._hx_index == 0) {
		var g = type.group;
		this._easeIsDefault = false;
		this._ease = ease == null ? tweenxcore_Easing.linear : ease;
	} else {
		this._ease = (this._easeIsDefault = ease == null) ? tweenx909_TweenX.defaultEase : ease;
	}
	this._time = (this._timeIsDefault = time == null) ? tweenx909_TweenX.defaultTime : time;
	this._delay = (this._delayIsDefault = delay == null) ? tweenx909_TweenX.defaultDelay : delay;
	this._interval = (this._intervalIsDefault = interval == null) ? tweenx909_TweenX.defaultInterval : interval;
	this._repeat = (this._repeatIsDefault = repeat == null) ? tweenx909_TweenX.defaultRepeat : repeat;
	this._yoyo = (this._yoyoIsDefault = yoyo == null) ? tweenx909_TweenX.defaultYoyo : yoyo;
	this._zigzag = (this._zigzagIsDefault = zigzag == null) ? tweenx909_TweenX.defaultZigZag : zigzag;
	this._autoPlay = (this._autoPlayIsDefault = autoPlay == null) ? tweenx909_TweenX.defaultAutoPlay : autoPlay;
	this._rest = 0;
	this._eventListeners = [];
	this.id = tweenx909_TweenX.idCounter++;
	tweenx909_TweenX._addedTweens.push(this);
	if(!tweenx909_TweenX.managerInited) {
		tweenx909_TweenX.managerInited = true;
		tweenx909_TweenX.stopUpdater();
		var _g = tweenx909_TweenX.updateMode;
		switch(_g._hx_index) {
		case 0:
			break;
		case 1:
			var f = _g.frameRate;
			tweenx909_TweenX.prevTime = new Date().getTime();
			var t = Math.round(1000 / f);
			if(tweenx909_TweenX._timer != null) {
				tweenx909_TweenX._timer.stop();
			}
			tweenx909_TweenX._timer = new haxe_Timer(t);
			tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
			break;
		}
	}
};
$hxClasses["tweenx909.TweenX"] = tweenx909_TweenX;
tweenx909_TweenX.__name__ = "tweenx909.TweenX";
tweenx909_TweenX.__properties__ = {set_updateMode:"set_updateMode",get_rules:"get_rules",get_tweens:"get_tweens"};
tweenx909_TweenX.get_tweens = function() {
	return tweenx909_TweenX._tweens;
};
tweenx909_TweenX.get_rules = function() {
	return tweenx909_TweenX._rules;
};
tweenx909_TweenX.dumpDefaults = function() {
	return new tweenx909_advanced_DefaultsX().dump();
};
tweenx909_TweenX.setDefaults = function(defaults) {
	defaults.apply();
};
tweenx909_TweenX.initDefaults = function() {
	new tweenx909_advanced_DefaultsX().apply();
};
tweenx909_TweenX.set_updateMode = function(value) {
	tweenx909_TweenX.updateMode = value;
	tweenx909_TweenX.managerInited = true;
	tweenx909_TweenX.stopUpdater();
	var _g = tweenx909_TweenX.updateMode;
	switch(_g._hx_index) {
	case 0:
		break;
	case 1:
		var f = _g.frameRate;
		tweenx909_TweenX.prevTime = new Date().getTime();
		var t = Math.round(1000 / f);
		if(tweenx909_TweenX._timer != null) {
			tweenx909_TweenX._timer.stop();
		}
		tweenx909_TweenX._timer = new haxe_Timer(t);
		tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
		break;
	}
	return value;
};
tweenx909_TweenX.initManager = function() {
	tweenx909_TweenX.managerInited = true;
	tweenx909_TweenX.stopUpdater();
	var _g = tweenx909_TweenX.updateMode;
	switch(_g._hx_index) {
	case 0:
		break;
	case 1:
		var f = _g.frameRate;
		tweenx909_TweenX.prevTime = new Date().getTime();
		var t = Math.round(1000 / f);
		if(tweenx909_TweenX._timer != null) {
			tweenx909_TweenX._timer.stop();
		}
		tweenx909_TweenX._timer = new haxe_Timer(t);
		tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
		break;
	}
};
tweenx909_TweenX.mainLoop = function() {
	var _g = tweenx909_TweenX.updateMode;
	switch(_g._hx_index) {
	case 0:
		throw haxe_Exception.thrown("invalid auto update");
	case 1:
		var f = _g.frameRate;
		tweenx909_TweenX.manualUpdate((new Date().getTime() - tweenx909_TweenX.prevTime) / 1000);
		tweenx909_TweenX.prevTime = new Date().getTime();
		break;
	}
};
tweenx909_TweenX.stopUpdater = function() {
	if(tweenx909_TweenX._timer != null) {
		tweenx909_TweenX._timer.stop();
		tweenx909_TweenX._timer = null;
	}
};
tweenx909_TweenX.manualUpdate = function(time) {
	tweenx909_TweenX.initTweens();
	var l = tweenx909_TweenX._tweens.length;
	var i = 0;
	while(i < l) {
		var t = tweenx909_TweenX._tweens[i++];
		t._update(time * t.timeScale * tweenx909_TweenX.topLevelTimeScale);
		if(!t.playing) {
			tweenx909_TweenX._tweens.splice(--i,1);
			--l;
		}
	}
	tweenx909_TweenX._resetLog();
};
tweenx909_TweenX.initTweens = function() {
	var _g = 0;
	var _g1 = tweenx909_TweenX._addedTweens;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		t._init();
	}
	tweenx909_TweenX._addedTweens.splice(0,tweenx909_TweenX._addedTweens.length);
};
tweenx909_TweenX.clear = function() {
	var _g = 0;
	var _g1 = tweenx909_TweenX._addedTweens;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		t._autoPlay = false;
	}
	tweenx909_TweenX.stopAll(tweenx909_TweenX.get_tweens());
};
tweenx909_TweenX.addRule = function(rule) {
	var i = 0;
	var l = tweenx909_TweenX._rules.length;
	while(i < l) {
		var r = tweenx909_TweenX._rules[i++];
		if(r.inputClass == rule.inputClass) {
			tweenx909_TweenX._rules.splice(i--,1);
			--l;
		}
	}
	tweenx909_TweenX._rules.push(rule);
};
tweenx909_TweenX.addRules = function(rules) {
	var r = $getIterator(rules);
	while(r.hasNext()) {
		var r1 = r.next();
		tweenx909_TweenX.addRule(r1);
	}
};
tweenx909_TweenX.from = function(target,_to,delay,repeat,interval,autoPlay,posInfos) {
	if(_to == null) {
		_to = { };
	}
	if(!tweenx909_TweenX.isIterable(target)) {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.FROM_TO(target,{ },_to),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,autoPlay,posInfos);
	} else {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.ARRAY(target,[{ }],[_to]),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,autoPlay,posInfos);
	}
};
tweenx909_TweenX.to = function(target,_to,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	if(_to == null) {
		_to = { };
	}
	if(!tweenx909_TweenX.isIterable(target)) {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.FROM_TO(target,{ },_to),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
	} else {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.ARRAY(target,[{ }],[_to]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
	}
};
tweenx909_TweenX.tweenFunc = function(func,_from,_to,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,Lambda.array(_from),Lambda.array(_to)),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc1 = function(func,from1,to1,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1],[to1]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc2 = function(func,from1,from2,to1,to2,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2],[to1,to2]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc3 = function(func,from1,from2,from3,to1,to2,to3,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2,from3],[to1,to2,to3]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc4 = function(func,from1,from2,from3,from4,to1,to2,to3,to4,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2,from3,from4],[to1,to2,to3,to4]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.func = function(func,delay,repeat,interval,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.CALL(func),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,false,posInfos);
};
tweenx909_TweenX.playAll = function(tweens) {
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		var _g = t1.command;
		switch(_g._hx_index) {
		case 0:
			var o = _g.tween;
			o.play();
			break;
		case 1:
			var _g1 = _g.delay;
			break;
		}
	}
};
tweenx909_TweenX.stopAll = function(tweens) {
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		var _g = t1.command;
		switch(_g._hx_index) {
		case 0:
			var o = _g.tween;
			o.stop();
			break;
		case 1:
			var _g1 = _g.delay;
			break;
		}
	}
};
tweenx909_TweenX.gotoAll = function(tweens,time,andPlay) {
	if(andPlay == null) {
		andPlay = false;
	}
	if(time == null) {
		time = 0;
	}
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		var _g = t1.command;
		switch(_g._hx_index) {
		case 0:
			var o = _g.tween;
			o.goto(time,andPlay);
			break;
		case 1:
			var _g1 = _g.delay;
			break;
		}
	}
};
tweenx909_TweenX.updateAll = function(tweens,time) {
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		var _g = t1.command;
		switch(_g._hx_index) {
		case 0:
			var o = _g.tween;
			if(!o._inited) {
				o._init();
			}
			o.update(time);
			break;
		case 1:
			var _g1 = _g.delay;
			break;
		}
	}
};
tweenx909_TweenX.serial = function(tweens,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.SERIAL,defaults)),null,null,null,null,null,null,null,null,posInfos);
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		if(t1 == null) {
			continue;
		}
		var _g = t1.command;
		if(_g._hx_index == 0) {
			var o = _g.tween;
			if(o._inited) {
				throw haxe_Exception.thrown(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.lag = function(tweens,delay,defaults,posInfos) {
	if(delay == null) {
		delay = 0.1;
	}
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.LAG(delay),defaults)),null,null,null,null,null,null,null,null,posInfos);
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		if(t1 == null) {
			continue;
		}
		var _g = t1.command;
		if(_g._hx_index == 0) {
			var o = _g.tween;
			if(o._inited) {
				throw haxe_Exception.thrown(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.parallel = function(tweens,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.LAG(0),defaults)),null,null,null,null,null,null,null,null,posInfos);
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		if(t1 == null) {
			continue;
		}
		var _g = t1.command;
		if(_g._hx_index == 0) {
			var o = _g.tween;
			if(o._inited) {
				throw haxe_Exception.thrown(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.wait = function(delay,posInfos) {
	if(delay == null) {
		delay = 0.1;
	}
	return new tweenx909_advanced_CommandX(tweenx909_advanced_CommandTypeX.WAIT(delay),posInfos);
};
tweenx909_TweenX._group = function(tweens,type,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,type,defaults)),null,null,null,null,null,null,null,null,posInfos);
	var t = $getIterator(tweens);
	while(t.hasNext()) {
		var t1 = t.next();
		if(t1 == null) {
			continue;
		}
		var _g = t1.command;
		if(_g._hx_index == 0) {
			var o = _g.tween;
			if(o._inited) {
				throw haxe_Exception.thrown(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX._lock = function(o) {
	if(o._inited) {
		throw haxe_Exception.thrown(o.error("Can't serialize initialized TweenCommandX"));
	}
	o._autoPlay = false;
};
tweenx909_TweenX.getTime = function() {
	return new Date().getTime();
};
tweenx909_TweenX.setInterval = function(f,t) {
	if(tweenx909_TweenX._timer != null) {
		tweenx909_TweenX._timer.stop();
	}
	tweenx909_TweenX._timer = new haxe_Timer(t);
	tweenx909_TweenX._timer.run = f;
};
tweenx909_TweenX.fields = function(t) {
	return Reflect.fields(t);
};
tweenx909_TweenX.hashObject = function(o) {
	if(tweenx909_TweenX.dictionary.h[o.__id__] != null) {
		return tweenx909_TweenX.dictionary.h[o.__id__];
	} else {
		tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
		tweenx909_TweenX.dictionary.set(o,tweenx909_TweenX._objCounter);
		return tweenx909_TweenX._objCounter;
	}
};
tweenx909_TweenX._resetLog = function() {
	tweenx909_TweenX._initLog = [];
	tweenx909_TweenX.dictionary = new haxe_ds_ObjectMap();
};
tweenx909_TweenX.field = function(o,key) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[key];
		}
	}
};
tweenx909_TweenX.setField = function(o,key,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + key];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[key] = value;
	}
};
tweenx909_TweenX.isIterable = function(d) {
	if(d != null) {
		if(!((d) instanceof Array)) {
			if(Object.prototype.hasOwnProperty.call(d,"iterator") && Reflect.isFunction($iterator(d))) {
				return $getIterator(d) != null;
			} else {
				return false;
			}
		} else {
			return true;
		}
	} else {
		return false;
	}
};
tweenx909_TweenX.eventIndex = function(type) {
	return tweenx909_TweenX.EVENT_ARRAY.indexOf(type);
};
tweenx909_TweenX.__super__ = tweenx909_advanced_CommandX;
tweenx909_TweenX.prototype = $extend(tweenx909_advanced_CommandX.prototype,{
	playing: null
	,backward: null
	,_currentTime: null
	,_singleTime: null
	,_skip: null
	,_type: null
	,_inited: null
	,_totalTime: null
	,_dead: null
	,_parent: null
	,_fastMode: null
	,_toKeys: null
	,timeScale: null
	,get_currentTime: function() {
		var t = this.get_totalTime();
		var p = this.backward ? t - this._currentTime : this._currentTime;
		if(p < 0) {
			p = 0;
		}
		if(p > t) {
			p = t;
		}
		return p;
	}
	,get_singleTime: function() {
		return this._time + this._interval;
	}
	,get_totalTime: function() {
		return this._delay + this.get_singleTime() * this._repeat - this._interval + this._rest;
	}
	,set_timeScale: function(value) {
		if(this._parent != null) {
			throw haxe_Exception.thrown(this.error("Can't change timeScale of serialized object directly"));
		} else {
			return this.timeScale = value;
		}
	}
	,_inverted: null
	,_odd: null
	,_time: null
	,_ease: null
	,_interval: null
	,_repeat: null
	,_zigzag: null
	,_yoyo: null
	,_delay: null
	,_autoPlay: null
	,_rest: null
	,_timeIsDefault: null
	,_easeIsDefault: null
	,_intervalIsDefault: null
	,_repeatIsDefault: null
	,_zigzagIsDefault: null
	,_yoyoIsDefault: null
	,_delayIsDefault: null
	,_autoPlayIsDefault: null
	,_onPlay: null
	,_onStop: null
	,_onDelay: null
	,_onInterval: null
	,_onRepeat: null
	,_onRest: null
	,_onHead: null
	,_onUpdate: null
	,_onFoot: null
	,_onFinish: null
	,_eventListeners: null
	,id: null
	,error: function(msg) {
		var p = this.definedPosInfos;
		return msg + "(Tween_" + this.id + " was generated at " + p.className + "/" + p.methodName + "() [" + p.fileName + ":" + p.lineNumber + "])";
	}
	,play: function() {
		if(this._parent != null) {
			throw haxe_Exception.thrown(this.error("Can't play serialized object directly"));
		}
		if(this.playing) {
			return this;
		}
		if(!this._inited) {
			this._init();
		}
		this.playing = true;
		tweenx909_TweenX._tweens.push(this);
		var listeners = this._eventListeners[0];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onPlay != null) {
			this._onPlay();
		}
		this.update(1.4901161415892264e-008);
		return this;
	}
	,stop: function() {
		if(this._parent != null) {
			throw haxe_Exception.thrown(this.error("Can't stop serialized object directly"));
		}
		this._stop();
		return this;
	}
	,_stop: function() {
		if(!this.playing) {
			return;
		}
		this.playing = false;
		var listeners = this._eventListeners[9];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onStop != null) {
			this._onStop();
		}
	}
	,update: function(time) {
		if(this._parent != null) {
			throw haxe_Exception.thrown(this.error("Can't stop serialized object directly"));
		}
		this._update(time * this.timeScale * tweenx909_TweenX.topLevelTimeScale);
		return this;
	}
	,goto: function(time,andPlay) {
		if(andPlay == null) {
			andPlay = false;
		}
		if(time == null) {
			time = 0;
		}
		if(this._parent != null) {
			throw haxe_Exception.thrown(this.error("Can't move serialized object directly"));
		}
		if(!this._inited) {
			this._init();
		}
		var t = time;
		if(t < 0) {
			t = 0;
		} else if(t > this._totalTime) {
			t = this._totalTime;
		}
		this._update(t - this.get_currentTime());
		if(andPlay) {
			this.play();
		}
		return this;
	}
	,_invert: function() {
		this._currentTime = this._totalTime - this._currentTime;
		if(this._repeat % 2 == 0) {
			this._odd = !this._odd;
		}
		this._inverted = !this._inverted;
		var d = this._delay;
		this._delay = this._rest;
		this._rest = d;
	}
	,_init: function() {
		if(this._inited) {
			return;
		}
		this._inited = true;
		if(tweenx909_TweenX._groupDefaults) {
			if(this._easeIsDefault) {
				this._ease = tweenx909_TweenX.defaultEase;
			}
			if(this._timeIsDefault) {
				this._time = tweenx909_TweenX.defaultTime;
			}
			if(this._delayIsDefault) {
				this._delay = tweenx909_TweenX.defaultDelay;
			}
			if(this._intervalIsDefault) {
				this._interval = tweenx909_TweenX.defaultInterval;
			}
			if(this._repeatIsDefault) {
				this._repeat = tweenx909_TweenX.defaultRepeat;
			}
			if(this._yoyoIsDefault) {
				this._yoyo = tweenx909_TweenX.defaultYoyo;
			}
			if(this._zigzagIsDefault) {
				this._zigzag = tweenx909_TweenX.defaultZigZag;
			}
			if(this._autoPlayIsDefault) {
				this._autoPlay = tweenx909_TweenX.defaultAutoPlay;
			}
		}
		if(this._repeat == 0) {
			this._repeat = 2147483646;
		}
		if(this._time < 1.4901161415892264e-008) {
			this._time = 1.4901161415892264e-008;
		}
		var ot = new Date().getTime();
		this._fastMode = true;
		var _g = this._type;
		switch(_g._hx_index) {
		case 0:
			var g = _g.group;
			this.initGroup(g);
			break;
		case 1:
			var targets = _g.targets;
			var fromArr = _g._from;
			var toArr = _g._to;
			var i = 0;
			var target = $getIterator(targets);
			while(target.hasNext()) {
				var target1 = target.next();
				var _from = fromArr[i];
				var _to = toArr[i];
				this._initFromTo(target1,_from,_to);
				if(i == 0) {
					this._toKeys = Reflect.fields(_to);
				}
				++i;
			}
			break;
		case 2:
			var target = _g.target;
			var _from = _g._from;
			var _to = _g._to;
			this._initFromTo(target,_from,_to);
			this._toKeys = Reflect.fields(_to);
			break;
		default:
		}
		this._singleTime = this.get_singleTime();
		this._totalTime = this.get_totalTime();
		if(this._autoPlay) {
			this.play();
		}
	}
	,_initFromTo: function(target,_from,_to) {
		throw haxe_Exception.thrown(this.error("must be standard tween."));
	}
	,_update: function(spent) {
		if(!this._inited) {
			this._init();
		}
		if(spent == 0) {
			return;
		}
		if(this.backward) {
			spent = -spent;
		}
		if(spent < 0) {
			this._invert();
			this.backward = !this.backward;
			spent = -spent;
		}
		var _currentTime = this._currentTime;
		var _singleTime = this.get_singleTime();
		var _totalTime = this._totalTime;
		var time = this._time;
		var delay = this._delay;
		var untilRest = _totalTime - this._rest;
		var delaying = _currentTime - delay < 1.4901161415892264e-008;
		var resting = !delaying && 1.4901161415892264e-008 > untilRest - _currentTime;
		var body = _currentTime - delay;
		var repeatNum = Math.floor(body / _singleTime);
		var position = body - repeatNum * _singleTime;
		var intervending = 1.4901161415892264e-008 > time - position;
		_currentTime += spent;
		this._currentTime = _currentTime;
		position += spent;
		body += spent;
		if(_currentTime - delay < 1.4901161415892264e-008) {
			var listeners = this._eventListeners[1];
			if(listeners != null) {
				var _g = 0;
				while(_g < listeners.length) {
					var f = listeners[_g];
					++_g;
					f(this);
				}
			}
			if(this._onDelay != null) {
				this._onDelay();
			}
			return;
		} else if(delaying) {
			this._apply(0,0);
			var listeners = this._eventListeners[2];
			if(listeners != null) {
				var _g = 0;
				while(_g < listeners.length) {
					var f = listeners[_g];
					++_g;
					f(this);
				}
			}
			if(this._onHead != null) {
				this._onHead();
			}
			var listeners = this._eventListeners[3];
			if(listeners != null) {
				var _g = 0;
				while(_g < listeners.length) {
					var f = listeners[_g];
					++_g;
					f(this);
				}
			}
			if(this._onUpdate != null) {
				this._onUpdate();
			}
			delaying = false;
		}
		if(1.4901161415892264e-008 > untilRest - _currentTime) {
			if(!resting) {
				if(intervending) {
					var listeners = this._eventListeners[6];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onRepeat != null) {
						this._onRepeat();
					}
					this._apply(0,repeatNum);
					var listeners = this._eventListeners[2];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onHead != null) {
						this._onHead();
					}
					var listeners = this._eventListeners[3];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onUpdate != null) {
						this._onUpdate();
					}
				}
				this._apply(this._time,this._repeat - 1);
				var listeners = this._eventListeners[3];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onUpdate != null) {
					this._onUpdate();
				}
				var listeners = this._eventListeners[4];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onFoot != null) {
					this._onFoot();
				}
			}
			if(1.4901161415892264e-008 > _totalTime - _currentTime) {
				this._currentTime = this._totalTime;
				var listeners = this._eventListeners[8];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onFinish != null) {
					this._onFinish();
				}
				this._stop();
			} else {
				var listeners = this._eventListeners[7];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onRest != null) {
					this._onRest();
				}
			}
		} else {
			if(1.4901161415892264e-008 > time - position) {
				if(!intervending && repeatNum >= 0) {
					this._apply(this._time,repeatNum);
					var listeners = this._eventListeners[3];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onUpdate != null) {
						this._onUpdate();
					}
					var listeners = this._eventListeners[4];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onFoot != null) {
						this._onFoot();
					}
				}
				if(position < _singleTime) {
					var listeners = this._eventListeners[5];
					if(listeners != null) {
						var _g = 0;
						while(_g < listeners.length) {
							var f = listeners[_g];
							++_g;
							f(this);
						}
					}
					if(this._onInterval != null) {
						this._onInterval();
					}
					return;
				} else {
					if(repeatNum >= 0) {
						var listeners = this._eventListeners[6];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onRepeat != null) {
							this._onRepeat();
						}
						this._apply(0,repeatNum);
						var listeners = this._eventListeners[2];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onHead != null) {
							this._onHead();
						}
						var listeners = this._eventListeners[3];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onUpdate != null) {
							this._onUpdate();
						}
					}
					repeatNum = body / _singleTime | 0;
					position = body - repeatNum * _singleTime;
					if(1.4901161415892264e-008 > time - position) {
						this._apply(this._time,repeatNum);
						var listeners = this._eventListeners[3];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onUpdate != null) {
							this._onUpdate();
						}
						var listeners = this._eventListeners[4];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onFoot != null) {
							this._onFoot();
						}
						var listeners = this._eventListeners[5];
						if(listeners != null) {
							var _g = 0;
							while(_g < listeners.length) {
								var f = listeners[_g];
								++_g;
								f(this);
							}
						}
						if(this._onInterval != null) {
							this._onInterval();
						}
						return;
					}
				}
			} else if(intervending) {
				var listeners = this._eventListeners[6];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onRepeat != null) {
					this._onRepeat();
				}
				this._apply(0,repeatNum);
				var listeners = this._eventListeners[2];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onHead != null) {
					this._onHead();
				}
				var listeners = this._eventListeners[3];
				if(listeners != null) {
					var _g = 0;
					while(_g < listeners.length) {
						var f = listeners[_g];
						++_g;
						f(this);
					}
				}
				if(this._onUpdate != null) {
					this._onUpdate();
				}
			}
			this._apply(position,repeatNum);
			var listeners = this._eventListeners[3];
			if(listeners != null) {
				var _g = 0;
				while(_g < listeners.length) {
					var f = listeners[_g];
					++_g;
					f(this);
				}
			}
			if(this._onUpdate != null) {
				this._onUpdate();
			}
		}
	}
	,_head: function(repeatNum) {
		this._apply(0,repeatNum);
		var listeners = this._eventListeners[2];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onHead != null) {
			this._onHead();
		}
		var listeners = this._eventListeners[3];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onUpdate != null) {
			this._onUpdate();
		}
	}
	,_foot: function(repeatNum) {
		this._apply(this._time,repeatNum);
		var listeners = this._eventListeners[3];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onUpdate != null) {
			this._onUpdate();
		}
		var listeners = this._eventListeners[4];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onFoot != null) {
			this._onFoot();
		}
	}
	,_finish: function() {
		this._currentTime = this._totalTime;
		var listeners = this._eventListeners[8];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onFinish != null) {
			this._onFinish();
		}
		this._stop();
	}
	,_apply: function(p,repeatNum) {
		var back = repeatNum % 2 == 1;
		var t = p / this._time;
		if(this._odd) {
			back = !back;
		}
		if(this._inverted) {
			t = 1 - t;
		}
		if(back) {
			if(this._yoyo) {
				t = 1 - t;
			}
			t = this._ease(t);
			if(this._zigzag) {
				t = 1 - t;
			}
		} else {
			t = this._ease(t);
		}
		var t1 = t;
		var _g = this._type;
		switch(_g._hx_index) {
		case 0:
			var g = _g.group;
			var ts = g.tweens;
			var spent = (this._time * t1 - g.current) * 1.00000001;
			if(spent < 0) {
				var _g1 = 1 - ts.length;
				var _g2 = 1;
				while(_g1 < _g2) {
					var i = _g1++;
					ts[-i]._update(spent);
				}
			} else {
				var _g1 = 0;
				var _g2 = ts.length;
				while(_g1 < _g2) {
					var i = _g1++;
					ts[i]._update(spent);
				}
			}
			g.current = g.tweens[0].get_currentTime();
			break;
		case 1:
			var targets = _g.targets;
			var froms = _g._from;
			var tos = _g._to;
			var t2 = 1 - t1;
			var i = 0;
			var target = $getIterator(targets);
			while(target.hasNext()) {
				var target1 = target.next();
				var _to = tos[i];
				var _from = froms[i++];
				var _g1 = 0;
				var _g2 = this._toKeys;
				while(_g1 < _g2.length) {
					var key = _g2[_g1];
					++_g1;
					var o = target1;
					var o1 = _from;
					var tmp;
					var _from1;
					if(o1 == null) {
						_from1 = null;
					} else {
						var _from2;
						if(o1.__properties__) {
							tmp = o1.__properties__["get_" + key];
							_from2 = tmp;
						} else {
							_from2 = false;
						}
						_from1 = _from2 ? o1[tmp]() : o1[key];
					}
					var _from3 = _from1;
					var o2 = _to;
					var tmp1;
					var _to1;
					if(o2 == null) {
						_to1 = null;
					} else {
						var _to2;
						if(o2.__properties__) {
							tmp1 = o2.__properties__["get_" + key];
							_to2 = tmp1;
						} else {
							_to2 = false;
						}
						_to1 = _to2 ? o2[tmp1]() : o2[key];
					}
					var _to3 = _to1;
					var value;
					if(typeof(_to3) == "number") {
						var d = _from3 * t2 + _to3 * t1;
						value = d;
					} else {
						var i1 = 0;
						var l = tweenx909_TweenX._rules.length;
						var f;
						var result = null;
						var ok = false;
						while(i1 < l) {
							f = tweenx909_TweenX._rules[i1++];
							if(js_Boot.__instanceof(_to3,f.inputClass)) {
								ok = true;
								result = f.calc(_from3,_to3,t1,t2,this);
								break;
							}
						}
						if(!ok) {
							var c = js_Boot.getClass(_to3);
							throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
						}
						value = result;
					}
					var tmp2;
					var tmp3;
					if(o.__properties__) {
						tmp2 = o.__properties__["set_" + key];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						o[tmp2](value);
					} else {
						o[key] = value;
					}
				}
			}
			break;
		case 2:
			var target = _g.target;
			var _from = _g._from;
			var _to = _g._to;
			var t2 = 1 - t1;
			if(this._fastMode) {
				var _g1 = 0;
				var _g2 = this._toKeys;
				while(_g1 < _g2.length) {
					var key = _g2[_g1];
					++_g1;
					var tmp;
					var _from1;
					if(_from == null) {
						_from1 = null;
					} else {
						var _from2;
						if(_from.__properties__) {
							tmp = _from.__properties__["get_" + key];
							_from2 = tmp;
						} else {
							_from2 = false;
						}
						_from1 = _from2 ? _from[tmp]() : _from[key];
					}
					var tmp1;
					var _to1;
					if(_to == null) {
						_to1 = null;
					} else {
						var _to2;
						if(_to.__properties__) {
							tmp1 = _to.__properties__["get_" + key];
							_to2 = tmp1;
						} else {
							_to2 = false;
						}
						_to1 = _to2 ? _to[tmp1]() : _to[key];
					}
					var value = _from1 * t2 + _to1 * t1;
					var tmp2;
					var tmp3;
					if(target.__properties__) {
						tmp2 = target.__properties__["set_" + key];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						target[tmp2](value);
					} else {
						target[key] = value;
					}
				}
			} else {
				var _g1 = 0;
				var _g2 = this._toKeys;
				while(_g1 < _g2.length) {
					var key = _g2[_g1];
					++_g1;
					var tmp;
					var _from1;
					if(_from == null) {
						_from1 = null;
					} else {
						var _from2;
						if(_from.__properties__) {
							tmp = _from.__properties__["get_" + key];
							_from2 = tmp;
						} else {
							_from2 = false;
						}
						_from1 = _from2 ? _from[tmp]() : _from[key];
					}
					var _from3 = _from1;
					var tmp1;
					var _to1;
					if(_to == null) {
						_to1 = null;
					} else {
						var _to2;
						if(_to.__properties__) {
							tmp1 = _to.__properties__["get_" + key];
							_to2 = tmp1;
						} else {
							_to2 = false;
						}
						_to1 = _to2 ? _to[tmp1]() : _to[key];
					}
					var _to3 = _to1;
					var value;
					if(typeof(_to3) == "number") {
						var d = _from3 * t2 + _to3 * t1;
						value = d;
					} else {
						var i = 0;
						var l = tweenx909_TweenX._rules.length;
						var f;
						var result = null;
						var ok = false;
						while(i < l) {
							f = tweenx909_TweenX._rules[i++];
							if(js_Boot.__instanceof(_to3,f.inputClass)) {
								ok = true;
								result = f.calc(_from3,_to3,t1,t2,this);
								break;
							}
						}
						if(!ok) {
							var c = js_Boot.getClass(_to3);
							throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
						}
						value = result;
					}
					var tmp2;
					var tmp3;
					if(target.__properties__) {
						tmp2 = target.__properties__["set_" + key];
						tmp3 = tmp2;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						target[tmp2](value);
					} else {
						target[key] = value;
					}
				}
			}
			break;
		case 3:
			var func = _g.func;
			var _from = _g._from;
			var _to = _g._to;
			var t2 = 1 - t1;
			var arr = [];
			var _g1 = 0;
			var _g2 = _to.length;
			while(_g1 < _g2) {
				var i = _g1++;
				var _from1 = _from[i];
				var _to1 = _to[i];
				var tmp;
				if(typeof(_to1) == "number") {
					var d = _from1 * t2 + _to1 * t1;
					tmp = d;
				} else {
					var i1 = 0;
					var l = tweenx909_TweenX._rules.length;
					var f;
					var result = null;
					var ok = false;
					while(i1 < l) {
						f = tweenx909_TweenX._rules[i1++];
						if(js_Boot.__instanceof(_to1,f.inputClass)) {
							ok = true;
							result = f.calc(_from1,_to1,t1,t2,this);
							break;
						}
					}
					if(!ok) {
						var c = js_Boot.getClass(_to1);
						throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
					}
					tmp = result;
				}
				arr[i] = tmp;
			}
			func.apply(null,arr);
			break;
		case 4:
			var f = _g.func;
			if(t1 == 1) {
				f();
			}
			break;
		}
	}
	,_fastCalc: function(_from,_to,t1,t2) {
		return _from * t2 + _to * t1;
	}
	,_calc: function(_from,_to,t1,t2) {
		if(typeof(_to) == "number") {
			var d = _from * t2 + _to * t1;
			return d;
		} else {
			var i = 0;
			var l = tweenx909_TweenX._rules.length;
			var f;
			var result = null;
			var ok = false;
			while(i < l) {
				f = tweenx909_TweenX._rules[i++];
				if(js_Boot.__instanceof(_to,f.inputClass)) {
					ok = true;
					result = f.calc(_from,_to,t1,t2,this);
					break;
				}
			}
			if(!ok) {
				var c = js_Boot.getClass(_to);
				throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
			}
			return result;
		}
	}
	,time: function(value) {
		if(value < 0) {
			throw haxe_Exception.thrown(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._timeIsDefault = false;
		this._time = value;
		return this;
	}
	,ease: function(value) {
		this.checkInited();
		this._easeIsDefault = false;
		this._ease = value;
		return this;
	}
	,delay: function(value) {
		if(value < 0) {
			throw haxe_Exception.thrown(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._delayIsDefault = false;
		this._delay = value;
		return this;
	}
	,rest: function(value) {
		if(value < 0) {
			throw haxe_Exception.thrown(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._rest = value;
		return this;
	}
	,interval: function(value) {
		if(value < 0) {
			throw haxe_Exception.thrown(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._intervalIsDefault = false;
		this._interval = value;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 0;
		}
		if(value < 0) {
			throw haxe_Exception.thrown(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._repeatIsDefault = false;
		this._repeat = value;
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._yoyoIsDefault = false;
		this._yoyo = value;
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._zigzagIsDefault = false;
		this._zigzag = value;
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._autoPlayIsDefault = false;
		this._autoPlay = value;
		return this;
	}
	,skip: function(delay) {
		if(delay == null) {
			delay = 0;
		}
		this.checkInited();
		this._skip = delay;
		return this;
	}
	,setTimeScale: function(value) {
		if(value == null) {
			value = 0;
		}
		this.set_timeScale(value);
		return this;
	}
	,onPlay: function(handler) {
		this._onPlay = handler;
		return this;
	}
	,onStop: function(handler) {
		this._onStop = handler;
		return this;
	}
	,onDelay: function(handler) {
		this._onDelay = handler;
		return this;
	}
	,onHead: function(handler) {
		this._onHead = handler;
		return this;
	}
	,onUpdate: function(handler) {
		this._onUpdate = handler;
		return this;
	}
	,onFoot: function(handler) {
		this._onFoot = handler;
		return this;
	}
	,onRest: function(handler) {
		this._onRest = handler;
		return this;
	}
	,onInterval: function(handler) {
		this._onInterval = handler;
		return this;
	}
	,onRepeat: function(handler) {
		this._onRepeat = handler;
		return this;
	}
	,onFinish: function(handler) {
		this._onFinish = handler;
		return this;
	}
	,addEventListener: function(type,listener) {
		var listener1 = listener;
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			var arr = this._eventListeners[i] == null ? this._eventListeners[i] = [] : this._eventListeners[i];
			if(!Lambda.has(arr,listener1)) {
				arr.push(listener1);
			}
		}
		return this;
	}
	,removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			if(this._eventListeners[i] != null) {
				HxOverrides.remove(this._eventListeners[i],listener);
			}
		}
		return this;
	}
	,_addEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i < 0) {
			return;
		}
		var arr = this._eventListeners[i] == null ? this._eventListeners[i] = [] : this._eventListeners[i];
		if(!Lambda.has(arr,listener)) {
			arr.push(listener);
		}
	}
	,_removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i < 0) {
			return;
		}
		if(this._eventListeners[i] != null) {
			HxOverrides.remove(this._eventListeners[i],listener);
		}
	}
	,_getPosition: function(p,back) {
		var t = p / this._time;
		if(this._odd) {
			back = !back;
		}
		if(this._inverted) {
			t = 1 - t;
		}
		if(back) {
			if(this._yoyo) {
				t = 1 - t;
			}
			t = this._ease(t);
			if(this._zigzag) {
				t = 1 - t;
			}
		} else {
			t = this._ease(t);
		}
		return t;
	}
	,checkInited: function() {
		if(this._inited) {
			throw haxe_Exception.thrown(this.error("Can't change params after initialization"));
		}
	}
	,dispatch: function(num) {
		var listeners = this._eventListeners[num];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
	}
	,initGroup: function(g) {
		var df = null;
		var gd = false;
		if(g.defaults != null) {
			df = tweenx909_TweenX.dumpDefaults();
			gd = tweenx909_TweenX._groupDefaults;
			tweenx909_TweenX._groupDefaults = true;
			tweenx909_TweenX.setDefaults(g.defaults);
			tweenx909_TweenX.defaultAutoPlay = false;
		}
		var delay = 0.0;
		var max = 0.0;
		var result = [];
		var _g = g.type;
		switch(_g._hx_index) {
		case 0:
			var t = $getIterator(g.source);
			while(t.hasNext()) {
				var t1 = t.next();
				if(t1 == null) {
					continue;
				}
				var _g1 = t1.command;
				switch(_g1._hx_index) {
				case 0:
					var o = _g1.tween;
					result.push(o);
					o._autoPlay = false;
					if(tweenx909_TweenX._groupDefaults && o._delayIsDefault) {
						o._delay = tweenx909_TweenX.defaultDelay;
					}
					o._init();
					o._delay += delay;
					var totalTime = o._totalTime += delay;
					if(o._skip != null) {
						delay += o._skip;
					} else {
						delay = totalTime;
					}
					if(max < totalTime) {
						max = totalTime;
					}
					break;
				case 1:
					var d = _g1.delay;
					delay += d;
					break;
				}
			}
			break;
		case 1:
			var lag = _g.lag;
			var t = $getIterator(g.source);
			while(t.hasNext()) {
				var t1 = t.next();
				if(t1 == null) {
					continue;
				}
				var _g = t1.command;
				switch(_g._hx_index) {
				case 0:
					var o = _g.tween;
					result.push(o);
					o._init();
					o._delay += delay;
					var totalTime = o._totalTime += delay;
					delay += o._skip != null ? o._skip : lag;
					if(max < totalTime) {
						max = totalTime;
					}
					break;
				case 1:
					var d = _g.delay;
					delay += d;
					break;
				}
			}
			break;
		}
		var _g = 0;
		while(_g < result.length) {
			var t = result[_g];
			++_g;
			var diff = max - t._totalTime;
			t._rest += diff;
			t._totalTime += diff;
		}
		this._time = max;
		g.tweens = result;
		g.source = null;
		if(g.defaults != null) {
			tweenx909_TweenX._groupDefaults = gd;
			tweenx909_TweenX.setDefaults(df);
		}
	}
	,__class__: tweenx909_TweenX
	,__properties__: {set_timeScale:"set_timeScale",get_totalTime:"get_totalTime",get_singleTime:"get_singleTime",get_currentTime:"get_currentTime"}
});
var tweenx909_advanced_CommandTypeX = $hxEnums["tweenx909.advanced.CommandTypeX"] = { __ename__:true,__constructs__:null
	,TWEEN: ($_=function(tween) { return {_hx_index:0,tween:tween,__enum__:"tweenx909.advanced.CommandTypeX",toString:$estr}; },$_._hx_name="TWEEN",$_.__params__ = ["tween"],$_)
	,WAIT: ($_=function(delay) { return {_hx_index:1,delay:delay,__enum__:"tweenx909.advanced.CommandTypeX",toString:$estr}; },$_._hx_name="WAIT",$_.__params__ = ["delay"],$_)
};
tweenx909_advanced_CommandTypeX.__constructs__ = [tweenx909_advanced_CommandTypeX.TWEEN,tweenx909_advanced_CommandTypeX.WAIT];
var tweenx909_advanced_DefaultsX = function() {
	this._autoPlay = true;
	this._zigzag = false;
	this._yoyo = false;
	this._repeat = 1;
	this._interval = 0;
	this._delay = 0;
	this._time = 0.3;
	this._ease = tweenx909_TweenX.DEFAULT_EASE;
};
$hxClasses["tweenx909.advanced.DefaultsX"] = tweenx909_advanced_DefaultsX;
tweenx909_advanced_DefaultsX.__name__ = "tweenx909.advanced.DefaultsX";
tweenx909_advanced_DefaultsX.prototype = {
	_ease: null
	,_time: null
	,_delay: null
	,_interval: null
	,_repeat: null
	,_yoyo: null
	,_zigzag: null
	,_autoPlay: null
	,dump: function() {
		this._time = tweenx909_TweenX.defaultTime;
		this._ease = tweenx909_TweenX.defaultEase;
		this._delay = tweenx909_TweenX.defaultDelay;
		this._interval = tweenx909_TweenX.defaultInterval;
		this._repeat = tweenx909_TweenX.defaultRepeat;
		this._yoyo = tweenx909_TweenX.defaultYoyo;
		this._zigzag = tweenx909_TweenX.defaultZigZag;
		this._autoPlay = tweenx909_TweenX.defaultAutoPlay;
		return this;
	}
	,apply: function() {
		tweenx909_TweenX.defaultTime = this._time;
		tweenx909_TweenX.defaultEase = this._ease;
		tweenx909_TweenX.defaultDelay = this._delay;
		tweenx909_TweenX.defaultInterval = this._interval;
		tweenx909_TweenX.defaultRepeat = this._repeat;
		tweenx909_TweenX.defaultYoyo = this._yoyo;
		tweenx909_TweenX.defaultZigZag = this._zigzag;
		tweenx909_TweenX.defaultAutoPlay = this._autoPlay;
	}
	,clone: function() {
		var child = new tweenx909_advanced_DefaultsX();
		child._time = this._time;
		child._ease = this._ease;
		child._delay = this._delay;
		child._interval = this._interval;
		child._repeat = this._repeat;
		child._yoyo = this._yoyo;
		child._zigzag = this._zigzag;
		child._autoPlay = this._autoPlay;
		return child;
	}
	,time: function(value) {
		this._time = value;
		return this;
	}
	,ease: function(value) {
		this._ease = value;
		return this;
	}
	,delay: function(value) {
		this._delay = value;
		return this;
	}
	,interval: function(value) {
		this._interval = value;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 0;
		}
		this._repeat = value;
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		this._yoyo = value;
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		this._zigzag = value;
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoPlay = value;
		return this;
	}
	,__class__: tweenx909_advanced_DefaultsX
};
var tweenx909_advanced_GroupX = function(source,type,defaults) {
	this.current = 0;
	this.source = source;
	this.type = type;
	if(defaults != null) {
		this.defaults = defaults.clone();
	}
};
$hxClasses["tweenx909.advanced.GroupX"] = tweenx909_advanced_GroupX;
tweenx909_advanced_GroupX.__name__ = "tweenx909.advanced.GroupX";
tweenx909_advanced_GroupX.prototype = {
	current: null
	,tweens: null
	,source: null
	,type: null
	,defaults: null
	,__class__: tweenx909_advanced_GroupX
};
var tweenx909_advanced__$GroupX_GroupTypeX = $hxEnums["tweenx909.advanced._GroupX.GroupTypeX"] = { __ename__:true,__constructs__:null
	,SERIAL: {_hx_name:"SERIAL",_hx_index:0,__enum__:"tweenx909.advanced._GroupX.GroupTypeX",toString:$estr}
	,LAG: ($_=function(lag) { return {_hx_index:1,lag:lag,__enum__:"tweenx909.advanced._GroupX.GroupTypeX",toString:$estr}; },$_._hx_name="LAG",$_.__params__ = ["lag"],$_)
};
tweenx909_advanced__$GroupX_GroupTypeX.__constructs__ = [tweenx909_advanced__$GroupX_GroupTypeX.SERIAL,tweenx909_advanced__$GroupX_GroupTypeX.LAG];
var tweenx909_advanced_StandardTweenX = function(type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	this._autoFrom = true;
	if(type._hx_index == 1) {
		var targets = type.targets;
		var fromArr = type._from;
		var toArr = type._to;
		var _from = fromArr.pop();
		var _to = toArr.pop();
		var t = $getIterator(targets);
		while(t.hasNext()) {
			var t1 = t.next();
			toArr.push(tweenx909_advanced_StandardTweenX.clone(_to));
			fromArr.push(tweenx909_advanced_StandardTweenX.clone(_from));
		}
	}
	tweenx909_TweenX.call(this,type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
$hxClasses["tweenx909.advanced.StandardTweenX"] = tweenx909_advanced_StandardTweenX;
tweenx909_advanced_StandardTweenX.__name__ = "tweenx909.advanced.StandardTweenX";
tweenx909_advanced_StandardTweenX.clone = function(obj) {
	var result = { };
	var _g = 0;
	var _g1 = Reflect.fields(obj);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		Reflect.setProperty(result,key,Reflect.getProperty(obj,key));
	}
	return result;
};
tweenx909_advanced_StandardTweenX.__super__ = tweenx909_TweenX;
tweenx909_advanced_StandardTweenX.prototype = $extend(tweenx909_TweenX.prototype,{
	_autoFrom: null
	,checkField: function(target,key) {
		if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
			var c = js_Boot.getClass(target);
			throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
		}
	}
	,_getTarget: function() {
		return this;
	}
	,_setTo: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g._hx_index) {
		case 1:
			var targets = _g.targets;
			var fromArr = _g._from;
			var toArr = _g._to;
			var i = 0;
			var t = $getIterator(targets);
			while(t.hasNext()) {
				var t1 = t.next();
				var target = t1;
				if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
					var c = js_Boot.getClass(target);
					throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,"$$$$" + key);
				var o = _to;
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + key];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[key] = value;
				}
			}
			break;
		case 2:
			var target = _g.target;
			var _from = _g._from;
			var _to = _g._to;
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				var c = js_Boot.getClass(target);
				throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to,"$$$$" + key);
			var tmp;
			var tmp1;
			if(_to.__properties__) {
				tmp = _to.__properties__["set_" + key];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				_to[tmp](value);
			} else {
				_to[key] = value;
			}
			break;
		default:
		}
	}
	,_setRelativeTo: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g._hx_index) {
		case 1:
			var targets = _g.targets;
			var fromArr = _g._from;
			var toArr = _g._to;
			var i = 0;
			var t = $getIterator(targets);
			while(t.hasNext()) {
				var t1 = t.next();
				var target = t1;
				if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
					var c = js_Boot.getClass(target);
					throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,"$$$$" + key);
				var o = _to;
				var o1 = t1;
				var tmp;
				var value1;
				if(o1 == null) {
					value1 = null;
				} else {
					var value2;
					if(o1.__properties__) {
						tmp = o1.__properties__["get_" + key];
						value2 = tmp;
					} else {
						value2 = false;
					}
					value1 = value2 ? o1[tmp]() : o1[key];
				}
				var value3 = value1 + value;
				var tmp1;
				var tmp2;
				if(o.__properties__) {
					tmp1 = o.__properties__["set_" + key];
					tmp2 = tmp1;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					o[tmp1](value3);
				} else {
					o[key] = value3;
				}
			}
			break;
		case 2:
			var target = _g.target;
			var _from = _g._from;
			var _to = _g._to;
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				var c = js_Boot.getClass(target);
				throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to,"$$$$" + key);
			var tmp;
			var value1;
			if(target == null) {
				value1 = null;
			} else {
				var value2;
				if(target.__properties__) {
					tmp = target.__properties__["get_" + key];
					value2 = tmp;
				} else {
					value2 = false;
				}
				value1 = value2 ? target[tmp]() : target[key];
			}
			var value2 = value1 + value;
			var tmp;
			var tmp1;
			if(_to.__properties__) {
				tmp = _to.__properties__["set_" + key];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				_to[tmp](value2);
			} else {
				_to[key] = value2;
			}
			break;
		default:
		}
	}
	,_setRelativeTo2: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g._hx_index) {
		case 1:
			var targets = _g.targets;
			var fromArr = _g._from;
			var toArr = _g._to;
			var i = 0;
			var t = $getIterator(targets);
			while(t.hasNext()) {
				var t1 = t.next();
				var target = t1;
				if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
					var c = js_Boot.getClass(target);
					throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,key);
				var o = _to;
				var key1 = "$$$$" + key;
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + key1];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[key1] = value;
				}
			}
			break;
		case 2:
			var target = _g.target;
			var _from = _g._from;
			var _to = _g._to;
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				var c = js_Boot.getClass(target);
				throw haxe_Exception.thrown(this.error(c.__name__ + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to,key);
			var key1 = "$$$$" + key;
			var tmp;
			var tmp1;
			if(_to.__properties__) {
				tmp = _to.__properties__["set_" + key1];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				_to[tmp](value);
			} else {
				_to[key1] = value;
			}
			break;
		default:
		}
	}
	,_initFromTo: function(target,_from,_to) {
		if(this._autoFrom == null) {
			this._autoFrom = tweenx909_TweenX.defaultAutoFrom;
		}
		var data = null;
		var _g = 0;
		var _g1 = Reflect.fields(_to);
		while(_g < _g1.length) {
			var key0 = _g1[_g];
			++_g;
			var o = _to;
			var tmp;
			var tmp1;
			if(o == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + key0];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				tmp1 = tmp2 ? o[tmp]() : o[key0];
			}
			if(typeof(tmp1) != "number") {
				this._fastMode = false;
			}
			var relative = HxOverrides.substr(key0,0,4) == "$$$$";
			var key = relative ? HxOverrides.substr(key0,4,null) : key0;
			var fromValue;
			var o1 = _to;
			var tmp3;
			var toValue;
			if(o1 == null) {
				toValue = null;
			} else {
				var toValue1;
				if(o1.__properties__) {
					tmp3 = o1.__properties__["get_" + key0];
					toValue1 = tmp3;
				} else {
					toValue1 = false;
				}
				toValue = toValue1 ? o1[tmp3]() : o1[key0];
			}
			if(!Object.prototype.hasOwnProperty.call(_from,key)) {
				if(this._autoFrom) {
					if(data == null) {
						data = { };
						var logs = tweenx909_TweenX._initLog;
						var o2 = target;
						var logs1;
						if(tweenx909_TweenX.dictionary.h[o2.__id__] != null) {
							logs1 = tweenx909_TweenX.dictionary.h[o2.__id__];
						} else {
							tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
							tweenx909_TweenX.dictionary.set(o2,tweenx909_TweenX._objCounter);
							logs1 = tweenx909_TweenX._objCounter;
						}
						var logs2 = logs[logs1];
						if(logs2 != null) {
							var _g2 = 0;
							while(_g2 < logs2.length) {
								var log = logs2[_g2];
								++_g2;
								if(log.target == target) {
									data = log.data;
								}
							}
						}
					}
					if(Object.prototype.hasOwnProperty.call(data,key)) {
						var o3 = data;
						var tmp4;
						var fromValue1;
						if(o3 == null) {
							fromValue1 = null;
						} else {
							var fromValue2;
							if(o3.__properties__) {
								tmp4 = o3.__properties__["get_" + key];
								fromValue2 = tmp4;
							} else {
								fromValue2 = false;
							}
							fromValue1 = fromValue2 ? o3[tmp4]() : o3[key];
						}
						fromValue = this._defaultFrom(fromValue1,toValue);
					} else {
						var o4 = target;
						var tmp5;
						var fromValue3;
						if(o4 == null) {
							fromValue3 = null;
						} else {
							var fromValue4;
							if(o4.__properties__) {
								tmp5 = o4.__properties__["get_" + key];
								fromValue4 = tmp5;
							} else {
								fromValue4 = false;
							}
							fromValue3 = fromValue4 ? o4[tmp5]() : o4[key];
						}
						fromValue = this._defaultFrom(fromValue3,toValue);
					}
				} else {
					var o5 = target;
					var tmp6;
					var fromValue5;
					if(o5 == null) {
						fromValue5 = null;
					} else {
						var fromValue6;
						if(o5.__properties__) {
							tmp6 = o5.__properties__["get_" + key];
							fromValue6 = tmp6;
						} else {
							fromValue6 = false;
						}
						fromValue5 = fromValue6 ? o5[tmp6]() : o5[key];
					}
					fromValue = this._defaultFrom(fromValue5,toValue);
				}
				var o6 = _from;
				var tmp7;
				var tmp8;
				if(o6.__properties__) {
					tmp7 = o6.__properties__["set_" + key];
					tmp8 = tmp7;
				} else {
					tmp8 = false;
				}
				if(tmp8) {
					o6[tmp7](fromValue);
				} else {
					o6[key] = fromValue;
				}
			} else {
				var o7 = _from;
				var tmp9;
				if(o7 == null) {
					fromValue = null;
				} else {
					var fromValue7;
					if(o7.__properties__) {
						tmp9 = o7.__properties__["get_" + key];
						fromValue7 = tmp9;
					} else {
						fromValue7 = false;
					}
					fromValue = fromValue7 ? o7[tmp9]() : o7[key];
				}
			}
			if(relative) {
				var o8 = _to;
				var value = toValue + fromValue;
				var tmp10;
				var tmp11;
				if(o8.__properties__) {
					tmp10 = o8.__properties__["set_" + key];
					tmp11 = tmp10;
				} else {
					tmp11 = false;
				}
				if(tmp11) {
					o8[tmp10](value);
				} else {
					o8[key] = value;
				}
				Reflect.deleteField(_to,key0);
			}
		}
		var data = { };
		var fs = Reflect.fields(_from);
		var _g = 0;
		while(_g < fs.length) {
			var key = fs[_g];
			++_g;
			if(!Object.prototype.hasOwnProperty.call(_to,key)) {
				var o = _to;
				var o1 = _from;
				var tmp;
				var value;
				if(o1 == null) {
					value = null;
				} else {
					var value1;
					if(o1.__properties__) {
						tmp = o1.__properties__["get_" + key];
						value1 = tmp;
					} else {
						value1 = false;
					}
					value = value1 ? o1[tmp]() : o1[key];
				}
				var value2 = value;
				var tmp1;
				var tmp2;
				if(o.__properties__) {
					tmp1 = o.__properties__["set_" + key];
					tmp2 = tmp1;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					o[tmp1](value2);
				} else {
					o[key] = value2;
				}
			}
			var back = this._repeat % 2 == 0;
			var t = this._time / this._time;
			if(this._odd) {
				back = !back;
			}
			if(this._inverted) {
				t = 1 - t;
			}
			if(back) {
				if(this._yoyo) {
					t = 1 - t;
				}
				t = this._ease(t);
				if(this._zigzag) {
					t = 1 - t;
				}
			} else {
				t = this._ease(t);
			}
			var t1 = t;
			var o2 = data;
			var o3 = _from;
			var tmp3;
			var _from1;
			if(o3 == null) {
				_from1 = null;
			} else {
				var _from2;
				if(o3.__properties__) {
					tmp3 = o3.__properties__["get_" + key];
					_from2 = tmp3;
				} else {
					_from2 = false;
				}
				_from1 = _from2 ? o3[tmp3]() : o3[key];
			}
			var _from3 = _from1;
			var o4 = _to;
			var tmp4;
			var _to1;
			if(o4 == null) {
				_to1 = null;
			} else {
				var _to2;
				if(o4.__properties__) {
					tmp4 = o4.__properties__["get_" + key];
					_to2 = tmp4;
				} else {
					_to2 = false;
				}
				_to1 = _to2 ? o4[tmp4]() : o4[key];
			}
			var _to3 = _to1;
			var t2 = 1 - t1;
			var value3;
			if(typeof(_to3) == "number") {
				var d = _from3 * t2 + _to3 * t1;
				value3 = d;
			} else {
				var i = 0;
				var l = tweenx909_TweenX._rules.length;
				var f;
				var result = null;
				var ok = false;
				while(i < l) {
					f = tweenx909_TweenX._rules[i++];
					if(js_Boot.__instanceof(_to3,f.inputClass)) {
						ok = true;
						result = f.calc(_from3,_to3,t1,t2,this);
						break;
					}
				}
				if(!ok) {
					var c = js_Boot.getClass(_to3);
					throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
				}
				value3 = result;
			}
			var tmp5;
			var tmp6;
			if(o2.__properties__) {
				tmp5 = o2.__properties__["set_" + key];
				tmp6 = tmp5;
			} else {
				tmp6 = false;
			}
			if(tmp6) {
				o2[tmp5](value3);
			} else {
				o2[key] = value3;
			}
		}
		var o = target;
		var id;
		if(tweenx909_TweenX.dictionary.h[o.__id__] != null) {
			id = tweenx909_TweenX.dictionary.h[o.__id__];
		} else {
			tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
			tweenx909_TweenX.dictionary.set(o,tweenx909_TweenX._objCounter);
			id = tweenx909_TweenX._objCounter;
		}
		if(tweenx909_TweenX._initLog[id] == null) {
			tweenx909_TweenX._initLog[id] = [{ target : target, data : data}];
		} else {
			var flag = false;
			var _g = 0;
			var _g1 = tweenx909_TweenX._initLog[id];
			while(_g < _g1.length) {
				var log = _g1[_g];
				++_g;
				if(log.target == target) {
					var _g2 = 0;
					var _g3 = Reflect.fields(data);
					while(_g2 < _g3.length) {
						var key = _g3[_g2];
						++_g2;
						var o = log.data;
						var o1 = data;
						var tmp;
						var value;
						if(o1 == null) {
							value = null;
						} else {
							var value1;
							if(o1.__properties__) {
								tmp = o1.__properties__["get_" + key];
								value1 = tmp;
							} else {
								value1 = false;
							}
							value = value1 ? o1[tmp]() : o1[key];
						}
						var value2 = value;
						var tmp1;
						var tmp2;
						if(o.__properties__) {
							tmp1 = o.__properties__["set_" + key];
							tmp2 = tmp1;
						} else {
							tmp2 = false;
						}
						if(tmp2) {
							o[tmp1](value2);
						} else {
							o[key] = value2;
						}
					}
					flag = true;
					break;
				}
			}
			if(!flag) {
				tweenx909_TweenX._initLog[id].push({ target : target, data : data});
			}
		}
	}
	,_initFrom: function(target,_from,_to) {
		var data = null;
		var _g = 0;
		var _g1 = Reflect.fields(_to);
		while(_g < _g1.length) {
			var key0 = _g1[_g];
			++_g;
			var o = _to;
			var tmp;
			var tmp1;
			if(o == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + key0];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				tmp1 = tmp2 ? o[tmp]() : o[key0];
			}
			if(typeof(tmp1) != "number") {
				this._fastMode = false;
			}
			var relative = HxOverrides.substr(key0,0,4) == "$$$$";
			var key = relative ? HxOverrides.substr(key0,4,null) : key0;
			var fromValue;
			var o1 = _to;
			var tmp3;
			var toValue;
			if(o1 == null) {
				toValue = null;
			} else {
				var toValue1;
				if(o1.__properties__) {
					tmp3 = o1.__properties__["get_" + key0];
					toValue1 = tmp3;
				} else {
					toValue1 = false;
				}
				toValue = toValue1 ? o1[tmp3]() : o1[key0];
			}
			if(!Object.prototype.hasOwnProperty.call(_from,key)) {
				if(this._autoFrom) {
					if(data == null) {
						data = { };
						var logs = tweenx909_TweenX._initLog;
						var o2 = target;
						var logs1;
						if(tweenx909_TweenX.dictionary.h[o2.__id__] != null) {
							logs1 = tweenx909_TweenX.dictionary.h[o2.__id__];
						} else {
							tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
							tweenx909_TweenX.dictionary.set(o2,tweenx909_TweenX._objCounter);
							logs1 = tweenx909_TweenX._objCounter;
						}
						var logs2 = logs[logs1];
						if(logs2 != null) {
							var _g2 = 0;
							while(_g2 < logs2.length) {
								var log = logs2[_g2];
								++_g2;
								if(log.target == target) {
									data = log.data;
								}
							}
						}
					}
					if(Object.prototype.hasOwnProperty.call(data,key)) {
						var o3 = data;
						var tmp4;
						var fromValue1;
						if(o3 == null) {
							fromValue1 = null;
						} else {
							var fromValue2;
							if(o3.__properties__) {
								tmp4 = o3.__properties__["get_" + key];
								fromValue2 = tmp4;
							} else {
								fromValue2 = false;
							}
							fromValue1 = fromValue2 ? o3[tmp4]() : o3[key];
						}
						fromValue = this._defaultFrom(fromValue1,toValue);
					} else {
						var o4 = target;
						var tmp5;
						var fromValue3;
						if(o4 == null) {
							fromValue3 = null;
						} else {
							var fromValue4;
							if(o4.__properties__) {
								tmp5 = o4.__properties__["get_" + key];
								fromValue4 = tmp5;
							} else {
								fromValue4 = false;
							}
							fromValue3 = fromValue4 ? o4[tmp5]() : o4[key];
						}
						fromValue = this._defaultFrom(fromValue3,toValue);
					}
				} else {
					var o5 = target;
					var tmp6;
					var fromValue5;
					if(o5 == null) {
						fromValue5 = null;
					} else {
						var fromValue6;
						if(o5.__properties__) {
							tmp6 = o5.__properties__["get_" + key];
							fromValue6 = tmp6;
						} else {
							fromValue6 = false;
						}
						fromValue5 = fromValue6 ? o5[tmp6]() : o5[key];
					}
					fromValue = this._defaultFrom(fromValue5,toValue);
				}
				var o6 = _from;
				var tmp7;
				var tmp8;
				if(o6.__properties__) {
					tmp7 = o6.__properties__["set_" + key];
					tmp8 = tmp7;
				} else {
					tmp8 = false;
				}
				if(tmp8) {
					o6[tmp7](fromValue);
				} else {
					o6[key] = fromValue;
				}
			} else {
				var o7 = _from;
				var tmp9;
				if(o7 == null) {
					fromValue = null;
				} else {
					var fromValue7;
					if(o7.__properties__) {
						tmp9 = o7.__properties__["get_" + key];
						fromValue7 = tmp9;
					} else {
						fromValue7 = false;
					}
					fromValue = fromValue7 ? o7[tmp9]() : o7[key];
				}
			}
			if(relative) {
				var o8 = _to;
				var value = toValue + fromValue;
				var tmp10;
				var tmp11;
				if(o8.__properties__) {
					tmp10 = o8.__properties__["set_" + key];
					tmp11 = tmp10;
				} else {
					tmp11 = false;
				}
				if(tmp11) {
					o8[tmp10](value);
				} else {
					o8[key] = value;
				}
				Reflect.deleteField(_to,key0);
			}
		}
	}
	,_defaultFrom: function(value,_to) {
		if(typeof(_to) == "number") {
			return value;
		}
		var _g = 0;
		var _g1 = tweenx909_TweenX._rules;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(_to,r.inputClass)) {
				return r.defaultFrom(value,_to,this);
			}
		}
		var c = js_Boot.getClass(_to);
		throw haxe_Exception.thrown(this.error("The tween rule for " + c.__name__ + " is not defined"));
	}
	,play: function() {
		tweenx909_TweenX.prototype.play.call(this);
		return this;
	}
	,stop: function() {
		tweenx909_TweenX.prototype.stop.call(this);
		return this;
	}
	,update: function(time) {
		tweenx909_TweenX.prototype.update.call(this,time);
		return this;
	}
	,goto: function(time,andPlay) {
		if(andPlay == null) {
			andPlay = false;
		}
		if(time == null) {
			time = 0;
		}
		tweenx909_TweenX.prototype.goto.call(this,time,andPlay);
		return this;
	}
	,onDelay: function(handler) {
		tweenx909_TweenX.prototype.onDelay.call(this,handler);
		return this;
	}
	,onFinish: function(handler) {
		tweenx909_TweenX.prototype.onFinish.call(this,handler);
		return this;
	}
	,onFoot: function(handler) {
		tweenx909_TweenX.prototype.onFoot.call(this,handler);
		return this;
	}
	,onHead: function(handler) {
		tweenx909_TweenX.prototype.onHead.call(this,handler);
		return this;
	}
	,onInterval: function(handler) {
		tweenx909_TweenX.prototype.onInterval.call(this,handler);
		return this;
	}
	,onStop: function(handler) {
		tweenx909_TweenX.prototype.onStop.call(this,handler);
		return this;
	}
	,onPlay: function(handler) {
		tweenx909_TweenX.prototype.onPlay.call(this,handler);
		return this;
	}
	,onRepeat: function(handler) {
		tweenx909_TweenX.prototype.onRepeat.call(this,handler);
		return this;
	}
	,onRest: function(handler) {
		tweenx909_TweenX.prototype.onRest.call(this,handler);
		return this;
	}
	,onUpdate: function(handler) {
		tweenx909_TweenX.prototype.onUpdate.call(this,handler);
		return this;
	}
	,addEventListener: function(type,listener) {
		var listener1 = listener;
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			var arr = this._eventListeners[i] == null ? this._eventListeners[i] = [] : this._eventListeners[i];
			if(!Lambda.has(arr,listener1)) {
				arr.push(listener1);
			}
		}
		return this;
	}
	,removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			if(this._eventListeners[i] != null) {
				HxOverrides.remove(this._eventListeners[i],listener);
			}
		}
		return this;
	}
	,time: function(value) {
		tweenx909_TweenX.prototype.time.call(this,value);
		return this;
	}
	,ease: function(value) {
		tweenx909_TweenX.prototype.ease.call(this,value);
		return this;
	}
	,delay: function(value) {
		tweenx909_TweenX.prototype.delay.call(this,value);
		return this;
	}
	,rest: function(value) {
		tweenx909_TweenX.prototype.rest.call(this,value);
		return this;
	}
	,interval: function(value) {
		tweenx909_TweenX.prototype.interval.call(this,value);
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 1;
		}
		tweenx909_TweenX.prototype.repeat.call(this,value);
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.yoyo.call(this,value);
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.zigzag.call(this,value);
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.autoPlay.call(this,value);
		return this;
	}
	,setTimeScale: function(value) {
		if(value == null) {
			value = 0;
		}
		tweenx909_TweenX.prototype.setTimeScale.call(this,value);
		return this;
	}
	,skip: function(delay) {
		if(delay == null) {
			delay = 0;
		}
		tweenx909_TweenX.prototype.skip.call(this);
		return this;
	}
	,autoFrom: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._autoFrom = value;
		return this;
	}
	,__class__: tweenx909_advanced_StandardTweenX
});
var tweenx909_advanced_TweenTypeX = $hxEnums["tweenx909.advanced.TweenTypeX"] = { __ename__:true,__constructs__:null
	,GROUP: ($_=function(group) { return {_hx_index:0,group:group,__enum__:"tweenx909.advanced.TweenTypeX",toString:$estr}; },$_._hx_name="GROUP",$_.__params__ = ["group"],$_)
	,ARRAY: ($_=function(targets,_from,_to) { return {_hx_index:1,targets:targets,_from:_from,_to:_to,__enum__:"tweenx909.advanced.TweenTypeX",toString:$estr}; },$_._hx_name="ARRAY",$_.__params__ = ["targets","_from","_to"],$_)
	,FROM_TO: ($_=function(target,_from,_to) { return {_hx_index:2,target:target,_from:_from,_to:_to,__enum__:"tweenx909.advanced.TweenTypeX",toString:$estr}; },$_._hx_name="FROM_TO",$_.__params__ = ["target","_from","_to"],$_)
	,FUNC: ($_=function(func,_from,_to) { return {_hx_index:3,func:func,_from:_from,_to:_to,__enum__:"tweenx909.advanced.TweenTypeX",toString:$estr}; },$_._hx_name="FUNC",$_.__params__ = ["func","_from","_to"],$_)
	,CALL: ($_=function(func) { return {_hx_index:4,func:func,__enum__:"tweenx909.advanced.TweenTypeX",toString:$estr}; },$_._hx_name="CALL",$_.__params__ = ["func"],$_)
};
tweenx909_advanced_TweenTypeX.__constructs__ = [tweenx909_advanced_TweenTypeX.GROUP,tweenx909_advanced_TweenTypeX.ARRAY,tweenx909_advanced_TweenTypeX.FROM_TO,tweenx909_advanced_TweenTypeX.FUNC,tweenx909_advanced_TweenTypeX.CALL];
var tweenxcore_FloatTools = function() { };
$hxClasses["tweenxcore.FloatTools"] = tweenxcore_FloatTools;
tweenxcore_FloatTools.__name__ = "tweenxcore.FloatTools";
tweenxcore_FloatTools.revert = function(rate) {
	return 1 - rate;
};
tweenxcore_FloatTools.clamp = function(value,min,max) {
	if(max == null) {
		max = 1.0;
	}
	if(min == null) {
		min = 0.0;
	}
	if(value <= min) {
		return min;
	} else if(max <= value) {
		return max;
	} else {
		return value;
	}
};
tweenxcore_FloatTools.lerp = function(rate,from,to) {
	return from * (1 - rate) + to * rate;
};
tweenxcore_FloatTools.inverseLerp = function(value,from,to) {
	return (value - from) / (to - from);
};
tweenxcore_FloatTools.repeat = function(value,from,to) {
	if(to == null) {
		to = 1.0;
	}
	if(from == null) {
		from = 0.0;
	}
	var p = (value - from) / (to - from);
	return p - Math.floor(p);
};
tweenxcore_FloatTools.shake = function(rate,center,randomFunc) {
	if(center == null) {
		center = 0.0;
	}
	if(randomFunc == null) {
		randomFunc = Math.random;
	}
	var rate1 = randomFunc();
	return center + (-rate * (1 - rate1) + rate * rate1);
};
tweenxcore_FloatTools.spread = function(rate,scale) {
	return -scale * (1 - rate) + scale * rate;
};
tweenxcore_FloatTools.sinByRate = function(rate) {
	return Math.sin(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.cosByRate = function(rate) {
	return Math.cos(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.yoyo = function(rate,easing) {
	return easing((rate < 0.5 ? rate : 1 - rate) * 2);
};
tweenxcore_FloatTools.zigzag = function(rate,easing) {
	if(rate < 0.5) {
		return easing(rate * 2);
	} else {
		return 1 - easing((rate - 0.5) * 2);
	}
};
tweenxcore_FloatTools.mixEasing = function(rate,easing1,easing2,easing2Strength) {
	if(easing2Strength == null) {
		easing2Strength = 0.5;
	}
	return easing1(rate) * (1 - easing2Strength) + easing2(rate) * easing2Strength;
};
tweenxcore_FloatTools.crossfadeEasing = function(rate,easing1,easing2,easing2StrengthEasing,easing2StrengthStart,easing2StrengthEnd) {
	if(easing2StrengthEnd == null) {
		easing2StrengthEnd = 1;
	}
	if(easing2StrengthStart == null) {
		easing2StrengthStart = 0;
	}
	var rate1 = easing2StrengthEasing(rate);
	var rate2 = easing2StrengthStart * (1 - rate1) + easing2StrengthEnd * rate1;
	return easing1(rate) * (1 - rate2) + easing2(rate) * rate2;
};
tweenxcore_FloatTools.connectEasing = function(time,easing1,easing2,switchTime,switchValue) {
	if(switchValue == null) {
		switchValue = 0.5;
	}
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		var rate = easing1(time / switchTime);
		return 0 * (1 - rate) + switchValue * rate;
	} else {
		var rate = easing2((time - switchTime) / (1 - switchTime));
		return switchValue * (1 - rate) + rate;
	}
};
tweenxcore_FloatTools.oneTwoEasing = function(time,easingOne,easingTwo,switchTime) {
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		return easingOne(time / switchTime);
	} else {
		return easingTwo((time - switchTime) / (1 - switchTime));
	}
};
tweenxcore_FloatTools.binarySearch = function(sortedValues,value,boundaryMode) {
	if(boundaryMode == null) {
		boundaryMode = 0;
	}
	var min = 0;
	var max = sortedValues.length;
	if(boundaryMode == 0) {
		while(true) {
			var next = ((max - min) / 2 | 0) + min;
			var dv = sortedValues[next];
			if(dv <= value) {
				min = next + 1;
			} else {
				max = next;
			}
			if(min == max) {
				break;
			}
		}
	} else {
		while(true) {
			var next = ((max - min) / 2 | 0) + min;
			var dv = sortedValues[next];
			if(dv < value) {
				min = next + 1;
			} else {
				max = next;
			}
			if(min == max) {
				break;
			}
		}
	}
	return min;
};
tweenxcore_FloatTools.polyline = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = values.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		return values[index] * (1 - innerRate) + values[index + 1] * innerRate;
	}
};
tweenxcore_FloatTools.bezier2 = function(rate,from,control,to) {
	return (from * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + to * rate) * rate;
};
tweenxcore_FloatTools.bezier3 = function(rate,from,control1,control2,to) {
	var control = control1 * (1 - rate) + control2 * rate;
	return ((from * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + to * rate) * rate) * rate;
};
tweenxcore_FloatTools.bezier = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else if(values.length == 3) {
		var control = values[1];
		return (values[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + values[2] * rate) * rate;
	} else {
		return tweenxcore_FloatTools._bezier(rate,values);
	}
};
tweenxcore_FloatTools._bezier = function(rate,values) {
	if(values.length == 4) {
		var control1 = values[1];
		var control2 = values[2];
		var control = control1 * (1 - rate) + control2 * rate;
		return ((values[0] * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + values[3] * rate) * rate) * rate;
	}
	var _g = [];
	var _g1 = 0;
	var _g2 = values.length - 1;
	while(_g1 < _g2) {
		var i = _g1++;
		_g.push(values[i] * (1 - rate) + values[i + 1] * rate);
	}
	return tweenxcore_FloatTools._bezier(rate,_g);
};
tweenxcore_FloatTools.uniformQuadraticBSpline = function(rate,values) {
	if(values.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else {
		var max = values.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = values[index];
		var p1 = values[index + 1];
		var p2 = values[index + 2];
		return innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
};
tweenxcore_FloatTools.frameToSecond = function(frame,fps) {
	return frame / fps;
};
tweenxcore_FloatTools.secondToFrame = function(second,fps) {
	return second * fps;
};
tweenxcore_FloatTools.degreeToRate = function(degree) {
	return degree / 360;
};
tweenxcore_FloatTools.rateToDegree = function(rate) {
	return rate * 360;
};
tweenxcore_FloatTools.radianToRate = function(radian) {
	return radian / (2 * Math.PI);
};
tweenxcore_FloatTools.rateToRadian = function(rate) {
	return rate * 2 * Math.PI;
};
tweenxcore_FloatTools.millisecondToBeat = function(millisecond,bpm) {
	return millisecond * bpm / 60000;
};
tweenxcore_FloatTools.beatToMillisecond = function(beat,bpm) {
	return beat * 60000 / bpm;
};
var tweenxcore_PointTools = function() { };
$hxClasses["tweenxcore.PointTools"] = tweenxcore_PointTools;
tweenxcore_PointTools.__name__ = "tweenxcore.PointTools";
tweenxcore_PointTools.polyline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = xs.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		tmp = xs[index] * (1 - innerRate) + xs[index + 1] * innerRate;
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else {
		var max = ys.length - 1;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		tmp = ys[index] * (1 - innerRate) + ys[index + 1] * innerRate;
	}
	outputPoint.y = tmp;
};
tweenxcore_PointTools.bezier2 = function(outputPoint,rate,from,control,to) {
	var control1 = control.x;
	outputPoint.x = (from.x * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + from.x * rate) * rate;
	var control1 = control.y;
	outputPoint.y = (from.y * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + from.y * rate) * rate;
};
tweenxcore_PointTools.bezier3 = function(outputPoint,rate,from,control1,control2,to) {
	var control11 = control1.x;
	var control21 = control2.x;
	var control = control11 * (1 - rate) + control21 * rate;
	outputPoint.x = ((from.x * (1 - rate) + control11 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control21 * (1 - rate) + from.x * rate) * rate) * rate;
	var control11 = control1.y;
	var control21 = control2.y;
	var control = control11 * (1 - rate) + control21 * rate;
	outputPoint.y = ((from.y * (1 - rate) + control11 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control21 * (1 - rate) + from.y * rate) * rate) * rate;
};
tweenxcore_PointTools.bezier = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp = xs[0] * (1 - rate) + xs[1] * rate;
	} else if(xs.length == 3) {
		var control = xs[1];
		tmp = (xs[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + xs[2] * rate) * rate;
	} else {
		tmp = tweenxcore_FloatTools._bezier(rate,xs);
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp = ys[0] * (1 - rate) + ys[1] * rate;
	} else if(ys.length == 3) {
		var control = ys[1];
		tmp = (ys[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + ys[2] * rate) * rate;
	} else {
		tmp = tweenxcore_FloatTools._bezier(rate,ys);
	}
	outputPoint.y = tmp;
};
tweenxcore_PointTools.uniformQuadraticBSpline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var p = $getIterator(points);
	while(p.hasNext()) {
		var p1 = p.next();
		xs.push(p1.x);
		ys.push(p1.y);
	}
	var tmp;
	if(xs.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp = xs[0] * (1 - rate) + xs[1] * rate;
	} else {
		var max = xs.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = xs[index];
		var p1 = xs[index + 1];
		var p2 = xs[index + 2];
		tmp = innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
	outputPoint.x = tmp;
	var tmp;
	if(ys.length < 2) {
		throw haxe_Exception.thrown("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp = ys[0] * (1 - rate) + ys[1] * rate;
	} else {
		var max = ys.length - 2;
		var scaledRate = rate * max;
		var min = 0;
		var max1 = max - 1;
		if(max1 == null) {
			max1 = 1.0;
		}
		if(min == null) {
			min = 0.0;
		}
		var index = Math.floor(scaledRate <= min ? min : max1 <= scaledRate ? max1 : scaledRate);
		var innerRate = scaledRate - index;
		var p0 = ys[index];
		var p1 = ys[index + 1];
		var p2 = ys[index + 2];
		tmp = innerRate * innerRate * (p0 / 2 - p1 + p2 / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
	outputPoint.y = tmp;
};
var tweenxcore_MatrixTools = function() { };
$hxClasses["tweenxcore.MatrixTools"] = tweenxcore_MatrixTools;
tweenxcore_MatrixTools.__name__ = "tweenxcore.MatrixTools";
tweenxcore_MatrixTools.createSimilarityTransform = function(outputMatrix,fromX,fromY,toX,toY) {
	var dx = toX - fromX;
	var dy = toY - fromY;
	var rot = Math.atan2(dy,dx);
	var d = Math.sqrt(dx * dx + dy * dy);
	outputMatrix.a = d * Math.cos(rot);
	outputMatrix.b = d * Math.sin(rot);
	outputMatrix.c = -d * Math.sin(rot);
	outputMatrix.d = d * Math.cos(rot);
	outputMatrix.tx = fromX;
	outputMatrix.ty = fromY;
};
var tweenxcore_structure_TimelineSearchResult = function(data,index,rangeLeft,rangeRight) {
	this.data = data;
	this.index = index;
	this.rangeLeft = rangeLeft;
	this.rangeRight = rangeRight;
};
$hxClasses["tweenxcore.structure.TimelineSearchResult"] = tweenxcore_structure_TimelineSearchResult;
tweenxcore_structure_TimelineSearchResult.__name__ = "tweenxcore.structure.TimelineSearchResult";
tweenxcore_structure_TimelineSearchResult.prototype = {
	data: null
	,index: null
	,rangeLeft: null
	,rangeRight: null
	,innerRate: function(rate) {
		var from = this.rangeLeft;
		return (rate - from) / (this.rangeRight - from);
	}
	,__class__: tweenxcore_structure_TimelineSearchResult
};
var utils_FunctionUtil = $hx_exports["FunctionUtil"] = function() { };
$hxClasses["utils.FunctionUtil"] = utils_FunctionUtil;
utils_FunctionUtil.__name__ = "utils.FunctionUtil";
utils_FunctionUtil.dispatch = function(callback,params) {
	if(params == null) {
		return callback();
	}
	switch(params.length) {
	case 0:
		return callback();
	case 1:
		return callback(params[0]);
	case 2:
		return callback(params[0],params[1]);
	case 3:
		return callback(params[0],params[1],params[2]);
	case 4:
		return callback(params[0],params[1],params[2],params[3]);
	case 5:
		return callback(params[0],params[1],params[2],params[3],params[4]);
	case 6:
		return callback(params[0],params[1],params[2],params[3],params[4],params[5]);
	case 7:
		return callback(params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
	case 8:
		return callback(params[0],params[1],params[2],params[3],params[4],params[5],params[6],params[7]);
	case 9:
		return callback(params[0],params[1],params[2],params[3],params[4],params[5],params[6],params[7],params[8]);
	case 10:
		return callback(params[0],params[1],params[2],params[3],params[4],params[5],params[6],params[7],params[8],params[9]);
	default:
	}
	return null;
};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/shared/down-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEHnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1VZbkuw2CP3XKrIEAUJIy9GzKjvI8nMk2337WTM3mXzEahs1RoA4gOzGX39O9wcuMmIX1FLMMXpcIYfMBZPkj6vsJ/mwn8dlJ6VHvtt/1sVgCagcf1M85S8+3RQcpGCmd4pSO1/Uxxf5NMDpSdFpSJZHjEk/FeVTkfDxgk4F5diWjznZ/RbqOOi5/ghDWlvDo15cPYWf/gdD9LrCjjAPIfF4soTDAVk3Oyl7UvCaliBokSCCpwqfniAg7+Lk77xyL6hcsydUMr8HReIh4cB4DGa80bd80vfBdzvEd5alnTN+5Md+RewxyOuesyc35zh2V0JESOO5qWuLewbBipDLXhYxDLdibntkjOSQvQ2Qd998xWiUiQHLpECdCk0amzZqcDHwYANlbkBl8ZIYZ27iHVAKa9BkkyxdEpBrgFfA5ZsvtO3mba5RguFOkGSCMjrg558ZHxXNuVKeaAUz844V/OKVBHBjIbeekAIgNK880h3gazxfC1cBgrrDnLDB4uuhoiqdubXySDbQAkEFPWqNrJ8KECLYVjiD3A/kI4lSJG/MRoQ4JuBToCihaLgCAlLlDi8ZBRIBTuJlG2uMtiwrH2z0LAChEsUATZYCrAIaG/LHQkIOFRUNqhrVNGnWEiWGqDFGi6v5FRMLphbNLFm2kiSFpCkmS8mlnErmLGiOmmO2nHLOpcBogeaC1QUCpVSuUkPVGqvVVHMtDenTQtMWm7XkWm6lc5eOPtFjt5567mXQQCqNMHTEYSONPMpEqk2ZYeqM02aaeZYbauQOWF/G91GjCzXeSC1Bu6GGpWaXClrtRBdmQIwDAXFbCCCheWHmE4XAbkG3MEPWoSqU4aUucDotxIBgGMQ66YbdL+QecHMh/Cvc+ELOLeh+Ajm3oPuA3Ctub1Dr67RpXtxGaJXhCqoXlJ8WToXrSGn6tqaprOPtC+q+K/i/URTHmLGImavIhsWxeHJuDCTIhmxaMV1nueL3kbqvBN7QpBWfBPgo6D3iE8OWcXK19pLrkpC6Ob8Yx1K0tg0jlrTaR145MmYYJTzYcL/nzCeKhBw1TFSCKcIStumcvG4R/0LH4UsayOGp8AllpcGyjOpQZ7N0f8dS9gM1dNvR96jbk0wV9SpsK3ocVpVtk7842+ewmbe1D66793u40ZCkeOyl4ARHU/rslvvwgqiO0YXz6NNizjfl7UNuum8k8eENWtbwDUcbPkKgsHcU9Lo9deSIOfNFva3vwfoKLhM+czrHsSFDVGpNyLSEt1yt9xJVUsXXSQZqX/n8TeruGVkNDU657ByR8VygYn2snhln7UiXB9PuZ5rIi6J/7tN/19i2TwswHMRPMApyayo/toSLuq8qSSZOiozM/RuoEB6Ee3ucrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Yjk3ZjI0MDgtNjFiYi00MDJkLWEyYzctM2M2NjAzOTJlZWZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ1OTBhZjNmLWY0N2EtNDY2NC04MjM1LWJmYjJiNTI3OWUwYSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUwOWE1NTk1LTIyNDItNDg3NS1hN2Y1LWE0MmZjMTVhOWUwNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjEyMjM0MTE1MDA0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRlZmY5MDctMjQ2NC00YTg2LTljMTMtMTliMTg2NzZkZWY4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIxOjQzOjU0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Ps+fDsgAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgsUKzYD7eUCAAAAKUlEQVQI12MM7TrynwEHYGRgYGDApmB1mQ0jI4yDrGB1mQ0jhjHoJgAAJK4NSNCarJ8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWP8//8/AwZgeieriib0TlaVCUIhCzEwMDAhc+DSAPKbCiUI9YmvAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgew0KICAgIF9fZm9udC1uYW1lOiAiQXJpYWwiOw0KICAgIF9fZm9udC1zaXplOiAxM3B4Ow0KfQ0KDQouY29tcG9uZW50OmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkOw0KfQ"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVQ4ja2TS2tTURSFv3POTapoWjAqiFgkotRAin8gcx1IOxQEHTiItFL8B/ojBJuJAx+dWjpxoLOAU7UKiZJBMlBI0YJJqTfXe/d2kJ6Yx0UHukdnr73XOmufB/xjmDRwfr1XDESXMPYCACqfEjWb7dVc/Y8CherunEjmoVGupYgryoZLopXmWr47JVCo7s6pZGoopb+43nZxVPYigUcPdh6Si8cdV845LPCqFfOmI760mASZB8CNoYP59V7RCR98fvKI4dnVw7S7QpQoF/OO61shX/aGIqpOi63KbMMCONHl0XGOHTK8/pxwvxZRfRvjLJzOjZ+dFZYBLIAx9vxotfFNuFfrs7MvVC4FtL4L73dkTEFkwAkARNG0+7xZynDqqOX2i5AwGa8Zg/52gDRT+IQxPNr+SWdfp2rGDDh24MA8B6a6vv5QOnsyCR9MwOZQoL2aq6NsTHZdLjjKZ4JJGNCnrcpsA0begUuilSTIloBFj9192Z+2Be+yM/07PrF+0VzLd10clUGf+HEmyAL6ODsTlj/eOtHzYOpnOlvtLpCwZI1dGAwsdQK2vO3/Gr8AlhyqPdEFcaYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLnJhbmdlLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0gICAgDQoNCi5ob3Jpem9udGFsLXJhbmdlIC5yYW5nZS12YWx1ZSB7DQogICAgYmFja2dyb3VuZDokYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcmFuZ2UgLnJhbmdlLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcmFuZ2U6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/shared/right-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-arrows-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAA2WwUSXgyq8MAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-large.png", data : ""},{ name : "haxeui-core/styles/default/buttons.css", data : ""},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCQkFSIChUT1ApDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmJhciB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXRvcC13aWR0aDogMHB4Ow0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi50YWJiYXIgPiAudGFiYmFyLWNvbnRlbnRzIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJiYXItYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQogICAgYmFja2dyb3VuZDogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93biAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duIHZlcnRpY2FsOw0KICAgIHBhZGRpbmc6IDdweCA4cHg7DQogICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi5maXJzdCB7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsNCn0NCg0KLnRhYmJhci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yIHZlcnRpY2FsOw0KICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi50YWJiYXItYnV0dG9uOmRvd24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KDQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCiAgICANCiAgICBib3JkZXItdG9wOiAycHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi50YWJiYXItc2Nyb2xsLWxlZnQgew0KICAgIGljb246ICRhcnJvdy1sZWZ0Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQoudGFiYmFyLXNjcm9sbC1yaWdodCB7DQogICAgaWNvbjogJGFycm93LXJpZ2h0Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCAubGFiZWwgew0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCAuaWNvbiB7DQp9DQoNCi50YWJiYXItYnV0dG9uIC50YWItY2xvc2UtYnV0dG9uIHsNCiAgICByZXNvdXJjZTogJGNsb3NlOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCiAgICBjdXJzb3I6ICJwb2ludGVyIjsNCiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbiAudGFiLWNsb3NlLWJ1dHRvbjpob3ZlciB7DQogICAgcmVzb3VyY2U6ICRjbG9zZS1ob3ZlcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50YWJiYXIgLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkJBUiAoQk9UVE9NKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJiYXI6Ym90dG9tIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhcjpib3R0b20gLnRhYmJhci1jb250ZW50cyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnRhYmJhci1idXR0b246Ym90dG9tIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uLmZpcnN0IHsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpib3R0b20gew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCg0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQogICAgDQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0IHsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Ow0KfQ0KDQoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci10b3AtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJ2aWV3IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoudGFidmlldyA+IC50YWJ2aWV3LXRhYnMgew0KICAgIG1hcmdpbi10b3A6IDFweDsNCn0NCg0KLnRhYnZpZXc6Ym90dG9tID4gLnRhYnZpZXctdGFicyB7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KfQ0KDQoudGFidmlldyA+IC50YWJ2aWV3LWNvbnRlbnQgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDhweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50YWJ2aWV3LWNvbnRlbnQ6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQlZJRVcgQUxUIFNUWUxFUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb2xsYXBzaWJsZS1sYWJlbHMgLnRhYmJhci1idXR0b24gLmxhYmVsIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5jb2xsYXBzaWJsZS1sYWJlbHMgLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBoaWRkZW46IGZhbHNlOw0KfQ0K"},{ name : "haxeui-core/styles/shared/close-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVUrCnYQcchQXbQgKuIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIm5uToouU+L+k0CLWg+N+vLv3uHsHCLUSU82OCUDVLCMRjYjpzKroe0UX/OjHGHokZuqx5GIKbcfXPTx8vQvzrPbn/hy9StZkgEcknmO6YRFvEM9sWjrnfeIgK0gK8TnxuEEXJH7kuuzyG+e8wwLPDBqpxDxxkFjMt7DcwqxgqMTTxCFF1ShfSLuscN7irJYqrHFP/sJAVltJcp3mMKJYQgxxiJBRQRElWAjTqpFiIkH7kTb+IccfJ5dMriIYORZQhgrJ8YP/we9uzdzUpJsUiACdL7b9MQL4doF61ba/j227fgJ4n4Errekv14DZT9KrTS10BPRtAxfXTU3eAy53gMEnXTIkR/LSFHI54P2MvikDDNwC3Wtub419nD4AKepq+QY4OARG85S93ubd/tbe/j3T6O8HZkByogoVjmQAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCQgQLBKUV9OZAAAA9klEQVQY012PTU4CQRCFv6qhh7gWdy6N0XtwAhPwEqzMzIJZ9QYIybAh3sEEPAEXgURPQGCv89PlwjQitavUq/e+J36+vA1qU5X6xWfZgbMZT5c3ztmiTdqxmjIB+mbp2pdl75+oY2ugn7TJRMbT1+vUhZVhjxifTW2DtNu0IbgVwoPAh1ANBMCXZS8eMHaAItwLsq1qHc6K0VH+os6cgejk83wPoFHYTb/EzE6PZkhVudOuETwE9/7LJFuMHcJdx8lbLCjnfDHuu75qLwuqWbqITlWdPPk838+K0VGkej45pzLXJmkKYBPbRSafZQfVeghsNGjxAx6fgSyXIE/yAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJPUERPV05TDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHggOHB4Ow0KfQ0KDQouZHJvcGRvd24tcG9wdXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5kcm9wZG93bi1wb3B1cCAubGlzdHZpZXcgLml0ZW1yZW5kZXJlciB7DQogICAgcGFkZGluZzogNnB4IDhweDsNCn0NCg0KLmRyb3Bkb3duLXBvcHVwID4gLnNjcm9sbHZpZXcsIC5kcm9wZG93bi1wb3B1cCA+IGRyb3Bkb3duLXNlYXJjaC1jb250YWluZXIgPiAuc2Nyb2xsdmlldyAgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouZHJvcGRvd24tc2VhcmNoLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZC1jb250YWluZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDFweDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCiAgICBpY29uOiAkc2VhcmNoOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNT0JJTEUgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouZHJvcGRvd246bW9iaWxlIHsNCiAgICBtb2RlOiBtb2JpbGU7DQp9DQoNCi5kcm9wZG93bi1wb3B1cDptb2JpbGUgew0KICAgIHdpZHRoOiA3NSU7DQp9DQo"},{ name : "haxeui-core/locale/en/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2F2ZQ0KZGlhbG9nLnllcz1ZZXMNCmRpYWxvZy5ubz1Obw0KZGlhbG9nLmNsb3NlPUNsb3NlDQpkaWFsb2cub2s9T0sNCmRpYWxvZy5jYW5jZWw9Q2FuY2VsDQpkaWFsb2cuYXBwbHk9QXBwbHkNCg"},{ name : "haxeui-core/styles/shared/check-blue.png", data : ""},{ name : "haxeui-core/styles/shared/check-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0b29sdGlwLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4wNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDRweCA1cHg7DQogICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICBtYXJnaW4tdG9wOiAzMHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/collapsed-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACr0lEQVRYhe2XPUxTURiGn+/ctkKkQAxJERu1QkxcUJnAXVYSjG51UpEGTZx0kcQQBzcNFCW44axhddDERRYRFwfDryk/AhILJMLtvfc4SKG/cCkti77TyXd+njffPefc78C/Lilk0tmB1ZqErepESdB20IatY5vizM12Vf4smYH6aLxBiwpraAPO5xk2Jpph5bGHxjuqJ4piIDS4HsDS3WhuAl6XfhNoBpSiZ6LTv1iwgVMvVluUI6+BWpfgTC3jcGWqy/8h3wCVryP0fO2acuT9AeAANSjehvrXruYbkDMD9dHVS47IO+DIAeCpMnG4nCsTWQZCg+sBTP0FIVAkeFILhkXj+F3/Umow+xNYutsNvMInPGjxcb/Zx1Gvq8NUa3t4mBlMm1kfjTc4or7iYrc/aPFx64IPgIHPJk9GTDcmTBv73PdI9WQykJYBB3XdDRxAazejsuRTYoRTA560bqHN7Up9nxI523tJNG3Aox3klv5er7KUc1ZxpRM+pyZ2o2oFUjJgWioo4j6vtRVCU8AAYPSHzcK667niNY0gsAIpe0CLHHdNB5oCBn2tZfS1lm0bcSutqUu2tw2ILnBbFSKF3mkmDRjMHxrfYi7LgGk5sUPia7Pcns0ysFVMjB2CgdHkCUgzACCa4ZLjJZ2RZkB57CHA1Z1aoEzHsl+l+8lQKLrWi9BVCrrA08mI/15qLOtvqBQ9wEIJ+PMeQz/O4mUGJjr9i47S7cBmEeEbGqf9W0fl8p4GAGZuV34EwkUysYEmPB2pGsnVuWslcbo/3iyoNxReF85rnPZ8cNilKAWYjlSNGBaNQC/7Ox2mCM+8hm7cDQ77eJic7P91RokR3vqfX8y5mDDqaIa1bQ/N3KmecrNuQU+z4Mv4Md9v44RtSBDAsHXMLLdnU2+4/3KrPzu548SSV/k0AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb21wb25lbnQgew0KfQ0KDQouY3VzdG9tLWNvbXBvbmVudCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoubW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsLWJhY2tncm91bmQtY29sb3I7DQogICAgb3BhY2l0eTogMC43NTsNCn0NCg0KLm1vZGFsLWNvbXBvbmVudCB7DQogICAgZmlsdGVyOiBibHVyKDEpOw0KfQ0KDQoucG9wdXAgew0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMiwgNDUsICMwMDAwMDAsIDAuMTUsIDYsIDEsIDMwLCAzNSwgZmFsc2UpOw0KfQ0KDQpAa2V5ZnJhbWVzIGFuaW1hdGlvbkZhZGVJbiB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQoNCi5mYWRlLWluIHsNCiAgICBhbmltYXRpb246IGFuaW1hdGlvbkZhZGVJbiAwLjFzIGxpbmVhciAwcyAxOw0KfQ0KDQouZmFkZS1vdXQgew0KICAgIGFuaW1hdGlvbjogYW5pbWF0aW9uRmFkZUluIDAuMXMgbGluZWFyIDBzIDEgcmV2ZXJzZTsNCn0NCg0KLmRlZmF1bHQtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmRlZmF1bHQtYmFja2dyb3VuZC1zb2xpZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTlRBSU5FUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYm94LCAudmJveCwgLmhib3gsIC5hYnNvbHV0ZSwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHNwYWNpbmc6IDVweCA1cHg7DQp9DQoNCi5ib3gsIC52Ym94LCAuaGJveCwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTEFCRUwNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCiAgICANCi5sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBMSU5LDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmxpbmsgew0KICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yLWRhcmtlcjsNCiAgICBmb250LXVuZGVybGluZTogdHJ1ZTsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcG9pbnRlci1ldmVudHM6IHRydWU7DQp9DQoNCi5saW5rOmhvdmVyIHsNCiAgICBjb2xvcjogJGFjY2VudC1jb2xvcjsNCn0NCg0KLmxpbms6ZG93biB7DQogICAgY29sb3I6ICRhY2NlbnQtY29sb3ItZGFya2VyOw0KfQ0KICAgIA0KLmxpbms6ZGlzYWJsZWQgew0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSU1BR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouaW1hZ2Ugew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouaW1hZ2U6ZGlzYWJsZWQgew0KICAgIGZpbHRlcjogZ3JheXNjYWxlOw0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBEUkFHICYgRFJPUA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kcmFnZ2FibGUgew0KICAgIGN1cnNvcjogbW92ZTsNCn0NCg0KLmRyYWdnaW5nIHsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSVRFTSBSRU5ERVJFUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYmFzaWNpdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQouYmFzaWMtcmVuZGVyZXItY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0VDVElPTiBIRUFERVJTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNlY3Rpb24taGVhZGVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAxNXB4Ow0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxhYmVsIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIgLmxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2VjdGlvbi1oZWFkZXIuZmlyc3Qgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICANCn0"},{ name : "haxeui-core/styles/shared/sortable-asc-blue.png", data : ""},{ name : "haxeui-core/styles/shared/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdZlsMoDPzXKeYIlkAgjsP63txgjj8FttNZOp30YtoWLWMhVCVBqP/376B/cAmnjbxGCymEDZdPPklGx7b9yuvJm1/P/YqH5Fs9XV4IVA7S7f9aOMafer4Y2EVGT68MWT1elNsXyR/27c7QMZGbHgk67TCUDkNO9hd8GMj7sraQLF4vofRdHt/vYbC5NDzKqdVj8N3/PiJ6TTGPE+mO3YanOL874OYt5PLq5PUafruEvnNx6ePhCQLyWZy2K6/oAZWzx0/0d6C4sOsJittghov8VM/6efBphfhqZlcvM9/ofbkQ5SbI8x6jGY3R99VlHxDScCzqXMrqYWCBKbc+C2gRt6IfV0toRmBvBeRtq1tBq5xYEPfBnhtnHtyXrFzhopcuEVKkils6c1GSVLcR0PKz8ZAIxJozYFgBr4NWLr7wmjet6SobJm6MkcIwxjv88jftqaExJuWZN7vECn7JTAq4MZGbT4wCIDxOHukK8NnuL15M9Rg1w2xYYN7KbqIoH9yaPHILaIeBCrnnGsd2GECIMLfCGXZAYAvslANvUSQyI44GfDIMGZJGCiBgVWnwUrxzAeCYzLnxTeQ1VlR2NWoWgFAXkEg2UwpYeRQ28Cd6A4eyOvWqGjSqadIcXPBBQwgxzOKXo4s+agwxRospZnPmTS1YNCNLlpMkh+KoKaSYLKWUMybNsJzxdcaAnIsUV3zREkosVlLJFfSpvmoNNVajmmpu0lxDnWihxWYttdy5g0rdd+2hx2499TxAteGGHzrCiMNGGvmCGtMO60N7HzU+UZOF1BwYL6jh0xhPEzzLiU7MgJh4BuJxIgBCy8RsM/ZeaEI3MduSICtU4KVOcBpPxICg7yw6+ILdB3I3uJH3v8JNTuRoQvcXyNGE7glyj7h9glqbu03dHC2EZhrOoG4O6ReUvbIOH7AHz67XuUvdSZWt2/Q5bdGzR2ETy/iDscSldzgmLrY5z27Q148RX0l6NeArmVFFN0X04R0BSWyEa27I3RtF/R6lQFHnJ5LsY8QzSa8GvJLeXN6yddrdQ+Fbc2NvyR58lRSm8yE05+c95itOxTfG7fp8aYAbBE1a+lAhdVc2fiHpRrGgVG67v357Cv4hHS9vVEqk1sHe8PKTl5JeEe0lCZC40xnKCdW/CQ5uw88IIo6PmphQZ6Ll8Dyi9I2QfhlBemP9W8wMpqDoYKNGwTlZdJM89POkuM2Jd5nN3cJCAHGbNO3z1Ju8Sl/90GiKitORpBgSRoHXP0oVOnPlMVW+J+lDAUJojg1szTgey7eqUYahLwL4HUnXiuUMgmatBST7Pteb6UM/Sot7CSwJYGKzKH5c2FaKjYy6M5+ywqStxhZwhKztqUv0pc/fcJWe+upWVu3ZcaL8RfGmt4vyC6JdZX+1oRkHWkTD2ojYxLEU/6HFCmfh7h6luoeUbmlGf7KpgX70mm8Ve1ybR5XdzSdxoj/Z1OAdPQbQS1w/ibGzTY75eQNGYJaKTX7NH6pHEHHoCjv56Zebx0XSS+q9eUihXxxGnhp6Xk/eOKTQj/DCz6uGieh/0DPsUZQQ03EAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6YTJjZmUzZWYtMzE5Yi00YTlkLThlZGEtMzJhNDYzZjMwNmZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxY2EwNjczLTJlODEtNGM3Mi1hNTM2LTg2MTJkYjc4YWY3NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmI0OGNmYzRiLTMxOGItNDEzNy1iMmZlLTEzYWZjM2E0ZTExZCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjI4NDI1Mjg0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZWFmMzkzYzAtOGRlNy00NTlmLTg4MzItYWE2MGYyYTc0NWJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjA4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj16UaAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJQjxj+hWAAAAMklEQVQI12NggILQriP/GdAAEzIHXQETumpkBRiSyAqwSq4us2HEKgmTYMDnGAYGBgYAozYP8SPzNcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZbrtwgDIbfWUWXENsYm+UQLlJ30OX3h1w6cy7SqXpeKk2YAeKQH+PPMBP6r58j/MBF2WKIap5yShuumGPmgo5vx1VWTVtc9aNt3j/Zw/2AYRK0ctx6OsdfdroFjqagpw9CXs8H+/ODHE99fyN0TiTTI0annUL5FBI+HtApUE5PU3Z7XMLej/Z8/wiDz6WhGldM7Gje3kdD9JpiHmHuQrKhZomHAzK/HKSszqwdA1GjL6tmodMTBOSjOG0PXoV3VK4efWJ/A0XSYQ8wPAcz3e2HdtKPgx9WiB9mlnrP/GQ3uad4CvKK8WgexujH6kpMCGk6F3UtZfUwcEfIZb2WUAxfRd9WySg+E7ICedvqtqNUysTAMihSo0KD+morVbgYubOhZa4gMW0uxpmrbAEw4yw02CRLAy+WCrwCK9++0Jo3r+kqOSZuhJFMEKMDP39P+VRojJnyRJvfsYJfPDcF3JjkZo1RAELjyiNdAb7K22tyFRDUFWbHAsu2HxK70plbM49kgRYMVLTHXiNrpwBChLkVzpCAwJZIlBJtxmxEiKODT4GQY9PwDgSkyg1echRJgIMdg7nxjtEay8qHGWcWQKgkMaDJUsBqHmzIH4uOHCoqGlU1qalr1pIkxaQpJUvz8CsmFk0tmZlbtuLi0dWTm3vw7CVzFhyOmlO27DnnUjBpgXLB2wUDStl5lz3uuqfddt/zXirSp8aqNVWrHmqupXGThnOipWbNW26lU0cq9di1p27de+5lINWGjDh0pGHDRx7lpkbhwPqufJ0aXdR4kZoD7aaGV80uCZrHiU5mIMaRQNwmASQ0T2abU4wcJrrJbMuMXaEML3XCaTSJgWDsxDroZveH3BO3EOM/ceOLXJjovoNcmOg+Ifee2wfU2vy1qZuERWhuwxnUTbD9MKiw44PfpK+34W9feAm9hF5CL6GX0EvoJfTfCMnAn4eMP+m/ATTxo1xUMRnCAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOmJiYWE0YTllLTQxNGYtNGFkZC04NmI4LTk2MDQ2OTNiZDI3YyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo1ZDhlMjY0Ny0wY2MxLTRhYmYtOTY4ZS1hNGJkMTA1YWI1OWEiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjODRmYTUxNi05MWQ0LTRjOGItYTUxMy0zZTQ2OTFiNzRhMDMiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDMwNTkwMjY2MDk5MiIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjliMzYzNTNjLWI3Y2MtNDcwZC05ZjY2LWJkYjdlNGNlNjI3MiIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQwODozODoyMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6Ep5GeAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gIIByYWgfgJQAAAAIhJREFUGNNtkLsRwkAMRB9uwQZmMCEBZR9OSGjB5tMEVEAbj0SG83GaUSDtamdXqHt1UDuKUteB9agn9a1ec3KQboEl1FYdY/FQt2qnTrG7q5v5OgemTGlU29JPrrxUApqMu4quzs1sHLgAR+AJvIADcP4GrBmvBczfszBeCCTUXk1/6X7kpO4+lzDh/7PqYdUAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/search.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIw1AUhv+mig8qDnYoIpKhOlkoKuIoVSyChdJWaNXB5KYvaNKQpLg4Cq4FBx+LVQcXZ10dXAVB8AHi6OSk6CIlnpsUWsR44HI//nv+n3vPBYRGhalmVxRQNctIxWNiNrcq9rzChxD6MIqoxEw9kV7MwLO+7qmb6i7Cs7z7/qwBJW8ywCcSzzHdsIg3iGc2LZ3zPnGQlSSF+Jx4wqALEj9yXXb5jXPRYYFnBo1Map44SCwWO1juYFYyVOJp4rCiapQvZF1WOG9xVis11ronf2Egr62kuU5rBHEsIYEkRMiooYwKLERo10gxkaLzmId/2PEnySWTqwxGjgVUoUJy/OB/8Hu2ZmFq0k0KxIDuF9v+GAN6doFm3ba/j227eQL4n4Erre2vNoDZT9LrbS18BAxuAxfXbU3eAy53gNCTLhmSI/lpCYUC8H5G35QDhm6B/jV3bq1znD4AGZrV8g1wcAiMFyl73ePdvZ1z+7enNb8fpuZyvNk619AAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARgJIBu0NNI+AAABNElEQVQ4y82SzUpCURSFv31uFDqRhr1E9QASBYXjoGewgZIJWsYlrxrSrRwkRuWoXqJRBPYG/cx6ihqUCnZ2ExG7eQ1HtUaHfc75WKy94K8lwUGx1kiIalLRhf7oAXGalVz69ldA8aTuAusgnnl37gGI9uIquFa5OdjJ+KGAYq2RQG3VTNnVUjb7OvzI95uxD6dzh9W9yu72NydmQFJNgnjBzwCFwuYbSFmMSQbvzNB5fmB7hDq23RrKZSRgrKLtiAh0QwGKPhLtxcMAvYhdVpXncAfiNFVwfb8Z+5HB4fmsEeMZYy/HrnH/uF4QYQOk3LHtFsA0MytGjIfonMFcl/JpF0TDi3R0utZPe1GVLvCkcCGiS0AqCJFJatsvWkpErsq5LXeiLQBU8pmqqp7pp77wb/QFm09xUl2IdBcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-asc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAANannypZYQAAAAAAAAIAAAAAAADWp58AAADWp58AAAAAAAACAAAA1qefAAAAAAAAAAAA1qefAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAAAnQX2cErsvcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-desc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAANannwAAAAAAAAAAAAAAACpZYQIAAAAqWWEAAAAAAAAAAAAqWWEAAAACAAAAAAAAKllhAAAAKllhAAAAAAAAmeIQ3V5WWXgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/treeviews.css", data : "LnRyZWV2aWV3IC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpub2RlLXNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWV2aWV3bm9kZSAuYmFzaWMtcmVuZGVyZXItbGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KICAgIA0KLnRyZWVub2RlLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCiAgICANCi50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgew0KICAgIHBhZGRpbmctbGVmdDogMTZweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogbm9uZTsNCn0NCg0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsNCiAgICByZXNvdXJjZTogJGJsYW5rOw0KICAgIGN1cnNvcjogbm9uZTsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KICAgIA0KLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uLm5vZGUtZXhwYW5kZWQgew0KICAgIHJlc291cmNlOiAkY29sbGFwc2VkOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCiAgICANCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbi5ub2RlLWNvbGxhcHNlZCB7DQogICAgcmVzb3VyY2U6ICRleHBhbmRlZDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC5pdGVtcmVuZGVyZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVldmlld25vZGUgew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJQ0KfQ0KDQoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY2hpbGQtY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCn0"},{ name : "haxeui-core/styles/shared/check-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/sidebars.css", data : "LnNpZGViYXItbW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsLWJhY2tncm91bmQtY29sb3I7DQogICAgb3BhY2l0eTogMC42MDsNCn0NCg0KLnNpZGViYXIgew0KICAgIG1hcmdpbjogNTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KfQ0KICAgIA0KLnNpZGViYXI6bGVmdCB7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0IHsNCiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQouc2lkZWJhcjp0b3Agew0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnNpZGViYXI6Ym90dG9tIHsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCg0KLnNpZGViYXI6bGVmdCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnJpZ2h0ICNjbG9zZVNpZGVCYXIgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfY2lyY2xlZC5wbmcgIjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5zaWRlYmFyOnRvcCAjY2xvc2VTaWRlQmFyIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouc2lkZWJhcjpib3R0b20gI2Nsb3NlU2lkZUJhciB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X2NpcmNsZWQucG5nICI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi8qIEFOSU1BVElPTlMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLw0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5zaWRlQmFyTW9kaWZ5Q29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyTW9kaWZ5Q29udGVudCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLnNpZGVCYXJSZXN0b3JlQ29udGVudCB7DQogICAgYW5pbWF0aW9uOiBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCiAgICANCkBrZXlmcmFtZXMgc2lkZUJhck1vZGlmeUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KQGtleWZyYW1lcyBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0KICAgIA0KLnNob3dTaWRlQmFyTGVmdCB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckxlZnQgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJMZWZ0IHsNCiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyTGVmdCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJMZWZ0IHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCg0KLnNob3dTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmhpZGVTaWRlQmFyUmlnaHQgew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJSaWdodCB7DQogICAgMCUgew0KICAgIH0NCiAgICAxMDAlIHsNCiAgICB9DQp9DQogICAgDQouc2hvd1NpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDE7DQp9DQouaGlkZVNpZGVCYXJUb3Agew0KICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJUb3AgMC4zcyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQogICAgDQpAa2V5ZnJhbWVzIHNob3dTaWRlQmFyVG9wIHsNCiAgICAwJSB7DQogICAgfQ0KICAgIDEwMCUgew0KICAgIH0NCn0NCiAgICANCi5zaG93U2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMTsNCn0NCi5oaWRlU2lkZUJhckJvdHRvbSB7DQogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsNCn0NCiAgICANCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJCb3R0b20gew0KICAgIDAlIHsNCiAgICB9DQogICAgMTAwJSB7DQogICAgfQ0KfQ0K"},{ name : "haxeui-core/styles/shared/close-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/error-large.png", data : ""},{ name : "haxeui-core/styles/shared/gripper-horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAECAIAAAA4WjmaAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWN8K6PCgBswMTAwTEqOnpQcjZXBhEcrAwMDI37DARkxCkFtOZfXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/right-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAM0lEQVQImWP8////O1lVBgYGBgYGJgYGBqHHtxEcOJ/x////DDDABGe9k1VlgrOgMnDTADWiDmfiE8U7AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVUJBUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51YmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJG1lbnUtc2hhZG93Ow0KfQ0KDQoubWVudWJhci1idXR0b24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGNvbG9yOiAkaG92ZXItdGV4dC1jb2xvcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbS1zaXplOiAwcHg7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW46ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkZG93bi10ZXh0LWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW4tYWN0aXZlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW4tYWN0aXZlOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRkb3duLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbi1hY3RpdmU6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkZG93bi10ZXh0LWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNRU5VDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm1lbnUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgZmlsdGVyOiAkbWVudS1zaGFkb3c7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMjAwcHg7DQp9DQoNCi5tZW51LmV4cGFuZGVkIHsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLXRvcC1zaXplOiAwcHg7DQp9DQoNCi5tZW51LWZpbGxlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgaGVpZ2h0OiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1FTlVJVEVNUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51aXRlbSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWw6ZGlzYWJsZWQsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQoubWVudWl0ZW0tc2hvcnRjdXQtbGFiZWwgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5tZW51aXRlbS1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW06aG92ZXIsIC5tZW51aXRlbTpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQoubWVudWl0ZW0gLmxhYmVsOmhvdmVyLCAubWVudWl0ZW0gLmxhYmVsOnNlbGVjdGVkIHsNCiAgICBjb2xvcjogJGhvdmVyLXRleHQtY29sb3I7DQp9DQoNCi5tZW51aXRlbS1leHBhbmRhYmxlIHsNCiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLm1lbnVzZXBhcmF0b3Igew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGhvcml6b250YWwtYWxpZ246ICJjZW50ZXIiOw0KfQ0K"},{ name : "haxeui-core/styles/shared/expanded-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbciQpDPznFHsEJCEkjkNBEbE32ONvQj3G3W47POv52QgXXUjFQ0qUgibs//w9wl94OBKHpOa55BzxpJIKVygej6eummJa9fkRL+WhPdwdMBsFUo5Pz+f4q53igyWq0PSNIW9nx/bYUdJp358MnY5kImIo/TRUTkPCRwedBuqxrJiL29slbPsh+7USP94wq3HFxA7x/J0M0esKP8K8C0lEzZIOADJfDlKXUtGNcKAW6CwZdZJrSQjIqzjFN6jCMyu3Rh+0P5Ei+WgPaHgMZr7ly3bS18EPK8RvPEu7PT+0l3q7eAjyivHoHsbYj9XVlBHSfC7qWsrSMHBDyGVNyyiGV6HbKgXFA7K3gfIeW9xQGhVi0DIoUadKg/YlGzVATLyzQTI3ltXmYly4SQzgKc1Cg02KdHFw1kCvoJVvLLT8luWukcNxJ4xkgjE66Oc/Uz40NMZMeaLod6yAi+emAIzJ3KwxCoTQuPJIV4Cv8vxMXgUM6gqzY4E1boeJTenMrZlHsogWDFTIY6+R9dMAQgTfCjDI/UQxkyhlisZsRIijg58KQ45NwxsoIFXuQMnYGhnkOE/fmGO0xrLy0YwzC0QotpGBmiIVXCUcbMgfS44cqiqaVDWrqWvRmiWnrDlny/PwqyaWTC2bmVux6uLJ1bObe/DitXARHI5acrHipZRa4bTCcsXsigG1brzJljbd8mabb2WrDenTUtOWmzUPrbTauUvHOdFzt+699LrTjlTa06573m33vex1INWGjDR05GHDRxn1Zo3CQeu78nXW6GKNF1NzoN2sYarZZYLmcaKTMzDGicC4TQaQ0Dw5i04pcZjUTc5iYewKZaDUSU6nyRgYTDuxDrq5+8XcA28hpW/xxhdzYVL3J5gLk7oPmHvP2wvW+vy3aVHCYmhuwxnUKNh+GLB7Za/zT+3LMvzuhB9DP4b+x4ZGpWOXjIpbBf5BjvZESfGb17p3MnzUsaTkZSGz7LZNjbfdfNgLSOFzzIBWf0FLcRnDRea9DC87zrUsJPVzJF9E9AIZ3chKjLqCMGW4lAdJQ1qfqo4ZnfxJkL8W7GeJC0Ff6rwZ7PzWf/gmkFuG3wH0GbDwTSC3DP8B0I+hH0N/0pDhLlLCvwJpjAM7CC1lAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo3YzhmNGQ2ZC05Mjk0LTQ2ZWQtYmRhOS1hNDA1MDVlZjNmOTAiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTFhMGRlODctY2RlYi00YmMxLWIwNGQtZmY4ZmY4NmZmN2RjIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZDNjOTZmYzktYWZlMy00YTJjLWIwNzgtNmUwM2QxZmQ1ZWEzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODI0MDQ3ODc2NjUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMTE5ZmRkMC04ODgwLTQ0NDQtYTg4MC02ODRlNTg4MGEzM2YiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjY6NDQiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+QhhreAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwaLCrn6QIAAACQSURBVDjLY2AYBQMPGJE5cROOK/37///ofwYGCRzqX//7999mebH1LZgAE7LsogLLewwMDO4MDAwfsWj+/P8/gyeyZgwDGBgYGJYUWl1iZGAMZGBg+Ikk/JuBgSF0WZHVWXT1TNjcuaTQcj8DA0MCAwPDPwYGhv8MDAypSwutdpIcQDH9x4pj+o8VjyYVGgMAhMInzjvMAn0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-down-arrows-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94OmhvdmVyIHsNCn0NCg0KLm9wdGlvbmJveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgd2lkdGg6IDE4cHg7DQogICAgaGVpZ2h0OiAxOHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyLXJhZGl1czogMThweDsNCiAgICBpY29uOiBub25lOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsNCiAgICBpY29uOiAkb3B0aW9uLXNlbGVjdGVkOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0KDQoub3B0aW9uYm94LWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLm9wdGlvbmJveC1pY29uIHsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLm9wdGlvbmJveC1pY29uOmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/gripper-vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAIAAAAcmWhZAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAH0lEQVQImWN8K6PCAANMDAwMk5KjJyVHQzlwwEg7ZQCDgwyl+MMKdgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/info-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABUElEQVQ4jaWSu05CQRRF15m5FBZgYWHjKyQan4U91laKpbGgNT7iB/gfvloJsZToD1j4BWqCMSTKD1BAYbwXzrG4YhQuinF3M5m9Zs0D/hlJmpw4bc4HannEzQBg+tQ2Kdf20pUfAdmz+rBq6kSMzQS4GVwErXCnejDS6AFkz+rD1k7dAou/ON/7KMx1IK4zr5o66S6PZxxjafcdYCy1g9TRN4OJ0+a8Vx66tc/XhgAoXL92e5gaC7W9dCUA8GobID0Xenjz1vcg3lkeqDgAETedtGo161nN+kSCatwJANSwpPdcHu2Uo14FweDjEgWt9nPtF5G442IDuYSYOGBUHeV4849MHTdLAluD9a34vJspfBoABK1wB+F+gPadb0X7ncEnoHow0vBRmMMokXwcBSv6VriS+JW/ZvKoOSdi607cLICqVgi4etnOPA5g+Le8A2uUcuHpLgzCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/option-blue.png", data : ""},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCn0NCg0KLmNhbGVuZGFyIC5idXR0b24gew0KICAgIHBhZGRpbmc6IDhweDsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1vZmYtZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvci1saWdodGVyOw0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheTpob3ZlciB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXktc2VsZWN0ZWQgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBDQUxFTkRBUlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXItdmlldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouY2FsZW5kYXItdmlldyAuY2FsZW5kYXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5jYWxlbmRhci12aWV3IC5oYm94IHsNCglzcGFjaW5nOiAwOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjcHJldi1tb250aCB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI25leHQtbW9udGggew0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjY3VycmVudC1tb250aCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciB7DQogICAgdGV4dC1hbGlnbjogcmlnaHQ7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCglib3JkZXI6IG5vbmU7DQoJcGFkZGluZy10b3A6IDFweDsNCgliYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciAuYnV0dG9uIHsNCgliYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KCWJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui_rtti", data : "YnkzMzpoYXhlLnVpLmNvcmUuaW50ZXJhY3RpdmVjb21wb25lbnRveTEwOnByb3BlcnRpZXNieTE2OmFsbG93aW50ZXJhY3Rpb25veTEyOnByb3BlcnR5VHlwZXk0OmJvb2x5MTI6cHJvcGVydHlOYW1lUjJnaGd5MzE6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGNvbnRhaW5lcm9SMWJ5NTp2YWx1ZW9SM3k3OmR5bmFtaWNSNVI3Z3kxNTp0b29sdGlwcmVuZGVyZXJvUjN5OTpjb21wb25lbnRSNVI5Z3k3OnRvb2x0aXBvUjNSOFI1UjExZ3k0OnRleHRvUjN5NjpzdHJpbmdSNVIxMmd5ODpkaXNhYmxlZG9SM1I0UjVSMTRnaGd5Mjg6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGJvdW5kc29SMWJ5NTp3aWR0aG9SM3k1OmZsb2F0UjVSMTZneTEyOnBlcmNlbnR3aWR0aG9SM1IxN1I1UjE4Z3kxMzpwZXJjZW50aGVpZ2h0b1IzUjE3UjVSMTlneTY6aGVpZ2h0b1IzUjE3UjVSMjBnaGd5MjI6aGF4ZS51aS5jb250YWluZXJzLmJveG9SMWJ5NDppY29ub1IzUjEzUjVSMjJnaGd5MjQ6aGF4ZS51aS5jb21wb25lbnRzLmxhYmVsb1IxYlI3b1IzUjEzUjVSN2dSMTJvUjNSMTNSNVIxMmd5ODpodG1sdGV4dG9SM1IxM1I1UjI0Z2hneTI0OmhheGUudWkuY29tcG9uZW50cy5pbWFnZW9SMWJSN29SM3k3OnZhcmlhbnRSNVI3Z3k5OnNjYWxlbW9kZW9SM1IyN1I1UjI3Z3k4OnJlc291cmNlb1IzUjI2UjVSMjhneTEzOm9yaWdpbmFsd2lkdGhvUjNSMTdSNVIyOWd5MTQ6b3JpZ2luYWxoZWlnaHRvUjNSMTdSNVIzMGd5MTg6aW1hZ2V2ZXJ0aWNhbGFsaWdub1IzeTEzOnZlcnRpY2FsYWxpZ25SNVIzMWd5MjA6aW1hZ2Vob3Jpem9udGFsYWxpZ25vUjN5MTU6aG9yaXpvbnRhbGFsaWduUjVSMzNnaGd5MjU6aGF4ZS51aS5jb21wb25lbnRzLmJ1dHRvbm9SMWJSN29SM1IxM1I1UjdneTY6dG9nZ2xlb1IzUjRSNVIzNmdSMTJvUjNSMTNSNVIxMmd5ODpzZWxlY3RlZG9SM1I0UjVSMzdneTE0OnJlcGVhdGludGVydmFsb1IzeTM6aW50UjVSMzhneTg6cmVwZWF0ZXJvUjNSNFI1UjQwZ3kxMzpyZW1haW5wcmVzc2Vkb1IzUjRSNVI0MWdSMjJvUjNSMjZSNVIyMmd5MTQ6ZWFzZWlucmVwZWF0ZXJvUjNSNFI1UjQyZ2hnaA"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA2cHg7DQogICAgY3Vyc29yOiByb3ctcmVzaXplOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXIgLmltYWdlIHsNCiAgICByZXNvdXJjZTogJGdyaXBwZXItaG9yaXpvbnRhbDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDZweDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgY3Vyc29yOiBjb2wtcmVzaXplOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KfQ0KDQouaG9yaXpvbnRhbC1zcGxpdHRlci1ncmlwcGVyOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duOw0KfQ0KDQouaG9yaXpvbnRhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7DQogICAgcmVzb3VyY2U6ICRncmlwcGVyLXZlcnRpY2FsOw0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0K"},{ name : "haxeui-core/styles/shared/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAADElEQVQImWN4K6MCAAMnAS7qrFRjAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-arrows-blue.png", data : ""},{ name : "haxeui-core/styles/shared/up-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIGN1cnNvcjogcG9pbnRlcjsgIA0KfQ0KDQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5vZGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWFsdDsNCn0NCg0KLmxpc3R2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0KDQoubGlzdHZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIExJU1QgVklFVyAtIExFRlQgTUVOVSBBTFRFUk5BVEUNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBtb2RlOiBtb2JpbGU7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmMsIC5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCAuaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICB3aWR0aDogOXB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7DQogICAgYmFja2dyb3VuZC1vcGFjaXR5OiAuMzsNCiAgICB3aWR0aDogNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgew0KfQ0KICAgICAgICANCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICANCiAgICBwYWRkaW5nLXRvcDogOHB4Ow0KICAgIHBhZGRpbmctYm90dG9tOiA4cHg7DQp9DQoNCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgDQogICAgcGFkZGluZy10b3A6IDhweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogOHB4Ow0KfQ0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIA0KICAgIHBhZGRpbmctdG9wOiA4cHg7DQogICAgcGFkZGluZy1ib3R0b206IDhweDsNCn0NCg0KLmxpc3R2aWV3LmxlZnQtbWVudSAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KDQoubGlzdHZpZXcubGVmdC1tZW51IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOw0KfQ0KICAgIA0KLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIHsNCiAgICBvcGFjaXR5OiAuNTsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGZpbHRlcjogJGRpYWxvZy1zaGFkb3c7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmRpYWxvZy1jb250YWluZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5kaWFsb2ctdGl0bGUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBib3JkZXI6IG5vbmU7DQp9DQoNCi5kaWFsb2ctdGl0bGUtbGFiZWwgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY29sb3I6ICRkaWFsb2ctdGl0bGUtY29sb3I7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KfQ0KDQouZGlhbG9nLWNvbnRlbnQgew0KICAgIHBhZGRpbmc6IDEwcHg7DQp9DQoNCi5kaWFsb2cubm8tcGFkZGluZyAuZGlhbG9nLWNvbnRlbnQgew0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmRpYWxvZy1mb290ZXItY29udGFpbmVyIHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5kaWFsb2ctZm9vdGVyIHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5kaWFsb2ctY2xvc2UtYnV0dG9uIHsNCiAgICByZXNvdXJjZTogJGNsb3NlOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCiAgICBjdXJzb3I6ICJwb2ludGVyIjsNCiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQouZGlhbG9nLWNsb3NlLWJ1dHRvbjpob3ZlciB7DQogICAgcmVzb3VyY2U6ICRjbG9zZS1ob3ZlcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5pbmZvIHsNCiAgICByZXNvdXJjZTogJGluZm8tbGFyZ2U7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5xdWVzdGlvbiB7DQogICAgcmVzb3VyY2U6ICRxdWVzdGlvbi1sYXJnZTsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLnllc25vIHsNCiAgICByZXNvdXJjZTogJHF1ZXN0aW9uLWxhcmdlOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2Uud2FybmluZyB7DQogICAgcmVzb3VyY2U6ICR3YXJuaW5nLWxhcmdlOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UuZXJyb3Igew0KICAgIHJlc291cmNlOiAkZXJyb3ItbGFyZ2U7DQp9DQoNCi5tZXNzYWdlYm94IHsNCiAgICBpbml0aWFsLXdpZHRoOiAzMDBweDsNCn0"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLnNjcm9sbHZpZXcgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbHZpZXc6bW9iaWxlIHsNCiAgICBtb2RlOiBtb2JpbGU7DQp9DQo"},{ name : "haxeui-core/styles/shared/warning-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACB0lEQVRYhe2WP2gUQRTGf+/udibFCbmL8exUjGiiFqlMZdBG8E9rYaWNggqipQRRRBCEJKWljY1gJ2n1LhCbNHIggorWIijkEHYvuWeT083u7GZ3L2JzX7W89+Z7H2/mm1kYYoj/DCm6UF9QpmHmUJRvwSO5yEYRnkpRAeyxt4D7CLDXroG/UISm0AR0hTrdkY+g9c3QT3rmkJxa+56Xq1REAF37MNQcYJRS8KAIVe4JaMtMofKO+PZtgE7LbNDOw5d/AirzjuYAZZDFvHS5BOgbewE4k1JyWpft+TycmbdAV/Ho2DbCYYD3X6o8fjYBwN0rnziyv9Nn/EzHPypn8bPwZp/AL3uz3xzAVHp/UsbTkFIOUrXXs9JmEqAr1FGZC8fCTb2QmE0R9/T1rt07JsBhuy1NjdeLrshsy20FaMtMAVej8XBThwCAa9o0xwcWkGQ7U1HndwiZbJkqIM12XtoZ+IttbZkoQFfxgCdJ+fDYvXKiAFAWdQmblE68B7Rlb6PMJzPngHBHTrpfS6cAx2sXr1F4264hAjPHfiDpV1ria+n+H3DYLooPX6s8fbkPgNFql8kDnbTyvi1vRBOxM6BNM4nDdlE0xnzGawHjtYDGWKZb12nL2OC0aV8B57IwFsCSzPpbuB0u0Jl/1BzQE9FI/AyU5DIql5y5wbAOPN9hziGGGBy/AQa5lYKywFiuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-desc-blue.png", data : ""},{ name : "haxeui-core/styles/default/last.css", data : "LmNvbXBvbmVudDphY3RpdmUgew0KICAgIF9fYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLmNvbXBvbmVudDphY3RpdmF0YWJsZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0K"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNsaWRlciB7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAxcHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlci53aXRoLWNlbnRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCg0KLmhvcml6b250YWwtc2xpZGVyIC5taW5vci10aWNrIHsNCiAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHdpZHRoOiAxcHg7DQogICAgaGVpZ2h0OiA0cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmhvcml6b250YWwtc2xpZGVyIC5tYWpvci10aWNrIHsNCiAgICBtYXJnaW4tdG9wOiAxMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHdpZHRoOiAxcHg7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmhvcml6b250YWwtc2xpZGVyIC5idXR0b24gew0KICAgIHdpZHRoOiAxMXB4Ow0KICAgIGhlaWdodDogMjBweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQogICAgDQoudmVydGljYWwtc2xpZGVyIHsNCiAgICBwYWRkaW5nLXRvcDogNXB4Ow0KICAgIHBhZGRpbmctYm90dG9tOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGluaXRpYWwtaGVpZ2h0OiAxNTBweDsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlci53aXRoLWNlbnRlciAucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCg0KLnZlcnRpY2FsLXNsaWRlciAubWlub3ItdGljayB7DQogICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDRweDsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLm1ham9yLXRpY2sgew0KICAgIG1hcmdpbi1sZWZ0OiAxMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHdpZHRoOiA4cHg7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoudmVydGljYWwtc2xpZGVyIC5idXR0b24gew0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMTFweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0K"},{ name : "haxeui-core/styles/shared/down-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/right-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/warning-large.png", data : ""},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgc3BhY2luZzogMDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiAwcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQtc3F1YXJlOw0KICAgIGljb24tcG9zaXRpb246IGxlZnQ7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIHBhZGRpbmc6IDZweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouYWNjb3JkaW9uLWJ1dHRvbjpkb3duIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bi1zcXVhcmU7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgb3BhY2l0eTogMTsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5hY2NvcmRpb24tcGFnZTpleHBhbmRlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlRXhwYW5kIDAuM3MgZWFzZSAwcyAxOw0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6Y29sbGFwc2VkIHsNCiAgICBhbmltYXRpb246IGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlRXhwYW5kIHsNCiAgICAwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgICAgIGhlaWdodDogMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KfQ0KDQpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAxOw0KICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCn0NCg0KLmFjY29yZGlvbi1wYWdlIC5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZy10b3A6IDA7DQogICAgcGFkZGluZy1yaWdodDogMDsNCiAgICBwYWRkaW5nLWxlZnQ6IDA7DQogICAgcGFkZGluZy1ib3R0b206IDA7DQp9DQo"},{ name : "haxeui-core/locale/it/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2FsdmENCmRpYWxvZy55ZXM9U8OsDQpkaWFsb2cubm89Tm8NCmRpYWxvZy5jbG9zZT1DaGl1ZGkNCmRpYWxvZy5vaz1PSw0KZGlhbG9nLmNhbmNlbD1Bbm51bGxhDQpkaWFsb2cuYXBwbHk9QXBwbGljYQ0K"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA2cHg7DQogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhlYWRlciAuY29sdW1uLmxhc3Qgew0KICAgIGJvcmRlci1yaWdodC13aWR0aDogMDsNCn0NCg0KLyoNCi5oZWFkZXIuc2Nyb2xsaW5nIC5jb2x1bW4ubGFzdCB7DQogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7DQp9DQoqLw0KDQouY29sdW1uLnNvcnRhYmxlIHsNCiAgICBpY29uOiAkYXJyb3ctdXAtZG93bjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi5jb2x1bW4uc29ydC1hc2Mgew0KICAgIGljb246ICRzb3J0LWFzYzsNCn0NCg0KLmNvbHVtbi5zb3J0LWRlc2Mgew0KICAgIGljb246ICRzb3J0LWRlc2M7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkxFVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJsZXZpZXcgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1hbHQ7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciAuaXRlbXJlbmRlcmVyIHsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgcGFkZGluZzogNnB4Ow0KfQ0KDQoudGFibGV2aWV3IC5ldmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7DQp9DQoNCi50YWJsZXZpZXcgLm9kZDpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQp9DQoNCi50YWJsZXZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7DQp9DQoNCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7DQogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOw0KfQ0K"},{ name : "haxeui-core/styles/shared/up-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEAXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja5VZZdsUmDP1nFV0CkhCC5TCe0x10+b1g++VNSdMmfzXHFhZC0xWDG3/9Od0feMh8ckEtxRyjxxNyyFzQSf54yv6SD/t7PHZSeuS7/bMeBktA5fhN8ZS/+HRTcJCCnt4pSu0cqI8D+TTA6UnRaUiWR4xOPxXlU5HwMUCngnKE5WNOdh9CHQc95x9pSCs0fOrF1VP46T8YstcVdoR5CInHlyUcDsh62UnZnYJhWoKgRQJaEZErVCTkXZ78nVfuBZWr94RK5vegSDwkHBiPyYw3+pZP+j75bqf4zrK0s8eP/JivjD0meb1z9uTmHEd0JUSkNJ5BXSHuHgQrUi57WkQzvIq+7ZbRkkP1NkDeffMVrVEmBiyTAnUqNGls2qjBxcCDDZS5AZXFS2KcuYl3QGlhFGiySZYuCcg1wCvg8s0X2nbzNtcowXAnSDJBGR3w8++0TxXNuUqeaCUz884V/OJVBHBjIbe+kAIgNK860p3gqz0/C1cBgrrTnBBg8fVQUZXO2lp1JBtogaCCHmuNrJ8KkCLYVjiD2g/kI4lSJG/MRoQ8JuBToChh0XAFBKTKHV5yEIkAJ/GyjTlGW5aVDzb2LAChEsUATZYCrAI2NtSPhYQaKioaVDWqadKsJUoMUWOMFtfmV0wsmFo0s2TZSpIUkqaYLCWXciqZs2Bz1Byz5ZRzLgVGCzQXzC4QKKVylRqq1litpppraSifFpq22Kwl13Irnbt07BM9duup514GDZTSCENHHDbSyKNMlNqUGabOOG2mmWe5oUbugPWlfR81ulDjjdQStBtqmGp2qaC1nejCDIhxICBuCwEUNC/MfKIQ2C3oFmaourWTMbzUBU6nhRgQDINYJ92w+0DuATcXwo9w4ws5t6D7DeTcgu4T5F5xe4NaX6dN8+I2QmsZrqR6wfKLSkFJZ4g4g1c36Dql/oG6UGqPiEsNTqEingSE6piK1VGtDwQaP1Pl/Ldtfk2Xol/xyf3Il9FrM8DaQ8JJ6wsK2+KsnZbR3Lcfm8FJG6EAcJPw+NxTsI0RwzXH3Sbda/FleFgKxcDsJd7ckBeFF3WfDXzQ7G0tMLh/eP8+Uvd5ClgOb6TXMbrclOfkd6Vhdd9R98y4KCp6htH8xBG87jUacqKxjmIrum46yn5gqW2J74X2lGQ6/EMCcWwADniOVRnc1vjA2hxsEIpVFL4IZtPDcaxrN60sL/+tYy/UvQxsX6yjoAtugHyYbn4Pl3U5LQoI0npx8t7+3PpVq11KphAZ25H/NI6vqPtSYLslI6+7U1/XvA93kLcclJH3EPECtXnk87/58UHdTxX8rxXhNtYBgfsbkBUChqlTc0oAAAGDaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHM4g4ZKhOLYiKOEoVi2ChtBVadTC59AuaGJIUF0fBteDgx2LVwcVZVwdXQRD8AHF0clJ0kRL/lxRaxHhw3I939x537wChUWWa1TUOaLptphNxKZdfkUKvENCHMEREZWYZycxCFr7j6x4Bvt7FeJb/uT9Hv1qwGBCQiGeZYdrE68TTm7bBeZ9YZGVZJT4njpp0QeJHrisev3EuuSzwTNHMpueIRWKp1MFKB7OyqRFPEUdUTad8IeexynmLs1atsdY9+QvDBX05w3WaI0hgEUmkIEFBDRVUYSNGq06KhTTtx338w64/RS6FXBUwcsxjAxpk1w/+B7+7tYqTE15SOA50vzjOxygQ2gWadcf5Pnac5gkQfAau9LZ/owHMfJJeb2uRI2BgG7i4bmvKHnC5Aww9GbIpu1KQplAsAu9n9E15YPAW6F31emvt4/QByFJXSzfAwSEwVqLsNZ9393T29u+ZVn8/bV1ypeJpoNQAAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjIyYzQ2ODgwLTQzNDktNDFjMS05NWJjLWZkZGNmYTk0OWIxMyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDowNmYyYWY4Ni1jNjA4LTRlZTItOTUwMy1lM2QwOWY3MWRhNjgiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxMDAxNDQzZC1kM2RkLTQ2YmQtYjYzMi0xMWE5ODk4MTYyOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDYxMjI3NzAwMjQxNyIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2YyZDllLWYyYzUtNDY2My04YzEyLTRkNjcyMGZhZDM0MSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMVQyMTo0NDozNyIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7T4nLNAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gILFCwkvxUCjQAAACNJREFUCNdjYEACoV1H/iPzGbFJrC6zYYRLouuAKWDEJgEDACRXDUjpoGrXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMAg9Pj2O1lVCJsJLgQnoaJwDpzN+P//fwYMAADCtw5xBtAKnQAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/dialog.properties", data : "ZGlhbG9nLnNhdmU9U3BlaWNoZXJuDQpkaWFsb2cueWVzPUphDQpkaWFsb2cubm89TmVpbg0KZGlhbG9nLmNsb3NlPVNjaGxpZXNzZW4NCmRpYWxvZy5vaz1PSw0KZGlhbG9nLmNhbmNlbD1BYmJyZWNoZW4NCmRpYWxvZy5hcHBseT1BbndlbmRlbg0K"},{ name : "haxeui-core/styles/default/cards.css", data : "LmNhcmQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCwgNDUsICMwMDAwMDAsIDAuMSwgNSwgMSwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBwYWRkaW5nOiAxNXB4Ow0KfQ0KDQouY2FyZC10aXRsZS1sYWJlbCB7DQogICAgZm9udC1zaXplOiAxNnB4Ow0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgZm9udC1ib2xkOiB0cnVlOw0KfQ0KDQouY2FyZC10aXRsZS1jb250YWluZXIgew0KICAgIHBhZGRpbmctYm90dG9tOiA1cHg7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi5jYXJkLXRpdGxlLWxpbmUgew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KfQ0K"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgew0KICAgIDAlIHsNCiAgICAgICAgc3RhcnQ6IDA7DQogICAgICAgIGVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHN0YXJ0OiA3NTsNCiAgICAgICAgZW5kOiAxMDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQp9DQoNCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsNCiAgICBhbmltYXRpb246IGluZGV0ZXJtaW5hdGUgMXMgZWFzZSAwcyBpbmZpbml0ZTsNCn0NCg0KLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIHZlcnRpY2FsOw0KICAgIGhlaWdodDogMTAwJTsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgaG9yaXpvbnRhbDsNCiAgICBpbml0aWFsLXdpZHRoOiA4cHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDE1MHB4Ow0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsNCiAgICBiYWNrZ3JvdW5kOiAkYWNjZW50LWdyYWRpZW50LXN0YXJ0ICRhY2NlbnQtZ3JhZGllbnQtZW5kIGhvcml6b250YWw7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCBob3Jpem9udGFsOw0KfQ0KDQoudmVydGljYWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDZweCA4cHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCiAgICBpbml0aWFsLXdpZHRoOiAxNTBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgc3BhY2luZzogNXB4Ow0KICAgIGljb24tcG9zaXRpb246IHJpZ2h0Ow0KICAgIGNvbnRlbnQtdHlwZTogYXV0bzsNCn0NCg0KLnRleHRmaWVsZDphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50ZXh0ZmllbGQ6ZW1wdHkgew0KICAgIGNvbG9yOiAkbGlnaHRlci10ZXh0LWNvbG9yOw0KfQ0KDQoudGV4dGZpZWxkOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBURVhUIEFSRUENCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGV4dGFyZWEgew0KICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAxMDBweDsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQp9DQoNCi50ZXh0YXJlYTphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi50ZXh0YXJlYTplbXB0eSB7DQogICAgY29sb3I6ICRsaWdodGVyLXRleHQtY29sb3I7DQp9DQoNCi50ZXh0YXJlYTpkaXNhYmxlZCB7DQogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOw0KICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsNCn0"},{ name : "haxeui-core/styles/shared/option-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVU5BVFRBQ0hFRCBTVEVQUEVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnN0ZXBwZXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5zdGVwcGVyLWJ1dHRvbiB7DQogICAgcGFkZGluZzogM3B4Ow0KICAgIHBhZGRpbmctdG9wOiA0cHg7DQogICAgcGFkZGluZy1ib3R0b206IDRweDsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc3RlcHBlci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctdXA7DQp9DQoNCi5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctZG93bjsNCn0NCg0KLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGljb246ICRhcnJvdy11cDsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogJGFycm93LWRvd247DQp9DQoNCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBoZWlnaHQ6IDUwJTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTlVNQkVSIFNURVBQRVIgLSBTVEFOREFSRCBMQVlPVVQNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogODBweDsNCiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYyB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsNCiAgICBpY29uOiAkYXJyb3ctbGVmdDsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOw0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmludmFsaWQtdmFsdWUgew0KICAgIGNvbG9yOiAkZXJyb3ItdGV4dC1jb2xvcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3ItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm51bWJlci1zdGVwcGVyOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTlVNQkVSIFNURVBQRVIgLSBDTEFTU0lDIExBWU9VVA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgew0KICAgIGxheW91dDogY2xhc3NpYzsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1kZWluYyB7DQogICAgaWNvbjogJGFycm93LWRvd247DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctdXA7DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogJGFycm93LWRvd247DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGljb246ICRhcnJvdy11cDsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBtYXJnaW4tdG9wOiAwcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE9QVElPTiBTVEVQUEVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbi1zdGVwcGVyIHsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGluaXRpYWwtd2lkdGg6IDEwMHB4Ow0KICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICBwYWRkaW5nOiA2cHg7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYyB7DQogICAgaWNvbjogJGFycm93LWxlZnQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsNCiAgICBpY29uOiAkYXJyb3ctbGVmdDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOw0KICAgIGljb246ICRhcnJvdy1yaWdodDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyLmludmFsaWQtdmFsdWUgew0KICAgIGNvbG9yOiByZWQ7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3I7DQp9DQoNCi5vcHRpb24tc3RlcHBlcjphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQo"},{ name : "haxeui-core/styles/shared/down-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEK3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VdZkuQoDP3nFHMEJCEQx8EsEX2DOf482U53ZVZld23z0RNjwoCFEEJPCDnMv3+s8BcepppC0mK55hzxpJoqN3QsHk/ba4ppr4+nnC3d08M1wCAJWjk+LZ/8NzpdAo6moacvBFk/B7b7gZpO+fYg6FxIXCNGZ5yC6ilI+BigU0A7thVztfJyC9s82nP+YQbzraHablQ9mR++U4H1hmIdYZ5CElGzpEMB8ZeDtL3T9mHoLRV9kbLXN5vAIG/ZKb7QKrxC5dajJ/QHUCQf9ADCvTHz1b5JJ33b+GE38YuVpV8r39HTuhzlzsj+rjUsrDWP3bWUYdJ8buqyjnfAuEGU7NMySsGr6Je9VBQL8N4OyEfscUPpVIlh90WJBjVaNPe2U4eKiScXtMydZaeZFK7cJQaglbzQ4gLEhhgw7IBXQOVLF9rXrftynQwLDwInE4TRAT9/T3kqaC13eaJol62gF/uhgBqOnNfgAiC0bn6ku4Fv5fGh3VMTuNzMhg22uB0iNqXTt9yPZAdawKhoj7NGZZwCYCKsrVCGBAjETKKUKRbmQgQ7GvBpEGQ4NLwBAlLlAS05iWSAY+xrY06hnZeVDzJiFoBQyThI5kcKWHlgg/+UZPChpqJJVbMWNa3asuSUNedcsge/VqSkoiWXUqzU0kwsmVq2YhasWqtcBcFRa66lWq21NSzaILlhdgNDaxtvsqVNt7yVzba6tQ736alrz710C732NnjIQJwYeZRho442acKVZpo68yzTZp1twdWWrLR05VWWrbrahRqFA9ZX5f2o0Q013pFyxnKhhqml3ESQhxN1zIAYJwLixRGAQ7NjFo1S4uDQOWaxMk6FMrRUB2eQIwYE0yTWRRd2P5G7wy2k9CXc+IZccOi+A7ng0D1B7jVub6A2/LbpUcKOkB9DN2oUHL+slJR0pYw72LtJ/Zb6TRvey/i/oD9LUKpG02+80hRXkcBRU48redIwkPUclPCa9DnKHycoNrb2rja8l/HjgqqUuLQdNbK/Nyk46ghP/5pGiVN8uvY95QgxMOM+31l0bmm1zAHjZfDXVQqvBhDQXbbQ1pAl86MKj+1NpcDfpFKIX1UpUleeMwg0q3488eH9PB8pi4bfJzWWRMmeCQzPV4J/50PsEqSMuPpwRW+22qC95l1RHb2MXP2nZnwuACGkTPupaniq669URc42kpVGzeZp3sDV4mHP+PFWkOcZ9YFcIjTkH7WSmzmV5pbQ+Ehp28KljTTocXs/uSTQNpfy68nqvyUVSfm+Xvut4uEzO+K2xvT8Qtc2QFjNt4aYcLH07CNIbwb2Uj9kvvBZO9+0gmP7/2X1MOJu5x4Nty1wqj56Nn8RNQ4FCUlZUvnleQvfE9b+c4JkIfUD6OEf4i71AujO6WgAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWY5MjY4YzktNTgwYy00MjQ0LTgyODktYTAwYzk2N2E0YmFjIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRiZDVmMGQ1LWNkMWUtNDViYi1iNmQ5LWE4YzVlNDkyM2U3MSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmVhMTQ5N2M5LTAxMzktNDk4ZS1hZDYwLTk5NTI1NzhlOWIxYyIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjUxMTA2NTgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OWVhYTkyOTYtOTI0NC00ZTU4LThkYmUtZWNhODMxMTJkZDE2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjMxIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjAYwf0AAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJR9yXG2RAAAALUlEQVQI12NgIBcwhnYd+Y9TkoGBgQGbgtVlNoyMMA6ygtVlNowYxuCzAgMAAKYfDUgzMsMOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAADpElEQVRYhe2X32scVRTHP/fOZtMFs7tJC4np1mS7RQjC2oJg7ZMKPvShBBR9MopiqYbaP0CwL0VQ30SyGtsnow9SUGMViw8WBGlebBWjlJgf/ZFNQo2Jm0SSzM6914fJbmayO7OTRJ/0+zRz5n7P97tnzpx7F/7rEDsh3T+4tK+sZKeQIqM0xlJmel3omeLp5B//moHcQOmQEbLPQC/wYMCyH4VhWMbU0Pip9MQ/YiB7fqUdx5zFcBJoiui3jGFQSs5NvNJyd8cGut5fekRq8SnQEVF4K+bRPDV1uuW7oAUy6EH2veVnpBZXdiEOsA/JN9nC8tNBC+pWIDewdEwL8S3QvAtxL2w0T9SrRI2B7PmVdmzzE4L2sIwHkpIDLQJbGWZWYHZFY8JNzFkO+fEzLb97g7GaZY45GybelZK8dqyJnr2WL357SfPWSJmf76ogaoeK8Tpwxhv0VSA3UDqkhfyVgG5PxgUfnthDW6J+7646hucvrTH3V2AtbIXqud2fnqwEfE2okc8FiQMcz1lV8TtLmv7L67z41RpjCxqARExwPFdbVA/iUlh93oD/KxD0hrFzrZtlv3jDYXReMb6o+XzMqcYzycAPy5Uwfo2qXXe8kg8jfzHmcLXoio3O62q81fNKFlcbtCIczlwotU2/lFrwGbAdmREinDw6r2DeH+vZa/HsA24apeHrSacO0wfRZFsZYAE8r8AIcW8j5lZ0pyVvPx4nEXMrULhmM7GoG7DAGDor11UDwpiGtfMibsGbj8ZJNbvig9fLXLzR8NdXVM3mZcWAxex2DBzdb9F5j0v/ctzh41/KkbnSYabGgO3o6e0Y6E5tdvul3wKHTz0YO6GKlRvfRMkWlq8Dh6NkOdgq6Uq69JGiZtWJ/AZ/mOpveahy45sawjBsRDQDk4sapSXLttmOOAiGvbe+qSFjagiwo+R5Id/E0Ik9fNKbqNkXQmBrR30UaGD8VHoCwwdRMj3c6VKbY3CkI3z6VSCgcOvV9FSgAQApOQfMNUp2eVKhDCyuGb6/E6kJZ2OWeaOOqVpsHMWu0OBA0hwDR7sTsAHWDPqxm/2pka0P6tbu1svJq0AfsB6Wdd2JJo6hr544NDiUdhdKRwXyM3Z+Lpw16CeDxCHkUApwsz81YjnkgXeJ+HVswBaCd5oskw8Th238Mbmv8OdBKay+jf38SN1kgmvaMGyUGtra7bs24EXmQqktvmrtV5bIAFjKTNsJVazs8f9jO/gbuERJ498j87cAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/collapsed-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwocG2BobAAAAHlJREFUOMtjYBi+YP36bcrEqGPCLfP36Pr1W4zJN4CBQZyB6f/B9Zs2eZJrAAMDAwM3w3/GDRs2bI4i1wAGBgYGtv+MDEs2bNpSTq4BeAELEWp+Mf5nSAzw91lGjgFfGRj/hwb4+20nxwUvGf4xegcG+p6laUIaBgAAk1kg6zuyVSkAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/option-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChERUZBVUxUKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zd2l0Y2ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCn0NCg0KLnN3aXRjaC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViOmRpc2FibGVkIHsNCiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDUwJTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbjpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOw0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsNCiAgICBoZWlnaHQ6IDA7DQogICAgd2lkdGg6IDA7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZCB7DQogICAgMCUgew0KICAgICAgICBwb3M6IDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBwb3M6IDEwMDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIH0NCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBTV0lUQ0ggKENJUkNMRSkNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMjBweDsNCiAgICBpbml0aWFsLXdpZHRoOiA0MHB4Ow0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmEgew0KICAgIGhlaWdodDogMTRweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Ow0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsgICAgDQp9DQoNCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsNCiAgICB3aWR0aDogMjBweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgYm9yZGVyLXJhZGl1czogNTBweDsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRDaXJjbGUgew0KICAgIDAlIHsNCiAgICAgICAgcG9zOiAwOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcG9zOiAxMDA7DQogICAgfQ0KfQ0KDQouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxOw0KfQ0KIA0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOw0KfQ0KDQoNCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWRDaXJjbGUgew0KICAgIDAlIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCiAgICB9DQp9DQoNCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOnVuc2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWRDaXJjbGUgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFNXSVRDSCAoUElMTCkNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBib3JkZXItcmFkaXVzOiAyMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7DQogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6ZGlzYWJsZWQgew0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsgDQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7DQogICAgYm9yZGVyLXJhZGl1czogNTBweDsNCiAgICB3aWR0aDogMjBweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsNCiAgICBoZWlnaHQ6IDA7DQogICAgd2lkdGg6IDA7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgew0KICAgIDAlIHsNCiAgICAgICAgcG9zOiAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcG9zOiAxMDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsNCiAgICB9DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkUGlsbCAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQo"},{ name : "haxeui-core/styles/shared/right-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEJXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkiQnDPznFD4CkhASx+FRRPgGPr4Tqrp3ph+zs+v9cBENtIpKRKYEhOOfv2f4Cw8Zx5DUPJecI55UUuGKjsfzqbummHZ9Pulq6bM9RLteMEyCVs6/nq/xNzvdAc6moqcfgLxfL9rnF+Wamf0B6JpIlkeMzriAygUkfL6gC6Cey4q5uH1cQjvO9vr+pMHX0lC1m1WvwQ//k4G9oZhHmA8hiahZ0umArB8HqbuzasdAkoK+iKNWscsTEPKKp/jBq/CoSuHXqtx7D6JIPu0Bhs9k5nv70k76mvywKf4ws/T7zJ/spjfGPpO8fnMOD3Me5+pqyqA0X4u6LWX3MLCBctmfZRTDT9G3XQqKB0Rvh+Qj9thQOhViyDIp0aBKk47ddupwMfHBSAdm7izb5mJcuEsM0CmtQpMNig3oxdIhr8DKd19oz1v2dJ0cEw/CSCaA0Sk//5nyFmjOFfJE0U+eEBbwi1dwwI2l3KoxCoLQvMWRboJv5fFZugoU1E2zY4E1thOiKV2xteJIttASl8Dp2ibIxgUAijC3whkSKBAziVKmaMxGBB4d+lQAOZKGGyQgVR7wkpNIhjjIGMyNb4z2WFY+zdizIIRKFoM0SClolbCxIX4sOWKoqmhS1aymrkVrlpyy5pwtr82vmlgytWxmbsWqiydXz27uwYvXwkWwOWrJxYqXUmrFpBXIFV9XDKi1cZOWmrbcrHkrrXaET09de+7WPfTS6+AhA/vEyMOGjzLqQQdC6UiHHvmww49y1IlQmzLT1JmnTZ9l1rtqFHba0VP5vmp0U423Umug3VXDp2Y3CFrbiS7NoBgnguK2FEBA89IsOqXEYUm3NEPEISuU4aUucQYtxaBgOoh10l27H8p90i2k9J9045tyYUn3J5QLS7o3yj3r9kK1sU6bHiVshVYaLlKjIP20slduh/uMfXUdY+FDrnlIaQ3UYFfcg4ojd5KuIyzcOj9pQfjueHwDHZ6xfw86ADtB+FSajaOMhB1eLM826NEg1gbUIJD1Ym3h+2t5anGQQp4LO7wi7neww2dwHEdWdZ/2morT8coyMvW14LxhcJAu9KDx7Oi+Z60OXy76N1pIl6ohH1qoT9i/Bx0esBGaZdHSQZrlUgW/HBc5rSUomXDjuf/DuHny+/2A/Gn7PwBah39ce8PiBEBpdBvZd10243wg61vKuy6L88ui/EU0hVche2tLHYORJSMf65I73gTuhg5fZ0HBNRLue5+67p5zdNnuoy7bWZkWp+JuFThiOeMHfn9CK2cnPUXZvV3JFrCRpvuM77C+gR02+7gI27oCG1zroy/nkcw0zz2jrJfpjpNfuha+zAgC27W0hG0blH8JFd4s+5ehw1sG37Q2cXKs3PoX/YUPPAIScFcAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZjA2MTJiMDQtMmJkZC00N2E3LTgyOGQtYzkzNWMwOTU5OTZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVhODNkZjU5LTk2NGUtNDI5Zi05ZmEyLTg5ZDNmYWY4ZTc1ZiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExMjg5YWQzLTA2ZTEtNGU4Ni1hMTkyLTQ0ZWVhNjRkZDkzNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0MzQ1NTM4NjkyMjYyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTI2YzU1ZDUtMDYxMi00NDZhLTgzZGEtYjZiNjA5NGI5ZjY5IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTA4VDE5OjM4OjU4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj86b/sAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAggSJjqpzQQ4AAAALklEQVQI12MI7TrynwEJMDEwMDAgCzLBGDBBRqxaYGB1mQ0jEzKHAd1ABgYGBgAWuA/w/oe0hAAAAABJRU5ErkJggg"},{ name : "styles/main.css", data : ""},{ name : "haxeui-core/styles/shared/folder-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADX3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdRlusmDIbfWUWXgCRAYjkYzDndQZffH7DdydzkNHOdt9aMERZYCH0CZ9z+15/d/YGLvXgXolrKKXlcIYfMBQ3z6yqzJh9mfTz4s/Ggd1cHQyWQsh4tHeNPPfkHS1TQil8MWT06tseOHA779s3QMZEMjxiNdhjKhyHh1UGHgbKW5VM2/bqEbV+ynSuxdbtR9TMmusT356CIXouYR5h3IfGoWcJyQMbNTgoahJok82gZ2gG6gu58eIKAPIuT/+KV+07latEL/TcokpbeQfEYzHTJp3qKz4PvZoi/zCz1mvlBX7Zriocgzxj3Zq73fa2uhISQpmNR51JmCwM3hFzmawlFcUe0dZaMYg7ZW4G8+eo3lEqZGFg6BWpUqNM+ZaUKFwPvrJDMlWXqTJQzV2wRcAqjUGeVLA3UWCrwCrR8+UJz3jynq2SYuBFGMsEYLfz8mfLSUO8j5Ym8XbGCXzw2BdwY5EaNUQBC/cyjOAN8lu/X4CogGGeYDQssflsmtkhHbo08kglaMDBCrr1G2g4DCBHmjnCGBAR8IomUyCuzEiGOBj4FhgybhjcgoBi5wUsOIglwjMfceEdpjuXIS40zCyCiJFGgyVLAKuBgQ/5oMORQiRJDjDFFjRZzLElSSDGlpGkcfkVFg0ZNqmqatZhYsGjJ1MxZtpI5Cw7HmFPWbDnnUjBpgeWCtwsGlLLxJlvY4pY23WzLW6lInxpqrKlqNVdzLY2bNJwTLTVt1nIrO+1IpT3scU+77rbnvXSkWpceeuypa7eee7mokVtYfynvU6OTGk9SY6Be1PCq6mmCxnESBzMQ40AgroMAEpoHM28UAruBbjDzmbErIsPLOOA0GsRAMOzEsdPF7h9yD9xcCLe48UnODXSfIOcGuhfkfuX2hFobX5vqxU1CYxuOoHrB9sOA3QpbGR+1t6X76Qv/G3pT9pLTbLZQD6V7NTp5jhTw52vPaWGsodkr2+4DzryxtDAEZ3vDKfcBZ35vaW/HCIsoaxHW6lu+/Au1n0p335cl3YcSexm658uS7jPMenb3fflQHp1hcfd9uZ1Hj4jcfV9u5NGzdHH3ffmtPHqduu6+Lz/Mo6e+/Jc/kB0/V/BvqPsb0xrN2E54p04AAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDUBSFT1OlIhWRdhBxyFA7WRAVcZQqFsFCaSu06mDy0j9o0pCkuDgKrgUHfxarDi7Oujq4CoLgD4ijk5Oii5R4X1JoEeOFx/s4757De/cBQrPKVLNnAlA1y0gn4mIuvyoGXuFDCEOIQpCYqSczi1l41tc9dVPdxXiWd9+fNaAUTAb4ROI5phsW8QbxzKalc94nDrOypBCfE48bdEHiR67LLr9xLjks8MywkU3PE4eJxVIXy13MyoZKPE0cUVSN8oWcywrnLc5qtc7a9+QvDBa0lQzXaY0igSUkkYIIGXVUUIWFGO0aKSbSdB738I84/hS5ZHJVwMixgBpUSI4f/A9+z9YsTk26ScE40Pti2x9jQGAXaDVs+/vYtlsngP8ZuNI6/loTmP0kvdHRIkfA4DZwcd3R5D3gcgcYftIlQ3IkPy2hWATez+ib8kDoFuhfc+fWPsfpA5ClWS3fAAeHQLRE2ese7+7rntu/Pe35/QBP4XKZ9Ef7VwAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6NmIwMzEyYjItZDE5YS00NTc2LTlkYjAtYjVhNTNmZDRmMjA1IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmEyMTJiNWZhLWNjNjgtNDBiZS1hZTA5LTA3NmExZjU5NGY4NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIwMmRiNTQzLTYwMGMtNGUyYi1hNDM4LTcxOTZjMjI4ZWNlZSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQyNjE0MDI5ODk2ODExIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YmQ3YTVjZTUtNjE4Yy00MTE0LTg5ZWYtNTg5ZmMxM2Q2OTJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAxLTE5VDE4OjQwOjI5Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhbZGncAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARMRKB1QuojKAAAARUlEQVQ4y2NgGPKAkYGBgWHWig1n0ISfM/z/Py8tMmA9IQOYsAv/l2RgZKietXxjKpkuIA6kRQSYMFEaBqMGDAsDBh4AAD+qEAAUuqhbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-large.png", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUlVMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ydWxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLmhvcml6b250YWwtcnVsZSB7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi52ZXJ0aWNhbC1ydWxlIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDFweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweDsKfQ"},{ name : "haxeui-core/styles/shared/warning-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABCUlEQVQ4jc2RPUoDURSFvzvzfgKKoCmSKmijSLSzF7ERrd1CIOIeBBcgLiCLCGg/jIq1rW5ABUFQUsSR92x8zkxw4tiIp3vvnnvOuRz41/BpY8knjcVpHKlcTlCIvQEUs+N12SD7jhdVSsf2EKGLsMLIHvwqgb9mgczcgTQ/ac84vSxbr0/1EmT2GKQ5GHYYDDuAnyd6O6p1gk/NKtAD0MphtAujvk/M2s8JRE4ADWB0SSAmktOpAv7C7uHZCW+jHToXANj2qd0t+X0th9qEbvh7GSkA5mbeCy7cFmvNE4TaCji7bHF+1Zo4sVxrniC1D8AEuxKPsjluA6g8muyDa9da9/F9TaM/wAcSz0RlELj/AwAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/fr/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2F1dmVnYXJkZXINCmRpYWxvZy55ZXM9T3VpDQpkaWFsb2cubm89Tm9uDQpkaWFsb2cuY2xvc2U9RmVybWVyDQpkaWFsb2cub2s9T0sNCmRpYWxvZy5jYW5jZWw9QW5udWxlcg0KZGlhbG9nLmFwcGx5PUFwcGxpcXVlcg0K"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/error-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABGklEQVQ4jYWSPUrEUBRGz3sTbHQ2ohi1yE9hkwmCS7AQsVBEEMWViI0wiI1YuInUGi0EFyCDW5g4MMHkWgxqJr4bb/n4zrn3gwcd85EGwSSJo66M1eHwSDB5beuHcRqcajnjhAfhgRiGjQUC5nwpyy//FTjg73FK5gRteGHvEIDy9lqVWA0GsCs+dnm1tVAuijQ6mxOoZ5dTKEtH7V+JV2wF61I7OyPlFETazz+SSRI/eohXQeUKzba7BbMFyKcBGKfRjkHugF4z0PM3AKheX/6wgpz0s+crC9DP8nvB7NI6pRdv4qXbKgyN3i5J/T6iHr2pMDg+klbHBTsFisQJqwKAYhDsY8wNYAwcL2ZPQy2rTpFGfpGEa12ZLwdajcanz1XAAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhcXXzWsTQRjH8e8zSUprmv4JohTEm4fS9CJKbRUsePAFFPGkgVoE/xqxFnyDHvTmzZONUBAlkYCIF0GrnsRLS2uEJO4+HrRh1ybZecZin9OwJM/vszOzOyzscUnoH5vTUxPq9CaIi+Poztjz1y/+G2BrdvKcqDwGCn8uRahWRqv1h9ZebhfCAXKI3G/OlOet/Uwz0Cc8WSqwUFypLe06wCM8COEFMISbEZmAgHATYiBgULg7OI7bfwCA+Msn4rUPQYh8SDhA/vgMhSvXAOgs36PdGyAKi82ZMv0QPR9Dn2nXdjsxbvX7WRLR8xHdAfBe81YidDBgICIFsGy45F1rKxPQF9EFmHd7YglSYyPCAXyfLh8RlUfe4ZBeAr8ZSCJub85OHe0CJEcFGLJ0SS1BxwQAcE6Z7wIU/WntkNp4thn4XRJ3uoBYZRH4YQME7YHt6kicu9UFjK3U3qvqaaDp20HX14kaNaJGDd3YMIU75WKx+qoBf72Kt05MHhORp0DR0tEavq9ae7J9YcdZ4IuQUonC1QVkeIT2gyX021dzOPR4E5aq9VVVnSNjOQoXLlM4c578yTmGKjeCwnsCfBHx57XE+GNQOGQdxxnL4cYPIcMjRO/eBIVnAnwQAyoz3AsQiPAK9wYYEd7hJoAnwhRuBmQgzOEQ8GVUqtZXQc6SPjvaKnrJGg7/8HG6eWrisIvcdXCCuLujz16+De21p/ULbmcp8bwvNP8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TS0UrDnaQ4pChOlnwC3GUKhbBQmkrtOpgcumH0KQhSXFxFFwLDn4sVh1cnHV1cBUEwQ8QNzcnRRcp8X9JoUWMB8f9eHfvcfcOEBoVpppdY4CqWUY6ERdz+RUx+IpeBBBEBOMSM/VkZiELz/F1Dx9f72I8y/vcn6NPKZgM8InEs0w3LOJ14ulNS+e8TxxmZUkhPiceNeiCxI9cl11+41xyWOCZYSObniMOE4ulDpY7mJUNlXiKOKqoGuULOZcVzluc1UqNte7JXxgqaMsZrtMcQgKLSCIFETJq2EAFFmK0aqSYSNN+3MMfcfwpcsnk2gAjxzyqUCE5fvA/+N2tWZyccJNCcSDwYtsfw0BwF2jWbfv72LabJ4D/GbjS2v5qA5j5JL3e1qJHQP82cHHd1uQ94HIHGHzSJUNyJD9NoVgE3s/om/LAwC3Qs+r21trH6QOQpa6WboCDQ2CkRNlrHu/u7uzt3zOt/n4AgVdyrUq8E1wAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCwUHHhl/NmAoAAABNElEQVQ4y92QsU4CQRCG/9nbdb2jsFHvBUh4A2NrjDEhhkeAWNNySnkl5HgHPR8BExpotbbS8AqExoS7y3Jkx+IguRAusdWpdnbnn3+/H/jzReXmcTA40UI3U9qMR0GQlN96UVTzWLaMNZNhv/+9uxflIS10E4yGa1WnF0W1sti1qgNGQwvdLGtkuUlpM/Yg28Tsu1bdPwyHsRXCeizbAJ8zaOmk6rUSoexGhWBRDBXnTOTxPhodCmbL2wbDBwAGLZ1MPYdhd7U/K36bduquDpo51QjwCwRKCHzmQNYvbq8/36fTvHLB7utb8dLJVJxq86Eg6gT4kp3G5c3V19tstj6I4LFsgQvnTORPYdhdjYIgSWnzwqAFgU+P6eiuMgNjzQSE+X7aoyBIMpHHIMyNNRP8r/oB7XSENXBA5j4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/left-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMAg9Pg2E5zFwMDABGcxMDAw/v//nwEGmN7JqiI4DAwMcD7UAAgfAMkKDTd2MVgoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouZnJhbWUtY29udGVudHMgew0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgcGFkZGluZy10b3A6IDE1cHg7DQp9DQoNCi5mcmFtZS10aXRsZSB7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLmZyYW1lLWxlZnQtbGluZSwgLmZyYW1lLXJpZ2h0LWxpbmUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGhlaWdodDogMXB4Ow0KfQ0K"},{ name : "haxeui-core/locale/es/dialog.properties", data : "ZGlhbG9nLnNhdmU9R3VhcmRhcg0KZGlhbG9nLnllcz1TaQ0KZGlhbG9nLm5vPU5vDQpkaWFsb2cuY2xvc2U9Q2VycmFyDQpkaWFsb2cub2s9T0sNCmRpYWxvZy5jYW5jZWw9Q2FuY2VsYXINCmRpYWxvZy5hcHBseT1BcGxpY2FyDQoNCg"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KfQ0KDQoucHJvcGVydHktZ3JpZCAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgcGFkZGluZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCiAgICBib3JkZXItYm90dG9tLXNpemU6IDFweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXIuc2Nyb2xsaW5nIHsNCiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDBweDsNCiAgICBib3JkZXItcmlnaHQtc2l6ZTogMHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICRhcnJvdy1kb3duLXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpjb2xsYXBzZWQgLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0LXNxdWFyZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1sYWJlbCB7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1jb250ZW50cyB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgc3BhY2luZzogMTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBwYWRkaW5nLWJvdHRvbTogMXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAubGFzdCAucHJvcGVydHktZ3JvdXAtY29udGVudHMuc2Nyb2xsaW5nIHsNCiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtY29udGVudHMuc2Nyb2xsaW5nIHsNCiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsLWNvbnRhaW5lciB7DQogICAgd2lkdGg6IDUwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHBhZGRpbmctbGVmdDogNXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3ItY29udGFpbmVyIHsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsNCn0gICAgICAgIA0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWl0ZW0tZWRpdG9yIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC50ZXh0ZmllbGQgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5jaGVja2JveCB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIHsNCiAgICBwYWRkaW5nOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmMgew0KICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAuZHJvcGRvd24gew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KfQ0K"},{ name : "haxeui-core/styles/shared/left-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEOHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkuwmDP1nFVkCkhCC5YCBquwgy88Rdnd6+nFnbiUfMW2kxlivIwmH+defK/yBi4xSSGol15wjrlRT5QamxPNqe6aY9nxe6aL0dT1Eux4wlgRUzr8lX/tv63QXcJIGTh8EleN60L8+qJdmLk+CLkXiFjGYcQmqlyDh8wFdAtrpVsy12KMLfZ70ev8MQ3HXMPXbql6bn/4nQ/SGQo8wTyGJmFnSaYD4zUHaZnwu2EhSwcueWW4xQUDexSk+WBWeUan8HpU79wSK5HM9YOFrMPOdvl0nfR/8sEP8oFmOu+Yv63ndIvY1yH6vNUpYa57etZQR0nw5dY+OM9jYEXLZr2UMw63gbY+KUQKy9wDkIx6xYxxUiQHLokSDGi2amx50wMTEkw2U+WDZa0WMKx8SA3BKPmixAashBWgdgFewyndbaOutW91BBYoHYScThNEJP/8346OgtTzliWI544S0gF3syQEzHDmfsQuA0Lrlke4A38bz5bgKENQd5gIHW+yniK505ZbnkWygBRsV9Kw1snEJQIigW2EMCRCImUQpUzRmI0IcC/BpEFRQNNwBAanygJWcRDLAQcVAN94x2ntZ+VxGzwIQKlkM0KCYgJU3NuSPpYIcaiqaVDWradGqLUtOWXPOlr35NRNLppbNrFi1VqSkoiUXKyWUWlrlKmiOWnO1WmqtrUFpg+SGtxs2tNa5S09de+7WS6+9HUifIx165MOOEo56tMFDBvrEyMNGGXW0SROpNNPUmafNMutsC6m2ZKWlKy9bZdXV7qhR2GVHL+PnqNENNd5I+Ua7o4ZXzW4iyNuJOmZAjBMBcXMEkNDsmMVCKXFw6BwzZByqQhlWqoMzyBEDgmkS66I7dv8g9wW3kNK/wo1vyAWH7r9ALjh0H5B7xe0NasNPmyNK2Ah5GXpQo6D8slJS0pUyzmBnk/op9Q0NqfWR4ZcajEJGfNiIIDqD0mtc8Huh4fWB6uweeFeANvvhRZxgztQStwMJCXkyD1R6XgQpXTlOII1jdfQJV8eyZnvPudAIzbvmgjBxcPHOPNEyN5M/B+XUAmBrtASLyosM/g3ZUq0P6VFGgOWEcwK9JlpTZO/EdwhWUpEW/SAfP9Jyd+1F3akLadjHrBD7najwS090tFxwA5ualOcQRNy/Qm7iG7pv31rCz+LzPf2/Cco5oDB7ynuuXgJkRkub7Dl5DtPRUkUiip7hf5PCoOF54Q319HDmuBtgvHP8UXT4pYifi9aATEdxWYQj3j/wzTNxhLi3Ph/bt9WL94aB5rjrorzpAeFntf3GtjP1y2z4kMLZED42mN+UHR6FVyDWcDQhpzOAdDDT7ki19oKaw3mB//OtpvAjN54pt50buwUiquMD/K+YfEurBofj0rB9ertx4bRAtoS/AceHGj2Vzz6UAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjk2N2IxNTgzLWYyOWUtNDY2ZS04Yjc4LWJjZGFjZDFkNWZkNCIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MzBjOGE4NS02OTVkLTRmZTYtOGVmZC0xOTFlMzIzNzRmYTAiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3ODQyMjBkOC0wZTAyLTQ5ZDUtYjVmYS0zNzZiZWViYTNlYTEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDM0NTU2MTU2MTg1NSIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmMDUxYzAzLTBlNmItNDgwYy1iYjMzLTljMzc0OTY1YjM3MCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxOTozOToyMSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6o2UKgAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIIEicVGwcIIAAAAChJREFUCNdjYEACoV1H/jMicxgYGBgYkTkMDAwMjMgc7CrQzWBAtwUAMwgSdDGUjZQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsNCn0NCg0KLmNoZWNrYm94OmhvdmVyIHsNCn0NCg0KLmNoZWNrYm94OmRpc2FibGVkIHsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOw0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOw0KICAgIHdpZHRoOiAxOHB4Ow0KICAgIGhlaWdodDogMThweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBpY29uOiBub25lOw0KICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6aG92ZXIgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7DQp9DQoNCi5jaGVja2JveC12YWx1ZTpzZWxlY3RlZCB7DQogICAgaWNvbjogJGNoZWNrLXNlbGVjdGVkOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWRpc2FibGVkOw0KICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jaGVja2JveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5jaGVja2JveC1pY29uIHsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLmNoZWNrYm94LWljb246ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQo"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOw0KfQ0KDQouc2Nyb2xsIC5idXR0b24gew0KICAgIHdpZHRoOiA3cHg7DQogICAgaGVpZ2h0OiA3cHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgZmlsdGVyOiBub25lOw0KICAgIG9wYWNpdHk6IDAuNjsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uOmhvdmVyIHsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsOmRpc2FibGVkIC5idXR0b24gew0KICAgIG9wYWNpdHk6IC4zOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIHsNCiAgICB3aWR0aDogOHB4Ow0KICAgIHBhZGRpbmctbGVmdDogMXB4Ow0KICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEJPUkRFUkxFU1MgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldy5ib3JkZXJsZXNzIC5zY3JvbGwgLmJ1dHRvbiwgLnRleHRhcmVhLmJvcmRlcmxlc3MgLnNjcm9sbCAuYnV0dG9uIHsNCiAgICB3aWR0aDogOHB4Ow0KICAgIGhlaWdodDogOHB4Ow0KfQ0KDQouc2Nyb2xsdmlldy5ib3JkZXJsZXNzIC52ZXJ0aWNhbC1zY3JvbGwsIC50ZXh0YXJlYS5ib3JkZXJsZXNzIC52ZXJ0aWNhbC1zY3JvbGwgew0KICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgIGJvcmRlci1sZWZ0OiBub25lOw0KfQ0KDQouc2Nyb2xsdmlldy5ib3JkZXJsZXNzIC5ob3Jpem9udGFsLXNjcm9sbCwgLnRleHRhcmVhLmJvcmRlcmxlc3MgLmhvcml6b250YWwtc2Nyb2xsIHsNCiAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgIGJvcmRlci10b3A6IG5vbmU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENMQVNTSUMgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwsDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBib3JkZXI6bm9uZTsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b257DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCiAgICBwYWRkaW5nOiAwOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBoaWRkZW46IGZhbHNlOw0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIGhlaWdodDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbjpob3ZlciwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Q3RDc7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAuYnV0dG9uOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmhvdmVyLA0KLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUFBQUFBOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRvd24sDQouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkaXNhYmxlZCwNCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpkaXNhYmxlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgew0KICAgIHdpZHRoOiAxN3B4Ow0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLA0KLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsDQoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmM6ZG93biwNCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwsDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWRhcmsucG5nIjsNCn0NCg0KLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmRlaW5jOmRvd24sDQouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWJyaWdodC5wbmciOw0KfQ0KDQouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCAuaW5jLA0KLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1kYXJrLnBuZyI7DQp9DQoNCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmM6ZG93biwNCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1icmlnaHQucG5nIjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbDptb2JpbGUgLmluYywgLnNjcm9sbDptb2JpbGUgLmRlaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIGhlaWdodDogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIHdpZHRoOiA4cHg7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgew0KICAgIHdpZHRoOiA0cHg7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/expanded-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwkgHyJHKAAAAJBJREFUOMtjYBgFAw8YkTlrt2xRYv77/+h/BgYJHOpf///LZBMU5H0LJsCELBvs43OPkeGfOwMDw0csmj8z/GP0RNaMYQADAwODv7//JSYGxkAGBoafSMK/Gf8zhgYG+pxFV8+EzZ3+/j77/zMwJjAwMPxjYGD4/5+BMTUgwGcnyQG0fuOW4vUbtxSPJhUaAwCz8idCJS/GkgAAAABJRU5ErkJggg"}];
haxe_ds_ObjectMap.count = 0;
haxe_ui_validation_ValidationManager.get_instance().registerEvent("ValidationStop",haxe_ui_backend_html5_HtmlUtils.onValidationStop);
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
Object.defineProperties(signals_BaseSignal.prototype,{ "numListeners" : { get : function () { return this.get_numListeners (); }, set : function (v) { return this.set_numListeners (v); }}, "hasListeners" : { get : function () { return this.get_hasListeners (); }, set : function (v) { return this.set_hasListeners (v); }}});
Object.defineProperties(notifier_Notifier.prototype,{ "value" : { get : function () { return this.get_value (); }, set : function (v) { return this.set_value (v); }}});
Main.model = new model_Model();
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
delay_Delay.initialized = false;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.roundScale = true;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_PlatformBase.KEY_CODE_TAB = 9;
haxe_ui_backend_PlatformBase.KEY_CODE_UP = 38;
haxe_ui_backend_PlatformBase.KEY_CODE_DOWN = 40;
haxe_ui_backend_PlatformBase.KEY_CODE_LEFT = 37;
haxe_ui_backend_PlatformBase.KEY_CODE_RIGHT = 39;
haxe_ui_backend_PlatformBase.KEY_CODE_SPACE = 32;
haxe_ui_backend_PlatformBase.KEY_CODE_ENTER = 13;
haxe_ui_backend_PlatformBase.KEY_CODE_ESCAPE = 27;
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["doubleclick"] = "dblclick";
	_g.h["rightmousedown"] = "mousedown";
	_g.h["rightmouseup"] = "mouseup";
	_g.h["rightclick"] = "contextmenu";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scrollchange"] = "scroll";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mousedown";
	_g.h["touchend"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["contextmenu"] = "rightclick";
	_g.h["dblclick"] = "doubleclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scroll"] = "scrollchange";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "touchmove";
	_g.h["mousedown"] = "touchstart";
	_g.h["mouseup"] = "touchend";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.TOUCH_TO_MOUSE = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mouseout";
	_g.h["touchend"] = "mousedown";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_data_DataSource.regexAlpha = new EReg("[^a-zA-Z]","g");
haxe_ui_data_DataSource.regexNumeric = new EReg("[^0-9]","g");
haxe_ui_events_UIEvent.READY = "ready";
haxe_ui_events_UIEvent.DESTROY = "destroy";
haxe_ui_events_UIEvent.RESIZE = "resize";
haxe_ui_events_UIEvent.CHANGE = "change";
haxe_ui_events_UIEvent.BEFORE_CHANGE = "beforeChange";
haxe_ui_events_UIEvent.MOVE = "move";
haxe_ui_events_UIEvent.INITIALIZE = "initialize";
haxe_ui_events_UIEvent.RENDERER_CREATED = "rendererCreated";
haxe_ui_events_UIEvent.RENDERER_DESTROYED = "rendererDestroyed";
haxe_ui_events_UIEvent.HIDDEN = "hidden";
haxe_ui_events_UIEvent.SHOWN = "shown";
haxe_ui_events_UIEvent.ENABLED = "enabled";
haxe_ui_events_UIEvent.DISABLED = "disabled";
haxe_ui_events_UIEvent.BEFORE_CLOSE = "beforeClose";
haxe_ui_events_UIEvent.CLOSE = "close";
haxe_ui_events_UIEvent.PROPERTY_CHANGE = "propertyChange";
haxe_ui_events_UIEvent.COMPONENT_ADDED = "componentAdded";
haxe_ui_events_UIEvent.COMPONENT_REMOVED = "componentRemoved";
haxe_ui_events_ActionEvent.ACTION_START = "actionStart";
haxe_ui_events_ActionEvent.ACTION_END = "actionEnd";
haxe_ui_events_AnimationEvent.START = "animationstart";
haxe_ui_events_AnimationEvent.END = "animationend";
haxe_ui_events_DragEvent.DRAG_START = "dragStart";
haxe_ui_events_DragEvent.DRAG = "drag";
haxe_ui_events_DragEvent.DRAG_END = "dragEnd";
haxe_ui_events_FocusEvent.FOCUS_IN = "focusin";
haxe_ui_events_FocusEvent.FOCUS_OUT = "focusout";
haxe_ui_events_ItemEvent.COMPONENT_EVENT = "itemComponentEvent";
haxe_ui_events_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_events_KeyboardEvent.KEY_PRESS = "keypress";
haxe_ui_events_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_events_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_events_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_events_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_events_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_events_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_events_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_events_MouseEvent.CLICK = "click";
haxe_ui_events_MouseEvent.DBL_CLICK = "doubleclick";
haxe_ui_events_MouseEvent.RIGHT_CLICK = "rightclick";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightmousedown";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_UP = "rightmouseup";
haxe_ui_events_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_events_ScrollEvent.START = "scrollstart";
haxe_ui_events_ScrollEvent.STOP = "scrollstop";
haxe_ui_events_ThemeEvent.THEME_CHANGED = "themeChanged";
haxe_ui_events_ValidationEvent.START = "ValidationStart";
haxe_ui_events_ValidationEvent.STOP = "ValidationStop";
haxe_ui_locale_LocaleEvent.LOCALE_CHANGED = "localeChanged";
haxe_ui_locale_LocaleManager._registeredComponents = new haxe_ds_ObjectMap();
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["black"] = 0;
	_g.h["red"] = 16711680;
	_g.h["lime"] = 65280;
	_g.h["blue"] = 255;
	_g.h["white"] = 16777215;
	_g.h["aqua"] = 65535;
	_g.h["fuchsia"] = 16711935;
	_g.h["yellow"] = 16776960;
	_g.h["maroon"] = 8388608;
	_g.h["green"] = 32768;
	_g.h["navy"] = 128;
	_g.h["olive"] = 8421376;
	_g.h["purple"] = 8388736;
	_g.h["teal"] = 32896;
	_g.h["silver"] = 12632256;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DURATION = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DELAY = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_ITERATION_COUNT = 1;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DIRECTION = "normal";
haxe_ui_styles_animation_AnimationOptions.DEFAULT_FILL_MODE = "forwards";
haxe_ui_themes_Theme.DEFAULT = "default";
haxe_ui_themes_Theme.DARK = "dark";
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_ui_util_StyleUtil.component2StyleEReg = new EReg("([A-Z])","g");
hxbit_Convert.convFuns = new haxe_ds_StringMap();
hxbit_Macros.IN_ENUM_SER = false;
hxbit_Serializer.UID = 0;
hxbit_Serializer.SEQ = 0;
hxbit_Serializer.SEQ_BITS = 8;
hxbit_Serializer.SEQ_MASK = 16777215;
hxbit_Serializer.CLASSES = [];
hxbit_Serializer.ENUM_CLASSES = new haxe_ds_StringMap();
hxbit_Schema.__clid = hxbit_Serializer.registerClass(hxbit_Schema);
model_ver1_game_define_CardProto.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_CardProto);
model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white.__clid = hxbit_Serializer.registerClass(model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white);
model_ver1_game_define_CardText.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_CardText);
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Text1);
model_ver1_game_define_Mark.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_Mark);
model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179001_$01A_$CH_$WT007R_$white_Mark1);
model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black.__clid = hxbit_Serializer.registerClass(model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black);
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text1);
model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179003_$01A_$U_$BK008U_$black_Text2);
model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white.__clid = hxbit_Serializer.registerClass(model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white);
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1);
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Text1_$1);
model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179004_$01A_$CH_$WT009R_$white_Mark1);
model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown.__clid = hxbit_Serializer.registerClass(model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown);
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Text1);
model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179030_$11E_$CH_$BN091N_$brown_Process1);
model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple.__clid = hxbit_Serializer.registerClass(model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple);
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Text1);
model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1.__clid = hxbit_Serializer.registerClass(model_ver1_data__$CardProto_$179030_$11E_$U_$VT186R_$purple_Process1);
model_ver1_data_PlayerPlayCard.__clid = hxbit_Serializer.registerClass(model_ver1_data_PlayerPlayCard);
model_ver1_data__$PlayerPlayCard_EnterFieldEffect.__clid = hxbit_Serializer.registerClass(model_ver1_data__$PlayerPlayCard_EnterFieldEffect);
model_ver1_data_PlayerPlayG.__clid = hxbit_Serializer.registerClass(model_ver1_data_PlayerPlayG);
model_ver1_game_Game.__clid = hxbit_Serializer.registerClass(model_ver1_game_Game);
var model_ver1_game_data_DataBinding__cardProtoPool = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = new model_ver1_data_CardProto_$179001_$01A_$CH_$WT007R_$white();
		_g.h["179001_01A_CH_WT007R_white"] = value;
	}
	{
		var value = new model_ver1_data_CardProto_$179003_$01A_$U_$BK008U_$black();
		_g.h["179003_01A_U_BK008U_black"] = value;
	}
	{
		var value = new model_ver1_data_CardProto_$179004_$01A_$CH_$WT009R_$white();
		_g.h["179004_01A_CH_WT009R_white"] = value;
	}
	{
		var value = new model_ver1_data_CardProto_$179030_$11E_$U_$VT186R_$purple();
		_g.h["179030_11E_U_VT186R_purple"] = value;
	}
	{
		var value = new model_ver1_data_CardProto_$179030_$11E_$CH_$BN091N_$brown();
		_g.h["179030_11E_CH_BN091N_brown"] = value;
	}
	$r = _g;
	return $r;
}(this));
model_ver1_game_define_BaSyouId._split = "@@@";
model_ver1_game_define_Block.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_Block);
model_ver1_game_define_Context.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_Context);
model_ver1_game_define_EnterFieldThisTurnMark.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_EnterFieldThisTurnMark);
model_ver1_game_define_CanNotRerollMark.__clid = hxbit_Serializer.registerClass(model_ver1_game_define_CanNotRerollMark);
model_ver1_game_define_PlayerId.A = (function($this) {
	var $r;
	var this1 = "A";
	$r = this1;
	return $r;
}(this));
model_ver1_game_define_PlayerId.B = (function($this) {
	var $r;
	var this1 = "B";
	$r = this1;
	return $r;
}(this));
var model_ver1_game_define_Timing_TIMINGS = [model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Reroll,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Reroll,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Reroll,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Reroll,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Draw,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Draw,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Draw,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Draw,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Draw,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Maintenance,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Maintenance,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Maintenance,haxe_ds_Option.None,model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Attack),model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Defense),model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Defense),model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Defense),model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Defense),model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Defense),model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.DamageChecking),model_ver1_game_define_TimingKeyword.End),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Return),model_ver1_game_define_TimingKeyword.Start),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Return),model_ver1_game_define_TimingKeyword.Free1),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Return),model_ver1_game_define_TimingKeyword.Rule),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.Return),model_ver1_game_define_TimingKeyword.Free2),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.DamageReset),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.ResolveEffect),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.AdjustHand),model_ver1_game_define_Timing.Default(model_ver1_game_define_PhaseKeyword.Battle,haxe_ds_Option.Some(model_ver1_game_define_StepKeyword.End),model_ver1_game_define_TimingKeyword.TurnEnd)];
time_EnterFrame.initialized = false;
time_GlobalTime.offset = 0;
time_GlobalTime.pause = false;
time_GlobalTime.inited = false;
tool_Card.__clid = hxbit_Serializer.registerClass(tool_Card);
tool_CardStack.__clid = hxbit_Serializer.registerClass(tool_CardStack);
tool_Table.__clid = hxbit_Serializer.registerClass(tool_Table);
tweenx909_EventX.PLAY = "play";
tweenx909_EventX.DELAY = "delay";
tweenx909_EventX.HEAD = "head";
tweenx909_EventX.UPDATE = "update";
tweenx909_EventX.FOOT = "foot";
tweenx909_EventX.INTERVAL = "interval";
tweenx909_EventX.REPEAT = "repeat";
tweenx909_EventX.REST = "rest";
tweenx909_EventX.FINISH = "finish";
tweenx909_EventX.STOP = "stop";
tweenxcore_Easing.PI = 3.1415926535897932384626433832795;
tweenxcore_Easing.PI_H = 1.5707963267948966;
tweenxcore_Easing.LN_2 = 0.6931471805599453;
tweenxcore_Easing.LN_2_10 = 6.931471805599453;
tweenxcore_Easing.overshoot = 1.70158;
tweenxcore_Easing.amplitude = 1;
tweenxcore_Easing.period = 0.0003;
tweenx909_rule_BoolRuleX.inputClass = Bool;
tweenx909_rule_ArrayRuleX.inputClass = Array;
tweenx909_rule_TimelineRuleX.inputClass = tweenxcore_structure_Timeline;
tweenx909_rule_ArgbRuleX.inputClass = tweenxcore_color_ArgbColor;
tweenx909_rule_AhsvRuleX.inputClass = tweenxcore_color_AhsvColor;
tweenx909_rule_RgbRuleX.inputClass = tweenxcore_color_RgbColor;
tweenx909_rule_HsvRuleX.inputClass = tweenxcore_color_HsvColor;
tweenx909_rule_QuakeRuleX.inputClass = tweenx909_rule_QuakeX;
tweenx909_TweenX._tweens = [];
tweenx909_TweenX._addedTweens = [];
tweenx909_TweenX.managerInited = false;
tweenx909_TweenX.DEFAULT_EASE = tweenxcore_Easing.linear;
tweenx909_TweenX.DEFAULT_TIME = 0.3;
tweenx909_TweenX.DEFAULT_DELAY = 0;
tweenx909_TweenX.DEFAULT_REPEAT = 1;
tweenx909_TweenX.DEFAULT_INTERVAL = 0;
tweenx909_TweenX.DEFAULT_YOYO = false;
tweenx909_TweenX.DEFAULT_ZIGZAG = false;
tweenx909_TweenX.DEFAULT_AUTO_PLAY = true;
tweenx909_TweenX.DEFAULT_AUTO_FROM = true;
tweenx909_TweenX.defaultEase = tweenx909_TweenX.DEFAULT_EASE;
tweenx909_TweenX.defaultTime = 0.3;
tweenx909_TweenX.defaultDelay = 0;
tweenx909_TweenX.defaultInterval = 0;
tweenx909_TweenX.defaultRepeat = 1;
tweenx909_TweenX.defaultYoyo = false;
tweenx909_TweenX.defaultZigZag = false;
tweenx909_TweenX.defaultAutoPlay = true;
tweenx909_TweenX.defaultAutoFrom = true;
tweenx909_TweenX._rules = [tweenx909_rule_BoolRuleX,tweenx909_rule_ArrayRuleX,tweenx909_rule_TimelineRuleX,tweenx909_rule_ArgbRuleX,tweenx909_rule_AhsvRuleX,tweenx909_rule_RgbRuleX,tweenx909_rule_HsvRuleX,tweenx909_rule_QuakeRuleX];
tweenx909_TweenX.topLevelTimeScale = 1;
tweenx909_TweenX._groupDefaults = false;
tweenx909_TweenX.updateMode = tweenx909_advanced_UpdateModeX.TIME(60);
tweenx909_TweenX._initLog = [];
tweenx909_TweenX.dictionary = new haxe_ds_ObjectMap();
tweenx909_TweenX._objCounter = 0;
tweenx909_TweenX._MIN = 1.4901161415892264e-008;
tweenx909_TweenX.EVENT_ARRAY = ["play","delay","head","update","foot","interval","repeat","rest","finish","stop"];
tweenx909_TweenX._PLAY = 0;
tweenx909_TweenX._DELAY = 1;
tweenx909_TweenX._HEAD = 2;
tweenx909_TweenX._UPDATE = 3;
tweenx909_TweenX._FOOT = 4;
tweenx909_TweenX._INTERVAL = 5;
tweenx909_TweenX._REPEAT = 6;
tweenx909_TweenX._REST = 7;
tweenx909_TweenX._FINISH = 8;
tweenx909_TweenX._STOP = 9;
tweenx909_TweenX.idCounter = 0;
var viewModel_IViewModel_DEFAULT_GAME_MODEL = { players : [], commands : []};
var viewModel_IViewModel_DEFAULT_PREVIEW_PLAY_CARD_MODEL = { success : false, msg : "", content : { }};
var viewModel_IViewModel_DEFAULT_CARD_INFO_MODEL = { id : "0", name : "gundam", content : "content", url : "https://storage.googleapis.com/particle-resources/cardPackage/gundamWarN/179030_11E_U_BL208S_2_blue.jpg"};
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

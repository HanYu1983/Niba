// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package protocol

import "fmt"

// KesStringComponent is
func KesStringComponent(dict map[string]Component) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringComponent is
func ValsStringComponent(dict map[string]Component) []Component {
	ret := make([]Component, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringComponent is
func MergeStringComponent(a map[string]Component, b map[string]Component) map[string]Component {
	ret := map[string]Component{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringComponent is
func AssocStringComponent(a map[string]Component, k string, v Component) map[string]Component {
	ret := map[string]Component{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringComponent is
func DissocStringComponent(a map[string]Component, k string) map[string]Component {
	ret := map[string]Component{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringComponent(a map[string]Component, k string) (Component, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringComponent] key not found: %v", k)
	}
	return ret, nil
}

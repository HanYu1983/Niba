// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package uidata

import "fmt"

// KesIntMenu2D is
func KesIntMenu2D(dict map[int]Menu2D) []int {
	ret := make([]int, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsIntMenu2D is
func ValsIntMenu2D(dict map[int]Menu2D) []Menu2D {
	ret := make([]Menu2D, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeIntMenu2D is
func MergeIntMenu2D(a map[int]Menu2D, b map[int]Menu2D) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocIntMenu2D is
func AssocIntMenu2D(a map[int]Menu2D, k int, v Menu2D) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocIntMenu2D is
func DissocIntMenu2D(a map[int]Menu2D, k int) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetIntMenu2D(a map[int]Menu2D, k int) (Menu2D, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetIntMenu2D] key not found: %v", k)
	}
	return ret, nil
}

func DifferenceIntMenu2D(a map[int]Menu2D, b map[int]Menu2D) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		_, has := b[k]
		if has == false {
			ret[k] = v
		}
	}
	return ret
}

func MapKVIntMenu2D(a map[int]Menu2D, mapF func(k int, v Menu2D) Menu2D) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		ret[k] = mapF(k, v)
	}
	return ret
}
func FilterIntMenu2D(a map[int]Menu2D, filterF func(k int, v Menu2D) bool) map[int]Menu2D {
	ret := map[int]Menu2D{}
	for k, v := range a {
		if filterF(k, v) {
			ret[k] = v
		}
	}
	return ret
}

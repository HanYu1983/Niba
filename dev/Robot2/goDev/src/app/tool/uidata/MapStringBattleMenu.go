// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package uidata

import "fmt"

// KesStringBattleMenu is
func KesStringBattleMenu(dict map[string]BattleMenu) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringBattleMenu is
func ValsStringBattleMenu(dict map[string]BattleMenu) []BattleMenu {
	ret := make([]BattleMenu, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringBattleMenu is
func MergeStringBattleMenu(a map[string]BattleMenu, b map[string]BattleMenu) map[string]BattleMenu {
	ret := map[string]BattleMenu{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringBattleMenu is
func AssocStringBattleMenu(a map[string]BattleMenu, k string, v BattleMenu) map[string]BattleMenu {
	ret := map[string]BattleMenu{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringBattleMenu is
func DissocStringBattleMenu(a map[string]BattleMenu, k string) map[string]BattleMenu {
	ret := map[string]BattleMenu{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringBattleMenu(a map[string]BattleMenu, k string) (BattleMenu, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringBattleMenu] key not found: %v", k)
	}
	return ret, nil
}

func DifferenceStringBattleMenu(a map[string]BattleMenu, b map[string]BattleMenu) map[string]BattleMenu {
	ret := map[string]BattleMenu{}
	for k, v := range a {
		_, has := b[k]
		if has == false {
			ret[k] = v
		}
	}
	return ret
}

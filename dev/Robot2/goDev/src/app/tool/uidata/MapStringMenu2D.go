// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package uidata

import "fmt"

// KesStringMenu2D is
func KesStringMenu2D(dict map[string]Menu2D) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringMenu2D is
func ValsStringMenu2D(dict map[string]Menu2D) []Menu2D {
	ret := make([]Menu2D, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringMenu2D is
func MergeStringMenu2D(a map[string]Menu2D, b map[string]Menu2D) map[string]Menu2D {
	ret := map[string]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringMenu2D is
func AssocStringMenu2D(a map[string]Menu2D, k string, v Menu2D) map[string]Menu2D {
	ret := map[string]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringMenu2D is
func DissocStringMenu2D(a map[string]Menu2D, k string) map[string]Menu2D {
	ret := map[string]Menu2D{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringMenu2D(a map[string]Menu2D, k string) (Menu2D, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringMenu2D] key not found: %v", k)
	}
	return ret, nil
}

func DifferenceStringMenu2D(a map[string]Menu2D, b map[string]Menu2D) map[string]Menu2D {
	ret := map[string]Menu2D{}
	for k, v := range a {
		_, has := b[k]
		if has == false {
			ret[k] = v
		}
	}
	return ret
}

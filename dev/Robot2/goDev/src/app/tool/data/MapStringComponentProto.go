// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package data

import "fmt"

// KesStringComponentProto is
func KesStringComponentProto(dict map[string]ComponentProto) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringComponentProto is
func ValsStringComponentProto(dict map[string]ComponentProto) []ComponentProto {
	ret := make([]ComponentProto, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringComponentProto is
func MergeStringComponentProto(a map[string]ComponentProto, b map[string]ComponentProto) map[string]ComponentProto {
	ret := map[string]ComponentProto{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringComponentProto is
func AssocStringComponentProto(a map[string]ComponentProto, k string, v ComponentProto) map[string]ComponentProto {
	ret := map[string]ComponentProto{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringComponentProto is
func DissocStringComponentProto(a map[string]ComponentProto, k string) map[string]ComponentProto {
	ret := map[string]ComponentProto{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringComponentProto(a map[string]ComponentProto, k string) (ComponentProto, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringComponentProto] key not found: %v", k)
	}
	return ret, nil
}

func DifferenceStringComponentProto(a map[string]ComponentProto, b map[string]ComponentProto) map[string]ComponentProto {
	ret := map[string]ComponentProto{}
	for k, v := range a {
		_, has := b[k]
		if has == false {
			ret[k] = v
		}
	}
	return ret
}

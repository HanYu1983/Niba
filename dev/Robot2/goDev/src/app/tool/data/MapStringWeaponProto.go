// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package data

import "fmt"

// KesStringWeaponProto is
func KesStringWeaponProto(dict map[string]WeaponProto) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringWeaponProto is
func ValsStringWeaponProto(dict map[string]WeaponProto) []WeaponProto {
	ret := make([]WeaponProto, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringWeaponProto is
func MergeStringWeaponProto(a map[string]WeaponProto, b map[string]WeaponProto) map[string]WeaponProto {
	ret := map[string]WeaponProto{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringWeaponProto is
func AssocStringWeaponProto(a map[string]WeaponProto, k string, v WeaponProto) map[string]WeaponProto {
	ret := map[string]WeaponProto{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringWeaponProto is
func DissocStringWeaponProto(a map[string]WeaponProto, k string) map[string]WeaponProto {
	ret := map[string]WeaponProto{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringWeaponProto(a map[string]WeaponProto, k string) (WeaponProto, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringWeaponProto] key not found: %v", k)
	}
	return ret, nil
}

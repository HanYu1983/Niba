// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package data

import "fmt"

// KesStringWeapon is
func KesStringWeapon(dict map[string]Weapon) []string {
	ret := make([]string, 0, len(dict))
	for k := range dict {
		ret = append(ret, k)
	}
	return ret
}

// ValsStringWeapon is
func ValsStringWeapon(dict map[string]Weapon) []Weapon {
	ret := make([]Weapon, 0, len(dict))
	for _, v := range dict {
		ret = append(ret, v)
	}
	return ret
}

// MergeStringWeapon is
func MergeStringWeapon(a map[string]Weapon, b map[string]Weapon) map[string]Weapon {
	ret := map[string]Weapon{}
	for k, v := range a {
		ret[k] = v
	}
	for k, v := range b {
		ret[k] = v
	}
	return ret
}

// AssocStringWeapon is
func AssocStringWeapon(a map[string]Weapon, k string, v Weapon) map[string]Weapon {
	ret := map[string]Weapon{}
	for k, v := range a {
		ret[k] = v
	}
	ret[k] = v
	return ret
}

// DissocStringWeapon is
func DissocStringWeapon(a map[string]Weapon, k string) map[string]Weapon {
	ret := map[string]Weapon{}
	for k, v := range a {
		ret[k] = v
	}
	delete(ret, k)
	return ret
}

func TryGetStringWeapon(a map[string]Weapon, k string) (Weapon, error) {
	ret, has := a[k]
	if has == false {
		return ret, fmt.Errorf("[TryGetStringWeapon] key not found: %v", k)
	}
	return ret, nil
}
